+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 '
+ echo 'hosts=node040 node041 '
hosts=node040 node041 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679522419549, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522419584, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522419585, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522419587, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522419588, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679522442418, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679522448588, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522448623, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522448624, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522448626, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522448627, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679522467813, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=11074
+ SEED=11074
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ dirname ./config_2xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ dirname ./config_2xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679522469
+ start=1679522469
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start=1679522469
++ date +%s
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:01:09 PM'
+ start_fmt='2023-03-22 05:01:09 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly local_rank=0
+ local_rank=0
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ readonly local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ local_rank=0
+ KVSTORE=horovod
+ LR=12.5
+ SLURM_NTASKS_PER_NODE=4
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ LRSCHED=pow2
+ BATCHSIZE=408
+ WARMUP_EPOCHS=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ LR=12.5
+ WD=5.0e-05
+ MOM=0.9
+ LABELSMOOTHING=0.1
+ SEED=11074
+ LRSCHED=pow2
+ EVAL_OFFSET=2
+ WARMUP_EPOCHS=2
+ EVAL_PERIOD=4
+ LARSETA=0.001
+ DALI_PREFETCH_QUEUE=5
+ DALI_HW_DECODER_LOAD=0
+ DALI_NVJPEG_MEMPADDING=256
+ WD=5.0e-05
+ DALI_THREADS=6
+ LABELSMOOTHING=0.1
+ SEED=11074
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREFETCH_QUEUE=5
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_THREADS=6
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CACHE_SIZE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_ROI_DECODE=1
+ DALI_DONT_USE_MMAP=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_HEIGHT=6430
+ NETWORK=resnet-v1b-stats-fl
+ DALI_TMP_BUFFER_HINT=355568328
+ BN_GROUP=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NUMEXAMPLES=
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NETWORK=resnet-v1b-stats-fl
+ [[ 0 == 1 ]]
+ BN_GROUP=1
+ DATAROOT=/data
+ PROFILE=0
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
running benchmark
+ NODALI=0
+ export NGPUS=4
+ NGPUS=4
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-22 05:01:09 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11074
++ seq 0 3
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ seq 0 3
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ tr '\n' ,
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ tr '\n' ,
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
++ sed 's/,$//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679522469
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:01:09 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11074
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+ source ./config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ dirname ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679522469
+ start=1679522469
+ start=1679522469
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679522469
+ start_fmt='2023-03-22 05:01:09 PM'
+ start_fmt='2023-03-22 05:01:09 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-22 05:01:09 PM'
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
+ readonly global_rank=0
+ global_rank=0
++ date '+%Y-%m-%d %r'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11074
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LABELSMOOTHING=0.1
+ SEED=11074
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ SEED=11074
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+ start_fmt='2023-03-22 05:01:09 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:01:09 PM'
STARTING TIMING RUN AT 2023-03-22 05:01:09 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11074
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11074 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:12724] MCW rank 0 is not bound (or bound to all available processors)
[node040:12723] MCW rank 1 is not bound (or bound to all available processors)
[node040:12725] MCW rank 2 is not bound (or bound to all available processors)
[node040:12726] MCW rank 3 is not bound (or bound to all available processors)
[node041:10662] MCW rank 6 is not bound (or bound to all available processors)
[node041:10661] MCW rank 7 is not bound (or bound to all available processors)
[node041:10660] MCW rank 5 is not bound (or bound to all available processors)
[node041:10663] MCW rank 4 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679522473870, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[17:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:21] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679522481671, "event_type": "POINT_IN_TIME", "key": "seed", "value": 11074, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[17:01:21] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:21] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:01:21] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679522484034, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:01:28] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679522488863, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488864, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488877, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488877, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488877, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488877, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488878, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488878, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488878, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488878, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488879, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488879, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488879, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488879, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488879, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488880, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488880, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488880, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488880, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488881, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488881, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488881, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488881, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488882, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488882, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488882, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488882, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488883, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488883, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488883, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488883, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679522488903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,467 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14837, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,467 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51878, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,467 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44825, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,467 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=500, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,470 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15630, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,470 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22310, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,470 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53181, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:01:30,470 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17210, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679522490470, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679522490472, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679522490472, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679522490472, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679522490472, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679522490472, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679522490473, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679522578280, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679522578281, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679522578281, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679522578912, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679522579075, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522579076, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 17:03:02,086 Node[0] Epoch[0] Batch [0-20]	Speed: 21792.02 samples/sec	accuracy=nan
2023-03-22 17:03:05,066 Node[0] Epoch[0] Batch [20-40]	Speed: 21908.68 samples/sec	accuracy=nan
2023-03-22 17:03:08,042 Node[0] Epoch[0] Batch [40-60]	Speed: 21935.44 samples/sec	accuracy=nan
2023-03-22 17:03:11,019 Node[0] Epoch[0] Batch [60-80]	Speed: 21924.22 samples/sec	accuracy=nan
2023-03-22 17:03:13,994 Node[0] Epoch[0] Batch [80-100]	Speed: 21944.31 samples/sec	accuracy=nan
2023-03-22 17:03:16,974 Node[0] Epoch[0] Batch [100-120]	Speed: 21907.14 samples/sec	accuracy=nan
2023-03-22 17:03:19,953 Node[0] Epoch[0] Batch [120-140]	Speed: 21916.25 samples/sec	accuracy=nan
2023-03-22 17:03:22,931 Node[0] Epoch[0] Batch [140-160]	Speed: 21918.56 samples/sec	accuracy=nan
2023-03-22 17:03:25,914 Node[0] Epoch[0] Batch [160-180]	Speed: 21885.55 samples/sec	accuracy=nan
2023-03-22 17:03:28,895 Node[0] Epoch[0] Batch [180-200]	Speed: 21897.05 samples/sec	accuracy=nan
2023-03-22 17:03:31,882 Node[0] Epoch[0] Batch [200-220]	Speed: 21857.28 samples/sec	accuracy=nan
2023-03-22 17:03:40,205 Node[0] Epoch[0] Batch [220-240]	Speed: 7842.45 samples/sec	accuracy=nan
2023-03-22 17:03:49,292 Node[0] Epoch[0] Batch [240-260]	Speed: 7184.00 samples/sec	accuracy=nan
2023-03-22 17:03:54,262 Node[0] Epoch[0] Batch [260-280]	Speed: 13134.99 samples/sec	accuracy=nan
2023-03-22 17:03:57,250 Node[0] Epoch[0] Batch [280-300]	Speed: 21849.55 samples/sec	accuracy=nan
2023-03-22 17:04:00,239 Node[0] Epoch[0] Batch [300-320]	Speed: 21842.83 samples/sec	accuracy=nan
2023-03-22 17:04:03,222 Node[0] Epoch[0] Batch [320-340]	Speed: 21879.21 samples/sec	accuracy=nan
2023-03-22 17:04:06,207 Node[0] Epoch[0] Batch [340-360]	Speed: 21868.54 samples/sec	accuracy=nan
2023-03-22 17:04:09,195 Node[0] Epoch[0] Batch [360-380]	Speed: 21847.94 samples/sec	accuracy=nan
2023-03-22 17:04:10,984 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:04:10,984 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:04:10,984 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:04:10,984 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:04:10,985 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522650984, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 17:04:10,985 Node[0] Epoch[0] Time cost=71.909
2023-03-22 17:04:10,985 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522650985, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17816.431554774037}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 17:04:10,985 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522650986, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 17:04:10,987 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:04:14,124 Node[0] Epoch[1] Batch [0-20]	Speed: 21844.48 samples/sec	accuracy=nan
2023-03-22 17:04:17,111 Node[0] Epoch[1] Batch [20-40]	Speed: 21854.88 samples/sec	accuracy=nan
2023-03-22 17:04:20,100 Node[0] Epoch[1] Batch [40-60]	Speed: 21839.23 samples/sec	accuracy=nan
2023-03-22 17:04:23,087 Node[0] Epoch[1] Batch [60-80]	Speed: 21853.83 samples/sec	accuracy=nan
2023-03-22 17:04:26,073 Node[0] Epoch[1] Batch [80-100]	Speed: 21862.19 samples/sec	accuracy=nan
2023-03-22 17:04:29,059 Node[0] Epoch[1] Batch [100-120]	Speed: 21865.53 samples/sec	accuracy=nan
2023-03-22 17:04:32,047 Node[0] Epoch[1] Batch [120-140]	Speed: 21847.94 samples/sec	accuracy=nan
2023-03-22 17:04:35,036 Node[0] Epoch[1] Batch [140-160]	Speed: 21838.29 samples/sec	accuracy=nan
2023-03-22 17:04:38,025 Node[0] Epoch[1] Batch [160-180]	Speed: 21835.35 samples/sec	accuracy=nan
2023-03-22 17:04:41,018 Node[0] Epoch[1] Batch [180-200]	Speed: 21814.13 samples/sec	accuracy=nan
2023-03-22 17:04:44,011 Node[0] Epoch[1] Batch [200-220]	Speed: 21811.36 samples/sec	accuracy=nan
2023-03-22 17:04:47,004 Node[0] Epoch[1] Batch [220-240]	Speed: 21810.34 samples/sec	accuracy=nan
2023-03-22 17:04:49,999 Node[0] Epoch[1] Batch [240-260]	Speed: 21798.20 samples/sec	accuracy=nan
2023-03-22 17:04:52,993 Node[0] Epoch[1] Batch [260-280]	Speed: 21801.13 samples/sec	accuracy=nan
2023-03-22 17:04:55,986 Node[0] Epoch[1] Batch [280-300]	Speed: 21813.69 samples/sec	accuracy=nan
2023-03-22 17:04:58,979 Node[0] Epoch[1] Batch [300-320]	Speed: 21806.77 samples/sec	accuracy=nan
2023-03-22 17:05:01,970 Node[0] Epoch[1] Batch [320-340]	Speed: 21826.96 samples/sec	accuracy=nan
2023-03-22 17:05:04,960 Node[0] Epoch[1] Batch [340-360]	Speed: 21832.89 samples/sec	accuracy=nan
2023-03-22 17:05:07,949 Node[0] Epoch[1] Batch [360-380]	Speed: 21837.82 samples/sec	accuracy=nan
2023-03-22 17:05:09,742 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:09,742 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522709742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 17:05:09,743 Node[0] Epoch[1] Time cost=58.756
:::MLLOG {"namespace": "", "time_ms": 1679522709743, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21804.769845021623}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679522709743, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 17:05:09,743 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:05:12,886 Node[0] Epoch[2] Batch [0-20]	Speed: 21806.94 samples/sec	accuracy=nan
2023-03-22 17:05:15,876 Node[0] Epoch[2] Batch [20-40]	Speed: 21833.69 samples/sec	accuracy=nan
2023-03-22 17:05:18,863 Node[0] Epoch[2] Batch [40-60]	Speed: 21857.58 samples/sec	accuracy=nan
2023-03-22 17:05:21,851 Node[0] Epoch[2] Batch [60-80]	Speed: 21844.16 samples/sec	accuracy=nan
2023-03-22 17:05:24,839 Node[0] Epoch[2] Batch [80-100]	Speed: 21849.58 samples/sec	accuracy=nan
2023-03-22 17:05:27,830 Node[0] Epoch[2] Batch [100-120]	Speed: 21822.87 samples/sec	accuracy=nan
2023-03-22 17:05:30,822 Node[0] Epoch[2] Batch [120-140]	Speed: 21820.76 samples/sec	accuracy=nan
2023-03-22 17:05:33,812 Node[0] Epoch[2] Batch [140-160]	Speed: 21830.17 samples/sec	accuracy=nan
2023-03-22 17:05:36,800 Node[0] Epoch[2] Batch [160-180]	Speed: 21849.53 samples/sec	accuracy=nan
2023-03-22 17:05:39,787 Node[0] Epoch[2] Batch [180-200]	Speed: 21853.05 samples/sec	accuracy=nan
2023-03-22 17:05:42,784 Node[0] Epoch[2] Batch [200-220]	Speed: 21784.99 samples/sec	accuracy=nan
2023-03-22 17:05:45,777 Node[0] Epoch[2] Batch [220-240]	Speed: 21806.89 samples/sec	accuracy=nan
2023-03-22 17:05:48,769 Node[0] Epoch[2] Batch [240-260]	Speed: 21821.15 samples/sec	accuracy=nan
2023-03-22 17:05:51,764 Node[0] Epoch[2] Batch [260-280]	Speed: 21794.95 samples/sec	accuracy=nan
2023-03-22 17:05:54,754 Node[0] Epoch[2] Batch [280-300]	Speed: 21835.85 samples/sec	accuracy=nan
2023-03-22 17:05:57,743 Node[0] Epoch[2] Batch [300-320]	Speed: 21836.60 samples/sec	accuracy=nan
2023-03-22 17:06:00,736 Node[0] Epoch[2] Batch [320-340]	Speed: 21810.57 samples/sec	accuracy=nan
2023-03-22 17:06:03,723 Node[0] Epoch[2] Batch [340-360]	Speed: 21852.83 samples/sec	accuracy=nan
2023-03-22 17:06:06,711 Node[0] Epoch[2] Batch [360-380]	Speed: 21847.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679522768351, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 17:06:08,352 Node[0] Epoch[2] Time cost=58.609
:::MLLOG {"namespace": "", "time_ms": 1679522768352, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21859.738145568266}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679522768496, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 17:06:08,496 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:08,496 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:09,859 Node[0] Epoch[2] Validation-accuracy=0.275680
2023-03-22 17:06:09,859 Node[0] Epoch[2] Validation-correct-count=1723.000000
2023-03-22 17:06:09,859 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-22 17:06:09,922 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522769922, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 17:06:09,922 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:09,922 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:09,922 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522769922, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2739, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 17:06:09,922 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522769922, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 17:06:09,922 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522769922, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 17:06:09,922 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522769923, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 17:06:09,923 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:06:12,952 Node[0] Epoch[3] Batch [0-20]	Speed: 21612.70 samples/sec	accuracy=nan
2023-03-22 17:06:15,943 Node[0] Epoch[3] Batch [20-40]	Speed: 21823.30 samples/sec	accuracy=nan
2023-03-22 17:06:18,932 Node[0] Epoch[3] Batch [40-60]	Speed: 21840.94 samples/sec	accuracy=nan
2023-03-22 17:06:21,919 Node[0] Epoch[3] Batch [60-80]	Speed: 21851.67 samples/sec	accuracy=nan
2023-03-22 17:06:24,907 Node[0] Epoch[3] Batch [80-100]	Speed: 21852.03 samples/sec	accuracy=nan
2023-03-22 17:06:27,893 Node[0] Epoch[3] Batch [100-120]	Speed: 21859.92 samples/sec	accuracy=nan
2023-03-22 17:06:30,885 Node[0] Epoch[3] Batch [120-140]	Speed: 21820.72 samples/sec	accuracy=nan
2023-03-22 17:06:33,875 Node[0] Epoch[3] Batch [140-160]	Speed: 21830.67 samples/sec	accuracy=nan
2023-03-22 17:06:36,869 Node[0] Epoch[3] Batch [160-180]	Speed: 21805.41 samples/sec	accuracy=nan
2023-03-22 17:06:39,861 Node[0] Epoch[3] Batch [180-200]	Speed: 21816.22 samples/sec	accuracy=nan
2023-03-22 17:06:42,855 Node[0] Epoch[3] Batch [200-220]	Speed: 21801.97 samples/sec	accuracy=nan
2023-03-22 17:06:45,847 Node[0] Epoch[3] Batch [220-240]	Speed: 21820.07 samples/sec	accuracy=nan
2023-03-22 17:06:48,836 Node[0] Epoch[3] Batch [240-260]	Speed: 21843.53 samples/sec	accuracy=nan
2023-03-22 17:06:51,832 Node[0] Epoch[3] Batch [260-280]	Speed: 21785.49 samples/sec	accuracy=nan
2023-03-22 17:06:54,823 Node[0] Epoch[3] Batch [280-300]	Speed: 21824.69 samples/sec	accuracy=nan
2023-03-22 17:06:57,817 Node[0] Epoch[3] Batch [300-320]	Speed: 21806.79 samples/sec	accuracy=nan
2023-03-22 17:07:00,808 Node[0] Epoch[3] Batch [320-340]	Speed: 21825.54 samples/sec	accuracy=nan
2023-03-22 17:07:03,799 Node[0] Epoch[3] Batch [340-360]	Speed: 21825.17 samples/sec	accuracy=nan
2023-03-22 17:07:06,795 Node[0] Epoch[3] Batch [360-380]	Speed: 21786.14 samples/sec	accuracy=nan
2023-03-22 17:07:08,585 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:08,586 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522828586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 17:07:08,587 Node[0] Epoch[3] Time cost=58.664
:::MLLOG {"namespace": "", "time_ms": 1679522828587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21838.968637193375}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679522828587, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 17:07:08,588 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:07:11,733 Node[0] Epoch[4] Batch [0-20]	Speed: 21789.55 samples/sec	accuracy=nan
2023-03-22 17:07:14,723 Node[0] Epoch[4] Batch [20-40]	Speed: 21835.13 samples/sec	accuracy=nan
2023-03-22 17:07:17,711 Node[0] Epoch[4] Batch [40-60]	Speed: 21846.23 samples/sec	accuracy=nan
2023-03-22 17:07:20,702 Node[0] Epoch[4] Batch [60-80]	Speed: 21827.95 samples/sec	accuracy=nan
2023-03-22 17:07:23,691 Node[0] Epoch[4] Batch [80-100]	Speed: 21838.52 samples/sec	accuracy=nan
2023-03-22 17:07:26,680 Node[0] Epoch[4] Batch [100-120]	Speed: 21838.28 samples/sec	accuracy=nan
2023-03-22 17:07:29,668 Node[0] Epoch[4] Batch [120-140]	Speed: 21849.23 samples/sec	accuracy=nan
2023-03-22 17:07:32,656 Node[0] Epoch[4] Batch [140-160]	Speed: 21848.70 samples/sec	accuracy=nan
2023-03-22 17:07:35,646 Node[0] Epoch[4] Batch [160-180]	Speed: 21831.64 samples/sec	accuracy=nan
2023-03-22 17:07:38,636 Node[0] Epoch[4] Batch [180-200]	Speed: 21830.87 samples/sec	accuracy=nan
2023-03-22 17:07:41,630 Node[0] Epoch[4] Batch [200-220]	Speed: 21804.77 samples/sec	accuracy=nan
2023-03-22 17:07:44,621 Node[0] Epoch[4] Batch [220-240]	Speed: 21825.65 samples/sec	accuracy=nan
2023-03-22 17:07:47,613 Node[0] Epoch[4] Batch [240-260]	Speed: 21819.31 samples/sec	accuracy=nan
2023-03-22 17:07:50,606 Node[0] Epoch[4] Batch [260-280]	Speed: 21810.91 samples/sec	accuracy=nan
2023-03-22 17:07:53,597 Node[0] Epoch[4] Batch [280-300]	Speed: 21822.23 samples/sec	accuracy=nan
2023-03-22 17:07:56,587 Node[0] Epoch[4] Batch [300-320]	Speed: 21837.12 samples/sec	accuracy=nan
2023-03-22 17:07:59,578 Node[0] Epoch[4] Batch [320-340]	Speed: 21824.56 samples/sec	accuracy=nan
2023-03-22 17:08:02,567 Node[0] Epoch[4] Batch [340-360]	Speed: 21837.95 samples/sec	accuracy=nan
2023-03-22 17:08:05,557 Node[0] Epoch[4] Batch [360-380]	Speed: 21835.94 samples/sec	accuracy=nan
2023-03-22 17:08:07,197 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:07,198 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:07,198 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:07,198 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522887198, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 17:08:07,198 Node[0] Epoch[4] Time cost=58.611
:::MLLOG {"namespace": "", "time_ms": 1679522887198, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21858.94656317595}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-22 17:08:07,198 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522887199, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 17:08:07,199 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:07,198 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:07,199 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:08:10,345 Node[0] Epoch[5] Batch [0-20]	Speed: 21810.73 samples/sec	accuracy=nan
2023-03-22 17:08:13,339 Node[0] Epoch[5] Batch [20-40]	Speed: 21805.69 samples/sec	accuracy=nan
2023-03-22 17:08:16,330 Node[0] Epoch[5] Batch [40-60]	Speed: 21826.23 samples/sec	accuracy=nan
2023-03-22 17:08:19,326 Node[0] Epoch[5] Batch [60-80]	Speed: 21790.10 samples/sec	accuracy=nan
2023-03-22 17:08:22,319 Node[0] Epoch[5] Batch [80-100]	Speed: 21805.24 samples/sec	accuracy=nan
2023-03-22 17:08:25,319 Node[0] Epoch[5] Batch [100-120]	Speed: 21762.87 samples/sec	accuracy=nan
2023-03-22 17:08:28,309 Node[0] Epoch[5] Batch [120-140]	Speed: 21835.91 samples/sec	accuracy=nan
2023-03-22 17:08:31,302 Node[0] Epoch[5] Batch [140-160]	Speed: 21808.56 samples/sec	accuracy=nan
2023-03-22 17:08:34,291 Node[0] Epoch[5] Batch [160-180]	Speed: 21842.51 samples/sec	accuracy=nan
2023-03-22 17:08:37,284 Node[0] Epoch[5] Batch [180-200]	Speed: 21810.96 samples/sec	accuracy=nan
2023-03-22 17:08:40,275 Node[0] Epoch[5] Batch [200-220]	Speed: 21823.67 samples/sec	accuracy=nan
2023-03-22 17:08:43,274 Node[0] Epoch[5] Batch [220-240]	Speed: 21767.81 samples/sec	accuracy=nan
2023-03-22 17:08:46,261 Node[0] Epoch[5] Batch [240-260]	Speed: 21852.81 samples/sec	accuracy=nan
2023-03-22 17:08:49,247 Node[0] Epoch[5] Batch [260-280]	Speed: 21859.05 samples/sec	accuracy=nan
2023-03-22 17:08:52,239 Node[0] Epoch[5] Batch [280-300]	Speed: 21818.34 samples/sec	accuracy=nan
2023-03-22 17:08:55,228 Node[0] Epoch[5] Batch [300-320]	Speed: 21840.71 samples/sec	accuracy=nan
2023-03-22 17:08:58,219 Node[0] Epoch[5] Batch [320-340]	Speed: 21829.40 samples/sec	accuracy=nan
2023-03-22 17:09:01,214 Node[0] Epoch[5] Batch [340-360]	Speed: 21797.78 samples/sec	accuracy=nan
2023-03-22 17:09:04,205 Node[0] Epoch[5] Batch [360-380]	Speed: 21820.72 samples/sec	accuracy=nan
2023-03-22 17:09:06,002 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:06,002 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:06,002 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:06,002 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:06,002 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:06,002 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522946002, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 17:09:06,003 Node[0] Epoch[5] Time cost=58.804
:::MLLOG {"namespace": "", "time_ms": 1679522946003, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21787.040102579034}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-22 17:09:06,003 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679522946003, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 17:09:06,003 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:09:09,147 Node[0] Epoch[6] Batch [0-20]	Speed: 21799.13 samples/sec	accuracy=nan
2023-03-22 17:09:12,140 Node[0] Epoch[6] Batch [20-40]	Speed: 21810.28 samples/sec	accuracy=nan
2023-03-22 17:09:15,129 Node[0] Epoch[6] Batch [40-60]	Speed: 21840.77 samples/sec	accuracy=nan
2023-03-22 17:09:18,119 Node[0] Epoch[6] Batch [60-80]	Speed: 21829.99 samples/sec	accuracy=nan
2023-03-22 17:09:21,111 Node[0] Epoch[6] Batch [80-100]	Speed: 21820.41 samples/sec	accuracy=nan
2023-03-22 17:09:24,099 Node[0] Epoch[6] Batch [100-120]	Speed: 21849.64 samples/sec	accuracy=nan
2023-03-22 17:09:27,084 Node[0] Epoch[6] Batch [120-140]	Speed: 21867.36 samples/sec	accuracy=nan
2023-03-22 17:09:30,076 Node[0] Epoch[6] Batch [140-160]	Speed: 21816.70 samples/sec	accuracy=nan
2023-03-22 17:09:33,065 Node[0] Epoch[6] Batch [160-180]	Speed: 21841.27 samples/sec	accuracy=nan
2023-03-22 17:09:36,055 Node[0] Epoch[6] Batch [180-200]	Speed: 21833.41 samples/sec	accuracy=nan
2023-03-22 17:09:39,043 Node[0] Epoch[6] Batch [200-220]	Speed: 21848.99 samples/sec	accuracy=nan
2023-03-22 17:09:42,035 Node[0] Epoch[6] Batch [220-240]	Speed: 21815.73 samples/sec	accuracy=nan
2023-03-22 17:09:45,026 Node[0] Epoch[6] Batch [240-260]	Speed: 21824.00 samples/sec	accuracy=nan
2023-03-22 17:09:48,015 Node[0] Epoch[6] Batch [260-280]	Speed: 21840.65 samples/sec	accuracy=nan
2023-03-22 17:09:51,000 Node[0] Epoch[6] Batch [280-300]	Speed: 21871.02 samples/sec	accuracy=nan
2023-03-22 17:09:53,990 Node[0] Epoch[6] Batch [300-320]	Speed: 21833.51 samples/sec	accuracy=nan
2023-03-22 17:09:56,974 Node[0] Epoch[6] Batch [320-340]	Speed: 21874.67 samples/sec	accuracy=nan
2023-03-22 17:09:59,959 Node[0] Epoch[6] Batch [340-360]	Speed: 21871.12 samples/sec	accuracy=nan
2023-03-22 17:10:02,951 Node[0] Epoch[6] Batch [360-380]	Speed: 21817.38 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679523004593, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 17:10:04,593 Node[0] Epoch[6] Time cost=58.590
:::MLLOG {"namespace": "", "time_ms": 1679523004593, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21866.783459665367}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679523004738, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 17:10:06,150 Node[0] Epoch[6] Validation-accuracy=0.420160
2023-03-22 17:10:06,150 Node[0] Epoch[6] Validation-correct-count=2626.000000
2023-03-22 17:10:06,150 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-22 17:10:06,289 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:06,289 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523006289, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679523006290, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.41768, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679523006290, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679523006290, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679523006290, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 17:10:06,290 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:10:09,308 Node[0] Epoch[7] Batch [0-20]	Speed: 21696.91 samples/sec	accuracy=nan
2023-03-22 17:10:12,298 Node[0] Epoch[7] Batch [20-40]	Speed: 21832.29 samples/sec	accuracy=nan
2023-03-22 17:10:15,299 Node[0] Epoch[7] Batch [40-60]	Speed: 21752.67 samples/sec	accuracy=nan
2023-03-22 17:10:18,290 Node[0] Epoch[7] Batch [60-80]	Speed: 21826.77 samples/sec	accuracy=nan
2023-03-22 17:10:21,281 Node[0] Epoch[7] Batch [80-100]	Speed: 21830.26 samples/sec	accuracy=nan
2023-03-22 17:10:24,269 Node[0] Epoch[7] Batch [100-120]	Speed: 21841.38 samples/sec	accuracy=nan
2023-03-22 17:10:27,259 Node[0] Epoch[7] Batch [120-140]	Speed: 21838.82 samples/sec	accuracy=nan
2023-03-22 17:10:30,246 Node[0] Epoch[7] Batch [140-160]	Speed: 21851.14 samples/sec	accuracy=nan
2023-03-22 17:10:33,238 Node[0] Epoch[7] Batch [160-180]	Speed: 21820.13 samples/sec	accuracy=nan
2023-03-22 17:10:36,230 Node[0] Epoch[7] Batch [180-200]	Speed: 21814.47 samples/sec	accuracy=nan
2023-03-22 17:10:39,221 Node[0] Epoch[7] Batch [200-220]	Speed: 21824.83 samples/sec	accuracy=nan
2023-03-22 17:10:42,210 Node[0] Epoch[7] Batch [220-240]	Speed: 21845.38 samples/sec	accuracy=nan
2023-03-22 17:10:45,196 Node[0] Epoch[7] Batch [240-260]	Speed: 21856.16 samples/sec	accuracy=nan
2023-03-22 17:10:48,186 Node[0] Epoch[7] Batch [260-280]	Speed: 21835.73 samples/sec	accuracy=nan
2023-03-22 17:10:51,178 Node[0] Epoch[7] Batch [280-300]	Speed: 21817.26 samples/sec	accuracy=nan
2023-03-22 17:10:54,170 Node[0] Epoch[7] Batch [300-320]	Speed: 21822.55 samples/sec	accuracy=nan
2023-03-22 17:10:57,158 Node[0] Epoch[7] Batch [320-340]	Speed: 21847.25 samples/sec	accuracy=nan
2023-03-22 17:11:00,145 Node[0] Epoch[7] Batch [340-360]	Speed: 21852.98 samples/sec	accuracy=nan
2023-03-22 17:11:03,139 Node[0] Epoch[7] Batch [360-380]	Speed: 21805.11 samples/sec	accuracy=nan
2023-03-22 17:11:04,932 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:04,932 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:04,932 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:04,932 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:04,932 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:04,932 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523064933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 17:11:04,933 Node[0] Epoch[7] Time cost=58.643
2023-03-22 17:11:04,933 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523064933, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21846.97675872996}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679523064933, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 17:11:04,934 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:11:08,078 Node[0] Epoch[8] Batch [0-20]	Speed: 21797.03 samples/sec	accuracy=nan
2023-03-22 17:11:11,076 Node[0] Epoch[8] Batch [20-40]	Speed: 21776.39 samples/sec	accuracy=nan
2023-03-22 17:11:14,066 Node[0] Epoch[8] Batch [40-60]	Speed: 21833.21 samples/sec	accuracy=nan
2023-03-22 17:11:17,062 Node[0] Epoch[8] Batch [60-80]	Speed: 21787.24 samples/sec	accuracy=nan
2023-03-22 17:11:20,055 Node[0] Epoch[8] Batch [80-100]	Speed: 21813.37 samples/sec	accuracy=nan
2023-03-22 17:11:23,050 Node[0] Epoch[8] Batch [100-120]	Speed: 21794.05 samples/sec	accuracy=nan
2023-03-22 17:11:26,041 Node[0] Epoch[8] Batch [120-140]	Speed: 21826.75 samples/sec	accuracy=nan
2023-03-22 17:11:29,033 Node[0] Epoch[8] Batch [140-160]	Speed: 21818.64 samples/sec	accuracy=nan
2023-03-22 17:11:32,028 Node[0] Epoch[8] Batch [160-180]	Speed: 21796.16 samples/sec	accuracy=nan
2023-03-22 17:11:35,021 Node[0] Epoch[8] Batch [180-200]	Speed: 21807.18 samples/sec	accuracy=nan
2023-03-22 17:11:38,016 Node[0] Epoch[8] Batch [200-220]	Speed: 21799.17 samples/sec	accuracy=nan
2023-03-22 17:11:41,009 Node[0] Epoch[8] Batch [220-240]	Speed: 21809.75 samples/sec	accuracy=nan
2023-03-22 17:11:44,002 Node[0] Epoch[8] Batch [240-260]	Speed: 21808.85 samples/sec	accuracy=nan
2023-03-22 17:11:46,992 Node[0] Epoch[8] Batch [260-280]	Speed: 21835.08 samples/sec	accuracy=nan
2023-03-22 17:11:49,989 Node[0] Epoch[8] Batch [280-300]	Speed: 21784.89 samples/sec	accuracy=nan
2023-03-22 17:11:52,984 Node[0] Epoch[8] Batch [300-320]	Speed: 21794.91 samples/sec	accuracy=nan
2023-03-22 17:11:55,974 Node[0] Epoch[8] Batch [320-340]	Speed: 21829.80 samples/sec	accuracy=nan
2023-03-22 17:11:58,965 Node[0] Epoch[8] Batch [340-360]	Speed: 21829.75 samples/sec	accuracy=nan
2023-03-22 17:12:01,959 Node[0] Epoch[8] Batch [360-380]	Speed: 21799.10 samples/sec	accuracy=nan
2023-03-22 17:12:03,602 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,603 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,603 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,603 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,603 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,603 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523123603, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 17:12:03,604 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:03,604 Node[0] Epoch[8] Time cost=58.670
:::MLLOG {"namespace": "", "time_ms": 1679523123604, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21836.703459434666}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679523123604, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 17:12:03,605 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:12:06,747 Node[0] Epoch[9] Batch [0-20]	Speed: 21837.41 samples/sec	accuracy=nan
2023-03-22 17:12:09,739 Node[0] Epoch[9] Batch [20-40]	Speed: 21818.31 samples/sec	accuracy=nan
2023-03-22 17:12:12,731 Node[0] Epoch[9] Batch [40-60]	Speed: 21819.82 samples/sec	accuracy=nan
2023-03-22 17:12:15,725 Node[0] Epoch[9] Batch [60-80]	Speed: 21801.87 samples/sec	accuracy=nan
2023-03-22 17:12:18,720 Node[0] Epoch[9] Batch [80-100]	Speed: 21797.44 samples/sec	accuracy=nan
2023-03-22 17:12:21,713 Node[0] Epoch[9] Batch [100-120]	Speed: 21806.04 samples/sec	accuracy=nan
2023-03-22 17:12:24,704 Node[0] Epoch[9] Batch [120-140]	Speed: 21829.43 samples/sec	accuracy=nan
2023-03-22 17:12:27,695 Node[0] Epoch[9] Batch [140-160]	Speed: 21824.87 samples/sec	accuracy=nan
2023-03-22 17:12:30,687 Node[0] Epoch[9] Batch [160-180]	Speed: 21813.87 samples/sec	accuracy=nan
2023-03-22 17:12:33,682 Node[0] Epoch[9] Batch [180-200]	Speed: 21797.79 samples/sec	accuracy=nan
2023-03-22 17:12:36,676 Node[0] Epoch[9] Batch [200-220]	Speed: 21805.99 samples/sec	accuracy=nan
2023-03-22 17:12:39,666 Node[0] Epoch[9] Batch [220-240]	Speed: 21832.38 samples/sec	accuracy=nan
2023-03-22 17:12:42,661 Node[0] Epoch[9] Batch [240-260]	Speed: 21797.62 samples/sec	accuracy=nan
2023-03-22 17:12:45,653 Node[0] Epoch[9] Batch [260-280]	Speed: 21818.09 samples/sec	accuracy=nan
2023-03-22 17:12:48,645 Node[0] Epoch[9] Batch [280-300]	Speed: 21815.12 samples/sec	accuracy=nan
2023-03-22 17:12:51,640 Node[0] Epoch[9] Batch [300-320]	Speed: 21800.97 samples/sec	accuracy=nan
2023-03-22 17:12:54,633 Node[0] Epoch[9] Batch [320-340]	Speed: 21810.01 samples/sec	accuracy=nan
2023-03-22 17:12:57,625 Node[0] Epoch[9] Batch [340-360]	Speed: 21818.57 samples/sec	accuracy=nan
2023-03-22 17:13:00,612 Node[0] Epoch[9] Batch [360-380]	Speed: 21851.19 samples/sec	accuracy=nan
2023-03-22 17:13:02,403 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:02,403 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523182403, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 17:13:02,404 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:02,404 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:02,404 Node[0] Epoch[9] Time cost=58.799
:::MLLOG {"namespace": "", "time_ms": 1679523182404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21788.831322059865}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-22 17:13:02,404 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:02,404 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523182404, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 17:13:02,404 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:02,404 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:13:05,546 Node[0] Epoch[10] Batch [0-20]	Speed: 21819.67 samples/sec	accuracy=nan
2023-03-22 17:13:08,537 Node[0] Epoch[10] Batch [20-40]	Speed: 21825.17 samples/sec	accuracy=nan
2023-03-22 17:13:11,529 Node[0] Epoch[10] Batch [40-60]	Speed: 21818.75 samples/sec	accuracy=nan
2023-03-22 17:13:14,520 Node[0] Epoch[10] Batch [60-80]	Speed: 21830.52 samples/sec	accuracy=nan
2023-03-22 17:13:17,513 Node[0] Epoch[10] Batch [80-100]	Speed: 21808.41 samples/sec	accuracy=nan
2023-03-22 17:13:20,507 Node[0] Epoch[10] Batch [100-120]	Speed: 21804.38 samples/sec	accuracy=nan
2023-03-22 17:13:23,500 Node[0] Epoch[10] Batch [120-140]	Speed: 21810.53 samples/sec	accuracy=nan
2023-03-22 17:13:26,491 Node[0] Epoch[10] Batch [140-160]	Speed: 21824.66 samples/sec	accuracy=nan
2023-03-22 17:13:29,483 Node[0] Epoch[10] Batch [160-180]	Speed: 21814.27 samples/sec	accuracy=nan
2023-03-22 17:13:32,475 Node[0] Epoch[10] Batch [180-200]	Speed: 21819.13 samples/sec	accuracy=nan
2023-03-22 17:13:35,465 Node[0] Epoch[10] Batch [200-220]	Speed: 21831.90 samples/sec	accuracy=nan
2023-03-22 17:13:38,455 Node[0] Epoch[10] Batch [220-240]	Speed: 21837.93 samples/sec	accuracy=nan
2023-03-22 17:13:41,449 Node[0] Epoch[10] Batch [240-260]	Speed: 21800.10 samples/sec	accuracy=nan
2023-03-22 17:13:44,438 Node[0] Epoch[10] Batch [260-280]	Speed: 21839.34 samples/sec	accuracy=nan
2023-03-22 17:13:47,432 Node[0] Epoch[10] Batch [280-300]	Speed: 21807.80 samples/sec	accuracy=nan
2023-03-22 17:13:50,429 Node[0] Epoch[10] Batch [300-320]	Speed: 21780.00 samples/sec	accuracy=nan
2023-03-22 17:13:53,422 Node[0] Epoch[10] Batch [320-340]	Speed: 21810.64 samples/sec	accuracy=nan
2023-03-22 17:13:56,413 Node[0] Epoch[10] Batch [340-360]	Speed: 21824.65 samples/sec	accuracy=nan
2023-03-22 17:13:59,402 Node[0] Epoch[10] Batch [360-380]	Speed: 21843.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679523241045, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 17:14:01,046 Node[0] Epoch[10] Time cost=58.642
:::MLLOG {"namespace": "", "time_ms": 1679523241046, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21847.4092381209}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679523241190, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 17:14:02,693 Node[0] Epoch[10] Validation-accuracy=0.447200
2023-03-22 17:14:02,693 Node[0] Epoch[10] Validation-correct-count=2795.000000
2023-03-22 17:14:02,693 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679523242739, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-22 17:14:02,739 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523242739, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43762, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 17:14:02,739 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:14:02,739 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523242740, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679523242740, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 17:14:02,739 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:14:02,739 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:14:02,739 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:14:02,740 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523242740, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 17:14:02,740 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:14:05,757 Node[0] Epoch[11] Batch [0-20]	Speed: 21729.20 samples/sec	accuracy=nan
2023-03-22 17:14:08,749 Node[0] Epoch[11] Batch [20-40]	Speed: 21820.94 samples/sec	accuracy=nan
2023-03-22 17:14:11,742 Node[0] Epoch[11] Batch [40-60]	Speed: 21807.84 samples/sec	accuracy=nan
2023-03-22 17:14:14,738 Node[0] Epoch[11] Batch [60-80]	Speed: 21792.48 samples/sec	accuracy=nan
2023-03-22 17:14:17,726 Node[0] Epoch[11] Batch [80-100]	Speed: 21845.89 samples/sec	accuracy=nan
2023-03-22 17:14:20,717 Node[0] Epoch[11] Batch [100-120]	Speed: 21823.00 samples/sec	accuracy=nan
2023-03-22 17:14:23,712 Node[0] Epoch[11] Batch [120-140]	Speed: 21800.65 samples/sec	accuracy=nan
2023-03-22 17:14:26,708 Node[0] Epoch[11] Batch [140-160]	Speed: 21783.62 samples/sec	accuracy=nan
2023-03-22 17:14:29,713 Node[0] Epoch[11] Batch [160-180]	Speed: 21724.79 samples/sec	accuracy=nan
2023-03-22 17:14:32,706 Node[0] Epoch[11] Batch [180-200]	Speed: 21814.62 samples/sec	accuracy=nan
2023-03-22 17:14:35,698 Node[0] Epoch[11] Batch [200-220]	Speed: 21818.98 samples/sec	accuracy=nan
2023-03-22 17:14:38,692 Node[0] Epoch[11] Batch [220-240]	Speed: 21798.87 samples/sec	accuracy=nan
2023-03-22 17:14:41,686 Node[0] Epoch[11] Batch [240-260]	Speed: 21806.34 samples/sec	accuracy=nan
2023-03-22 17:14:44,681 Node[0] Epoch[11] Batch [260-280]	Speed: 21796.01 samples/sec	accuracy=nan
2023-03-22 17:14:47,681 Node[0] Epoch[11] Batch [280-300]	Speed: 21761.58 samples/sec	accuracy=nan
2023-03-22 17:14:50,676 Node[0] Epoch[11] Batch [300-320]	Speed: 21795.68 samples/sec	accuracy=nan
2023-03-22 17:14:53,666 Node[0] Epoch[11] Batch [320-340]	Speed: 21833.70 samples/sec	accuracy=nan
2023-03-22 17:14:56,656 Node[0] Epoch[11] Batch [340-360]	Speed: 21828.69 samples/sec	accuracy=nan
2023-03-22 17:14:59,655 Node[0] Epoch[11] Batch [360-380]	Speed: 21767.81 samples/sec	accuracy=nan
2023-03-22 17:15:01,444 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,444 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,445 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,445 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,444 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,445 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:01,445 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523301444, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 17:15:01,445 Node[0] Epoch[11] Time cost=58.705
:::MLLOG {"namespace": "", "time_ms": 1679523301445, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21823.69542317685}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679523301446, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 17:15:01,446 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:15:04,587 Node[0] Epoch[12] Batch [0-20]	Speed: 21817.96 samples/sec	accuracy=nan
2023-03-22 17:15:07,578 Node[0] Epoch[12] Batch [20-40]	Speed: 21828.41 samples/sec	accuracy=nan
2023-03-22 17:15:10,575 Node[0] Epoch[12] Batch [40-60]	Speed: 21778.59 samples/sec	accuracy=nan
2023-03-22 17:15:13,572 Node[0] Epoch[12] Batch [60-80]	Speed: 21786.88 samples/sec	accuracy=nan
2023-03-22 17:15:16,571 Node[0] Epoch[12] Batch [80-100]	Speed: 21768.27 samples/sec	accuracy=nan
2023-03-22 17:15:19,567 Node[0] Epoch[12] Batch [100-120]	Speed: 21784.84 samples/sec	accuracy=nan
2023-03-22 17:15:22,560 Node[0] Epoch[12] Batch [120-140]	Speed: 21814.87 samples/sec	accuracy=nan
2023-03-22 17:15:25,552 Node[0] Epoch[12] Batch [140-160]	Speed: 21815.02 samples/sec	accuracy=nan
2023-03-22 17:15:28,544 Node[0] Epoch[12] Batch [160-180]	Speed: 21817.56 samples/sec	accuracy=nan
2023-03-22 17:15:31,537 Node[0] Epoch[12] Batch [180-200]	Speed: 21813.59 samples/sec	accuracy=nan
2023-03-22 17:15:34,524 Node[0] Epoch[12] Batch [200-220]	Speed: 21856.08 samples/sec	accuracy=nan
2023-03-22 17:15:37,515 Node[0] Epoch[12] Batch [220-240]	Speed: 21819.05 samples/sec	accuracy=nan
2023-03-22 17:15:40,510 Node[0] Epoch[12] Batch [240-260]	Speed: 21798.52 samples/sec	accuracy=nan
2023-03-22 17:15:43,508 Node[0] Epoch[12] Batch [260-280]	Speed: 21773.49 samples/sec	accuracy=nan
2023-03-22 17:15:46,501 Node[0] Epoch[12] Batch [280-300]	Speed: 21809.77 samples/sec	accuracy=nan
2023-03-22 17:15:49,495 Node[0] Epoch[12] Batch [300-320]	Speed: 21805.79 samples/sec	accuracy=nan
2023-03-22 17:15:52,485 Node[0] Epoch[12] Batch [320-340]	Speed: 21830.61 samples/sec	accuracy=nan
2023-03-22 17:15:55,478 Node[0] Epoch[12] Batch [340-360]	Speed: 21815.75 samples/sec	accuracy=nan
2023-03-22 17:15:58,474 Node[0] Epoch[12] Batch [360-380]	Speed: 21785.55 samples/sec	accuracy=nan
2023-03-22 17:16:00,119 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:00,119 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:00,119 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:00,119 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:00,120 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:00,120 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523360119, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 17:16:00,120 Node[0] Epoch[12] Time cost=58.674
2023-03-22 17:16:00,120 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523360120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21835.315511479443}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679523360120, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 17:16:00,121 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:03,264 Node[0] Epoch[13] Batch [0-20]	Speed: 21832.46 samples/sec	accuracy=nan
2023-03-22 17:16:06,257 Node[0] Epoch[13] Batch [20-40]	Speed: 21815.86 samples/sec	accuracy=nan
2023-03-22 17:16:09,244 Node[0] Epoch[13] Batch [40-60]	Speed: 21855.22 samples/sec	accuracy=nan
2023-03-22 17:16:12,238 Node[0] Epoch[13] Batch [60-80]	Speed: 21799.29 samples/sec	accuracy=nan
2023-03-22 17:16:15,231 Node[0] Epoch[13] Batch [80-100]	Speed: 21813.78 samples/sec	accuracy=nan
2023-03-22 17:16:18,221 Node[0] Epoch[13] Batch [100-120]	Speed: 21832.60 samples/sec	accuracy=nan
2023-03-22 17:16:21,215 Node[0] Epoch[13] Batch [120-140]	Speed: 21803.23 samples/sec	accuracy=nan
2023-03-22 17:16:24,207 Node[0] Epoch[13] Batch [140-160]	Speed: 21816.18 samples/sec	accuracy=nan
2023-03-22 17:16:27,197 Node[0] Epoch[13] Batch [160-180]	Speed: 21832.44 samples/sec	accuracy=nan
2023-03-22 17:16:30,187 Node[0] Epoch[13] Batch [180-200]	Speed: 21831.17 samples/sec	accuracy=nan
2023-03-22 17:16:33,177 Node[0] Epoch[13] Batch [200-220]	Speed: 21834.67 samples/sec	accuracy=nan
2023-03-22 17:16:36,166 Node[0] Epoch[13] Batch [220-240]	Speed: 21837.99 samples/sec	accuracy=nan
2023-03-22 17:16:39,152 Node[0] Epoch[13] Batch [240-260]	Speed: 21862.44 samples/sec	accuracy=nan
2023-03-22 17:16:42,141 Node[0] Epoch[13] Batch [260-280]	Speed: 21844.52 samples/sec	accuracy=nan
2023-03-22 17:16:45,133 Node[0] Epoch[13] Batch [280-300]	Speed: 21818.02 samples/sec	accuracy=nan
2023-03-22 17:16:48,126 Node[0] Epoch[13] Batch [300-320]	Speed: 21811.76 samples/sec	accuracy=nan
2023-03-22 17:16:51,120 Node[0] Epoch[13] Batch [320-340]	Speed: 21803.85 samples/sec	accuracy=nan
2023-03-22 17:16:54,114 Node[0] Epoch[13] Batch [340-360]	Speed: 21799.40 samples/sec	accuracy=nan
2023-03-22 17:16:57,106 Node[0] Epoch[13] Batch [360-380]	Speed: 21818.71 samples/sec	accuracy=nan
2023-03-22 17:16:58,898 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,898 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,899 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,899 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,899 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,899 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:16:58,900 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523418899, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 17:16:58,900 Node[0] Epoch[13] Time cost=58.780
:::MLLOG {"namespace": "", "time_ms": 1679523418900, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21796.079597151824}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679523418901, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 17:16:58,901 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:02,046 Node[0] Epoch[14] Batch [0-20]	Speed: 21796.35 samples/sec	accuracy=nan
2023-03-22 17:17:05,038 Node[0] Epoch[14] Batch [20-40]	Speed: 21820.75 samples/sec	accuracy=nan
2023-03-22 17:17:08,025 Node[0] Epoch[14] Batch [40-60]	Speed: 21851.44 samples/sec	accuracy=nan
2023-03-22 17:17:11,021 Node[0] Epoch[14] Batch [60-80]	Speed: 21791.07 samples/sec	accuracy=nan
2023-03-22 17:17:14,014 Node[0] Epoch[14] Batch [80-100]	Speed: 21808.69 samples/sec	accuracy=nan
2023-03-22 17:17:17,008 Node[0] Epoch[14] Batch [100-120]	Speed: 21803.99 samples/sec	accuracy=nan
2023-03-22 17:17:20,000 Node[0] Epoch[14] Batch [120-140]	Speed: 21817.29 samples/sec	accuracy=nan
2023-03-22 17:17:22,993 Node[0] Epoch[14] Batch [140-160]	Speed: 21811.42 samples/sec	accuracy=nan
2023-03-22 17:17:25,997 Node[0] Epoch[14] Batch [160-180]	Speed: 21729.97 samples/sec	accuracy=nan
2023-03-22 17:17:28,989 Node[0] Epoch[14] Batch [180-200]	Speed: 21822.98 samples/sec	accuracy=nan
2023-03-22 17:17:31,980 Node[0] Epoch[14] Batch [200-220]	Speed: 21821.54 samples/sec	accuracy=nan
2023-03-22 17:17:34,972 Node[0] Epoch[14] Batch [220-240]	Speed: 21822.23 samples/sec	accuracy=nan
2023-03-22 17:17:37,965 Node[0] Epoch[14] Batch [240-260]	Speed: 21806.44 samples/sec	accuracy=nan
2023-03-22 17:17:40,955 Node[0] Epoch[14] Batch [260-280]	Speed: 21835.96 samples/sec	accuracy=nan
2023-03-22 17:17:43,951 Node[0] Epoch[14] Batch [280-300]	Speed: 21787.83 samples/sec	accuracy=nan
2023-03-22 17:17:46,947 Node[0] Epoch[14] Batch [300-320]	Speed: 21791.51 samples/sec	accuracy=nan
2023-03-22 17:17:49,936 Node[0] Epoch[14] Batch [320-340]	Speed: 21833.77 samples/sec	accuracy=nan
2023-03-22 17:17:52,928 Node[0] Epoch[14] Batch [340-360]	Speed: 21823.97 samples/sec	accuracy=nan
2023-03-22 17:17:55,920 Node[0] Epoch[14] Batch [360-380]	Speed: 21816.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679523477561, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 17:17:57,562 Node[0] Epoch[14] Time cost=58.661
:::MLLOG {"namespace": "", "time_ms": 1679523477562, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21840.15279759166}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679523477706, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 17:17:59,161 Node[0] Epoch[14] Validation-accuracy=0.568800
2023-03-22 17:17:59,161 Node[0] Epoch[14] Validation-correct-count=3555.000000
2023-03-22 17:17:59,161 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-22 17:17:59,248 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:17:59,248 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523479248, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679523479249, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5631, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679523479249, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679523479249, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679523479249, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 17:17:59,250 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:02,272 Node[0] Epoch[15] Batch [0-20]	Speed: 21682.29 samples/sec	accuracy=nan
2023-03-22 17:18:05,269 Node[0] Epoch[15] Batch [20-40]	Speed: 21782.88 samples/sec	accuracy=nan
2023-03-22 17:18:08,256 Node[0] Epoch[15] Batch [40-60]	Speed: 21852.09 samples/sec	accuracy=nan
2023-03-22 17:18:11,254 Node[0] Epoch[15] Batch [60-80]	Speed: 21774.52 samples/sec	accuracy=nan
2023-03-22 17:18:14,252 Node[0] Epoch[15] Batch [80-100]	Speed: 21771.46 samples/sec	accuracy=nan
2023-03-22 17:18:17,249 Node[0] Epoch[15] Batch [100-120]	Speed: 21786.02 samples/sec	accuracy=nan
2023-03-22 17:18:20,239 Node[0] Epoch[15] Batch [120-140]	Speed: 21830.19 samples/sec	accuracy=nan
2023-03-22 17:18:23,233 Node[0] Epoch[15] Batch [140-160]	Speed: 21802.18 samples/sec	accuracy=nan
2023-03-22 17:18:26,226 Node[0] Epoch[15] Batch [160-180]	Speed: 21809.84 samples/sec	accuracy=nan
2023-03-22 17:18:29,220 Node[0] Epoch[15] Batch [180-200]	Speed: 21804.54 samples/sec	accuracy=nan
2023-03-22 17:18:32,216 Node[0] Epoch[15] Batch [200-220]	Speed: 21793.64 samples/sec	accuracy=nan
2023-03-22 17:18:35,209 Node[0] Epoch[15] Batch [220-240]	Speed: 21806.25 samples/sec	accuracy=nan
2023-03-22 17:18:38,205 Node[0] Epoch[15] Batch [240-260]	Speed: 21794.72 samples/sec	accuracy=nan
2023-03-22 17:18:41,200 Node[0] Epoch[15] Batch [260-280]	Speed: 21794.69 samples/sec	accuracy=nan
2023-03-22 17:18:44,192 Node[0] Epoch[15] Batch [280-300]	Speed: 21813.43 samples/sec	accuracy=nan
2023-03-22 17:18:47,186 Node[0] Epoch[15] Batch [300-320]	Speed: 21810.08 samples/sec	accuracy=nan
2023-03-22 17:18:50,173 Node[0] Epoch[15] Batch [320-340]	Speed: 21853.73 samples/sec	accuracy=nan
2023-03-22 17:18:53,163 Node[0] Epoch[15] Batch [340-360]	Speed: 21829.97 samples/sec	accuracy=nan
2023-03-22 17:18:56,159 Node[0] Epoch[15] Batch [360-380]	Speed: 21789.22 samples/sec	accuracy=nan
2023-03-22 17:18:57,951 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:57,951 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:57,951 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523537951, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 17:18:57,951 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:57,951 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:57,952 Node[0] Epoch[15] Time cost=58.702
:::MLLOG {"namespace": "", "time_ms": 1679523537952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21824.91755071477}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-22 17:18:57,952 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523537952, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 17:18:57,952 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:18:57,952 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:01,096 Node[0] Epoch[16] Batch [0-20]	Speed: 21799.96 samples/sec	accuracy=nan
2023-03-22 17:19:04,087 Node[0] Epoch[16] Batch [20-40]	Speed: 21827.39 samples/sec	accuracy=nan
2023-03-22 17:19:07,083 Node[0] Epoch[16] Batch [40-60]	Speed: 21789.62 samples/sec	accuracy=nan
2023-03-22 17:19:10,075 Node[0] Epoch[16] Batch [60-80]	Speed: 21812.34 samples/sec	accuracy=nan
2023-03-22 17:19:13,072 Node[0] Epoch[16] Batch [80-100]	Speed: 21788.86 samples/sec	accuracy=nan
2023-03-22 17:19:16,063 Node[0] Epoch[16] Batch [100-120]	Speed: 21823.15 samples/sec	accuracy=nan
2023-03-22 17:19:19,052 Node[0] Epoch[16] Batch [120-140]	Speed: 21840.34 samples/sec	accuracy=nan
2023-03-22 17:19:22,041 Node[0] Epoch[16] Batch [140-160]	Speed: 21835.40 samples/sec	accuracy=nan
2023-03-22 17:19:25,038 Node[0] Epoch[16] Batch [160-180]	Speed: 21784.44 samples/sec	accuracy=nan
2023-03-22 17:19:28,032 Node[0] Epoch[16] Batch [180-200]	Speed: 21803.11 samples/sec	accuracy=nan
2023-03-22 17:19:31,028 Node[0] Epoch[16] Batch [200-220]	Speed: 21792.54 samples/sec	accuracy=nan
2023-03-22 17:19:34,018 Node[0] Epoch[16] Batch [220-240]	Speed: 21830.84 samples/sec	accuracy=nan
2023-03-22 17:19:37,010 Node[0] Epoch[16] Batch [240-260]	Speed: 21818.80 samples/sec	accuracy=nan
2023-03-22 17:19:40,001 Node[0] Epoch[16] Batch [260-280]	Speed: 21820.30 samples/sec	accuracy=nan
2023-03-22 17:19:42,991 Node[0] Epoch[16] Batch [280-300]	Speed: 21834.36 samples/sec	accuracy=nan
2023-03-22 17:19:45,986 Node[0] Epoch[16] Batch [300-320]	Speed: 21800.23 samples/sec	accuracy=nan
2023-03-22 17:19:48,984 Node[0] Epoch[16] Batch [320-340]	Speed: 21771.55 samples/sec	accuracy=nan
2023-03-22 17:19:51,974 Node[0] Epoch[16] Batch [340-360]	Speed: 21833.34 samples/sec	accuracy=nan
2023-03-22 17:19:54,964 Node[0] Epoch[16] Batch [360-380]	Speed: 21831.08 samples/sec	accuracy=nan
2023-03-22 17:19:56,610 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:56,610 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523596610, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 17:19:56,611 Node[0] Epoch[16] Time cost=58.658
:::MLLOG {"namespace": "", "time_ms": 1679523596611, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21841.121541790875}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679523596611, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 17:19:56,611 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:19:59,761 Node[0] Epoch[17] Batch [0-20]	Speed: 21784.68 samples/sec	accuracy=nan
2023-03-22 17:20:02,755 Node[0] Epoch[17] Batch [20-40]	Speed: 21805.29 samples/sec	accuracy=nan
2023-03-22 17:20:05,745 Node[0] Epoch[17] Batch [40-60]	Speed: 21829.18 samples/sec	accuracy=nan
2023-03-22 17:20:08,737 Node[0] Epoch[17] Batch [60-80]	Speed: 21823.34 samples/sec	accuracy=nan
2023-03-22 17:20:11,730 Node[0] Epoch[17] Batch [80-100]	Speed: 21809.85 samples/sec	accuracy=nan
2023-03-22 17:20:14,720 Node[0] Epoch[17] Batch [100-120]	Speed: 21830.53 samples/sec	accuracy=nan
2023-03-22 17:20:17,712 Node[0] Epoch[17] Batch [120-140]	Speed: 21820.82 samples/sec	accuracy=nan
2023-03-22 17:20:20,708 Node[0] Epoch[17] Batch [140-160]	Speed: 21789.17 samples/sec	accuracy=nan
2023-03-22 17:20:23,707 Node[0] Epoch[17] Batch [160-180]	Speed: 21766.29 samples/sec	accuracy=nan
2023-03-22 17:20:26,699 Node[0] Epoch[17] Batch [180-200]	Speed: 21815.26 samples/sec	accuracy=nan
2023-03-22 17:20:29,691 Node[0] Epoch[17] Batch [200-220]	Speed: 21817.57 samples/sec	accuracy=nan
2023-03-22 17:20:32,681 Node[0] Epoch[17] Batch [220-240]	Speed: 21835.65 samples/sec	accuracy=nan
2023-03-22 17:20:35,675 Node[0] Epoch[17] Batch [240-260]	Speed: 21804.35 samples/sec	accuracy=nan
2023-03-22 17:20:38,666 Node[0] Epoch[17] Batch [260-280]	Speed: 21822.95 samples/sec	accuracy=nan
2023-03-22 17:20:41,659 Node[0] Epoch[17] Batch [280-300]	Speed: 21810.85 samples/sec	accuracy=nan
2023-03-22 17:20:44,652 Node[0] Epoch[17] Batch [300-320]	Speed: 21812.16 samples/sec	accuracy=nan
2023-03-22 17:20:47,642 Node[0] Epoch[17] Batch [320-340]	Speed: 21831.68 samples/sec	accuracy=nan
2023-03-22 17:20:50,631 Node[0] Epoch[17] Batch [340-360]	Speed: 21840.11 samples/sec	accuracy=nan
2023-03-22 17:20:53,618 Node[0] Epoch[17] Batch [360-380]	Speed: 21857.22 samples/sec	accuracy=nan
2023-03-22 17:20:55,408 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:55,408 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:55,408 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:55,408 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:55,408 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523655408, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 17:20:55,408 Node[0] Epoch[17] Time cost=58.797
2023-03-22 17:20:55,408 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523655408, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21789.636830759457}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679523655409, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 17:20:55,408 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:55,409 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:20:58,547 Node[0] Epoch[18] Batch [0-20]	Speed: 21842.80 samples/sec	accuracy=nan
2023-03-22 17:21:01,537 Node[0] Epoch[18] Batch [20-40]	Speed: 21835.55 samples/sec	accuracy=nan
2023-03-22 17:21:04,528 Node[0] Epoch[18] Batch [40-60]	Speed: 21819.59 samples/sec	accuracy=nan
2023-03-22 17:21:07,515 Node[0] Epoch[18] Batch [60-80]	Speed: 21854.76 samples/sec	accuracy=nan
2023-03-22 17:21:10,504 Node[0] Epoch[18] Batch [80-100]	Speed: 21844.21 samples/sec	accuracy=nan
2023-03-22 17:21:13,495 Node[0] Epoch[18] Batch [100-120]	Speed: 21826.57 samples/sec	accuracy=nan
2023-03-22 17:21:16,482 Node[0] Epoch[18] Batch [120-140]	Speed: 21853.18 samples/sec	accuracy=nan
2023-03-22 17:21:19,473 Node[0] Epoch[18] Batch [140-160]	Speed: 21822.65 samples/sec	accuracy=nan
2023-03-22 17:21:22,461 Node[0] Epoch[18] Batch [160-180]	Speed: 21848.89 samples/sec	accuracy=nan
2023-03-22 17:21:25,445 Node[0] Epoch[18] Batch [180-200]	Speed: 21874.58 samples/sec	accuracy=nan
2023-03-22 17:21:28,438 Node[0] Epoch[18] Batch [200-220]	Speed: 21813.50 samples/sec	accuracy=nan
2023-03-22 17:21:31,425 Node[0] Epoch[18] Batch [220-240]	Speed: 21858.02 samples/sec	accuracy=nan
2023-03-22 17:21:34,420 Node[0] Epoch[18] Batch [240-260]	Speed: 21791.91 samples/sec	accuracy=nan
2023-03-22 17:21:37,410 Node[0] Epoch[18] Batch [260-280]	Speed: 21830.86 samples/sec	accuracy=nan
2023-03-22 17:21:40,399 Node[0] Epoch[18] Batch [280-300]	Speed: 21842.19 samples/sec	accuracy=nan
2023-03-22 17:21:43,391 Node[0] Epoch[18] Batch [300-320]	Speed: 21821.41 samples/sec	accuracy=nan
2023-03-22 17:21:46,379 Node[0] Epoch[18] Batch [320-340]	Speed: 21844.21 samples/sec	accuracy=nan
2023-03-22 17:21:49,366 Node[0] Epoch[18] Batch [340-360]	Speed: 21856.38 samples/sec	accuracy=nan
2023-03-22 17:21:52,353 Node[0] Epoch[18] Batch [360-380]	Speed: 21857.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679523713992, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 17:21:53,994 Node[0] Epoch[18] Time cost=58.585
:::MLLOG {"namespace": "", "time_ms": 1679523713994, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21868.58149707881}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679523714138, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 17:21:55,682 Node[0] Epoch[18] Validation-accuracy=0.625920
2023-03-22 17:21:55,682 Node[0] Epoch[18] Validation-correct-count=3912.000000
2023-03-22 17:21:55,682 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679523715791, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679523715791, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.62568, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679523715791, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 17:21:55,791 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:55,791 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523715791, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 17:21:55,791 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:55,791 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:55,791 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:55,791 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523715791, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 17:21:55,792 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:55,791 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:21:58,806 Node[0] Epoch[19] Batch [0-20]	Speed: 21759.94 samples/sec	accuracy=nan
2023-03-22 17:22:01,801 Node[0] Epoch[19] Batch [20-40]	Speed: 21797.00 samples/sec	accuracy=nan
2023-03-22 17:22:04,786 Node[0] Epoch[19] Batch [40-60]	Speed: 21869.48 samples/sec	accuracy=nan
2023-03-22 17:22:07,777 Node[0] Epoch[19] Batch [60-80]	Speed: 21827.72 samples/sec	accuracy=nan
2023-03-22 17:22:10,763 Node[0] Epoch[19] Batch [80-100]	Speed: 21856.11 samples/sec	accuracy=nan
2023-03-22 17:22:13,750 Node[0] Epoch[19] Batch [100-120]	Speed: 21856.20 samples/sec	accuracy=nan
2023-03-22 17:22:16,739 Node[0] Epoch[19] Batch [120-140]	Speed: 21838.83 samples/sec	accuracy=nan
2023-03-22 17:22:19,727 Node[0] Epoch[19] Batch [140-160]	Speed: 21848.48 samples/sec	accuracy=nan
2023-03-22 17:22:22,716 Node[0] Epoch[19] Batch [160-180]	Speed: 21840.99 samples/sec	accuracy=nan
2023-03-22 17:22:25,704 Node[0] Epoch[19] Batch [180-200]	Speed: 21847.22 samples/sec	accuracy=nan
2023-03-22 17:22:28,696 Node[0] Epoch[19] Batch [200-220]	Speed: 21821.13 samples/sec	accuracy=nan
2023-03-22 17:22:31,680 Node[0] Epoch[19] Batch [220-240]	Speed: 21873.90 samples/sec	accuracy=nan
2023-03-22 17:22:34,668 Node[0] Epoch[19] Batch [240-260]	Speed: 21845.34 samples/sec	accuracy=nan
2023-03-22 17:22:37,656 Node[0] Epoch[19] Batch [260-280]	Speed: 21851.38 samples/sec	accuracy=nan
2023-03-22 17:22:40,644 Node[0] Epoch[19] Batch [280-300]	Speed: 21845.10 samples/sec	accuracy=nan
2023-03-22 17:22:43,633 Node[0] Epoch[19] Batch [300-320]	Speed: 21843.96 samples/sec	accuracy=nan
2023-03-22 17:22:46,623 Node[0] Epoch[19] Batch [320-340]	Speed: 21831.87 samples/sec	accuracy=nan
2023-03-22 17:22:49,613 Node[0] Epoch[19] Batch [340-360]	Speed: 21831.14 samples/sec	accuracy=nan
2023-03-22 17:22:52,602 Node[0] Epoch[19] Batch [360-380]	Speed: 21837.21 samples/sec	accuracy=nan
2023-03-22 17:22:54,395 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,395 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,395 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,395 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,395 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523774395, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 17:22:54,396 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:54,396 Node[0] Epoch[19] Time cost=58.605
:::MLLOG {"namespace": "", "time_ms": 1679523774396, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21861.104120141863}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679523774397, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 17:22:54,397 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:22:57,549 Node[0] Epoch[20] Batch [0-20]	Speed: 21749.71 samples/sec	accuracy=nan
2023-03-22 17:23:00,540 Node[0] Epoch[20] Batch [20-40]	Speed: 21826.65 samples/sec	accuracy=nan
2023-03-22 17:23:03,527 Node[0] Epoch[20] Batch [40-60]	Speed: 21850.11 samples/sec	accuracy=nan
2023-03-22 17:23:06,517 Node[0] Epoch[20] Batch [60-80]	Speed: 21837.41 samples/sec	accuracy=nan
2023-03-22 17:23:09,509 Node[0] Epoch[20] Batch [80-100]	Speed: 21816.75 samples/sec	accuracy=nan
2023-03-22 17:23:12,508 Node[0] Epoch[20] Batch [100-120]	Speed: 21770.61 samples/sec	accuracy=nan
2023-03-22 17:23:15,508 Node[0] Epoch[20] Batch [120-140]	Speed: 21753.08 samples/sec	accuracy=nan
2023-03-22 17:23:18,496 Node[0] Epoch[20] Batch [140-160]	Speed: 21854.25 samples/sec	accuracy=nan
2023-03-22 17:23:21,489 Node[0] Epoch[20] Batch [160-180]	Speed: 21805.31 samples/sec	accuracy=nan
2023-03-22 17:23:24,481 Node[0] Epoch[20] Batch [180-200]	Speed: 21820.61 samples/sec	accuracy=nan
2023-03-22 17:23:27,473 Node[0] Epoch[20] Batch [200-220]	Speed: 21817.81 samples/sec	accuracy=nan
2023-03-22 17:23:30,462 Node[0] Epoch[20] Batch [220-240]	Speed: 21838.53 samples/sec	accuracy=nan
2023-03-22 17:23:33,451 Node[0] Epoch[20] Batch [240-260]	Speed: 21839.78 samples/sec	accuracy=nan
2023-03-22 17:23:36,440 Node[0] Epoch[20] Batch [260-280]	Speed: 21840.12 samples/sec	accuracy=nan
2023-03-22 17:23:39,431 Node[0] Epoch[20] Batch [280-300]	Speed: 21825.92 samples/sec	accuracy=nan
2023-03-22 17:23:42,427 Node[0] Epoch[20] Batch [300-320]	Speed: 21793.65 samples/sec	accuracy=nan
2023-03-22 17:23:45,416 Node[0] Epoch[20] Batch [320-340]	Speed: 21835.33 samples/sec	accuracy=nan
2023-03-22 17:23:48,410 Node[0] Epoch[20] Batch [340-360]	Speed: 21805.81 samples/sec	accuracy=nan
2023-03-22 17:23:51,403 Node[0] Epoch[20] Batch [360-380]	Speed: 21813.53 samples/sec	accuracy=nan
2023-03-22 17:23:53,044 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:53,044 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:53,044 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523833044, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 17:23:53,044 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:53,044 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:53,044 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:53,044 Node[0] Epoch[20] Time cost=58.647
:::MLLOG {"namespace": "", "time_ms": 1679523833044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21845.24301605104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 17:23:53,044 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523833045, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 17:23:53,045 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:23:56,188 Node[0] Epoch[21] Batch [0-20]	Speed: 21839.55 samples/sec	accuracy=nan
2023-03-22 17:23:59,176 Node[0] Epoch[21] Batch [20-40]	Speed: 21841.43 samples/sec	accuracy=nan
2023-03-22 17:24:02,168 Node[0] Epoch[21] Batch [40-60]	Speed: 21821.65 samples/sec	accuracy=nan
2023-03-22 17:24:05,160 Node[0] Epoch[21] Batch [60-80]	Speed: 21815.40 samples/sec	accuracy=nan
2023-03-22 17:24:08,160 Node[0] Epoch[21] Batch [80-100]	Speed: 21762.00 samples/sec	accuracy=nan
2023-03-22 17:24:11,159 Node[0] Epoch[21] Batch [100-120]	Speed: 21770.81 samples/sec	accuracy=nan
2023-03-22 17:24:14,151 Node[0] Epoch[21] Batch [120-140]	Speed: 21812.44 samples/sec	accuracy=nan
2023-03-22 17:24:17,145 Node[0] Epoch[21] Batch [140-160]	Speed: 21808.63 samples/sec	accuracy=nan
2023-03-22 17:24:20,136 Node[0] Epoch[21] Batch [160-180]	Speed: 21824.53 samples/sec	accuracy=nan
2023-03-22 17:24:23,127 Node[0] Epoch[21] Batch [180-200]	Speed: 21821.44 samples/sec	accuracy=nan
2023-03-22 17:24:26,119 Node[0] Epoch[21] Batch [200-220]	Speed: 21822.09 samples/sec	accuracy=nan
2023-03-22 17:24:29,112 Node[0] Epoch[21] Batch [220-240]	Speed: 21810.24 samples/sec	accuracy=nan
2023-03-22 17:24:32,107 Node[0] Epoch[21] Batch [240-260]	Speed: 21795.46 samples/sec	accuracy=nan
2023-03-22 17:24:35,096 Node[0] Epoch[21] Batch [260-280]	Speed: 21838.86 samples/sec	accuracy=nan
2023-03-22 17:24:38,090 Node[0] Epoch[21] Batch [280-300]	Speed: 21807.15 samples/sec	accuracy=nan
2023-03-22 17:24:41,083 Node[0] Epoch[21] Batch [300-320]	Speed: 21811.21 samples/sec	accuracy=nan
2023-03-22 17:24:44,073 Node[0] Epoch[21] Batch [320-340]	Speed: 21829.78 samples/sec	accuracy=nan
2023-03-22 17:24:47,064 Node[0] Epoch[21] Batch [340-360]	Speed: 21823.12 samples/sec	accuracy=nan
2023-03-22 17:24:50,056 Node[0] Epoch[21] Batch [360-380]	Speed: 21821.20 samples/sec	accuracy=nan
2023-03-22 17:24:51,850 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,850 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,851 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,851 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,851 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,851 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:51,851 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523891851, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 17:24:51,852 Node[0] Epoch[21] Time cost=58.807
:::MLLOG {"namespace": "", "time_ms": 1679523891852, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21785.965918545342}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679523891852, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 17:24:51,852 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:24:54,991 Node[0] Epoch[22] Batch [0-20]	Speed: 21841.41 samples/sec	accuracy=nan
2023-03-22 17:24:57,981 Node[0] Epoch[22] Batch [20-40]	Speed: 21832.70 samples/sec	accuracy=nan
2023-03-22 17:25:00,974 Node[0] Epoch[22] Batch [40-60]	Speed: 21809.48 samples/sec	accuracy=nan
2023-03-22 17:25:03,964 Node[0] Epoch[22] Batch [60-80]	Speed: 21834.13 samples/sec	accuracy=nan
2023-03-22 17:25:06,965 Node[0] Epoch[22] Batch [80-100]	Speed: 21749.95 samples/sec	accuracy=nan
2023-03-22 17:25:09,963 Node[0] Epoch[22] Batch [100-120]	Speed: 21776.79 samples/sec	accuracy=nan
2023-03-22 17:25:12,960 Node[0] Epoch[22] Batch [120-140]	Speed: 21780.36 samples/sec	accuracy=nan
2023-03-22 17:25:15,952 Node[0] Epoch[22] Batch [140-160]	Speed: 21820.77 samples/sec	accuracy=nan
2023-03-22 17:25:18,941 Node[0] Epoch[22] Batch [160-180]	Speed: 21832.85 samples/sec	accuracy=nan
2023-03-22 17:25:21,936 Node[0] Epoch[22] Batch [180-200]	Speed: 21803.50 samples/sec	accuracy=nan
2023-03-22 17:25:24,927 Node[0] Epoch[22] Batch [200-220]	Speed: 21825.49 samples/sec	accuracy=nan
2023-03-22 17:25:27,919 Node[0] Epoch[22] Batch [220-240]	Speed: 21816.73 samples/sec	accuracy=nan
2023-03-22 17:25:30,905 Node[0] Epoch[22] Batch [240-260]	Speed: 21859.56 samples/sec	accuracy=nan
2023-03-22 17:25:33,895 Node[0] Epoch[22] Batch [260-280]	Speed: 21830.04 samples/sec	accuracy=nan
2023-03-22 17:25:36,889 Node[0] Epoch[22] Batch [280-300]	Speed: 21806.08 samples/sec	accuracy=nan
2023-03-22 17:25:39,878 Node[0] Epoch[22] Batch [300-320]	Speed: 21839.89 samples/sec	accuracy=nan
2023-03-22 17:25:42,867 Node[0] Epoch[22] Batch [320-340]	Speed: 21838.82 samples/sec	accuracy=nan
2023-03-22 17:25:45,861 Node[0] Epoch[22] Batch [340-360]	Speed: 21807.99 samples/sec	accuracy=nan
2023-03-22 17:25:48,857 Node[0] Epoch[22] Batch [360-380]	Speed: 21785.88 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679523950501, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 17:25:50,501 Node[0] Epoch[22] Time cost=58.649
:::MLLOG {"namespace": "", "time_ms": 1679523950501, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21844.768440755368}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679523950646, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 17:25:52,147 Node[0] Epoch[22] Validation-accuracy=0.682560
2023-03-22 17:25:52,147 Node[0] Epoch[22] Validation-correct-count=4266.000000
2023-03-22 17:25:52,147 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-22 17:25:52,287 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:52,287 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679523952287, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679523952288, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6836, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679523952288, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679523952288, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679523952289, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 17:25:52,289 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:25:55,307 Node[0] Epoch[23] Batch [0-20]	Speed: 21715.84 samples/sec	accuracy=nan
2023-03-22 17:25:58,299 Node[0] Epoch[23] Batch [20-40]	Speed: 21821.28 samples/sec	accuracy=nan
2023-03-22 17:26:01,287 Node[0] Epoch[23] Batch [40-60]	Speed: 21842.52 samples/sec	accuracy=nan
2023-03-22 17:26:04,289 Node[0] Epoch[23] Batch [60-80]	Speed: 21745.70 samples/sec	accuracy=nan
2023-03-22 17:26:07,292 Node[0] Epoch[23] Batch [80-100]	Speed: 21743.74 samples/sec	accuracy=nan
2023-03-22 17:26:10,286 Node[0] Epoch[23] Batch [100-120]	Speed: 21802.62 samples/sec	accuracy=nan
2023-03-22 17:26:13,287 Node[0] Epoch[23] Batch [120-140]	Speed: 21748.87 samples/sec	accuracy=nan
2023-03-22 17:26:16,279 Node[0] Epoch[23] Batch [140-160]	Speed: 21822.49 samples/sec	accuracy=nan
2023-03-22 17:26:19,276 Node[0] Epoch[23] Batch [160-180]	Speed: 21779.72 samples/sec	accuracy=nan
2023-03-22 17:26:22,273 Node[0] Epoch[23] Batch [180-200]	Speed: 21783.20 samples/sec	accuracy=nan
2023-03-22 17:26:25,268 Node[0] Epoch[23] Batch [200-220]	Speed: 21796.26 samples/sec	accuracy=nan
2023-03-22 17:26:28,262 Node[0] Epoch[23] Batch [220-240]	Speed: 21804.41 samples/sec	accuracy=nan
2023-03-22 17:26:31,246 Node[0] Epoch[23] Batch [240-260]	Speed: 21871.32 samples/sec	accuracy=nan
2023-03-22 17:26:34,243 Node[0] Epoch[23] Batch [260-280]	Speed: 21788.79 samples/sec	accuracy=nan
2023-03-22 17:26:37,239 Node[0] Epoch[23] Batch [280-300]	Speed: 21783.44 samples/sec	accuracy=nan
2023-03-22 17:26:40,234 Node[0] Epoch[23] Batch [300-320]	Speed: 21797.48 samples/sec	accuracy=nan
2023-03-22 17:26:43,230 Node[0] Epoch[23] Batch [320-340]	Speed: 21789.65 samples/sec	accuracy=nan
2023-03-22 17:26:46,221 Node[0] Epoch[23] Batch [340-360]	Speed: 21824.22 samples/sec	accuracy=nan
2023-03-22 17:26:49,214 Node[0] Epoch[23] Batch [360-380]	Speed: 21814.68 samples/sec	accuracy=nan
2023-03-22 17:26:51,007 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,008 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,008 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,008 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,008 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524011008, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 17:26:51,008 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,008 Node[0] Epoch[23] Time cost=58.719
:::MLLOG {"namespace": "", "time_ms": 1679524011008, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21818.472167086435}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679524011009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 17:26:51,009 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:51,009 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:26:54,152 Node[0] Epoch[24] Batch [0-20]	Speed: 21806.85 samples/sec	accuracy=nan
2023-03-22 17:26:57,150 Node[0] Epoch[24] Batch [20-40]	Speed: 21778.04 samples/sec	accuracy=nan
2023-03-22 17:27:00,144 Node[0] Epoch[24] Batch [40-60]	Speed: 21799.47 samples/sec	accuracy=nan
2023-03-22 17:27:03,134 Node[0] Epoch[24] Batch [60-80]	Speed: 21836.23 samples/sec	accuracy=nan
2023-03-22 17:27:06,128 Node[0] Epoch[24] Batch [80-100]	Speed: 21805.46 samples/sec	accuracy=nan
2023-03-22 17:27:09,120 Node[0] Epoch[24] Batch [100-120]	Speed: 21816.76 samples/sec	accuracy=nan
2023-03-22 17:27:12,111 Node[0] Epoch[24] Batch [120-140]	Speed: 21825.12 samples/sec	accuracy=nan
2023-03-22 17:27:15,101 Node[0] Epoch[24] Batch [140-160]	Speed: 21833.77 samples/sec	accuracy=nan
2023-03-22 17:27:18,094 Node[0] Epoch[24] Batch [160-180]	Speed: 21812.25 samples/sec	accuracy=nan
2023-03-22 17:27:21,086 Node[0] Epoch[24] Batch [180-200]	Speed: 21817.61 samples/sec	accuracy=nan
2023-03-22 17:27:24,079 Node[0] Epoch[24] Batch [200-220]	Speed: 21809.86 samples/sec	accuracy=nan
2023-03-22 17:27:27,067 Node[0] Epoch[24] Batch [220-240]	Speed: 21847.00 samples/sec	accuracy=nan
2023-03-22 17:27:30,059 Node[0] Epoch[24] Batch [240-260]	Speed: 21814.56 samples/sec	accuracy=nan
2023-03-22 17:27:33,055 Node[0] Epoch[24] Batch [260-280]	Speed: 21794.52 samples/sec	accuracy=nan
2023-03-22 17:27:36,052 Node[0] Epoch[24] Batch [280-300]	Speed: 21780.80 samples/sec	accuracy=nan
2023-03-22 17:27:39,053 Node[0] Epoch[24] Batch [300-320]	Speed: 21753.48 samples/sec	accuracy=nan
2023-03-22 17:27:42,057 Node[0] Epoch[24] Batch [320-340]	Speed: 21732.12 samples/sec	accuracy=nan
2023-03-22 17:27:45,049 Node[0] Epoch[24] Batch [340-360]	Speed: 21818.39 samples/sec	accuracy=nan
2023-03-22 17:27:48,045 Node[0] Epoch[24] Batch [360-380]	Speed: 21786.85 samples/sec	accuracy=nan
2023-03-22 17:27:49,690 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:49,690 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:49,691 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:49,691 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:49,691 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:49,691 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524069690, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 17:27:49,692 Node[0] Epoch[24] Time cost=58.683
:::MLLOG {"namespace": "", "time_ms": 1679524069692, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21831.97928423906}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-22 17:27:49,692 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524069692, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 17:27:49,692 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:27:52,835 Node[0] Epoch[25] Batch [0-20]	Speed: 21836.78 samples/sec	accuracy=nan
2023-03-22 17:27:55,828 Node[0] Epoch[25] Batch [20-40]	Speed: 21810.75 samples/sec	accuracy=nan
2023-03-22 17:27:58,822 Node[0] Epoch[25] Batch [40-60]	Speed: 21803.12 samples/sec	accuracy=nan
2023-03-22 17:28:01,811 Node[0] Epoch[25] Batch [60-80]	Speed: 21841.99 samples/sec	accuracy=nan
2023-03-22 17:28:04,808 Node[0] Epoch[25] Batch [80-100]	Speed: 21777.18 samples/sec	accuracy=nan
2023-03-22 17:28:07,800 Node[0] Epoch[25] Batch [100-120]	Speed: 21817.85 samples/sec	accuracy=nan
2023-03-22 17:28:10,792 Node[0] Epoch[25] Batch [120-140]	Speed: 21817.42 samples/sec	accuracy=nan
2023-03-22 17:28:13,783 Node[0] Epoch[25] Batch [140-160]	Speed: 21826.20 samples/sec	accuracy=nan
2023-03-22 17:28:16,775 Node[0] Epoch[25] Batch [160-180]	Speed: 21817.67 samples/sec	accuracy=nan
2023-03-22 17:28:19,769 Node[0] Epoch[25] Batch [180-200]	Speed: 21807.17 samples/sec	accuracy=nan
2023-03-22 17:28:22,767 Node[0] Epoch[25] Batch [200-220]	Speed: 21770.58 samples/sec	accuracy=nan
2023-03-22 17:28:25,758 Node[0] Epoch[25] Batch [220-240]	Speed: 21831.74 samples/sec	accuracy=nan
2023-03-22 17:28:28,752 Node[0] Epoch[25] Batch [240-260]	Speed: 21802.68 samples/sec	accuracy=nan
2023-03-22 17:28:31,744 Node[0] Epoch[25] Batch [260-280]	Speed: 21813.42 samples/sec	accuracy=nan
2023-03-22 17:28:34,739 Node[0] Epoch[25] Batch [280-300]	Speed: 21800.32 samples/sec	accuracy=nan
2023-03-22 17:28:40,116 Node[0] Epoch[25] Batch [300-320]	Speed: 12139.36 samples/sec	accuracy=nan
2023-03-22 17:28:43,111 Node[0] Epoch[25] Batch [320-340]	Speed: 21799.86 samples/sec	accuracy=nan
2023-03-22 17:28:46,102 Node[0] Epoch[25] Batch [340-360]	Speed: 21824.10 samples/sec	accuracy=nan
2023-03-22 17:28:49,089 Node[0] Epoch[25] Batch [360-380]	Speed: 21852.07 samples/sec	accuracy=nan
2023-03-22 17:28:50,884 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,884 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,884 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,884 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,884 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,885 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524130884, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 17:28:50,885 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:50,885 Node[0] Epoch[25] Time cost=61.193
:::MLLOG {"namespace": "", "time_ms": 1679524130885, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20936.566130044168}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679524130886, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 17:28:50,886 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:28:54,030 Node[0] Epoch[26] Batch [0-20]	Speed: 21794.01 samples/sec	accuracy=nan
2023-03-22 17:28:57,020 Node[0] Epoch[26] Batch [20-40]	Speed: 21836.91 samples/sec	accuracy=nan
2023-03-22 17:29:00,011 Node[0] Epoch[26] Batch [40-60]	Speed: 21825.71 samples/sec	accuracy=nan
2023-03-22 17:29:02,998 Node[0] Epoch[26] Batch [60-80]	Speed: 21852.58 samples/sec	accuracy=nan
2023-03-22 17:29:05,984 Node[0] Epoch[26] Batch [80-100]	Speed: 21862.68 samples/sec	accuracy=nan
2023-03-22 17:29:08,971 Node[0] Epoch[26] Batch [100-120]	Speed: 21851.70 samples/sec	accuracy=nan
2023-03-22 17:29:11,965 Node[0] Epoch[26] Batch [120-140]	Speed: 21805.55 samples/sec	accuracy=nan
2023-03-22 17:29:14,955 Node[0] Epoch[26] Batch [140-160]	Speed: 21830.76 samples/sec	accuracy=nan
2023-03-22 17:29:17,942 Node[0] Epoch[26] Batch [160-180]	Speed: 21856.78 samples/sec	accuracy=nan
2023-03-22 17:29:20,939 Node[0] Epoch[26] Batch [180-200]	Speed: 21778.62 samples/sec	accuracy=nan
2023-03-22 17:29:23,932 Node[0] Epoch[26] Batch [200-220]	Speed: 21815.80 samples/sec	accuracy=nan
2023-03-22 17:29:26,924 Node[0] Epoch[26] Batch [220-240]	Speed: 21818.42 samples/sec	accuracy=nan
2023-03-22 17:29:29,915 Node[0] Epoch[26] Batch [240-260]	Speed: 21825.77 samples/sec	accuracy=nan
2023-03-22 17:29:32,909 Node[0] Epoch[26] Batch [260-280]	Speed: 21798.63 samples/sec	accuracy=nan
2023-03-22 17:29:35,898 Node[0] Epoch[26] Batch [280-300]	Speed: 21839.43 samples/sec	accuracy=nan
2023-03-22 17:29:38,893 Node[0] Epoch[26] Batch [300-320]	Speed: 21797.19 samples/sec	accuracy=nan
2023-03-22 17:29:41,883 Node[0] Epoch[26] Batch [320-340]	Speed: 21837.39 samples/sec	accuracy=nan
2023-03-22 17:29:44,875 Node[0] Epoch[26] Batch [340-360]	Speed: 21813.76 samples/sec	accuracy=nan
2023-03-22 17:29:47,872 Node[0] Epoch[26] Batch [360-380]	Speed: 21784.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679524189516, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 17:29:49,517 Node[0] Epoch[26] Time cost=58.631
:::MLLOG {"namespace": "", "time_ms": 1679524189517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21851.31618490966}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679524189661, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 17:29:51,115 Node[0] Epoch[26] Validation-accuracy=0.718240
2023-03-22 17:29:51,115 Node[0] Epoch[26] Validation-correct-count=4489.000000
2023-03-22 17:29:51,115 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-22 17:29:51,294 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:51,294 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524191294, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679524191295, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72654, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679524191295, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679524191295, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679524191295, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 17:29:51,296 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:29:54,312 Node[0] Epoch[27] Batch [0-20]	Speed: 21737.94 samples/sec	accuracy=nan
2023-03-22 17:29:57,300 Node[0] Epoch[27] Batch [20-40]	Speed: 21847.02 samples/sec	accuracy=nan
2023-03-22 17:30:00,289 Node[0] Epoch[27] Batch [40-60]	Speed: 21838.63 samples/sec	accuracy=nan
2023-03-22 17:30:03,285 Node[0] Epoch[27] Batch [60-80]	Speed: 21787.58 samples/sec	accuracy=nan
2023-03-22 17:30:06,277 Node[0] Epoch[27] Batch [80-100]	Speed: 21820.11 samples/sec	accuracy=nan
2023-03-22 17:30:09,265 Node[0] Epoch[27] Batch [100-120]	Speed: 21842.95 samples/sec	accuracy=nan
2023-03-22 17:30:12,256 Node[0] Epoch[27] Batch [120-140]	Speed: 21826.72 samples/sec	accuracy=nan
2023-03-22 17:30:15,248 Node[0] Epoch[27] Batch [140-160]	Speed: 21821.45 samples/sec	accuracy=nan
2023-03-22 17:30:18,239 Node[0] Epoch[27] Batch [160-180]	Speed: 21826.50 samples/sec	accuracy=nan
2023-03-22 17:30:21,239 Node[0] Epoch[27] Batch [180-200]	Speed: 21759.71 samples/sec	accuracy=nan
2023-03-22 17:30:24,237 Node[0] Epoch[27] Batch [200-220]	Speed: 21772.38 samples/sec	accuracy=nan
2023-03-22 17:30:27,231 Node[0] Epoch[27] Batch [220-240]	Speed: 21804.59 samples/sec	accuracy=nan
2023-03-22 17:30:30,226 Node[0] Epoch[27] Batch [240-260]	Speed: 21795.85 samples/sec	accuracy=nan
2023-03-22 17:30:33,220 Node[0] Epoch[27] Batch [260-280]	Speed: 21805.66 samples/sec	accuracy=nan
2023-03-22 17:30:36,209 Node[0] Epoch[27] Batch [280-300]	Speed: 21835.88 samples/sec	accuracy=nan
2023-03-22 17:30:39,202 Node[0] Epoch[27] Batch [300-320]	Speed: 21811.87 samples/sec	accuracy=nan
2023-03-22 17:30:42,195 Node[0] Epoch[27] Batch [320-340]	Speed: 21811.59 samples/sec	accuracy=nan
2023-03-22 17:30:45,190 Node[0] Epoch[27] Batch [340-360]	Speed: 21799.20 samples/sec	accuracy=nan
2023-03-22 17:30:48,183 Node[0] Epoch[27] Batch [360-380]	Speed: 21807.13 samples/sec	accuracy=nan
2023-03-22 17:30:49,982 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,982 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,982 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,982 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,982 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,982 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524249982, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 17:30:49,983 Node[0] Epoch[27] Time cost=58.687
:::MLLOG {"namespace": "", "time_ms": 1679524249983, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21830.413586418017}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679524249983, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 17:30:49,983 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:49,984 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:30:53,131 Node[0] Epoch[28] Batch [0-20]	Speed: 21780.72 samples/sec	accuracy=nan
2023-03-22 17:30:56,127 Node[0] Epoch[28] Batch [20-40]	Speed: 21789.69 samples/sec	accuracy=nan
2023-03-22 17:30:59,124 Node[0] Epoch[28] Batch [40-60]	Speed: 21781.56 samples/sec	accuracy=nan
2023-03-22 17:31:02,122 Node[0] Epoch[28] Batch [60-80]	Speed: 21776.19 samples/sec	accuracy=nan
2023-03-22 17:31:05,114 Node[0] Epoch[28] Batch [80-100]	Speed: 21821.11 samples/sec	accuracy=nan
2023-03-22 17:31:08,107 Node[0] Epoch[28] Batch [100-120]	Speed: 21806.76 samples/sec	accuracy=nan
2023-03-22 17:31:11,098 Node[0] Epoch[28] Batch [120-140]	Speed: 21824.60 samples/sec	accuracy=nan
2023-03-22 17:31:14,092 Node[0] Epoch[28] Batch [140-160]	Speed: 21809.10 samples/sec	accuracy=nan
2023-03-22 17:31:17,085 Node[0] Epoch[28] Batch [160-180]	Speed: 21807.78 samples/sec	accuracy=nan
2023-03-22 17:31:20,076 Node[0] Epoch[28] Batch [180-200]	Speed: 21826.41 samples/sec	accuracy=nan
2023-03-22 17:31:23,069 Node[0] Epoch[28] Batch [200-220]	Speed: 21810.02 samples/sec	accuracy=nan
2023-03-22 17:31:26,062 Node[0] Epoch[28] Batch [220-240]	Speed: 21813.60 samples/sec	accuracy=nan
2023-03-22 17:31:29,057 Node[0] Epoch[28] Batch [240-260]	Speed: 21794.68 samples/sec	accuracy=nan
2023-03-22 17:31:32,052 Node[0] Epoch[28] Batch [260-280]	Speed: 21797.42 samples/sec	accuracy=nan
2023-03-22 17:31:35,044 Node[0] Epoch[28] Batch [280-300]	Speed: 21814.54 samples/sec	accuracy=nan
2023-03-22 17:31:40,057 Node[0] Epoch[28] Batch [300-320]	Speed: 13021.46 samples/sec	accuracy=nan
2023-03-22 17:31:43,048 Node[0] Epoch[28] Batch [320-340]	Speed: 21832.12 samples/sec	accuracy=nan
2023-03-22 17:31:46,042 Node[0] Epoch[28] Batch [340-360]	Speed: 21798.17 samples/sec	accuracy=nan
2023-03-22 17:31:49,040 Node[0] Epoch[28] Batch [360-380]	Speed: 21780.19 samples/sec	accuracy=nan
2023-03-22 17:31:50,684 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,684 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,684 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,684 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,684 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,684 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:50,685 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524310684, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 17:31:50,685 Node[0] Epoch[28] Time cost=60.702
:::MLLOG {"namespace": "", "time_ms": 1679524310686, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21105.827075491143}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679524310686, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 17:31:50,686 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:31:53,831 Node[0] Epoch[29] Batch [0-20]	Speed: 21827.01 samples/sec	accuracy=nan
2023-03-22 17:31:56,822 Node[0] Epoch[29] Batch [20-40]	Speed: 21828.19 samples/sec	accuracy=nan
2023-03-22 17:31:59,815 Node[0] Epoch[29] Batch [40-60]	Speed: 21806.11 samples/sec	accuracy=nan
2023-03-22 17:32:02,810 Node[0] Epoch[29] Batch [60-80]	Speed: 21797.41 samples/sec	accuracy=nan
2023-03-22 17:32:05,801 Node[0] Epoch[29] Batch [80-100]	Speed: 21823.29 samples/sec	accuracy=nan
2023-03-22 17:32:08,799 Node[0] Epoch[29] Batch [100-120]	Speed: 21776.16 samples/sec	accuracy=nan
2023-03-22 17:32:11,804 Node[0] Epoch[29] Batch [120-140]	Speed: 21723.84 samples/sec	accuracy=nan
2023-03-22 17:32:14,799 Node[0] Epoch[29] Batch [140-160]	Speed: 21800.54 samples/sec	accuracy=nan
2023-03-22 17:32:17,793 Node[0] Epoch[29] Batch [160-180]	Speed: 21800.18 samples/sec	accuracy=nan
2023-03-22 17:32:20,784 Node[0] Epoch[29] Batch [180-200]	Speed: 21825.13 samples/sec	accuracy=nan
2023-03-22 17:32:23,776 Node[0] Epoch[29] Batch [200-220]	Speed: 21817.46 samples/sec	accuracy=nan
2023-03-22 17:32:26,767 Node[0] Epoch[29] Batch [220-240]	Speed: 21826.47 samples/sec	accuracy=nan
2023-03-22 17:32:29,757 Node[0] Epoch[29] Batch [240-260]	Speed: 21836.17 samples/sec	accuracy=nan
2023-03-22 17:32:32,749 Node[0] Epoch[29] Batch [260-280]	Speed: 21814.67 samples/sec	accuracy=nan
2023-03-22 17:32:35,742 Node[0] Epoch[29] Batch [280-300]	Speed: 21814.96 samples/sec	accuracy=nan
2023-03-22 17:32:40,699 Node[0] Epoch[29] Batch [300-320]	Speed: 13169.07 samples/sec	accuracy=nan
2023-03-22 17:32:43,684 Node[0] Epoch[29] Batch [320-340]	Speed: 21867.84 samples/sec	accuracy=nan
2023-03-22 17:32:46,674 Node[0] Epoch[29] Batch [340-360]	Speed: 21835.22 samples/sec	accuracy=nan
2023-03-22 17:32:49,664 Node[0] Epoch[29] Batch [360-380]	Speed: 21828.85 samples/sec	accuracy=nan
2023-03-22 17:32:51,460 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,461 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,461 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,461 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,461 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,461 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:51,462 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524371461, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 17:32:51,463 Node[0] Epoch[29] Time cost=60.777
:::MLLOG {"namespace": "", "time_ms": 1679524371463, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21079.957389644427}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679524371463, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 17:32:51,463 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:32:54,610 Node[0] Epoch[30] Batch [0-20]	Speed: 21779.26 samples/sec	accuracy=nan
2023-03-22 17:32:57,602 Node[0] Epoch[30] Batch [20-40]	Speed: 21815.87 samples/sec	accuracy=nan
2023-03-22 17:33:00,593 Node[0] Epoch[30] Batch [40-60]	Speed: 21827.35 samples/sec	accuracy=nan
2023-03-22 17:33:03,582 Node[0] Epoch[30] Batch [60-80]	Speed: 21841.52 samples/sec	accuracy=nan
2023-03-22 17:33:06,574 Node[0] Epoch[30] Batch [80-100]	Speed: 21816.38 samples/sec	accuracy=nan
2023-03-22 17:33:09,569 Node[0] Epoch[30] Batch [100-120]	Speed: 21796.34 samples/sec	accuracy=nan
2023-03-22 17:33:12,562 Node[0] Epoch[30] Batch [120-140]	Speed: 21808.70 samples/sec	accuracy=nan
2023-03-22 17:33:15,555 Node[0] Epoch[30] Batch [140-160]	Speed: 21809.77 samples/sec	accuracy=nan
2023-03-22 17:33:18,547 Node[0] Epoch[30] Batch [160-180]	Speed: 21816.54 samples/sec	accuracy=nan
2023-03-22 17:33:21,539 Node[0] Epoch[30] Batch [180-200]	Speed: 21821.55 samples/sec	accuracy=nan
2023-03-22 17:33:24,529 Node[0] Epoch[30] Batch [200-220]	Speed: 21835.92 samples/sec	accuracy=nan
2023-03-22 17:33:27,517 Node[0] Epoch[30] Batch [220-240]	Speed: 21843.62 samples/sec	accuracy=nan
2023-03-22 17:33:30,508 Node[0] Epoch[30] Batch [240-260]	Speed: 21827.97 samples/sec	accuracy=nan
2023-03-22 17:33:33,500 Node[0] Epoch[30] Batch [260-280]	Speed: 21819.62 samples/sec	accuracy=nan
2023-03-22 17:33:36,495 Node[0] Epoch[30] Batch [280-300]	Speed: 21792.21 samples/sec	accuracy=nan
2023-03-22 17:33:41,931 Node[0] Epoch[30] Batch [300-320]	Speed: 12009.46 samples/sec	accuracy=nan
2023-03-22 17:33:46,931 Node[0] Epoch[30] Batch [320-340]	Speed: 13054.87 samples/sec	accuracy=nan
2023-03-22 17:33:49,919 Node[0] Epoch[30] Batch [340-360]	Speed: 21850.26 samples/sec	accuracy=nan
2023-03-22 17:33:52,905 Node[0] Epoch[30] Batch [360-380]	Speed: 21860.57 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679524434548, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 17:33:54,549 Node[0] Epoch[30] Time cost=63.086
:::MLLOG {"namespace": "", "time_ms": 1679524434549, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20308.372039719892}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679524434692, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 17:33:56,330 Node[0] Epoch[30] Validation-accuracy=0.756480
2023-03-22 17:33:56,330 Node[0] Epoch[30] Validation-correct-count=4728.000000
2023-03-22 17:33:56,330 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679524436331, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679524436331, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7484, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-22 17:33:56,331 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524436331, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-22 17:33:56,331 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:33:56,331 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524436331, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 17:33:56,331 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:33:56,331 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:33:56,331 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:33:56,331 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524436331, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 17:33:56,332 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:33:59,344 Node[0] Epoch[31] Batch [0-20]	Speed: 21756.01 samples/sec	accuracy=nan
2023-03-22 17:34:02,328 Node[0] Epoch[31] Batch [20-40]	Speed: 21880.13 samples/sec	accuracy=nan
2023-03-22 17:34:05,316 Node[0] Epoch[31] Batch [40-60]	Speed: 21846.72 samples/sec	accuracy=nan
2023-03-22 17:34:08,303 Node[0] Epoch[31] Batch [60-80]	Speed: 21852.18 samples/sec	accuracy=nan
2023-03-22 17:34:11,295 Node[0] Epoch[31] Batch [80-100]	Speed: 21821.68 samples/sec	accuracy=nan
2023-03-22 17:34:14,286 Node[0] Epoch[31] Batch [100-120]	Speed: 21826.44 samples/sec	accuracy=nan
2023-03-22 17:34:17,274 Node[0] Epoch[31] Batch [120-140]	Speed: 21849.29 samples/sec	accuracy=nan
2023-03-22 17:34:20,262 Node[0] Epoch[31] Batch [140-160]	Speed: 21845.81 samples/sec	accuracy=nan
2023-03-22 17:34:23,261 Node[0] Epoch[31] Batch [160-180]	Speed: 21768.31 samples/sec	accuracy=nan
2023-03-22 17:34:26,259 Node[0] Epoch[31] Batch [180-200]	Speed: 21772.58 samples/sec	accuracy=nan
2023-03-22 17:34:29,254 Node[0] Epoch[31] Batch [200-220]	Speed: 21797.57 samples/sec	accuracy=nan
2023-03-22 17:34:32,241 Node[0] Epoch[31] Batch [220-240]	Speed: 21853.81 samples/sec	accuracy=nan
2023-03-22 17:34:35,231 Node[0] Epoch[31] Batch [240-260]	Speed: 21835.22 samples/sec	accuracy=nan
2023-03-22 17:34:38,225 Node[0] Epoch[31] Batch [260-280]	Speed: 21801.54 samples/sec	accuracy=nan
2023-03-22 17:34:41,219 Node[0] Epoch[31] Batch [280-300]	Speed: 21802.32 samples/sec	accuracy=nan
2023-03-22 17:34:46,460 Node[0] Epoch[31] Batch [300-320]	Speed: 12456.24 samples/sec	accuracy=nan
2023-03-22 17:34:49,451 Node[0] Epoch[31] Batch [320-340]	Speed: 21820.24 samples/sec	accuracy=nan
2023-03-22 17:34:52,447 Node[0] Epoch[31] Batch [340-360]	Speed: 21788.77 samples/sec	accuracy=nan
2023-03-22 17:34:55,439 Node[0] Epoch[31] Batch [360-380]	Speed: 21818.05 samples/sec	accuracy=nan
2023-03-22 17:34:57,234 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:34:57,234 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:34:57,234 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:34:57,234 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:34:57,234 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:34:57,234 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524497234, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 17:34:57,235 Node[0] Epoch[31] Time cost=60.904
2023-03-22 17:34:57,235 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524497235, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21035.96136722016}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679524497236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 17:34:57,236 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:00,378 Node[0] Epoch[32] Batch [0-20]	Speed: 21809.31 samples/sec	accuracy=nan
2023-03-22 17:35:03,378 Node[0] Epoch[32] Batch [20-40]	Speed: 21760.45 samples/sec	accuracy=nan
2023-03-22 17:35:06,369 Node[0] Epoch[32] Batch [40-60]	Speed: 21821.88 samples/sec	accuracy=nan
2023-03-22 17:35:09,359 Node[0] Epoch[32] Batch [60-80]	Speed: 21831.61 samples/sec	accuracy=nan
2023-03-22 17:35:12,358 Node[0] Epoch[32] Batch [80-100]	Speed: 21772.83 samples/sec	accuracy=nan
2023-03-22 17:35:15,350 Node[0] Epoch[32] Batch [100-120]	Speed: 21817.32 samples/sec	accuracy=nan
2023-03-22 17:35:18,342 Node[0] Epoch[32] Batch [120-140]	Speed: 21815.18 samples/sec	accuracy=nan
2023-03-22 17:35:21,335 Node[0] Epoch[32] Batch [140-160]	Speed: 21811.59 samples/sec	accuracy=nan
2023-03-22 17:35:26,759 Node[0] Epoch[32] Batch [160-180]	Speed: 12035.97 samples/sec	accuracy=nan
2023-03-22 17:35:29,749 Node[0] Epoch[32] Batch [180-200]	Speed: 21828.06 samples/sec	accuracy=nan
2023-03-22 17:35:32,739 Node[0] Epoch[32] Batch [200-220]	Speed: 21831.73 samples/sec	accuracy=nan
2023-03-22 17:35:35,731 Node[0] Epoch[32] Batch [220-240]	Speed: 21821.69 samples/sec	accuracy=nan
2023-03-22 17:35:38,718 Node[0] Epoch[32] Batch [240-260]	Speed: 21857.90 samples/sec	accuracy=nan
2023-03-22 17:35:41,705 Node[0] Epoch[32] Batch [260-280]	Speed: 21848.84 samples/sec	accuracy=nan
2023-03-22 17:35:44,695 Node[0] Epoch[32] Batch [280-300]	Speed: 21838.59 samples/sec	accuracy=nan
2023-03-22 17:35:47,685 Node[0] Epoch[32] Batch [300-320]	Speed: 21829.57 samples/sec	accuracy=nan
2023-03-22 17:35:50,673 Node[0] Epoch[32] Batch [320-340]	Speed: 21844.79 samples/sec	accuracy=nan
2023-03-22 17:35:53,660 Node[0] Epoch[32] Batch [340-360]	Speed: 21859.19 samples/sec	accuracy=nan
2023-03-22 17:35:56,652 Node[0] Epoch[32] Batch [360-380]	Speed: 21815.60 samples/sec	accuracy=nan
2023-03-22 17:35:58,292 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,292 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,293 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,293 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,293 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,293 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:35:58,293 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524558293, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 17:35:58,294 Node[0] Epoch[32] Time cost=61.058
:::MLLOG {"namespace": "", "time_ms": 1679524558294, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20982.74061794033}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679524558294, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 17:35:58,295 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:01,433 Node[0] Epoch[33] Batch [0-20]	Speed: 21858.40 samples/sec	accuracy=nan
2023-03-22 17:36:04,427 Node[0] Epoch[33] Batch [20-40]	Speed: 21808.96 samples/sec	accuracy=nan
2023-03-22 17:36:07,424 Node[0] Epoch[33] Batch [40-60]	Speed: 21783.31 samples/sec	accuracy=nan
2023-03-22 17:36:10,423 Node[0] Epoch[33] Batch [60-80]	Speed: 21765.74 samples/sec	accuracy=nan
2023-03-22 17:36:13,418 Node[0] Epoch[33] Batch [80-100]	Speed: 21792.75 samples/sec	accuracy=nan
2023-03-22 17:36:16,409 Node[0] Epoch[33] Batch [100-120]	Speed: 21829.86 samples/sec	accuracy=nan
2023-03-22 17:36:19,401 Node[0] Epoch[33] Batch [120-140]	Speed: 21814.25 samples/sec	accuracy=nan
2023-03-22 17:36:22,393 Node[0] Epoch[33] Batch [140-160]	Speed: 21821.45 samples/sec	accuracy=nan
2023-03-22 17:36:25,382 Node[0] Epoch[33] Batch [160-180]	Speed: 21839.00 samples/sec	accuracy=nan
2023-03-22 17:36:28,377 Node[0] Epoch[33] Batch [180-200]	Speed: 21796.25 samples/sec	accuracy=nan
2023-03-22 17:36:31,368 Node[0] Epoch[33] Batch [200-220]	Speed: 21823.38 samples/sec	accuracy=nan
2023-03-22 17:36:34,356 Node[0] Epoch[33] Batch [220-240]	Speed: 21850.16 samples/sec	accuracy=nan
2023-03-22 17:36:37,344 Node[0] Epoch[33] Batch [240-260]	Speed: 21848.18 samples/sec	accuracy=nan
2023-03-22 17:36:40,341 Node[0] Epoch[33] Batch [260-280]	Speed: 21779.92 samples/sec	accuracy=nan
2023-03-22 17:36:43,334 Node[0] Epoch[33] Batch [280-300]	Speed: 21809.92 samples/sec	accuracy=nan
2023-03-22 17:36:46,327 Node[0] Epoch[33] Batch [300-320]	Speed: 21811.83 samples/sec	accuracy=nan
2023-03-22 17:36:51,275 Node[0] Epoch[33] Batch [320-340]	Speed: 13192.80 samples/sec	accuracy=nan
2023-03-22 17:36:54,259 Node[0] Epoch[33] Batch [340-360]	Speed: 21878.92 samples/sec	accuracy=nan
2023-03-22 17:36:57,245 Node[0] Epoch[33] Batch [360-380]	Speed: 21857.69 samples/sec	accuracy=nan
2023-03-22 17:36:59,034 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,034 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,035 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,035 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,035 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,035 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:36:59,035 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524619034, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 17:36:59,036 Node[0] Epoch[33] Time cost=60.741
:::MLLOG {"namespace": "", "time_ms": 1679524619036, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21092.22423470639}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679524619036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 17:36:59,036 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:37:02,176 Node[0] Epoch[34] Batch [0-20]	Speed: 21832.33 samples/sec	accuracy=nan
2023-03-22 17:37:05,165 Node[0] Epoch[34] Batch [20-40]	Speed: 21838.20 samples/sec	accuracy=nan
2023-03-22 17:37:08,156 Node[0] Epoch[34] Batch [40-60]	Speed: 21823.53 samples/sec	accuracy=nan
2023-03-22 17:37:11,159 Node[0] Epoch[34] Batch [60-80]	Speed: 21741.07 samples/sec	accuracy=nan
2023-03-22 17:37:14,154 Node[0] Epoch[34] Batch [80-100]	Speed: 21794.82 samples/sec	accuracy=nan
2023-03-22 17:37:17,148 Node[0] Epoch[34] Batch [100-120]	Speed: 21804.16 samples/sec	accuracy=nan
2023-03-22 17:37:20,140 Node[0] Epoch[34] Batch [120-140]	Speed: 21816.50 samples/sec	accuracy=nan
2023-03-22 17:37:23,133 Node[0] Epoch[34] Batch [140-160]	Speed: 21814.70 samples/sec	accuracy=nan
2023-03-22 17:37:26,121 Node[0] Epoch[34] Batch [160-180]	Speed: 21841.24 samples/sec	accuracy=nan
2023-03-22 17:37:29,117 Node[0] Epoch[34] Batch [180-200]	Speed: 21791.63 samples/sec	accuracy=nan
2023-03-22 17:37:32,110 Node[0] Epoch[34] Batch [200-220]	Speed: 21811.21 samples/sec	accuracy=nan
2023-03-22 17:37:35,100 Node[0] Epoch[34] Batch [220-240]	Speed: 21830.35 samples/sec	accuracy=nan
2023-03-22 17:37:38,093 Node[0] Epoch[34] Batch [240-260]	Speed: 21812.96 samples/sec	accuracy=nan
2023-03-22 17:37:41,085 Node[0] Epoch[34] Batch [260-280]	Speed: 21817.32 samples/sec	accuracy=nan
2023-03-22 17:37:44,080 Node[0] Epoch[34] Batch [280-300]	Speed: 21799.70 samples/sec	accuracy=nan
2023-03-22 17:37:47,071 Node[0] Epoch[34] Batch [300-320]	Speed: 21826.21 samples/sec	accuracy=nan
2023-03-22 17:37:50,061 Node[0] Epoch[34] Batch [320-340]	Speed: 21833.82 samples/sec	accuracy=nan
2023-03-22 17:37:53,055 Node[0] Epoch[34] Batch [340-360]	Speed: 21800.69 samples/sec	accuracy=nan
2023-03-22 17:37:56,053 Node[0] Epoch[34] Batch [360-380]	Speed: 21775.63 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679524677844, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 17:37:57,844 Node[0] Epoch[34] Time cost=58.808
:::MLLOG {"namespace": "", "time_ms": 1679524677844, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21785.61438720029}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679524677988, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 17:37:59,428 Node[0] Epoch[34] Validation-accuracy=0.762560
2023-03-22 17:37:59,428 Node[0] Epoch[34] Validation-correct-count=4766.000000
2023-03-22 17:37:59,428 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679524679487, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679524679488, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76022, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679524679488, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679524679489, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524694
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:14 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:14 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524694
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:14 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:14 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524694
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:14 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:14 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524694
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:14 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:14 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524695
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:15 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:15 PM
+ result=2226
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524695
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:15 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:15 PM
+ result=2226
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524695
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:15 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:15 PM
+ result=2226
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679524696
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 05:38:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 05:38:16 PM'
ENDING TIMING RUN AT 2023-03-22 05:38:16 PM
+ result=2227
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2227,root,2023-03-22 05:01:09 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2227,root,2023-03-22 05:01:09 PM'
+ export PROFILE=0
+ PROFILE=0
