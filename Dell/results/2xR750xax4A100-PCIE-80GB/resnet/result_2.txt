+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 '
+ echo 'hosts=node040 node041 '
hosts=node040 node041 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679526967437, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526967472, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526967473, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526967474, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526967476, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679526980199, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679526985323, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526985357, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526985359, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526985360, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679526985362, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679526997072, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=24657
+ SEED=24657
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ date +%s
+ start=1679526998
+ start=1679526998
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ start_fmt='2023-03-22 06:16:38 PM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ LR=12.5
+ MOM=0.9
+ SLURM_NTASKS_PER_NODE=4
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ INPUT_BATCH_MULTIPLIER=1
+ WD=5.0e-05
+ KVSTORE=horovod
+ LABELSMOOTHING=0.1
+ LR=12.5
+ SEED=24657
+ MOM=0.9
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=5
+ WARMUP_EPOCHS=2
+ DALI_NVJPEG_MEMPADDING=256
+ LARSETA=0.001
+ DALI_THREADS=6
+ DALI_HW_DECODER_LOAD=0
+ DALI_CACHE_SIZE=0
+ WD=5.0e-05
+ DALI_ROI_DECODE=1
+ LABELSMOOTHING=0.1
+ SEED=24657
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREFETCH_QUEUE=5
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CACHE_SIZE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_ROI_DECODE=1
+ DALI_DONT_USE_MMAP=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_HEIGHT=6430
+ NETWORK=resnet-v1b-stats-fl
+ DALI_TMP_BUFFER_HINT=355568328
+ BN_GROUP=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE_EXCEL=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NODALI=0
+ DALI_DONT_USE_MMAP=0
+ NUMEXAMPLES=
+ NUMEPOCHS=37
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DATAROOT=/data
+ NODALI=0
+ echo 'running benchmark'
+ NUMEXAMPLES=
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
+ GPUS=0,1,2,3
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ GPUS=0,1,2,3
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679526998
++ date '+%Y-%m-%d %r'
+ source ./config_2xR750xax4A100.sh
+ start_fmt='2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=24657
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ dirname ./config_2xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679526998
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=24657
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ DGXSYSTEM=2xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
+++ sed 's/^config_//'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ sed 's/\.sh$//'
++ date +%s
++++ readlink -f ./config_2xR750xax4A100.sh
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start=1679526998
+ start=1679526998
+ start=1679526998
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=24657
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ start_fmt='2023-03-22 06:16:38 PM'
+ start_fmt='2023-03-22 06:16:38 PM'
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=24657
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ SEED=24657
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ tr '\n' ,
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ sed 's/,$//'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ date +%s
+ start=1679526998
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-22 06:16:38 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:16:38 PM'
STARTING TIMING RUN AT 2023-03-22 06:16:38 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ LABELSMOOTHING=0.1
+ SEED=24657
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ '' -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 24657 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:19776] MCW rank 3 is not bound (or bound to all available processors)
[node040:19799] MCW rank 2 is not bound (or bound to all available processors)
[node040:19777] MCW rank 1 is not bound (or bound to all available processors)
[node040:19792] MCW rank 0 is not bound (or bound to all available processors)
[node041:16144] MCW rank 5 is not bound (or bound to all available processors)
[node041:16141] MCW rank 4 is not bound (or bound to all available processors)
[node041:16143] MCW rank 7 is not bound (or bound to all available processors)
[node041:16142] MCW rank 6 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679527002881, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[18:16:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:50] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:50] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679527010866, "event_type": "POINT_IN_TIME", "key": "seed", "value": 24657, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[18:16:50] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:16:50] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679527012321, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[18:16:56] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:16:56] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:16:56] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:16:56] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:16:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679527017208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017212, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017212, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017212, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017212, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017213, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017213, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017213, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017213, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017214, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017214, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017214, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017214, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
[18:16:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679527017215, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
[18:16:57] ../src/storage/storage.cc::::MLLOG {"namespace": "", "time_ms": 1679527017215, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
196: Using Pooled (Naive) StorageManager for CPU
[18:16:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679527017215, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017215, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017216, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017216, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017216, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017216, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017217, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017217, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017217, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017217, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017217, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017218, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017218, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017218, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017218, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017219, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017219, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017219, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017219, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017220, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017220, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017220, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017220, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017221, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017221, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017221, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017221, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017222, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017222, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017222, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017222, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017222, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017223, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017223, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017223, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017223, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017224, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017224, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017224, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017224, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017225, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017225, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017225, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017225, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017226, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017226, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017226, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017226, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017227, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017227, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017227, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017227, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017228, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017228, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017228, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017228, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679527017248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,832 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7938, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,832 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8813, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,832 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19353, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,833 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15167, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,835 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11224, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,836 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1479, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,836 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4883, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:16:58,836 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33385, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679527018836, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679527018838, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679527018839, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679527106167, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679527106168, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679527106168, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679527106787, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679527106933, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679527106934, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 18:18:29,955 Node[0] Epoch[0] Batch [0-20]	Speed: 21802.38 samples/sec	accuracy=nan
2023-03-22 18:18:32,932 Node[0] Epoch[0] Batch [20-40]	Speed: 21929.76 samples/sec	accuracy=nan
2023-03-22 18:18:35,911 Node[0] Epoch[0] Batch [40-60]	Speed: 21910.07 samples/sec	accuracy=nan
2023-03-22 18:18:38,887 Node[0] Epoch[0] Batch [60-80]	Speed: 21940.14 samples/sec	accuracy=nan
2023-03-22 18:18:41,861 Node[0] Epoch[0] Batch [80-100]	Speed: 21946.84 samples/sec	accuracy=nan
2023-03-22 18:18:44,839 Node[0] Epoch[0] Batch [100-120]	Speed: 21924.75 samples/sec	accuracy=nan
2023-03-22 18:18:47,818 Node[0] Epoch[0] Batch [120-140]	Speed: 21905.88 samples/sec	accuracy=nan
2023-03-22 18:18:50,799 Node[0] Epoch[0] Batch [140-160]	Speed: 21903.06 samples/sec	accuracy=nan
2023-03-22 18:18:53,785 Node[0] Epoch[0] Batch [160-180]	Speed: 21859.08 samples/sec	accuracy=nan
2023-03-22 18:18:56,773 Node[0] Epoch[0] Batch [180-200]	Speed: 21847.70 samples/sec	accuracy=nan
2023-03-22 18:18:59,760 Node[0] Epoch[0] Batch [200-220]	Speed: 21856.28 samples/sec	accuracy=nan
2023-03-22 18:19:11,936 Node[0] Epoch[0] Batch [220-240]	Speed: 5361.23 samples/sec	accuracy=nan
2023-03-22 18:19:16,892 Node[0] Epoch[0] Batch [240-260]	Speed: 13173.92 samples/sec	accuracy=nan
2023-03-22 18:19:23,889 Node[0] Epoch[0] Batch [260-280]	Speed: 9328.82 samples/sec	accuracy=nan
2023-03-22 18:19:26,865 Node[0] Epoch[0] Batch [280-300]	Speed: 21933.84 samples/sec	accuracy=nan
2023-03-22 18:19:29,843 Node[0] Epoch[0] Batch [300-320]	Speed: 21923.51 samples/sec	accuracy=nan
2023-03-22 18:19:32,827 Node[0] Epoch[0] Batch [320-340]	Speed: 21875.20 samples/sec	accuracy=nan
2023-03-22 18:19:35,807 Node[0] Epoch[0] Batch [340-360]	Speed: 21906.25 samples/sec	accuracy=nan
2023-03-22 18:19:38,792 Node[0] Epoch[0] Batch [360-380]	Speed: 21870.01 samples/sec	accuracy=nan
2023-03-22 18:19:40,583 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:40,583 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:40,583 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:40,584 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:40,584 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527180583, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 18:19:40,584 Node[0] Epoch[0] Time cost=73.650
2023-03-22 18:19:40,584 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:40,584 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527180584, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17395.31955842944}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679527180585, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 18:19:40,585 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:19:43,723 Node[0] Epoch[1] Batch [0-20]	Speed: 21844.23 samples/sec	accuracy=nan
2023-03-22 18:19:46,709 Node[0] Epoch[1] Batch [20-40]	Speed: 21863.63 samples/sec	accuracy=nan
2023-03-22 18:19:49,696 Node[0] Epoch[1] Batch [40-60]	Speed: 21854.30 samples/sec	accuracy=nan
2023-03-22 18:19:52,687 Node[0] Epoch[1] Batch [60-80]	Speed: 21827.46 samples/sec	accuracy=nan
2023-03-22 18:19:55,674 Node[0] Epoch[1] Batch [80-100]	Speed: 21846.98 samples/sec	accuracy=nan
2023-03-22 18:19:58,666 Node[0] Epoch[1] Batch [100-120]	Speed: 21820.75 samples/sec	accuracy=nan
2023-03-22 18:20:01,667 Node[0] Epoch[1] Batch [120-140]	Speed: 21753.00 samples/sec	accuracy=nan
2023-03-22 18:20:04,659 Node[0] Epoch[1] Batch [140-160]	Speed: 21821.06 samples/sec	accuracy=nan
2023-03-22 18:20:07,648 Node[0] Epoch[1] Batch [160-180]	Speed: 21838.80 samples/sec	accuracy=nan
2023-03-22 18:20:10,639 Node[0] Epoch[1] Batch [180-200]	Speed: 21821.74 samples/sec	accuracy=nan
2023-03-22 18:20:13,633 Node[0] Epoch[1] Batch [200-220]	Speed: 21803.46 samples/sec	accuracy=nan
2023-03-22 18:20:16,630 Node[0] Epoch[1] Batch [220-240]	Speed: 21781.84 samples/sec	accuracy=nan
2023-03-22 18:20:19,623 Node[0] Epoch[1] Batch [240-260]	Speed: 21811.49 samples/sec	accuracy=nan
2023-03-22 18:20:22,614 Node[0] Epoch[1] Batch [260-280]	Speed: 21830.03 samples/sec	accuracy=nan
2023-03-22 18:20:25,608 Node[0] Epoch[1] Batch [280-300]	Speed: 21801.94 samples/sec	accuracy=nan
2023-03-22 18:20:28,600 Node[0] Epoch[1] Batch [300-320]	Speed: 21819.41 samples/sec	accuracy=nan
2023-03-22 18:20:31,591 Node[0] Epoch[1] Batch [320-340]	Speed: 21825.69 samples/sec	accuracy=nan
2023-03-22 18:20:34,582 Node[0] Epoch[1] Batch [340-360]	Speed: 21823.24 samples/sec	accuracy=nan
2023-03-22 18:20:37,573 Node[0] Epoch[1] Batch [360-380]	Speed: 21824.27 samples/sec	accuracy=nan
2023-03-22 18:20:39,364 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:39,364 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527239364, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 18:20:39,366 Node[0] Epoch[1] Time cost=58.781
:::MLLOG {"namespace": "", "time_ms": 1679527239366, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21795.77185356341}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679527239366, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 18:20:39,366 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:20:42,512 Node[0] Epoch[2] Batch [0-20]	Speed: 21787.48 samples/sec	accuracy=nan
2023-03-22 18:20:45,499 Node[0] Epoch[2] Batch [20-40]	Speed: 21853.76 samples/sec	accuracy=nan
2023-03-22 18:20:48,489 Node[0] Epoch[2] Batch [40-60]	Speed: 21827.96 samples/sec	accuracy=nan
2023-03-22 18:20:51,480 Node[0] Epoch[2] Batch [60-80]	Speed: 21827.00 samples/sec	accuracy=nan
2023-03-22 18:20:54,476 Node[0] Epoch[2] Batch [80-100]	Speed: 21792.28 samples/sec	accuracy=nan
2023-03-22 18:20:57,466 Node[0] Epoch[2] Batch [100-120]	Speed: 21832.79 samples/sec	accuracy=nan
2023-03-22 18:21:00,458 Node[0] Epoch[2] Batch [120-140]	Speed: 21816.05 samples/sec	accuracy=nan
2023-03-22 18:21:03,449 Node[0] Epoch[2] Batch [140-160]	Speed: 21829.91 samples/sec	accuracy=nan
2023-03-22 18:21:06,448 Node[0] Epoch[2] Batch [160-180]	Speed: 21764.32 samples/sec	accuracy=nan
2023-03-22 18:21:09,441 Node[0] Epoch[2] Batch [180-200]	Speed: 21812.06 samples/sec	accuracy=nan
2023-03-22 18:21:12,435 Node[0] Epoch[2] Batch [200-220]	Speed: 21801.18 samples/sec	accuracy=nan
2023-03-22 18:21:15,429 Node[0] Epoch[2] Batch [220-240]	Speed: 21807.02 samples/sec	accuracy=nan
2023-03-22 18:21:18,418 Node[0] Epoch[2] Batch [240-260]	Speed: 21837.11 samples/sec	accuracy=nan
2023-03-22 18:21:21,411 Node[0] Epoch[2] Batch [260-280]	Speed: 21814.12 samples/sec	accuracy=nan
2023-03-22 18:21:24,407 Node[0] Epoch[2] Batch [280-300]	Speed: 21784.25 samples/sec	accuracy=nan
2023-03-22 18:21:27,404 Node[0] Epoch[2] Batch [300-320]	Speed: 21780.65 samples/sec	accuracy=nan
2023-03-22 18:21:30,395 Node[0] Epoch[2] Batch [320-340]	Speed: 21825.73 samples/sec	accuracy=nan
2023-03-22 18:21:33,386 Node[0] Epoch[2] Batch [340-360]	Speed: 21826.62 samples/sec	accuracy=nan
2023-03-22 18:21:36,379 Node[0] Epoch[2] Batch [360-380]	Speed: 21815.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679527298021, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 18:21:38,022 Node[0] Epoch[2] Time cost=58.656
:::MLLOG {"namespace": "", "time_ms": 1679527298022, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21842.166369209495}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679527298167, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 18:21:38,167 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:38,167 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:39,529 Node[0] Epoch[2] Validation-accuracy=0.306080
2023-03-22 18:21:39,530 Node[0] Epoch[2] Validation-correct-count=1913.000000
2023-03-22 18:21:39,530 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-22 18:21:39,599 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:39,599 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527299598, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 18:21:39,598 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:39,598 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:39,599 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:39,599 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527299599, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.30502, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679527299599, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 18:21:39,599 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527299599, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679527299599, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 18:21:39,599 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:21:42,620 Node[0] Epoch[3] Batch [0-20]	Speed: 21681.36 samples/sec	accuracy=nan
2023-03-22 18:21:45,609 Node[0] Epoch[3] Batch [20-40]	Speed: 21841.06 samples/sec	accuracy=nan
2023-03-22 18:21:48,595 Node[0] Epoch[3] Batch [40-60]	Speed: 21861.21 samples/sec	accuracy=nan
2023-03-22 18:21:51,593 Node[0] Epoch[3] Batch [60-80]	Speed: 21779.32 samples/sec	accuracy=nan
2023-03-22 18:21:54,583 Node[0] Epoch[3] Batch [80-100]	Speed: 21828.33 samples/sec	accuracy=nan
2023-03-22 18:21:57,576 Node[0] Epoch[3] Batch [100-120]	Speed: 21811.51 samples/sec	accuracy=nan
2023-03-22 18:22:00,566 Node[0] Epoch[3] Batch [120-140]	Speed: 21831.98 samples/sec	accuracy=nan
2023-03-22 18:22:03,558 Node[0] Epoch[3] Batch [140-160]	Speed: 21821.74 samples/sec	accuracy=nan
2023-03-22 18:22:06,549 Node[0] Epoch[3] Batch [160-180]	Speed: 21824.07 samples/sec	accuracy=nan
2023-03-22 18:22:09,538 Node[0] Epoch[3] Batch [180-200]	Speed: 21837.62 samples/sec	accuracy=nan
2023-03-22 18:22:12,531 Node[0] Epoch[3] Batch [200-220]	Speed: 21811.20 samples/sec	accuracy=nan
2023-03-22 18:22:15,523 Node[0] Epoch[3] Batch [220-240]	Speed: 21820.22 samples/sec	accuracy=nan
2023-03-22 18:22:18,509 Node[0] Epoch[3] Batch [240-260]	Speed: 21858.77 samples/sec	accuracy=nan
2023-03-22 18:22:21,502 Node[0] Epoch[3] Batch [260-280]	Speed: 21815.40 samples/sec	accuracy=nan
2023-03-22 18:22:24,493 Node[0] Epoch[3] Batch [280-300]	Speed: 21825.89 samples/sec	accuracy=nan
2023-03-22 18:22:27,485 Node[0] Epoch[3] Batch [300-320]	Speed: 21817.42 samples/sec	accuracy=nan
2023-03-22 18:22:30,476 Node[0] Epoch[3] Batch [320-340]	Speed: 21826.81 samples/sec	accuracy=nan
2023-03-22 18:22:33,467 Node[0] Epoch[3] Batch [340-360]	Speed: 21821.41 samples/sec	accuracy=nan
2023-03-22 18:22:36,456 Node[0] Epoch[3] Batch [360-380]	Speed: 21844.63 samples/sec	accuracy=nan
2023-03-22 18:22:38,249 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,249 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,250 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,250 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,250 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,250 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:38,251 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527358250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 18:22:38,251 Node[0] Epoch[3] Time cost=58.652
:::MLLOG {"namespace": "", "time_ms": 1679527358251, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21843.703296772448}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679527358251, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 18:22:38,252 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:22:41,394 Node[0] Epoch[4] Batch [0-20]	Speed: 21810.85 samples/sec	accuracy=nan
2023-03-22 18:22:44,390 Node[0] Epoch[4] Batch [20-40]	Speed: 21788.54 samples/sec	accuracy=nan
2023-03-22 18:22:47,378 Node[0] Epoch[4] Batch [40-60]	Speed: 21846.19 samples/sec	accuracy=nan
2023-03-22 18:22:50,371 Node[0] Epoch[4] Batch [60-80]	Speed: 21811.44 samples/sec	accuracy=nan
2023-03-22 18:22:53,369 Node[0] Epoch[4] Batch [80-100]	Speed: 21771.20 samples/sec	accuracy=nan
2023-03-22 18:22:56,359 Node[0] Epoch[4] Batch [100-120]	Speed: 21833.48 samples/sec	accuracy=nan
2023-03-22 18:22:59,349 Node[0] Epoch[4] Batch [120-140]	Speed: 21834.37 samples/sec	accuracy=nan
2023-03-22 18:23:02,348 Node[0] Epoch[4] Batch [140-160]	Speed: 21767.62 samples/sec	accuracy=nan
2023-03-22 18:23:05,347 Node[0] Epoch[4] Batch [160-180]	Speed: 21770.91 samples/sec	accuracy=nan
2023-03-22 18:23:08,336 Node[0] Epoch[4] Batch [180-200]	Speed: 21835.87 samples/sec	accuracy=nan
2023-03-22 18:23:11,341 Node[0] Epoch[4] Batch [200-220]	Speed: 21722.11 samples/sec	accuracy=nan
2023-03-22 18:23:14,335 Node[0] Epoch[4] Batch [220-240]	Speed: 21803.02 samples/sec	accuracy=nan
2023-03-22 18:23:17,325 Node[0] Epoch[4] Batch [240-260]	Speed: 21834.60 samples/sec	accuracy=nan
2023-03-22 18:23:20,315 Node[0] Epoch[4] Batch [260-280]	Speed: 21831.15 samples/sec	accuracy=nan
2023-03-22 18:23:23,305 Node[0] Epoch[4] Batch [280-300]	Speed: 21834.51 samples/sec	accuracy=nan
2023-03-22 18:23:26,300 Node[0] Epoch[4] Batch [300-320]	Speed: 21794.02 samples/sec	accuracy=nan
2023-03-22 18:23:29,289 Node[0] Epoch[4] Batch [320-340]	Speed: 21844.23 samples/sec	accuracy=nan
2023-03-22 18:23:32,281 Node[0] Epoch[4] Batch [340-360]	Speed: 21816.70 samples/sec	accuracy=nan
2023-03-22 18:23:35,283 Node[0] Epoch[4] Batch [360-380]	Speed: 21747.15 samples/sec	accuracy=nan
2023-03-22 18:23:36,931 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:36,931 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:36,932 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:36,932 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:36,932 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:36,932 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527416932, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 18:23:36,932 Node[0] Epoch[4] Time cost=58.681
:::MLLOG {"namespace": "", "time_ms": 1679527416932, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21832.924949264874}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-22 18:23:36,932 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527416932, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 18:23:36,933 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:23:40,076 Node[0] Epoch[5] Batch [0-20]	Speed: 21838.52 samples/sec	accuracy=nan
2023-03-22 18:23:43,069 Node[0] Epoch[5] Batch [20-40]	Speed: 21809.96 samples/sec	accuracy=nan
2023-03-22 18:23:46,065 Node[0] Epoch[5] Batch [40-60]	Speed: 21789.59 samples/sec	accuracy=nan
2023-03-22 18:23:49,069 Node[0] Epoch[5] Batch [60-80]	Speed: 21728.34 samples/sec	accuracy=nan
2023-03-22 18:23:52,063 Node[0] Epoch[5] Batch [80-100]	Speed: 21803.33 samples/sec	accuracy=nan
2023-03-22 18:23:55,057 Node[0] Epoch[5] Batch [100-120]	Speed: 21805.90 samples/sec	accuracy=nan
2023-03-22 18:23:58,046 Node[0] Epoch[5] Batch [120-140]	Speed: 21836.68 samples/sec	accuracy=nan
2023-03-22 18:24:01,050 Node[0] Epoch[5] Batch [140-160]	Speed: 21735.67 samples/sec	accuracy=nan
2023-03-22 18:24:04,050 Node[0] Epoch[5] Batch [160-180]	Speed: 21759.39 samples/sec	accuracy=nan
2023-03-22 18:24:07,041 Node[0] Epoch[5] Batch [180-200]	Speed: 21826.27 samples/sec	accuracy=nan
2023-03-22 18:24:10,033 Node[0] Epoch[5] Batch [200-220]	Speed: 21814.94 samples/sec	accuracy=nan
2023-03-22 18:24:13,026 Node[0] Epoch[5] Batch [220-240]	Speed: 21809.36 samples/sec	accuracy=nan
2023-03-22 18:24:16,016 Node[0] Epoch[5] Batch [240-260]	Speed: 21831.57 samples/sec	accuracy=nan
2023-03-22 18:24:19,009 Node[0] Epoch[5] Batch [260-280]	Speed: 21811.53 samples/sec	accuracy=nan
2023-03-22 18:24:22,007 Node[0] Epoch[5] Batch [280-300]	Speed: 21775.77 samples/sec	accuracy=nan
2023-03-22 18:24:25,001 Node[0] Epoch[5] Batch [300-320]	Speed: 21802.48 samples/sec	accuracy=nan
2023-03-22 18:24:27,991 Node[0] Epoch[5] Batch [320-340]	Speed: 21831.48 samples/sec	accuracy=nan
2023-03-22 18:24:30,982 Node[0] Epoch[5] Batch [340-360]	Speed: 21825.60 samples/sec	accuracy=nan
2023-03-22 18:24:33,974 Node[0] Epoch[5] Batch [360-380]	Speed: 21824.57 samples/sec	accuracy=nan
2023-03-22 18:24:35,765 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:35,766 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527475766, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 18:24:35,767 Node[0] Epoch[5] Time cost=58.834
:::MLLOG {"namespace": "", "time_ms": 1679527475767, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21775.80973402389}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679527475767, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 18:24:35,767 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:24:38,914 Node[0] Epoch[6] Batch [0-20]	Speed: 21790.32 samples/sec	accuracy=nan
2023-03-22 18:24:41,909 Node[0] Epoch[6] Batch [20-40]	Speed: 21793.08 samples/sec	accuracy=nan
2023-03-22 18:24:44,904 Node[0] Epoch[6] Batch [40-60]	Speed: 21795.51 samples/sec	accuracy=nan
2023-03-22 18:24:47,898 Node[0] Epoch[6] Batch [60-80]	Speed: 21806.28 samples/sec	accuracy=nan
2023-03-22 18:24:50,889 Node[0] Epoch[6] Batch [80-100]	Speed: 21823.97 samples/sec	accuracy=nan
2023-03-22 18:24:53,877 Node[0] Epoch[6] Batch [100-120]	Speed: 21848.38 samples/sec	accuracy=nan
2023-03-22 18:24:56,881 Node[0] Epoch[6] Batch [120-140]	Speed: 21731.24 samples/sec	accuracy=nan
2023-03-22 18:24:59,876 Node[0] Epoch[6] Batch [140-160]	Speed: 21798.53 samples/sec	accuracy=nan
2023-03-22 18:25:02,879 Node[0] Epoch[6] Batch [160-180]	Speed: 21739.71 samples/sec	accuracy=nan
2023-03-22 18:25:05,872 Node[0] Epoch[6] Batch [180-200]	Speed: 21810.98 samples/sec	accuracy=nan
2023-03-22 18:25:08,860 Node[0] Epoch[6] Batch [200-220]	Speed: 21847.05 samples/sec	accuracy=nan
2023-03-22 18:25:11,849 Node[0] Epoch[6] Batch [220-240]	Speed: 21839.99 samples/sec	accuracy=nan
2023-03-22 18:25:14,834 Node[0] Epoch[6] Batch [240-260]	Speed: 21866.27 samples/sec	accuracy=nan
2023-03-22 18:25:17,827 Node[0] Epoch[6] Batch [260-280]	Speed: 21808.02 samples/sec	accuracy=nan
2023-03-22 18:25:20,823 Node[0] Epoch[6] Batch [280-300]	Speed: 21791.63 samples/sec	accuracy=nan
2023-03-22 18:25:23,811 Node[0] Epoch[6] Batch [300-320]	Speed: 21847.78 samples/sec	accuracy=nan
2023-03-22 18:25:26,795 Node[0] Epoch[6] Batch [320-340]	Speed: 21875.76 samples/sec	accuracy=nan
2023-03-22 18:25:29,783 Node[0] Epoch[6] Batch [340-360]	Speed: 21850.68 samples/sec	accuracy=nan
2023-03-22 18:25:32,767 Node[0] Epoch[6] Batch [360-380]	Speed: 21874.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679527534409, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 18:25:34,409 Node[0] Epoch[6] Time cost=58.642
:::MLLOG {"namespace": "", "time_ms": 1679527534409, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21847.344662682015}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679527534554, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 18:25:35,959 Node[0] Epoch[6] Validation-accuracy=0.412000
2023-03-22 18:25:35,960 Node[0] Epoch[6] Validation-correct-count=2575.000000
2023-03-22 18:25:35,960 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-22 18:25:36,106 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:36,106 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527536106, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679527536107, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.40812, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679527536107, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679527536107, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679527536107, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 18:25:36,107 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:25:39,126 Node[0] Epoch[7] Batch [0-20]	Speed: 21759.47 samples/sec	accuracy=nan
2023-03-22 18:25:42,116 Node[0] Epoch[7] Batch [20-40]	Speed: 21829.62 samples/sec	accuracy=nan
2023-03-22 18:25:45,110 Node[0] Epoch[7] Batch [40-60]	Speed: 21802.76 samples/sec	accuracy=nan
2023-03-22 18:25:48,103 Node[0] Epoch[7] Batch [60-80]	Speed: 21811.60 samples/sec	accuracy=nan
2023-03-22 18:25:51,093 Node[0] Epoch[7] Batch [80-100]	Speed: 21834.90 samples/sec	accuracy=nan
2023-03-22 18:25:54,081 Node[0] Epoch[7] Batch [100-120]	Speed: 21846.86 samples/sec	accuracy=nan
2023-03-22 18:25:57,071 Node[0] Epoch[7] Batch [120-140]	Speed: 21831.30 samples/sec	accuracy=nan
2023-03-22 18:26:00,065 Node[0] Epoch[7] Batch [140-160]	Speed: 21804.65 samples/sec	accuracy=nan
2023-03-22 18:26:03,055 Node[0] Epoch[7] Batch [160-180]	Speed: 21831.93 samples/sec	accuracy=nan
2023-03-22 18:26:06,047 Node[0] Epoch[7] Batch [180-200]	Speed: 21821.32 samples/sec	accuracy=nan
2023-03-22 18:26:09,032 Node[0] Epoch[7] Batch [200-220]	Speed: 21867.52 samples/sec	accuracy=nan
2023-03-22 18:26:12,021 Node[0] Epoch[7] Batch [220-240]	Speed: 21837.19 samples/sec	accuracy=nan
2023-03-22 18:26:15,008 Node[0] Epoch[7] Batch [240-260]	Speed: 21858.74 samples/sec	accuracy=nan
2023-03-22 18:26:17,996 Node[0] Epoch[7] Batch [260-280]	Speed: 21845.95 samples/sec	accuracy=nan
2023-03-22 18:26:20,979 Node[0] Epoch[7] Batch [280-300]	Speed: 21885.36 samples/sec	accuracy=nan
2023-03-22 18:26:23,970 Node[0] Epoch[7] Batch [300-320]	Speed: 21823.67 samples/sec	accuracy=nan
2023-03-22 18:26:26,954 Node[0] Epoch[7] Batch [320-340]	Speed: 21878.22 samples/sec	accuracy=nan
2023-03-22 18:26:29,943 Node[0] Epoch[7] Batch [340-360]	Speed: 21840.85 samples/sec	accuracy=nan
2023-03-22 18:26:32,930 Node[0] Epoch[7] Batch [360-380]	Speed: 21852.58 samples/sec	accuracy=nan
2023-03-22 18:26:34,724 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:34,724 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:34,724 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:34,724 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527594724, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 18:26:34,724 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:34,724 Node[0] Epoch[7] Time cost=58.617
2023-03-22 18:26:34,724 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527594725, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21856.530910729904}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679527594725, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 18:26:34,725 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:34,725 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:26:37,871 Node[0] Epoch[8] Batch [0-20]	Speed: 21816.72 samples/sec	accuracy=nan
2023-03-22 18:26:40,870 Node[0] Epoch[8] Batch [20-40]	Speed: 21770.09 samples/sec	accuracy=nan
2023-03-22 18:26:43,871 Node[0] Epoch[8] Batch [40-60]	Speed: 21752.27 samples/sec	accuracy=nan
2023-03-22 18:26:46,870 Node[0] Epoch[8] Batch [60-80]	Speed: 21767.86 samples/sec	accuracy=nan
2023-03-22 18:26:49,860 Node[0] Epoch[8] Batch [80-100]	Speed: 21827.00 samples/sec	accuracy=nan
2023-03-22 18:26:52,854 Node[0] Epoch[8] Batch [100-120]	Speed: 21809.83 samples/sec	accuracy=nan
2023-03-22 18:26:55,844 Node[0] Epoch[8] Batch [120-140]	Speed: 21826.05 samples/sec	accuracy=nan
2023-03-22 18:26:58,833 Node[0] Epoch[8] Batch [140-160]	Speed: 21843.76 samples/sec	accuracy=nan
2023-03-22 18:27:01,827 Node[0] Epoch[8] Batch [160-180]	Speed: 21801.50 samples/sec	accuracy=nan
2023-03-22 18:27:04,816 Node[0] Epoch[8] Batch [180-200]	Speed: 21838.16 samples/sec	accuracy=nan
2023-03-22 18:27:07,804 Node[0] Epoch[8] Batch [200-220]	Speed: 21850.92 samples/sec	accuracy=nan
2023-03-22 18:27:10,793 Node[0] Epoch[8] Batch [220-240]	Speed: 21842.18 samples/sec	accuracy=nan
2023-03-22 18:27:13,783 Node[0] Epoch[8] Batch [240-260]	Speed: 21833.88 samples/sec	accuracy=nan
2023-03-22 18:27:16,772 Node[0] Epoch[8] Batch [260-280]	Speed: 21838.88 samples/sec	accuracy=nan
2023-03-22 18:27:19,759 Node[0] Epoch[8] Batch [280-300]	Speed: 21849.70 samples/sec	accuracy=nan
2023-03-22 18:27:22,749 Node[0] Epoch[8] Batch [300-320]	Speed: 21835.36 samples/sec	accuracy=nan
2023-03-22 18:27:25,737 Node[0] Epoch[8] Batch [320-340]	Speed: 21849.76 samples/sec	accuracy=nan
2023-03-22 18:27:28,735 Node[0] Epoch[8] Batch [340-360]	Speed: 21774.78 samples/sec	accuracy=nan
2023-03-22 18:27:31,729 Node[0] Epoch[8] Batch [360-380]	Speed: 21798.29 samples/sec	accuracy=nan
2023-03-22 18:27:33,371 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:33,371 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527653371, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 18:27:33,372 Node[0] Epoch[8] Time cost=58.647
:::MLLOG {"namespace": "", "time_ms": 1679527653372, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21845.348785922524}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679527653373, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 18:27:33,373 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:27:36,513 Node[0] Epoch[9] Batch [0-20]	Speed: 21842.75 samples/sec	accuracy=nan
2023-03-22 18:27:39,505 Node[0] Epoch[9] Batch [20-40]	Speed: 21819.28 samples/sec	accuracy=nan
2023-03-22 18:27:42,494 Node[0] Epoch[9] Batch [40-60]	Speed: 21838.64 samples/sec	accuracy=nan
2023-03-22 18:27:45,486 Node[0] Epoch[9] Batch [60-80]	Speed: 21816.82 samples/sec	accuracy=nan
2023-03-22 18:27:48,476 Node[0] Epoch[9] Batch [80-100]	Speed: 21832.56 samples/sec	accuracy=nan
2023-03-22 18:27:51,468 Node[0] Epoch[9] Batch [100-120]	Speed: 21823.82 samples/sec	accuracy=nan
2023-03-22 18:27:54,456 Node[0] Epoch[9] Batch [120-140]	Speed: 21847.85 samples/sec	accuracy=nan
2023-03-22 18:27:57,446 Node[0] Epoch[9] Batch [140-160]	Speed: 21828.98 samples/sec	accuracy=nan
2023-03-22 18:28:00,440 Node[0] Epoch[9] Batch [160-180]	Speed: 21807.37 samples/sec	accuracy=nan
2023-03-22 18:28:03,430 Node[0] Epoch[9] Batch [180-200]	Speed: 21829.44 samples/sec	accuracy=nan
2023-03-22 18:28:06,422 Node[0] Epoch[9] Batch [200-220]	Speed: 21822.44 samples/sec	accuracy=nan
2023-03-22 18:28:09,412 Node[0] Epoch[9] Batch [220-240]	Speed: 21826.39 samples/sec	accuracy=nan
2023-03-22 18:28:12,409 Node[0] Epoch[9] Batch [240-260]	Speed: 21782.98 samples/sec	accuracy=nan
2023-03-22 18:28:15,401 Node[0] Epoch[9] Batch [260-280]	Speed: 21821.37 samples/sec	accuracy=nan
2023-03-22 18:28:18,392 Node[0] Epoch[9] Batch [280-300]	Speed: 21821.30 samples/sec	accuracy=nan
2023-03-22 18:28:21,389 Node[0] Epoch[9] Batch [300-320]	Speed: 21782.44 samples/sec	accuracy=nan
2023-03-22 18:28:24,378 Node[0] Epoch[9] Batch [320-340]	Speed: 21839.02 samples/sec	accuracy=nan
2023-03-22 18:28:27,370 Node[0] Epoch[9] Batch [340-360]	Speed: 21821.64 samples/sec	accuracy=nan
2023-03-22 18:28:30,359 Node[0] Epoch[9] Batch [360-380]	Speed: 21842.82 samples/sec	accuracy=nan
2023-03-22 18:28:32,150 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:28:32,150 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:28:32,150 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:28:32,150 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527712150, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 18:28:32,150 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:28:32,151 Node[0] Epoch[9] Time cost=58.778
2023-03-22 18:28:32,151 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527712151, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21796.693342142433}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-22 18:28:32,151 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527712151, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 18:28:32,151 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:28:35,290 Node[0] Epoch[10] Batch [0-20]	Speed: 21841.25 samples/sec	accuracy=nan
2023-03-22 18:28:38,279 Node[0] Epoch[10] Batch [20-40]	Speed: 21842.69 samples/sec	accuracy=nan
2023-03-22 18:28:41,272 Node[0] Epoch[10] Batch [40-60]	Speed: 21806.59 samples/sec	accuracy=nan
2023-03-22 18:28:44,262 Node[0] Epoch[10] Batch [60-80]	Speed: 21833.05 samples/sec	accuracy=nan
2023-03-22 18:28:47,256 Node[0] Epoch[10] Batch [80-100]	Speed: 21809.13 samples/sec	accuracy=nan
2023-03-22 18:28:50,246 Node[0] Epoch[10] Batch [100-120]	Speed: 21833.06 samples/sec	accuracy=nan
2023-03-22 18:28:53,235 Node[0] Epoch[10] Batch [120-140]	Speed: 21836.45 samples/sec	accuracy=nan
2023-03-22 18:28:56,225 Node[0] Epoch[10] Batch [140-160]	Speed: 21834.67 samples/sec	accuracy=nan
2023-03-22 18:28:59,216 Node[0] Epoch[10] Batch [160-180]	Speed: 21823.52 samples/sec	accuracy=nan
2023-03-22 18:29:02,219 Node[0] Epoch[10] Batch [180-200]	Speed: 21740.61 samples/sec	accuracy=nan
2023-03-22 18:29:05,215 Node[0] Epoch[10] Batch [200-220]	Speed: 21786.03 samples/sec	accuracy=nan
2023-03-22 18:29:08,210 Node[0] Epoch[10] Batch [220-240]	Speed: 21800.72 samples/sec	accuracy=nan
2023-03-22 18:29:11,201 Node[0] Epoch[10] Batch [240-260]	Speed: 21823.31 samples/sec	accuracy=nan
2023-03-22 18:29:14,195 Node[0] Epoch[10] Batch [260-280]	Speed: 21800.27 samples/sec	accuracy=nan
2023-03-22 18:29:17,189 Node[0] Epoch[10] Batch [280-300]	Speed: 21806.26 samples/sec	accuracy=nan
2023-03-22 18:29:20,182 Node[0] Epoch[10] Batch [300-320]	Speed: 21812.26 samples/sec	accuracy=nan
2023-03-22 18:29:23,174 Node[0] Epoch[10] Batch [320-340]	Speed: 21817.42 samples/sec	accuracy=nan
2023-03-22 18:29:26,165 Node[0] Epoch[10] Batch [340-360]	Speed: 21824.48 samples/sec	accuracy=nan
2023-03-22 18:29:29,160 Node[0] Epoch[10] Batch [360-380]	Speed: 21793.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679527770805, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 18:29:30,806 Node[0] Epoch[10] Time cost=58.655
:::MLLOG {"namespace": "", "time_ms": 1679527770806, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21842.424905959073}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679527770950, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 18:29:32,456 Node[0] Epoch[10] Validation-accuracy=0.506400
2023-03-22 18:29:32,457 Node[0] Epoch[10] Validation-correct-count=3165.000000
2023-03-22 18:29:32,457 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679527772515, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679527772516, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.50868, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 18:29:32,516 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:32,516 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527772516, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679527772516, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 18:29:32,516 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:32,516 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:32,516 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:32,516 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:32,516 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527772516, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 18:29:32,516 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:29:35,536 Node[0] Epoch[11] Batch [0-20]	Speed: 21701.84 samples/sec	accuracy=nan
2023-03-22 18:29:38,528 Node[0] Epoch[11] Batch [20-40]	Speed: 21816.73 samples/sec	accuracy=nan
2023-03-22 18:29:41,517 Node[0] Epoch[11] Batch [40-60]	Speed: 21837.74 samples/sec	accuracy=nan
2023-03-22 18:29:44,509 Node[0] Epoch[11] Batch [60-80]	Speed: 21819.87 samples/sec	accuracy=nan
2023-03-22 18:29:47,500 Node[0] Epoch[11] Batch [80-100]	Speed: 21826.35 samples/sec	accuracy=nan
2023-03-22 18:29:50,492 Node[0] Epoch[11] Batch [100-120]	Speed: 21814.26 samples/sec	accuracy=nan
2023-03-22 18:29:53,488 Node[0] Epoch[11] Batch [120-140]	Speed: 21791.52 samples/sec	accuracy=nan
2023-03-22 18:29:56,482 Node[0] Epoch[11] Batch [140-160]	Speed: 21801.36 samples/sec	accuracy=nan
2023-03-22 18:29:59,476 Node[0] Epoch[11] Batch [160-180]	Speed: 21804.82 samples/sec	accuracy=nan
2023-03-22 18:30:02,469 Node[0] Epoch[11] Batch [180-200]	Speed: 21812.96 samples/sec	accuracy=nan
2023-03-22 18:30:05,467 Node[0] Epoch[11] Batch [200-220]	Speed: 21772.43 samples/sec	accuracy=nan
2023-03-22 18:30:08,458 Node[0] Epoch[11] Batch [220-240]	Speed: 21826.65 samples/sec	accuracy=nan
2023-03-22 18:30:11,457 Node[0] Epoch[11] Batch [240-260]	Speed: 21763.56 samples/sec	accuracy=nan
2023-03-22 18:30:14,449 Node[0] Epoch[11] Batch [260-280]	Speed: 21820.26 samples/sec	accuracy=nan
2023-03-22 18:30:17,441 Node[0] Epoch[11] Batch [280-300]	Speed: 21820.79 samples/sec	accuracy=nan
2023-03-22 18:30:20,429 Node[0] Epoch[11] Batch [300-320]	Speed: 21843.92 samples/sec	accuracy=nan
2023-03-22 18:30:23,418 Node[0] Epoch[11] Batch [320-340]	Speed: 21840.11 samples/sec	accuracy=nan
2023-03-22 18:30:26,409 Node[0] Epoch[11] Batch [340-360]	Speed: 21828.85 samples/sec	accuracy=nan
2023-03-22 18:30:29,400 Node[0] Epoch[11] Batch [360-380]	Speed: 21824.99 samples/sec	accuracy=nan
2023-03-22 18:30:31,193 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:31,193 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527831193, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 18:30:31,194 Node[0] Epoch[11] Time cost=58.678
:::MLLOG {"namespace": "", "time_ms": 1679527831195, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21833.73443121692}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679527831195, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 18:30:31,195 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:30:34,335 Node[0] Epoch[12] Batch [0-20]	Speed: 21821.71 samples/sec	accuracy=nan
2023-03-22 18:30:37,325 Node[0] Epoch[12] Batch [20-40]	Speed: 21829.85 samples/sec	accuracy=nan
2023-03-22 18:30:40,314 Node[0] Epoch[12] Batch [40-60]	Speed: 21845.85 samples/sec	accuracy=nan
2023-03-22 18:30:43,307 Node[0] Epoch[12] Batch [60-80]	Speed: 21808.68 samples/sec	accuracy=nan
2023-03-22 18:30:46,299 Node[0] Epoch[12] Batch [80-100]	Speed: 21820.68 samples/sec	accuracy=nan
2023-03-22 18:30:49,292 Node[0] Epoch[12] Batch [100-120]	Speed: 21807.15 samples/sec	accuracy=nan
2023-03-22 18:30:52,283 Node[0] Epoch[12] Batch [120-140]	Speed: 21826.44 samples/sec	accuracy=nan
2023-03-22 18:30:55,273 Node[0] Epoch[12] Batch [140-160]	Speed: 21833.16 samples/sec	accuracy=nan
2023-03-22 18:30:58,264 Node[0] Epoch[12] Batch [160-180]	Speed: 21825.97 samples/sec	accuracy=nan
2023-03-22 18:31:01,252 Node[0] Epoch[12] Batch [180-200]	Speed: 21846.14 samples/sec	accuracy=nan
2023-03-22 18:31:04,241 Node[0] Epoch[12] Batch [200-220]	Speed: 21836.74 samples/sec	accuracy=nan
2023-03-22 18:31:07,233 Node[0] Epoch[12] Batch [220-240]	Speed: 21818.70 samples/sec	accuracy=nan
2023-03-22 18:31:10,233 Node[0] Epoch[12] Batch [240-260]	Speed: 21764.71 samples/sec	accuracy=nan
2023-03-22 18:31:13,223 Node[0] Epoch[12] Batch [260-280]	Speed: 21834.13 samples/sec	accuracy=nan
2023-03-22 18:31:16,212 Node[0] Epoch[12] Batch [280-300]	Speed: 21834.23 samples/sec	accuracy=nan
2023-03-22 18:31:19,201 Node[0] Epoch[12] Batch [300-320]	Speed: 21845.74 samples/sec	accuracy=nan
2023-03-22 18:31:22,188 Node[0] Epoch[12] Batch [320-340]	Speed: 21854.18 samples/sec	accuracy=nan
2023-03-22 18:31:25,180 Node[0] Epoch[12] Batch [340-360]	Speed: 21815.54 samples/sec	accuracy=nan
2023-03-22 18:31:28,178 Node[0] Epoch[12] Batch [360-380]	Speed: 21774.60 samples/sec	accuracy=nan
2023-03-22 18:31:29,820 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:29,820 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:29,820 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:29,820 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527889820, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 18:31:29,820 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:29,820 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:29,820 Node[0] Epoch[12] Time cost=58.625
:::MLLOG {"namespace": "", "time_ms": 1679527889821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21853.437752673075}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 18:31:29,820 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527889821, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 18:31:29,821 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:31:32,962 Node[0] Epoch[13] Batch [0-20]	Speed: 21850.80 samples/sec	accuracy=nan
2023-03-22 18:31:35,951 Node[0] Epoch[13] Batch [20-40]	Speed: 21843.75 samples/sec	accuracy=nan
2023-03-22 18:31:38,940 Node[0] Epoch[13] Batch [40-60]	Speed: 21839.57 samples/sec	accuracy=nan
2023-03-22 18:31:41,934 Node[0] Epoch[13] Batch [60-80]	Speed: 21799.44 samples/sec	accuracy=nan
2023-03-22 18:31:44,925 Node[0] Epoch[13] Batch [80-100]	Speed: 21828.93 samples/sec	accuracy=nan
2023-03-22 18:31:47,912 Node[0] Epoch[13] Batch [100-120]	Speed: 21854.00 samples/sec	accuracy=nan
2023-03-22 18:31:50,901 Node[0] Epoch[13] Batch [120-140]	Speed: 21837.74 samples/sec	accuracy=nan
2023-03-22 18:31:53,890 Node[0] Epoch[13] Batch [140-160]	Speed: 21842.68 samples/sec	accuracy=nan
2023-03-22 18:31:56,882 Node[0] Epoch[13] Batch [160-180]	Speed: 21819.80 samples/sec	accuracy=nan
2023-03-22 18:31:59,873 Node[0] Epoch[13] Batch [180-200]	Speed: 21826.58 samples/sec	accuracy=nan
2023-03-22 18:32:02,863 Node[0] Epoch[13] Batch [200-220]	Speed: 21830.77 samples/sec	accuracy=nan
2023-03-22 18:32:05,855 Node[0] Epoch[13] Batch [220-240]	Speed: 21816.37 samples/sec	accuracy=nan
2023-03-22 18:32:08,852 Node[0] Epoch[13] Batch [240-260]	Speed: 21778.03 samples/sec	accuracy=nan
2023-03-22 18:32:11,847 Node[0] Epoch[13] Batch [260-280]	Speed: 21800.23 samples/sec	accuracy=nan
2023-03-22 18:32:14,835 Node[0] Epoch[13] Batch [280-300]	Speed: 21848.12 samples/sec	accuracy=nan
2023-03-22 18:32:17,826 Node[0] Epoch[13] Batch [300-320]	Speed: 21827.41 samples/sec	accuracy=nan
2023-03-22 18:32:20,818 Node[0] Epoch[13] Batch [320-340]	Speed: 21815.17 samples/sec	accuracy=nan
2023-03-22 18:32:23,816 Node[0] Epoch[13] Batch [340-360]	Speed: 21773.01 samples/sec	accuracy=nan
2023-03-22 18:32:26,810 Node[0] Epoch[13] Batch [360-380]	Speed: 21803.27 samples/sec	accuracy=nan
2023-03-22 18:32:28,601 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,601 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,601 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,601 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,601 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,602 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:28,602 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679527948602, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 18:32:28,603 Node[0] Epoch[13] Time cost=58.782
:::MLLOG {"namespace": "", "time_ms": 1679527948603, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21795.272286024017}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679527948603, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 18:32:28,603 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:32:31,750 Node[0] Epoch[14] Batch [0-20]	Speed: 21791.56 samples/sec	accuracy=nan
2023-03-22 18:32:34,745 Node[0] Epoch[14] Batch [20-40]	Speed: 21794.53 samples/sec	accuracy=nan
2023-03-22 18:32:37,741 Node[0] Epoch[14] Batch [40-60]	Speed: 21789.52 samples/sec	accuracy=nan
2023-03-22 18:32:40,735 Node[0] Epoch[14] Batch [60-80]	Speed: 21802.18 samples/sec	accuracy=nan
2023-03-22 18:32:43,732 Node[0] Epoch[14] Batch [80-100]	Speed: 21781.25 samples/sec	accuracy=nan
2023-03-22 18:32:46,722 Node[0] Epoch[14] Batch [100-120]	Speed: 21835.06 samples/sec	accuracy=nan
2023-03-22 18:32:49,715 Node[0] Epoch[14] Batch [120-140]	Speed: 21809.83 samples/sec	accuracy=nan
2023-03-22 18:32:52,704 Node[0] Epoch[14] Batch [140-160]	Speed: 21840.54 samples/sec	accuracy=nan
2023-03-22 18:32:55,700 Node[0] Epoch[14] Batch [160-180]	Speed: 21790.70 samples/sec	accuracy=nan
2023-03-22 18:32:58,699 Node[0] Epoch[14] Batch [180-200]	Speed: 21768.44 samples/sec	accuracy=nan
2023-03-22 18:33:01,686 Node[0] Epoch[14] Batch [200-220]	Speed: 21849.87 samples/sec	accuracy=nan
2023-03-22 18:33:04,682 Node[0] Epoch[14] Batch [220-240]	Speed: 21795.11 samples/sec	accuracy=nan
2023-03-22 18:33:07,672 Node[0] Epoch[14] Batch [240-260]	Speed: 21828.66 samples/sec	accuracy=nan
2023-03-22 18:33:10,662 Node[0] Epoch[14] Batch [260-280]	Speed: 21836.19 samples/sec	accuracy=nan
2023-03-22 18:33:13,649 Node[0] Epoch[14] Batch [280-300]	Speed: 21851.43 samples/sec	accuracy=nan
2023-03-22 18:33:16,638 Node[0] Epoch[14] Batch [300-320]	Speed: 21844.57 samples/sec	accuracy=nan
2023-03-22 18:33:19,628 Node[0] Epoch[14] Batch [320-340]	Speed: 21831.91 samples/sec	accuracy=nan
2023-03-22 18:33:22,617 Node[0] Epoch[14] Batch [340-360]	Speed: 21840.79 samples/sec	accuracy=nan
2023-03-22 18:33:25,608 Node[0] Epoch[14] Batch [360-380]	Speed: 21823.29 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679528007251, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 18:33:27,252 Node[0] Epoch[14] Time cost=58.648
:::MLLOG {"namespace": "", "time_ms": 1679528007252, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21844.86852256475}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679528007396, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 18:33:28,852 Node[0] Epoch[14] Validation-accuracy=0.591360
2023-03-22 18:33:28,852 Node[0] Epoch[14] Validation-correct-count=3696.000000
2023-03-22 18:33:28,852 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-22 18:33:28,942 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:28,942 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528008941, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679528008942, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.58514, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679528008942, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679528008942, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679528008943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 18:33:28,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:33:31,962 Node[0] Epoch[15] Batch [0-20]	Speed: 21718.65 samples/sec	accuracy=nan
2023-03-22 18:33:34,951 Node[0] Epoch[15] Batch [20-40]	Speed: 21840.81 samples/sec	accuracy=nan
2023-03-22 18:33:37,940 Node[0] Epoch[15] Batch [40-60]	Speed: 21835.34 samples/sec	accuracy=nan
2023-03-22 18:33:40,932 Node[0] Epoch[15] Batch [60-80]	Speed: 21818.31 samples/sec	accuracy=nan
2023-03-22 18:33:43,924 Node[0] Epoch[15] Batch [80-100]	Speed: 21820.15 samples/sec	accuracy=nan
2023-03-22 18:33:46,922 Node[0] Epoch[15] Batch [100-120]	Speed: 21774.28 samples/sec	accuracy=nan
2023-03-22 18:33:49,917 Node[0] Epoch[15] Batch [120-140]	Speed: 21796.69 samples/sec	accuracy=nan
2023-03-22 18:33:52,907 Node[0] Epoch[15] Batch [140-160]	Speed: 21829.76 samples/sec	accuracy=nan
2023-03-22 18:33:55,902 Node[0] Epoch[15] Batch [160-180]	Speed: 21799.59 samples/sec	accuracy=nan
2023-03-22 18:33:58,901 Node[0] Epoch[15] Batch [180-200]	Speed: 21764.98 samples/sec	accuracy=nan
2023-03-22 18:34:01,893 Node[0] Epoch[15] Batch [200-220]	Speed: 21818.62 samples/sec	accuracy=nan
2023-03-22 18:34:04,885 Node[0] Epoch[15] Batch [220-240]	Speed: 21820.04 samples/sec	accuracy=nan
2023-03-22 18:34:07,875 Node[0] Epoch[15] Batch [240-260]	Speed: 21832.31 samples/sec	accuracy=nan
2023-03-22 18:34:10,866 Node[0] Epoch[15] Batch [260-280]	Speed: 21822.88 samples/sec	accuracy=nan
2023-03-22 18:34:13,859 Node[0] Epoch[15] Batch [280-300]	Speed: 21811.18 samples/sec	accuracy=nan
2023-03-22 18:34:16,852 Node[0] Epoch[15] Batch [300-320]	Speed: 21814.98 samples/sec	accuracy=nan
2023-03-22 18:34:19,839 Node[0] Epoch[15] Batch [320-340]	Speed: 21850.97 samples/sec	accuracy=nan
2023-03-22 18:34:22,831 Node[0] Epoch[15] Batch [340-360]	Speed: 21820.06 samples/sec	accuracy=nan
2023-03-22 18:34:25,820 Node[0] Epoch[15] Batch [360-380]	Speed: 21844.19 samples/sec	accuracy=nan
2023-03-22 18:34:27,614 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:27,614 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:27,614 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:27,614 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:27,614 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:27,614 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528067614, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 18:34:27,615 Node[0] Epoch[15] Time cost=58.672
2023-03-22 18:34:27,615 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528067615, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21836.10795650863}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679528067615, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 18:34:27,615 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:34:30,770 Node[0] Epoch[16] Batch [0-20]	Speed: 21731.28 samples/sec	accuracy=nan
2023-03-22 18:34:33,762 Node[0] Epoch[16] Batch [20-40]	Speed: 21819.44 samples/sec	accuracy=nan
2023-03-22 18:34:36,754 Node[0] Epoch[16] Batch [40-60]	Speed: 21816.61 samples/sec	accuracy=nan
2023-03-22 18:34:39,756 Node[0] Epoch[16] Batch [60-80]	Speed: 21743.88 samples/sec	accuracy=nan
2023-03-22 18:34:42,746 Node[0] Epoch[16] Batch [80-100]	Speed: 21829.51 samples/sec	accuracy=nan
2023-03-22 18:34:45,740 Node[0] Epoch[16] Batch [100-120]	Speed: 21808.49 samples/sec	accuracy=nan
2023-03-22 18:34:48,731 Node[0] Epoch[16] Batch [120-140]	Speed: 21824.93 samples/sec	accuracy=nan
2023-03-22 18:34:51,726 Node[0] Epoch[16] Batch [140-160]	Speed: 21792.53 samples/sec	accuracy=nan
2023-03-22 18:34:54,727 Node[0] Epoch[16] Batch [160-180]	Speed: 21755.57 samples/sec	accuracy=nan
2023-03-22 18:34:57,722 Node[0] Epoch[16] Batch [180-200]	Speed: 21795.28 samples/sec	accuracy=nan
2023-03-22 18:35:00,715 Node[0] Epoch[16] Batch [200-220]	Speed: 21814.66 samples/sec	accuracy=nan
2023-03-22 18:35:03,704 Node[0] Epoch[16] Batch [220-240]	Speed: 21838.71 samples/sec	accuracy=nan
2023-03-22 18:35:06,695 Node[0] Epoch[16] Batch [240-260]	Speed: 21826.03 samples/sec	accuracy=nan
2023-03-22 18:35:09,685 Node[0] Epoch[16] Batch [260-280]	Speed: 21828.51 samples/sec	accuracy=nan
2023-03-22 18:35:12,682 Node[0] Epoch[16] Batch [280-300]	Speed: 21784.88 samples/sec	accuracy=nan
2023-03-22 18:35:15,670 Node[0] Epoch[16] Batch [300-320]	Speed: 21844.97 samples/sec	accuracy=nan
2023-03-22 18:35:18,662 Node[0] Epoch[16] Batch [320-340]	Speed: 21820.26 samples/sec	accuracy=nan
2023-03-22 18:35:21,652 Node[0] Epoch[16] Batch [340-360]	Speed: 21834.30 samples/sec	accuracy=nan
2023-03-22 18:35:24,642 Node[0] Epoch[16] Batch [360-380]	Speed: 21834.13 samples/sec	accuracy=nan
2023-03-22 18:35:26,283 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:26,283 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528126283, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 18:35:26,284 Node[0] Epoch[16] Time cost=58.669
:::MLLOG {"namespace": "", "time_ms": 1679528126284, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21837.243974563124}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679528126285, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 18:35:26,285 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:35:29,430 Node[0] Epoch[17] Batch [0-20]	Speed: 21818.08 samples/sec	accuracy=nan
2023-03-22 18:35:32,420 Node[0] Epoch[17] Batch [20-40]	Speed: 21833.66 samples/sec	accuracy=nan
2023-03-22 18:35:35,414 Node[0] Epoch[17] Batch [40-60]	Speed: 21809.42 samples/sec	accuracy=nan
2023-03-22 18:35:38,404 Node[0] Epoch[17] Batch [60-80]	Speed: 21832.11 samples/sec	accuracy=nan
2023-03-22 18:35:41,396 Node[0] Epoch[17] Batch [80-100]	Speed: 21812.98 samples/sec	accuracy=nan
2023-03-22 18:35:44,389 Node[0] Epoch[17] Batch [100-120]	Speed: 21815.91 samples/sec	accuracy=nan
2023-03-22 18:35:47,378 Node[0] Epoch[17] Batch [120-140]	Speed: 21840.56 samples/sec	accuracy=nan
2023-03-22 18:35:50,372 Node[0] Epoch[17] Batch [140-160]	Speed: 21797.70 samples/sec	accuracy=nan
2023-03-22 18:35:53,365 Node[0] Epoch[17] Batch [160-180]	Speed: 21814.92 samples/sec	accuracy=nan
2023-03-22 18:35:56,362 Node[0] Epoch[17] Batch [180-200]	Speed: 21782.27 samples/sec	accuracy=nan
2023-03-22 18:35:59,355 Node[0] Epoch[17] Batch [200-220]	Speed: 21812.57 samples/sec	accuracy=nan
2023-03-22 18:36:02,344 Node[0] Epoch[17] Batch [220-240]	Speed: 21838.05 samples/sec	accuracy=nan
2023-03-22 18:36:05,337 Node[0] Epoch[17] Batch [240-260]	Speed: 21806.94 samples/sec	accuracy=nan
2023-03-22 18:36:08,324 Node[0] Epoch[17] Batch [260-280]	Speed: 21854.09 samples/sec	accuracy=nan
2023-03-22 18:36:11,314 Node[0] Epoch[17] Batch [280-300]	Speed: 21832.69 samples/sec	accuracy=nan
2023-03-22 18:36:14,305 Node[0] Epoch[17] Batch [300-320]	Speed: 21829.26 samples/sec	accuracy=nan
2023-03-22 18:36:17,295 Node[0] Epoch[17] Batch [320-340]	Speed: 21835.01 samples/sec	accuracy=nan
2023-03-22 18:36:20,283 Node[0] Epoch[17] Batch [340-360]	Speed: 21847.36 samples/sec	accuracy=nan
2023-03-22 18:36:23,274 Node[0] Epoch[17] Batch [360-380]	Speed: 21825.60 samples/sec	accuracy=nan
2023-03-22 18:36:25,064 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,064 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,064 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,064 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,064 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528185064, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 18:36:25,064 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,064 Node[0] Epoch[17] Time cost=58.779
:::MLLOG {"namespace": "", "time_ms": 1679528185064, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21796.19390917855}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679528185065, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 18:36:25,065 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:25,065 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:36:28,205 Node[0] Epoch[18] Batch [0-20]	Speed: 21829.88 samples/sec	accuracy=nan
2023-03-22 18:36:31,194 Node[0] Epoch[18] Batch [20-40]	Speed: 21841.81 samples/sec	accuracy=nan
2023-03-22 18:36:34,188 Node[0] Epoch[18] Batch [40-60]	Speed: 21808.88 samples/sec	accuracy=nan
2023-03-22 18:36:37,182 Node[0] Epoch[18] Batch [60-80]	Speed: 21799.34 samples/sec	accuracy=nan
2023-03-22 18:36:40,170 Node[0] Epoch[18] Batch [80-100]	Speed: 21850.08 samples/sec	accuracy=nan
2023-03-22 18:36:43,165 Node[0] Epoch[18] Batch [100-120]	Speed: 21796.96 samples/sec	accuracy=nan
2023-03-22 18:36:46,157 Node[0] Epoch[18] Batch [120-140]	Speed: 21818.17 samples/sec	accuracy=nan
2023-03-22 18:36:49,148 Node[0] Epoch[18] Batch [140-160]	Speed: 21825.34 samples/sec	accuracy=nan
2023-03-22 18:36:52,147 Node[0] Epoch[18] Batch [160-180]	Speed: 21761.49 samples/sec	accuracy=nan
2023-03-22 18:36:55,141 Node[0] Epoch[18] Batch [180-200]	Speed: 21803.03 samples/sec	accuracy=nan
2023-03-22 18:36:58,133 Node[0] Epoch[18] Batch [200-220]	Speed: 21823.18 samples/sec	accuracy=nan
2023-03-22 18:37:01,125 Node[0] Epoch[18] Batch [220-240]	Speed: 21816.48 samples/sec	accuracy=nan
2023-03-22 18:37:04,116 Node[0] Epoch[18] Batch [240-260]	Speed: 21825.85 samples/sec	accuracy=nan
2023-03-22 18:37:07,113 Node[0] Epoch[18] Batch [260-280]	Speed: 21780.03 samples/sec	accuracy=nan
2023-03-22 18:37:10,106 Node[0] Epoch[18] Batch [280-300]	Speed: 21810.34 samples/sec	accuracy=nan
2023-03-22 18:37:13,100 Node[0] Epoch[18] Batch [300-320]	Speed: 21808.74 samples/sec	accuracy=nan
2023-03-22 18:37:16,090 Node[0] Epoch[18] Batch [320-340]	Speed: 21830.25 samples/sec	accuracy=nan
2023-03-22 18:37:19,081 Node[0] Epoch[18] Batch [340-360]	Speed: 21825.96 samples/sec	accuracy=nan
2023-03-22 18:37:22,069 Node[0] Epoch[18] Batch [360-380]	Speed: 21846.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679528243711, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 18:37:23,712 Node[0] Epoch[18] Time cost=58.647
:::MLLOG {"namespace": "", "time_ms": 1679528243712, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21845.396831181446}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679528243856, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 18:37:25,403 Node[0] Epoch[18] Validation-accuracy=0.624320
2023-03-22 18:37:25,404 Node[0] Epoch[18] Validation-correct-count=3902.000000
2023-03-22 18:37:25,404 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679528245497, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679528245497, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6261, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679528245497, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 18:37:25,497 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:25,497 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528245498, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 18:37:25,497 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:25,497 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:25,497 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:25,497 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528245498, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 18:37:25,498 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:25,498 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:37:28,512 Node[0] Epoch[19] Batch [0-20]	Speed: 21727.95 samples/sec	accuracy=nan
2023-03-22 18:37:31,498 Node[0] Epoch[19] Batch [20-40]	Speed: 21860.81 samples/sec	accuracy=nan
2023-03-22 18:37:34,485 Node[0] Epoch[19] Batch [40-60]	Speed: 21856.77 samples/sec	accuracy=nan
2023-03-22 18:37:37,469 Node[0] Epoch[19] Batch [60-80]	Speed: 21875.81 samples/sec	accuracy=nan
2023-03-22 18:37:40,454 Node[0] Epoch[19] Batch [80-100]	Speed: 21870.08 samples/sec	accuracy=nan
2023-03-22 18:37:43,445 Node[0] Epoch[19] Batch [100-120]	Speed: 21822.53 samples/sec	accuracy=nan
2023-03-22 18:37:46,432 Node[0] Epoch[19] Batch [120-140]	Speed: 21855.03 samples/sec	accuracy=nan
2023-03-22 18:37:49,427 Node[0] Epoch[19] Batch [140-160]	Speed: 21795.69 samples/sec	accuracy=nan
2023-03-22 18:37:52,422 Node[0] Epoch[19] Batch [160-180]	Speed: 21795.78 samples/sec	accuracy=nan
2023-03-22 18:37:55,411 Node[0] Epoch[19] Batch [180-200]	Speed: 21838.62 samples/sec	accuracy=nan
2023-03-22 18:37:58,404 Node[0] Epoch[19] Batch [200-220]	Speed: 21812.09 samples/sec	accuracy=nan
2023-03-22 18:38:01,397 Node[0] Epoch[19] Batch [220-240]	Speed: 21809.24 samples/sec	accuracy=nan
2023-03-22 18:38:04,387 Node[0] Epoch[19] Batch [240-260]	Speed: 21834.60 samples/sec	accuracy=nan
2023-03-22 18:38:07,373 Node[0] Epoch[19] Batch [260-280]	Speed: 21859.51 samples/sec	accuracy=nan
2023-03-22 18:38:10,365 Node[0] Epoch[19] Batch [280-300]	Speed: 21823.37 samples/sec	accuracy=nan
2023-03-22 18:38:13,356 Node[0] Epoch[19] Batch [300-320]	Speed: 21825.04 samples/sec	accuracy=nan
2023-03-22 18:38:16,345 Node[0] Epoch[19] Batch [320-340]	Speed: 21841.06 samples/sec	accuracy=nan
2023-03-22 18:38:19,336 Node[0] Epoch[19] Batch [340-360]	Speed: 21819.91 samples/sec	accuracy=nan
2023-03-22 18:38:22,328 Node[0] Epoch[19] Batch [360-380]	Speed: 21824.74 samples/sec	accuracy=nan
2023-03-22 18:38:24,122 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,122 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,122 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,122 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,122 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,123 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528304122, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 18:38:24,123 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:24,123 Node[0] Epoch[19] Time cost=58.626
:::MLLOG {"namespace": "", "time_ms": 1679528304124, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21853.386294848337}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679528304124, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 18:38:24,124 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:38:27,271 Node[0] Epoch[20] Batch [0-20]	Speed: 21782.47 samples/sec	accuracy=nan
2023-03-22 18:38:30,262 Node[0] Epoch[20] Batch [20-40]	Speed: 21826.02 samples/sec	accuracy=nan
2023-03-22 18:38:33,252 Node[0] Epoch[20] Batch [40-60]	Speed: 21830.10 samples/sec	accuracy=nan
2023-03-22 18:38:36,244 Node[0] Epoch[20] Batch [60-80]	Speed: 21821.00 samples/sec	accuracy=nan
2023-03-22 18:38:39,235 Node[0] Epoch[20] Batch [80-100]	Speed: 21828.60 samples/sec	accuracy=nan
2023-03-22 18:38:42,232 Node[0] Epoch[20] Batch [100-120]	Speed: 21779.38 samples/sec	accuracy=nan
2023-03-22 18:38:45,225 Node[0] Epoch[20] Batch [120-140]	Speed: 21811.93 samples/sec	accuracy=nan
2023-03-22 18:38:48,213 Node[0] Epoch[20] Batch [140-160]	Speed: 21848.06 samples/sec	accuracy=nan
2023-03-22 18:38:51,202 Node[0] Epoch[20] Batch [160-180]	Speed: 21836.98 samples/sec	accuracy=nan
2023-03-22 18:38:54,193 Node[0] Epoch[20] Batch [180-200]	Speed: 21828.03 samples/sec	accuracy=nan
2023-03-22 18:38:57,182 Node[0] Epoch[20] Batch [200-220]	Speed: 21835.17 samples/sec	accuracy=nan
2023-03-22 18:39:00,171 Node[0] Epoch[20] Batch [220-240]	Speed: 21844.72 samples/sec	accuracy=nan
2023-03-22 18:39:03,159 Node[0] Epoch[20] Batch [240-260]	Speed: 21846.48 samples/sec	accuracy=nan
2023-03-22 18:39:06,149 Node[0] Epoch[20] Batch [260-280]	Speed: 21836.19 samples/sec	accuracy=nan
2023-03-22 18:39:09,139 Node[0] Epoch[20] Batch [280-300]	Speed: 21830.18 samples/sec	accuracy=nan
2023-03-22 18:39:12,138 Node[0] Epoch[20] Batch [300-320]	Speed: 21767.40 samples/sec	accuracy=nan
2023-03-22 18:39:15,132 Node[0] Epoch[20] Batch [320-340]	Speed: 21798.85 samples/sec	accuracy=nan
2023-03-22 18:39:18,126 Node[0] Epoch[20] Batch [340-360]	Speed: 21806.31 samples/sec	accuracy=nan
2023-03-22 18:39:21,119 Node[0] Epoch[20] Batch [360-380]	Speed: 21809.97 samples/sec	accuracy=nan
2023-03-22 18:39:22,764 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:22,764 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:22,764 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:22,764 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528362764, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 18:39:22,764 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:22,765 Node[0] Epoch[20] Time cost=58.641
:::MLLOG {"namespace": "", "time_ms": 1679528362765, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21847.79927478174}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 18:39:22,765 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528362765, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 18:39:22,765 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:22,765 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:39:25,907 Node[0] Epoch[21] Batch [0-20]	Speed: 21838.07 samples/sec	accuracy=nan
2023-03-22 18:39:28,902 Node[0] Epoch[21] Batch [20-40]	Speed: 21796.96 samples/sec	accuracy=nan
2023-03-22 18:39:31,895 Node[0] Epoch[21] Batch [40-60]	Speed: 21813.89 samples/sec	accuracy=nan
2023-03-22 18:39:34,893 Node[0] Epoch[21] Batch [60-80]	Speed: 21775.41 samples/sec	accuracy=nan
2023-03-22 18:39:37,883 Node[0] Epoch[21] Batch [80-100]	Speed: 21830.46 samples/sec	accuracy=nan
2023-03-22 18:39:40,880 Node[0] Epoch[21] Batch [100-120]	Speed: 21778.79 samples/sec	accuracy=nan
2023-03-22 18:39:43,877 Node[0] Epoch[21] Batch [120-140]	Speed: 21785.63 samples/sec	accuracy=nan
2023-03-22 18:39:46,866 Node[0] Epoch[21] Batch [140-160]	Speed: 21840.00 samples/sec	accuracy=nan
2023-03-22 18:39:49,860 Node[0] Epoch[21] Batch [160-180]	Speed: 21799.88 samples/sec	accuracy=nan
2023-03-22 18:39:52,856 Node[0] Epoch[21] Batch [180-200]	Speed: 21789.80 samples/sec	accuracy=nan
2023-03-22 18:39:55,853 Node[0] Epoch[21] Batch [200-220]	Speed: 21786.07 samples/sec	accuracy=nan
2023-03-22 18:39:58,845 Node[0] Epoch[21] Batch [220-240]	Speed: 21817.52 samples/sec	accuracy=nan
2023-03-22 18:40:01,840 Node[0] Epoch[21] Batch [240-260]	Speed: 21795.02 samples/sec	accuracy=nan
2023-03-22 18:40:04,832 Node[0] Epoch[21] Batch [260-280]	Speed: 21815.88 samples/sec	accuracy=nan
2023-03-22 18:40:07,827 Node[0] Epoch[21] Batch [280-300]	Speed: 21800.91 samples/sec	accuracy=nan
2023-03-22 18:40:12,811 Node[0] Epoch[21] Batch [300-320]	Speed: 13096.10 samples/sec	accuracy=nan
2023-03-22 18:40:15,802 Node[0] Epoch[21] Batch [320-340]	Speed: 21830.03 samples/sec	accuracy=nan
2023-03-22 18:40:18,789 Node[0] Epoch[21] Batch [340-360]	Speed: 21852.55 samples/sec	accuracy=nan
2023-03-22 18:40:21,781 Node[0] Epoch[21] Batch [360-380]	Speed: 21819.94 samples/sec	accuracy=nan
2023-03-22 18:40:23,576 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:23,576 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:23,576 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:23,576 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:23,576 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:23,576 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528423576, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 18:40:23,577 Node[0] Epoch[21] Time cost=60.812
:::MLLOG {"namespace": "", "time_ms": 1679528423577, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21067.60230117989}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-22 18:40:23,577 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528423578, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 18:40:23,578 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:40:26,724 Node[0] Epoch[22] Batch [0-20]	Speed: 21783.06 samples/sec	accuracy=nan
2023-03-22 18:40:29,717 Node[0] Epoch[22] Batch [20-40]	Speed: 21812.74 samples/sec	accuracy=nan
2023-03-22 18:40:32,709 Node[0] Epoch[22] Batch [40-60]	Speed: 21820.85 samples/sec	accuracy=nan
2023-03-22 18:40:35,698 Node[0] Epoch[22] Batch [60-80]	Speed: 21837.57 samples/sec	accuracy=nan
2023-03-22 18:40:38,683 Node[0] Epoch[22] Batch [80-100]	Speed: 21871.53 samples/sec	accuracy=nan
2023-03-22 18:40:41,678 Node[0] Epoch[22] Batch [100-120]	Speed: 21795.93 samples/sec	accuracy=nan
2023-03-22 18:40:44,670 Node[0] Epoch[22] Batch [120-140]	Speed: 21815.44 samples/sec	accuracy=nan
2023-03-22 18:40:47,658 Node[0] Epoch[22] Batch [140-160]	Speed: 21852.05 samples/sec	accuracy=nan
2023-03-22 18:40:50,647 Node[0] Epoch[22] Batch [160-180]	Speed: 21836.47 samples/sec	accuracy=nan
2023-03-22 18:40:53,637 Node[0] Epoch[22] Batch [180-200]	Speed: 21837.34 samples/sec	accuracy=nan
2023-03-22 18:40:56,626 Node[0] Epoch[22] Batch [200-220]	Speed: 21835.02 samples/sec	accuracy=nan
2023-03-22 18:40:59,615 Node[0] Epoch[22] Batch [220-240]	Speed: 21841.79 samples/sec	accuracy=nan
2023-03-22 18:41:02,602 Node[0] Epoch[22] Batch [240-260]	Speed: 21857.54 samples/sec	accuracy=nan
2023-03-22 18:41:05,596 Node[0] Epoch[22] Batch [260-280]	Speed: 21803.43 samples/sec	accuracy=nan
2023-03-22 18:41:08,591 Node[0] Epoch[22] Batch [280-300]	Speed: 21796.57 samples/sec	accuracy=nan
2023-03-22 18:41:11,583 Node[0] Epoch[22] Batch [300-320]	Speed: 21815.62 samples/sec	accuracy=nan
2023-03-22 18:41:14,572 Node[0] Epoch[22] Batch [320-340]	Speed: 21839.07 samples/sec	accuracy=nan
2023-03-22 18:41:17,564 Node[0] Epoch[22] Batch [340-360]	Speed: 21820.18 samples/sec	accuracy=nan
2023-03-22 18:41:20,554 Node[0] Epoch[22] Batch [360-380]	Speed: 21833.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679528482195, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 18:41:22,195 Node[0] Epoch[22] Time cost=58.618
:::MLLOG {"namespace": "", "time_ms": 1679528482195, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21856.378716723106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679528482340, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 18:41:23,840 Node[0] Epoch[22] Validation-accuracy=0.676480
2023-03-22 18:41:23,840 Node[0] Epoch[22] Validation-correct-count=4228.000000
2023-03-22 18:41:23,840 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-22 18:41:23,994 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:23,994 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528483994, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679528483995, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68216, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679528483995, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679528483995, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679528483995, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 18:41:23,995 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:41:27,016 Node[0] Epoch[23] Batch [0-20]	Speed: 21691.65 samples/sec	accuracy=nan
2023-03-22 18:41:30,005 Node[0] Epoch[23] Batch [20-40]	Speed: 21843.06 samples/sec	accuracy=nan
2023-03-22 18:41:32,996 Node[0] Epoch[23] Batch [40-60]	Speed: 21823.23 samples/sec	accuracy=nan
2023-03-22 18:41:35,983 Node[0] Epoch[23] Batch [60-80]	Speed: 21853.22 samples/sec	accuracy=nan
2023-03-22 18:41:38,980 Node[0] Epoch[23] Batch [80-100]	Speed: 21782.68 samples/sec	accuracy=nan
2023-03-22 18:41:41,980 Node[0] Epoch[23] Batch [100-120]	Speed: 21759.68 samples/sec	accuracy=nan
2023-03-22 18:41:44,976 Node[0] Epoch[23] Batch [120-140]	Speed: 21793.38 samples/sec	accuracy=nan
2023-03-22 18:41:47,966 Node[0] Epoch[23] Batch [140-160]	Speed: 21829.51 samples/sec	accuracy=nan
2023-03-22 18:41:50,967 Node[0] Epoch[23] Batch [160-180]	Speed: 21756.32 samples/sec	accuracy=nan
2023-03-22 18:41:53,960 Node[0] Epoch[23] Batch [180-200]	Speed: 21806.96 samples/sec	accuracy=nan
2023-03-22 18:41:56,950 Node[0] Epoch[23] Batch [200-220]	Speed: 21831.55 samples/sec	accuracy=nan
2023-03-22 18:41:59,938 Node[0] Epoch[23] Batch [220-240]	Speed: 21848.38 samples/sec	accuracy=nan
2023-03-22 18:42:02,928 Node[0] Epoch[23] Batch [240-260]	Speed: 21837.27 samples/sec	accuracy=nan
2023-03-22 18:42:05,918 Node[0] Epoch[23] Batch [260-280]	Speed: 21827.36 samples/sec	accuracy=nan
2023-03-22 18:42:08,908 Node[0] Epoch[23] Batch [280-300]	Speed: 21837.43 samples/sec	accuracy=nan
2023-03-22 18:42:11,896 Node[0] Epoch[23] Batch [300-320]	Speed: 21845.39 samples/sec	accuracy=nan
2023-03-22 18:42:14,890 Node[0] Epoch[23] Batch [320-340]	Speed: 21805.74 samples/sec	accuracy=nan
2023-03-22 18:42:17,881 Node[0] Epoch[23] Batch [340-360]	Speed: 21821.11 samples/sec	accuracy=nan
2023-03-22 18:42:20,875 Node[0] Epoch[23] Batch [360-380]	Speed: 21805.91 samples/sec	accuracy=nan
2023-03-22 18:42:22,667 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:22,667 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:22,668 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:22,668 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:22,668 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528542668, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 18:42:22,668 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:22,668 Node[0] Epoch[23] Time cost=58.673
2023-03-22 18:42:22,668 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528542668, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21835.73785773483}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679528542669, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 18:42:22,669 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:42:25,814 Node[0] Epoch[24] Batch [0-20]	Speed: 21793.93 samples/sec	accuracy=nan
2023-03-22 18:42:28,807 Node[0] Epoch[24] Batch [20-40]	Speed: 21809.58 samples/sec	accuracy=nan
2023-03-22 18:42:31,796 Node[0] Epoch[24] Batch [40-60]	Speed: 21839.97 samples/sec	accuracy=nan
2023-03-22 18:42:34,787 Node[0] Epoch[24] Batch [60-80]	Speed: 21829.10 samples/sec	accuracy=nan
2023-03-22 18:42:37,777 Node[0] Epoch[24] Batch [80-100]	Speed: 21829.15 samples/sec	accuracy=nan
2023-03-22 18:42:40,772 Node[0] Epoch[24] Batch [100-120]	Speed: 21800.87 samples/sec	accuracy=nan
2023-03-22 18:42:43,764 Node[0] Epoch[24] Batch [120-140]	Speed: 21814.87 samples/sec	accuracy=nan
2023-03-22 18:42:46,756 Node[0] Epoch[24] Batch [140-160]	Speed: 21816.71 samples/sec	accuracy=nan
2023-03-22 18:42:49,749 Node[0] Epoch[24] Batch [160-180]	Speed: 21811.22 samples/sec	accuracy=nan
2023-03-22 18:42:52,743 Node[0] Epoch[24] Batch [180-200]	Speed: 21804.44 samples/sec	accuracy=nan
2023-03-22 18:42:55,738 Node[0] Epoch[24] Batch [200-220]	Speed: 21797.54 samples/sec	accuracy=nan
2023-03-22 18:42:58,741 Node[0] Epoch[24] Batch [220-240]	Speed: 21737.33 samples/sec	accuracy=nan
2023-03-22 18:43:01,734 Node[0] Epoch[24] Batch [240-260]	Speed: 21815.46 samples/sec	accuracy=nan
2023-03-22 18:43:04,724 Node[0] Epoch[24] Batch [260-280]	Speed: 21826.44 samples/sec	accuracy=nan
2023-03-22 18:43:07,715 Node[0] Epoch[24] Batch [280-300]	Speed: 21831.62 samples/sec	accuracy=nan
2023-03-22 18:43:13,031 Node[0] Epoch[24] Batch [300-320]	Speed: 12278.69 samples/sec	accuracy=nan
2023-03-22 18:43:16,019 Node[0] Epoch[24] Batch [320-340]	Speed: 21848.51 samples/sec	accuracy=nan
2023-03-22 18:43:19,009 Node[0] Epoch[24] Batch [340-360]	Speed: 21835.66 samples/sec	accuracy=nan
2023-03-22 18:43:22,002 Node[0] Epoch[24] Batch [360-380]	Speed: 21805.45 samples/sec	accuracy=nan
2023-03-22 18:43:23,644 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,644 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,645 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,645 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,645 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,645 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:23,645 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528603645, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 18:43:23,646 Node[0] Epoch[24] Time cost=60.977
:::MLLOG {"namespace": "", "time_ms": 1679528603646, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21010.629443878253}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679528603646, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 18:43:23,647 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:43:26,787 Node[0] Epoch[25] Batch [0-20]	Speed: 21848.26 samples/sec	accuracy=nan
2023-03-22 18:43:29,775 Node[0] Epoch[25] Batch [20-40]	Speed: 21841.05 samples/sec	accuracy=nan
2023-03-22 18:43:32,767 Node[0] Epoch[25] Batch [40-60]	Speed: 21823.00 samples/sec	accuracy=nan
2023-03-22 18:43:35,760 Node[0] Epoch[25] Batch [60-80]	Speed: 21808.32 samples/sec	accuracy=nan
2023-03-22 18:43:38,752 Node[0] Epoch[25] Batch [80-100]	Speed: 21817.46 samples/sec	accuracy=nan
2023-03-22 18:43:41,746 Node[0] Epoch[25] Batch [100-120]	Speed: 21804.73 samples/sec	accuracy=nan
2023-03-22 18:43:44,737 Node[0] Epoch[25] Batch [120-140]	Speed: 21823.33 samples/sec	accuracy=nan
2023-03-22 18:43:47,726 Node[0] Epoch[25] Batch [140-160]	Speed: 21842.07 samples/sec	accuracy=nan
2023-03-22 18:43:50,718 Node[0] Epoch[25] Batch [160-180]	Speed: 21820.95 samples/sec	accuracy=nan
2023-03-22 18:43:53,711 Node[0] Epoch[25] Batch [180-200]	Speed: 21811.30 samples/sec	accuracy=nan
2023-03-22 18:43:56,703 Node[0] Epoch[25] Batch [200-220]	Speed: 21819.09 samples/sec	accuracy=nan
2023-03-22 18:43:59,691 Node[0] Epoch[25] Batch [220-240]	Speed: 21845.24 samples/sec	accuracy=nan
2023-03-22 18:44:02,681 Node[0] Epoch[25] Batch [240-260]	Speed: 21831.05 samples/sec	accuracy=nan
2023-03-22 18:44:05,675 Node[0] Epoch[25] Batch [260-280]	Speed: 21801.65 samples/sec	accuracy=nan
2023-03-22 18:44:08,665 Node[0] Epoch[25] Batch [280-300]	Speed: 21838.13 samples/sec	accuracy=nan
2023-03-22 18:44:11,663 Node[0] Epoch[25] Batch [300-320]	Speed: 21767.98 samples/sec	accuracy=nan
2023-03-22 18:44:14,652 Node[0] Epoch[25] Batch [320-340]	Speed: 21844.28 samples/sec	accuracy=nan
2023-03-22 18:44:17,646 Node[0] Epoch[25] Batch [340-360]	Speed: 21805.30 samples/sec	accuracy=nan
2023-03-22 18:44:20,638 Node[0] Epoch[25] Batch [360-380]	Speed: 21817.04 samples/sec	accuracy=nan
2023-03-22 18:44:22,432 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,432 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,432 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,432 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,432 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,432 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528662432, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 18:44:22,432 Node[0] Epoch[25] Time cost=58.786
:::MLLOG {"namespace": "", "time_ms": 1679528662432, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21793.86714858971}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679528662433, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 18:44:22,433 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:22,433 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:44:25,575 Node[0] Epoch[26] Batch [0-20]	Speed: 21821.31 samples/sec	accuracy=nan
2023-03-22 18:44:28,562 Node[0] Epoch[26] Batch [20-40]	Speed: 21848.74 samples/sec	accuracy=nan
2023-03-22 18:44:31,554 Node[0] Epoch[26] Batch [40-60]	Speed: 21819.69 samples/sec	accuracy=nan
2023-03-22 18:44:34,544 Node[0] Epoch[26] Batch [60-80]	Speed: 21832.76 samples/sec	accuracy=nan
2023-03-22 18:44:37,537 Node[0] Epoch[26] Batch [80-100]	Speed: 21812.75 samples/sec	accuracy=nan
2023-03-22 18:44:40,524 Node[0] Epoch[26] Batch [100-120]	Speed: 21853.78 samples/sec	accuracy=nan
2023-03-22 18:44:43,516 Node[0] Epoch[26] Batch [120-140]	Speed: 21821.97 samples/sec	accuracy=nan
2023-03-22 18:44:46,506 Node[0] Epoch[26] Batch [140-160]	Speed: 21831.37 samples/sec	accuracy=nan
2023-03-22 18:44:49,497 Node[0] Epoch[26] Batch [160-180]	Speed: 21824.18 samples/sec	accuracy=nan
2023-03-22 18:44:52,496 Node[0] Epoch[26] Batch [180-200]	Speed: 21769.97 samples/sec	accuracy=nan
2023-03-22 18:44:55,489 Node[0] Epoch[26] Batch [200-220]	Speed: 21806.53 samples/sec	accuracy=nan
2023-03-22 18:44:58,480 Node[0] Epoch[26] Batch [220-240]	Speed: 21825.73 samples/sec	accuracy=nan
2023-03-22 18:45:01,473 Node[0] Epoch[26] Batch [240-260]	Speed: 21810.12 samples/sec	accuracy=nan
2023-03-22 18:45:04,465 Node[0] Epoch[26] Batch [260-280]	Speed: 21821.67 samples/sec	accuracy=nan
2023-03-22 18:45:07,456 Node[0] Epoch[26] Batch [280-300]	Speed: 21825.80 samples/sec	accuracy=nan
2023-03-22 18:45:10,447 Node[0] Epoch[26] Batch [300-320]	Speed: 21827.55 samples/sec	accuracy=nan
2023-03-22 18:45:13,446 Node[0] Epoch[26] Batch [320-340]	Speed: 21761.25 samples/sec	accuracy=nan
2023-03-22 18:45:16,440 Node[0] Epoch[26] Batch [340-360]	Speed: 21808.32 samples/sec	accuracy=nan
2023-03-22 18:45:19,435 Node[0] Epoch[26] Batch [360-380]	Speed: 21793.40 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679528721081, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 18:45:21,082 Node[0] Epoch[26] Time cost=58.649
:::MLLOG {"namespace": "", "time_ms": 1679528721082, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21844.5038100432}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679528721227, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 18:45:22,686 Node[0] Epoch[26] Validation-accuracy=0.718400
2023-03-22 18:45:22,686 Node[0] Epoch[26] Validation-correct-count=4490.000000
2023-03-22 18:45:22,686 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679528722863, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679528722863, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72756, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679528722863, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 18:45:22,863 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:22,863 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:22,863 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528722863, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 18:45:22,863 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:22,863 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:22,863 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:22,863 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528722864, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 18:45:22,864 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:45:25,881 Node[0] Epoch[27] Batch [0-20]	Speed: 21721.37 samples/sec	accuracy=nan
2023-03-22 18:45:28,870 Node[0] Epoch[27] Batch [20-40]	Speed: 21837.60 samples/sec	accuracy=nan
2023-03-22 18:45:31,861 Node[0] Epoch[27] Batch [40-60]	Speed: 21829.30 samples/sec	accuracy=nan
2023-03-22 18:45:34,853 Node[0] Epoch[27] Batch [60-80]	Speed: 21817.31 samples/sec	accuracy=nan
2023-03-22 18:45:37,844 Node[0] Epoch[27] Batch [80-100]	Speed: 21822.04 samples/sec	accuracy=nan
2023-03-22 18:45:40,833 Node[0] Epoch[27] Batch [100-120]	Speed: 21843.91 samples/sec	accuracy=nan
2023-03-22 18:45:43,830 Node[0] Epoch[27] Batch [120-140]	Speed: 21783.93 samples/sec	accuracy=nan
2023-03-22 18:45:46,824 Node[0] Epoch[27] Batch [140-160]	Speed: 21800.61 samples/sec	accuracy=nan
2023-03-22 18:45:49,819 Node[0] Epoch[27] Batch [160-180]	Speed: 21797.19 samples/sec	accuracy=nan
2023-03-22 18:45:52,813 Node[0] Epoch[27] Batch [180-200]	Speed: 21802.73 samples/sec	accuracy=nan
2023-03-22 18:45:55,805 Node[0] Epoch[27] Batch [200-220]	Speed: 21820.44 samples/sec	accuracy=nan
2023-03-22 18:45:58,796 Node[0] Epoch[27] Batch [220-240]	Speed: 21826.46 samples/sec	accuracy=nan
2023-03-22 18:46:01,787 Node[0] Epoch[27] Batch [240-260]	Speed: 21825.61 samples/sec	accuracy=nan
2023-03-22 18:46:04,785 Node[0] Epoch[27] Batch [260-280]	Speed: 21772.90 samples/sec	accuracy=nan
2023-03-22 18:46:07,783 Node[0] Epoch[27] Batch [280-300]	Speed: 21773.59 samples/sec	accuracy=nan
2023-03-22 18:46:10,777 Node[0] Epoch[27] Batch [300-320]	Speed: 21800.23 samples/sec	accuracy=nan
2023-03-22 18:46:13,771 Node[0] Epoch[27] Batch [320-340]	Speed: 21804.47 samples/sec	accuracy=nan
2023-03-22 18:46:16,764 Node[0] Epoch[27] Batch [340-360]	Speed: 21811.55 samples/sec	accuracy=nan
2023-03-22 18:46:19,756 Node[0] Epoch[27] Batch [360-380]	Speed: 21820.41 samples/sec	accuracy=nan
2023-03-22 18:46:21,550 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:21,550 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:21,550 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:21,550 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:21,551 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:21,551 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528781550, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 18:46:21,551 Node[0] Epoch[27] Time cost=58.688
:::MLLOG {"namespace": "", "time_ms": 1679528781552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21830.23967327139}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-22 18:46:21,551 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528781552, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 18:46:21,552 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:46:24,692 Node[0] Epoch[28] Batch [0-20]	Speed: 21831.09 samples/sec	accuracy=nan
2023-03-22 18:46:27,681 Node[0] Epoch[28] Batch [20-40]	Speed: 21835.73 samples/sec	accuracy=nan
2023-03-22 18:46:30,670 Node[0] Epoch[28] Batch [40-60]	Speed: 21839.77 samples/sec	accuracy=nan
2023-03-22 18:46:33,665 Node[0] Epoch[28] Batch [60-80]	Speed: 21801.62 samples/sec	accuracy=nan
2023-03-22 18:46:36,655 Node[0] Epoch[28] Batch [80-100]	Speed: 21828.48 samples/sec	accuracy=nan
2023-03-22 18:46:39,645 Node[0] Epoch[28] Batch [100-120]	Speed: 21831.84 samples/sec	accuracy=nan
2023-03-22 18:46:42,640 Node[0] Epoch[28] Batch [120-140]	Speed: 21800.31 samples/sec	accuracy=nan
2023-03-22 18:46:45,630 Node[0] Epoch[28] Batch [140-160]	Speed: 21830.94 samples/sec	accuracy=nan
2023-03-22 18:46:48,623 Node[0] Epoch[28] Batch [160-180]	Speed: 21813.90 samples/sec	accuracy=nan
2023-03-22 18:46:51,616 Node[0] Epoch[28] Batch [180-200]	Speed: 21810.85 samples/sec	accuracy=nan
2023-03-22 18:46:54,606 Node[0] Epoch[28] Batch [200-220]	Speed: 21830.21 samples/sec	accuracy=nan
2023-03-22 18:46:57,600 Node[0] Epoch[28] Batch [220-240]	Speed: 21804.90 samples/sec	accuracy=nan
2023-03-22 18:47:00,591 Node[0] Epoch[28] Batch [240-260]	Speed: 21824.89 samples/sec	accuracy=nan
2023-03-22 18:47:03,587 Node[0] Epoch[28] Batch [260-280]	Speed: 21784.36 samples/sec	accuracy=nan
2023-03-22 18:47:06,577 Node[0] Epoch[28] Batch [280-300]	Speed: 21833.70 samples/sec	accuracy=nan
2023-03-22 18:47:11,626 Node[0] Epoch[28] Batch [300-320]	Speed: 12931.09 samples/sec	accuracy=nan
2023-03-22 18:47:14,613 Node[0] Epoch[28] Batch [320-340]	Speed: 21849.87 samples/sec	accuracy=nan
2023-03-22 18:47:17,602 Node[0] Epoch[28] Batch [340-360]	Speed: 21841.99 samples/sec	accuracy=nan
2023-03-22 18:47:20,599 Node[0] Epoch[28] Batch [360-380]	Speed: 21778.73 samples/sec	accuracy=nan
2023-03-22 18:47:22,244 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:22,244 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528842244, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 18:47:22,245 Node[0] Epoch[28] Time cost=60.693
:::MLLOG {"namespace": "", "time_ms": 1679528842245, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21109.016607134447}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679528842245, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 18:47:22,246 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:47:25,386 Node[0] Epoch[29] Batch [0-20]	Speed: 21847.85 samples/sec	accuracy=nan
2023-03-22 18:47:28,377 Node[0] Epoch[29] Batch [20-40]	Speed: 21832.01 samples/sec	accuracy=nan
2023-03-22 18:47:31,376 Node[0] Epoch[29] Batch [40-60]	Speed: 21763.98 samples/sec	accuracy=nan
2023-03-22 18:47:34,371 Node[0] Epoch[29] Batch [60-80]	Speed: 21795.80 samples/sec	accuracy=nan
2023-03-22 18:47:37,362 Node[0] Epoch[29] Batch [80-100]	Speed: 21823.78 samples/sec	accuracy=nan
2023-03-22 18:47:40,357 Node[0] Epoch[29] Batch [100-120]	Speed: 21799.80 samples/sec	accuracy=nan
2023-03-22 18:47:43,347 Node[0] Epoch[29] Batch [120-140]	Speed: 21831.10 samples/sec	accuracy=nan
2023-03-22 18:47:46,338 Node[0] Epoch[29] Batch [140-160]	Speed: 21823.07 samples/sec	accuracy=nan
2023-03-22 18:47:49,329 Node[0] Epoch[29] Batch [160-180]	Speed: 21830.02 samples/sec	accuracy=nan
2023-03-22 18:47:52,323 Node[0] Epoch[29] Batch [180-200]	Speed: 21801.29 samples/sec	accuracy=nan
2023-03-22 18:47:55,313 Node[0] Epoch[29] Batch [200-220]	Speed: 21835.76 samples/sec	accuracy=nan
2023-03-22 18:47:58,306 Node[0] Epoch[29] Batch [220-240]	Speed: 21809.60 samples/sec	accuracy=nan
2023-03-22 18:48:01,298 Node[0] Epoch[29] Batch [240-260]	Speed: 21820.02 samples/sec	accuracy=nan
2023-03-22 18:48:04,289 Node[0] Epoch[29] Batch [260-280]	Speed: 21821.28 samples/sec	accuracy=nan
2023-03-22 18:48:07,281 Node[0] Epoch[29] Batch [280-300]	Speed: 21817.98 samples/sec	accuracy=nan
2023-03-22 18:48:12,677 Node[0] Epoch[29] Batch [300-320]	Speed: 12099.03 samples/sec	accuracy=nan
2023-03-22 18:48:15,662 Node[0] Epoch[29] Batch [320-340]	Speed: 21867.07 samples/sec	accuracy=nan
2023-03-22 18:48:18,647 Node[0] Epoch[29] Batch [340-360]	Speed: 21868.59 samples/sec	accuracy=nan
2023-03-22 18:48:21,634 Node[0] Epoch[29] Batch [360-380]	Speed: 21857.64 samples/sec	accuracy=nan
2023-03-22 18:48:23,430 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,430 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,430 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,431 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,430 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,431 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528903430, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 18:48:23,431 Node[0] Epoch[29] Time cost=61.186
:::MLLOG {"namespace": "", "time_ms": 1679528903432, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20938.900105838475}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679528903432, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 18:48:23,432 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:23,432 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:48:26,581 Node[0] Epoch[30] Batch [0-20]	Speed: 21775.38 samples/sec	accuracy=nan
2023-03-22 18:48:29,570 Node[0] Epoch[30] Batch [20-40]	Speed: 21835.11 samples/sec	accuracy=nan
2023-03-22 18:48:32,569 Node[0] Epoch[30] Batch [40-60]	Speed: 21772.36 samples/sec	accuracy=nan
2023-03-22 18:48:35,561 Node[0] Epoch[30] Batch [60-80]	Speed: 21819.64 samples/sec	accuracy=nan
2023-03-22 18:48:38,554 Node[0] Epoch[30] Batch [80-100]	Speed: 21810.69 samples/sec	accuracy=nan
2023-03-22 18:48:41,547 Node[0] Epoch[30] Batch [100-120]	Speed: 21807.55 samples/sec	accuracy=nan
2023-03-22 18:48:44,537 Node[0] Epoch[30] Batch [120-140]	Speed: 21832.36 samples/sec	accuracy=nan
2023-03-22 18:48:47,530 Node[0] Epoch[30] Batch [140-160]	Speed: 21815.06 samples/sec	accuracy=nan
2023-03-22 18:48:50,521 Node[0] Epoch[30] Batch [160-180]	Speed: 21825.13 samples/sec	accuracy=nan
2023-03-22 18:48:53,511 Node[0] Epoch[30] Batch [180-200]	Speed: 21832.93 samples/sec	accuracy=nan
2023-03-22 18:48:56,506 Node[0] Epoch[30] Batch [200-220]	Speed: 21796.54 samples/sec	accuracy=nan
2023-03-22 18:48:59,499 Node[0] Epoch[30] Batch [220-240]	Speed: 21806.93 samples/sec	accuracy=nan
2023-03-22 18:49:02,496 Node[0] Epoch[30] Batch [240-260]	Speed: 21779.58 samples/sec	accuracy=nan
2023-03-22 18:49:05,490 Node[0] Epoch[30] Batch [260-280]	Speed: 21804.22 samples/sec	accuracy=nan
2023-03-22 18:49:08,484 Node[0] Epoch[30] Batch [280-300]	Speed: 21804.29 samples/sec	accuracy=nan
2023-03-22 18:49:13,436 Node[0] Epoch[30] Batch [300-320]	Speed: 13183.38 samples/sec	accuracy=nan
2023-03-22 18:49:16,425 Node[0] Epoch[30] Batch [320-340]	Speed: 21840.57 samples/sec	accuracy=nan
2023-03-22 18:49:19,414 Node[0] Epoch[30] Batch [340-360]	Speed: 21837.42 samples/sec	accuracy=nan
2023-03-22 18:49:22,404 Node[0] Epoch[30] Batch [360-380]	Speed: 21834.53 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679528964047, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 18:49:24,048 Node[0] Epoch[30] Time cost=60.616
:::MLLOG {"namespace": "", "time_ms": 1679528964048, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21135.869475763397}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679528964192, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 18:49:25,832 Node[0] Epoch[30] Validation-accuracy=0.756480
2023-03-22 18:49:25,832 Node[0] Epoch[30] Validation-correct-count=4728.000000
2023-03-22 18:49:25,832 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679528965833, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679528965833, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74626, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679528965833, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679528965833, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 18:49:25,833 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679528965833, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 18:49:25,833 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:25,833 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:49:28,850 Node[0] Epoch[31] Batch [0-20]	Speed: 21734.97 samples/sec	accuracy=nan
2023-03-22 18:49:31,841 Node[0] Epoch[31] Batch [20-40]	Speed: 21821.58 samples/sec	accuracy=nan
2023-03-22 18:49:34,836 Node[0] Epoch[31] Batch [40-60]	Speed: 21799.33 samples/sec	accuracy=nan
2023-03-22 18:49:37,825 Node[0] Epoch[31] Batch [60-80]	Speed: 21837.46 samples/sec	accuracy=nan
2023-03-22 18:49:40,820 Node[0] Epoch[31] Batch [80-100]	Speed: 21800.26 samples/sec	accuracy=nan
2023-03-22 18:49:43,813 Node[0] Epoch[31] Batch [100-120]	Speed: 21810.57 samples/sec	accuracy=nan
2023-03-22 18:49:46,806 Node[0] Epoch[31] Batch [120-140]	Speed: 21809.80 samples/sec	accuracy=nan
2023-03-22 18:49:49,798 Node[0] Epoch[31] Batch [140-160]	Speed: 21813.60 samples/sec	accuracy=nan
2023-03-22 18:49:52,795 Node[0] Epoch[31] Batch [160-180]	Speed: 21784.82 samples/sec	accuracy=nan
2023-03-22 18:49:55,789 Node[0] Epoch[31] Batch [180-200]	Speed: 21802.05 samples/sec	accuracy=nan
2023-03-22 18:49:58,790 Node[0] Epoch[31] Batch [200-220]	Speed: 21753.32 samples/sec	accuracy=nan
2023-03-22 18:50:01,782 Node[0] Epoch[31] Batch [220-240]	Speed: 21816.01 samples/sec	accuracy=nan
2023-03-22 18:50:04,774 Node[0] Epoch[31] Batch [240-260]	Speed: 21825.72 samples/sec	accuracy=nan
2023-03-22 18:50:07,770 Node[0] Epoch[31] Batch [260-280]	Speed: 21781.65 samples/sec	accuracy=nan
2023-03-22 18:50:10,770 Node[0] Epoch[31] Batch [280-300]	Speed: 21762.99 samples/sec	accuracy=nan
2023-03-22 18:50:13,771 Node[0] Epoch[31] Batch [300-320]	Speed: 21750.83 samples/sec	accuracy=nan
2023-03-22 18:50:16,765 Node[0] Epoch[31] Batch [320-340]	Speed: 21809.09 samples/sec	accuracy=nan
2023-03-22 18:50:19,756 Node[0] Epoch[31] Batch [340-360]	Speed: 21823.80 samples/sec	accuracy=nan
2023-03-22 18:50:22,752 Node[0] Epoch[31] Batch [360-380]	Speed: 21789.19 samples/sec	accuracy=nan
2023-03-22 18:50:24,545 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:24,545 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:24,545 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:24,545 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:24,546 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529024545, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 18:50:24,546 Node[0] Epoch[31] Time cost=58.713
:::MLLOG {"namespace": "", "time_ms": 1679529024546, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21820.919819523224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-22 18:50:24,546 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529024547, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 18:50:24,547 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:24,547 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:50:27,694 Node[0] Epoch[32] Batch [0-20]	Speed: 21782.59 samples/sec	accuracy=nan
2023-03-22 18:50:30,688 Node[0] Epoch[32] Batch [20-40]	Speed: 21805.38 samples/sec	accuracy=nan
2023-03-22 18:50:33,683 Node[0] Epoch[32] Batch [40-60]	Speed: 21794.60 samples/sec	accuracy=nan
2023-03-22 18:50:36,680 Node[0] Epoch[32] Batch [60-80]	Speed: 21781.31 samples/sec	accuracy=nan
2023-03-22 18:50:39,674 Node[0] Epoch[32] Batch [80-100]	Speed: 21807.59 samples/sec	accuracy=nan
2023-03-22 18:50:42,670 Node[0] Epoch[32] Batch [100-120]	Speed: 21790.31 samples/sec	accuracy=nan
2023-03-22 18:50:45,664 Node[0] Epoch[32] Batch [120-140]	Speed: 21800.23 samples/sec	accuracy=nan
2023-03-22 18:50:48,656 Node[0] Epoch[32] Batch [140-160]	Speed: 21820.15 samples/sec	accuracy=nan
2023-03-22 18:50:51,653 Node[0] Epoch[32] Batch [160-180]	Speed: 21781.88 samples/sec	accuracy=nan
2023-03-22 18:50:54,648 Node[0] Epoch[32] Batch [180-200]	Speed: 21797.91 samples/sec	accuracy=nan
2023-03-22 18:50:57,643 Node[0] Epoch[32] Batch [200-220]	Speed: 21794.61 samples/sec	accuracy=nan
2023-03-22 18:51:00,633 Node[0] Epoch[32] Batch [220-240]	Speed: 21831.36 samples/sec	accuracy=nan
2023-03-22 18:51:03,627 Node[0] Epoch[32] Batch [240-260]	Speed: 21806.66 samples/sec	accuracy=nan
2023-03-22 18:51:06,619 Node[0] Epoch[32] Batch [260-280]	Speed: 21815.93 samples/sec	accuracy=nan
2023-03-22 18:51:09,624 Node[0] Epoch[32] Batch [280-300]	Speed: 21724.97 samples/sec	accuracy=nan
2023-03-22 18:51:12,626 Node[0] Epoch[32] Batch [300-320]	Speed: 21746.49 samples/sec	accuracy=nan
2023-03-22 18:51:15,623 Node[0] Epoch[32] Batch [320-340]	Speed: 21781.96 samples/sec	accuracy=nan
2023-03-22 18:51:18,612 Node[0] Epoch[32] Batch [340-360]	Speed: 21836.51 samples/sec	accuracy=nan
2023-03-22 18:51:21,604 Node[0] Epoch[32] Batch [360-380]	Speed: 21817.06 samples/sec	accuracy=nan
2023-03-22 18:51:23,247 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:51:23,247 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:51:23,247 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:51:23,247 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:51:23,247 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529083247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 18:51:23,247 Node[0] Epoch[32] Time cost=58.700
2023-03-22 18:51:23,247 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529083247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21825.515812011465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-22 18:51:23,247 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529083248, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 18:51:23,248 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:51:26,396 Node[0] Epoch[33] Batch [0-20]	Speed: 21796.55 samples/sec	accuracy=nan
2023-03-22 18:51:29,390 Node[0] Epoch[33] Batch [20-40]	Speed: 21802.04 samples/sec	accuracy=nan
2023-03-22 18:51:32,383 Node[0] Epoch[33] Batch [40-60]	Speed: 21807.20 samples/sec	accuracy=nan
2023-03-22 18:51:35,378 Node[0] Epoch[33] Batch [60-80]	Speed: 21798.10 samples/sec	accuracy=nan
2023-03-22 18:51:38,374 Node[0] Epoch[33] Batch [80-100]	Speed: 21787.44 samples/sec	accuracy=nan
2023-03-22 18:51:41,367 Node[0] Epoch[33] Batch [100-120]	Speed: 21810.05 samples/sec	accuracy=nan
2023-03-22 18:51:44,364 Node[0] Epoch[33] Batch [120-140]	Speed: 21786.46 samples/sec	accuracy=nan
2023-03-22 18:51:47,363 Node[0] Epoch[33] Batch [140-160]	Speed: 21765.72 samples/sec	accuracy=nan
2023-03-22 18:51:50,362 Node[0] Epoch[33] Batch [160-180]	Speed: 21765.96 samples/sec	accuracy=nan
2023-03-22 18:51:53,357 Node[0] Epoch[33] Batch [180-200]	Speed: 21794.18 samples/sec	accuracy=nan
2023-03-22 18:51:56,351 Node[0] Epoch[33] Batch [200-220]	Speed: 21803.18 samples/sec	accuracy=nan
2023-03-22 18:51:59,348 Node[0] Epoch[33] Batch [220-240]	Speed: 21785.71 samples/sec	accuracy=nan
2023-03-22 18:52:02,350 Node[0] Epoch[33] Batch [240-260]	Speed: 21743.12 samples/sec	accuracy=nan
2023-03-22 18:52:05,346 Node[0] Epoch[33] Batch [260-280]	Speed: 21786.95 samples/sec	accuracy=nan
2023-03-22 18:52:08,341 Node[0] Epoch[33] Batch [280-300]	Speed: 21798.73 samples/sec	accuracy=nan
2023-03-22 18:52:11,339 Node[0] Epoch[33] Batch [300-320]	Speed: 21772.92 samples/sec	accuracy=nan
2023-03-22 18:52:14,330 Node[0] Epoch[33] Batch [320-340]	Speed: 21825.27 samples/sec	accuracy=nan
2023-03-22 18:52:17,320 Node[0] Epoch[33] Batch [340-360]	Speed: 21835.98 samples/sec	accuracy=nan
2023-03-22 18:52:20,311 Node[0] Epoch[33] Batch [360-380]	Speed: 21827.03 samples/sec	accuracy=nan
2023-03-22 18:52:22,103 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:52:22,103 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:52:22,103 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:52:22,103 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:52:22,103 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529142103, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 18:52:22,104 Node[0] Epoch[33] Time cost=58.857
2023-03-22 18:52:22,104 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529142104, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21767.584307525805}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-22 18:52:22,104 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529142105, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 18:52:22,105 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:52:25,251 Node[0] Epoch[34] Batch [0-20]	Speed: 21795.73 samples/sec	accuracy=nan
2023-03-22 18:52:28,244 Node[0] Epoch[34] Batch [20-40]	Speed: 21811.82 samples/sec	accuracy=nan
2023-03-22 18:52:31,237 Node[0] Epoch[34] Batch [40-60]	Speed: 21807.59 samples/sec	accuracy=nan
2023-03-22 18:52:34,233 Node[0] Epoch[34] Batch [60-80]	Speed: 21790.65 samples/sec	accuracy=nan
2023-03-22 18:52:37,225 Node[0] Epoch[34] Batch [80-100]	Speed: 21818.65 samples/sec	accuracy=nan
2023-03-22 18:52:40,217 Node[0] Epoch[34] Batch [100-120]	Speed: 21817.38 samples/sec	accuracy=nan
2023-03-22 18:52:43,214 Node[0] Epoch[34] Batch [120-140]	Speed: 21781.49 samples/sec	accuracy=nan
2023-03-22 18:52:46,206 Node[0] Epoch[34] Batch [140-160]	Speed: 21820.78 samples/sec	accuracy=nan
2023-03-22 18:52:49,198 Node[0] Epoch[34] Batch [160-180]	Speed: 21816.90 samples/sec	accuracy=nan
2023-03-22 18:52:52,192 Node[0] Epoch[34] Batch [180-200]	Speed: 21804.31 samples/sec	accuracy=nan
2023-03-22 18:52:55,187 Node[0] Epoch[34] Batch [200-220]	Speed: 21791.17 samples/sec	accuracy=nan
2023-03-22 18:52:58,179 Node[0] Epoch[34] Batch [220-240]	Speed: 21822.86 samples/sec	accuracy=nan
2023-03-22 18:53:01,176 Node[0] Epoch[34] Batch [240-260]	Speed: 21778.69 samples/sec	accuracy=nan
2023-03-22 18:53:04,178 Node[0] Epoch[34] Batch [260-280]	Speed: 21747.13 samples/sec	accuracy=nan
2023-03-22 18:53:07,172 Node[0] Epoch[34] Batch [280-300]	Speed: 21801.04 samples/sec	accuracy=nan
2023-03-22 18:53:12,720 Node[0] Epoch[34] Batch [300-320]	Speed: 11765.86 samples/sec	accuracy=nan
2023-03-22 18:53:17,977 Node[0] Epoch[34] Batch [320-340]	Speed: 12418.78 samples/sec	accuracy=nan
2023-03-22 18:53:20,962 Node[0] Epoch[34] Batch [340-360]	Speed: 21871.35 samples/sec	accuracy=nan
2023-03-22 18:53:23,951 Node[0] Epoch[34] Batch [360-380]	Speed: 21839.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679529205742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 18:53:25,743 Node[0] Epoch[34] Time cost=63.638
:::MLLOG {"namespace": "", "time_ms": 1679529205743, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20132.16452558264}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679529205886, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 18:53:27,331 Node[0] Epoch[34] Validation-accuracy=0.762560
2023-03-22 18:53:27,331 Node[0] Epoch[34] Validation-correct-count=4766.000000
2023-03-22 18:53:27,331 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679529207398, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679529207399, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7602, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679529207399, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679529207399, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529221
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:41 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:41 PM
+ result=2223
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2223,root,2023-03-22 06:16:38 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2223,root,2023-03-22 06:16:38 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529222
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:42 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:42 PM
+ result=2224
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM'
RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529222
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:42 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:42 PM
+ result=2224
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM'
RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529222
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:42 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:42 PM
+ result=2224
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM'
RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529222
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:42 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:42 PM
+ result=2224
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2224,root,2023-03-22 06:16:38 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529223
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:43 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:43 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:43 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 06:16:38 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 06:16:38 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529223
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:43 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:43 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:43 PM
+ result=2225
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 06:16:38 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2225,root,2023-03-22 06:16:38 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679529224
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:53:44 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:53:44 PM'
ENDING TIMING RUN AT 2023-03-22 06:53:44 PM
+ result=2226
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 06:16:38 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2226,root,2023-03-22 06:16:38 PM'
+ export PROFILE=0
+ PROFILE=0
