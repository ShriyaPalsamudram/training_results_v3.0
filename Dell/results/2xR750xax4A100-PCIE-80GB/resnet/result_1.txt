+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 '
+ echo 'hosts=node040 node041 '
hosts=node040 node041 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679524701464, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524701499, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524701500, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524701502, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524701503, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679524715258, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679524720454, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524720489, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524720490, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524720492, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524720493, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679524731226, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=32495
+ SEED=32495
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ source ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start=1679524732
+ start=1679524732
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:38:52 PM'
+ start_fmt='2023-03-22 05:38:52 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ readonly local_rank=0
+ local_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ SLURM_NTASKS_PER_NODE=4
+ INPUT_BATCH_MULTIPLIER=1
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ BATCHSIZE=408
+ LR=12.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=12.5
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ SEED=32495
+ DALI_HW_DECODER_LOAD=0
+ EVAL_OFFSET=2
+ WD=5.0e-05
+ EVAL_PERIOD=4
+ LABELSMOOTHING=0.1
+ DALI_PREFETCH_QUEUE=5
+ SEED=32495
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
++ export DGXSYSTEM=2xR750xax4A100
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ DGXSYSTEM=2xR750xax4A100
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DONT_USE_MMAP=0
++ export WALLTIME=00:40:00
+ NUMEPOCHS=37
++ WALLTIME=00:40:00
+ BN_GROUP=1
+ PROFILE=0
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ NODALI=0
+ NUMEXAMPLES=
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ PROFILE=0
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ PROFILE_ALL_LOCAL_RANKS=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ THR=0.759
+ NUMEXAMPLES=
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ PROFILE_ALL_LOCAL_RANKS=0
+ [[ 0 == 1 ]]
+ THR=0.759
+ DATAROOT=/data
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ echo 'running benchmark'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679524732
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:38:52 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ GPUS=0,1,2,3
+ THR=0.759
+ GPUS=0,1,2,3
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ source ./config_2xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ dirname ./config_2xR750xax4A100.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679524732
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:38:52 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
++ export DGXSYSTEM=2xR750xax4A100
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ date +%s
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679524732
+ start=1679524732
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 05:38:52 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
+ start_fmt='2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
running benchmark
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ date +%s
+ start=1679524732
+ start=1679524732
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ start_fmt='2023-03-22 05:38:52 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ readonly global_rank=0
+ global_rank=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ start_fmt='2023-03-22 05:38:52 PM'
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ echo 'STARTING TIMING RUN AT 2023-03-22 05:38:52 PM'
STARTING TIMING RUN AT 2023-03-22 05:38:52 PM
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ readonly global_rank=0
+ global_rank=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ GPUS=0,1,2,3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ LABELSMOOTHING=0.1
+ SEED=32495
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32495 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:16313] MCW rank 0 is not bound (or bound to all available processors)
[node040:16317] MCW rank 1 is not bound (or bound to all available processors)
[node040:16329] MCW rank 3 is not bound (or bound to all available processors)
[node040:16312] MCW rank 2 is not bound (or bound to all available processors)
[node041:13445] MCW rank 7 is not bound (or bound to all available processors)
[node041:13443] MCW rank 5 is not bound (or bound to all available processors)
[node041:13444] MCW rank 4 is not bound (or bound to all available processors)
[node041:13442] MCW rank 6 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679524737001, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[17:39:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:39:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679524744906, "event_type": "POINT_IN_TIME", "key": "seed", "value": 32495, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679524746256, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[17:39:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:39:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679524751164, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751165, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751165, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751166, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751166, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751166, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751166, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751167, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751167, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751167, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751168, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751168, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751168, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751168, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751169, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751169, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751169, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751169, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751170, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751170, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751170, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751170, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751171, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751171, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751171, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751171, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751172, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751172, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751172, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679524751207, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,788 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32015, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,788 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37255, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,788 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12878, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,788 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42837, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,791 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32763, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,791 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56871, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,791 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60715, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 17:39:12,792 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12155, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679524752791, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679524752793, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679524752793, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679524752793, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679524752793, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679524752794, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679524839897, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679524839898, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679524839898, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679524840531, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679524840677, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679524840677, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 17:40:43,719 Node[0] Epoch[0] Batch [0-20]	Speed: 21582.13 samples/sec	accuracy=nan
2023-03-22 17:40:46,721 Node[0] Epoch[0] Batch [20-40]	Speed: 21749.94 samples/sec	accuracy=nan
2023-03-22 17:40:49,719 Node[0] Epoch[0] Batch [40-60]	Speed: 21774.65 samples/sec	accuracy=nan
2023-03-22 17:40:52,721 Node[0] Epoch[0] Batch [60-80]	Speed: 21745.76 samples/sec	accuracy=nan
2023-03-22 17:40:55,718 Node[0] Epoch[0] Batch [80-100]	Speed: 21781.40 samples/sec	accuracy=nan
2023-03-22 17:40:58,715 Node[0] Epoch[0] Batch [100-120]	Speed: 21780.80 samples/sec	accuracy=nan
2023-03-22 17:41:01,707 Node[0] Epoch[0] Batch [120-140]	Speed: 21817.30 samples/sec	accuracy=nan
2023-03-22 17:41:04,702 Node[0] Epoch[0] Batch [140-160]	Speed: 21797.59 samples/sec	accuracy=nan
2023-03-22 17:41:07,699 Node[0] Epoch[0] Batch [160-180]	Speed: 21779.07 samples/sec	accuracy=nan
2023-03-22 17:41:10,706 Node[0] Epoch[0] Batch [180-200]	Speed: 21709.70 samples/sec	accuracy=nan
2023-03-22 17:41:13,706 Node[0] Epoch[0] Batch [200-220]	Speed: 21762.46 samples/sec	accuracy=nan
2023-03-22 17:41:23,757 Node[0] Epoch[0] Batch [220-240]	Speed: 6494.79 samples/sec	accuracy=nan
2023-03-22 17:41:31,121 Node[0] Epoch[0] Batch [240-260]	Speed: 8864.89 samples/sec	accuracy=nan
2023-03-22 17:41:36,129 Node[0] Epoch[0] Batch [260-280]	Speed: 13034.35 samples/sec	accuracy=nan
2023-03-22 17:41:39,126 Node[0] Epoch[0] Batch [280-300]	Speed: 21783.34 samples/sec	accuracy=nan
2023-03-22 17:41:42,122 Node[0] Epoch[0] Batch [300-320]	Speed: 21790.58 samples/sec	accuracy=nan
2023-03-22 17:41:45,119 Node[0] Epoch[0] Batch [320-340]	Speed: 21779.96 samples/sec	accuracy=nan
2023-03-22 17:41:48,117 Node[0] Epoch[0] Batch [340-360]	Speed: 21778.12 samples/sec	accuracy=nan
2023-03-22 17:41:51,116 Node[0] Epoch[0] Batch [360-380]	Speed: 21765.02 samples/sec	accuracy=nan
2023-03-22 17:41:52,915 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,915 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,915 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,916 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,916 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,916 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:52,916 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524912915, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 17:41:52,916 Node[0] Epoch[0] Time cost=72.239
:::MLLOG {"namespace": "", "time_ms": 1679524912916, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17735.155456096705}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679524912917, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 17:41:52,918 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:41:56,076 Node[0] Epoch[1] Batch [0-20]	Speed: 21700.79 samples/sec	accuracy=nan
2023-03-22 17:41:59,080 Node[0] Epoch[1] Batch [20-40]	Speed: 21723.79 samples/sec	accuracy=nan
2023-03-22 17:42:02,091 Node[0] Epoch[1] Batch [40-60]	Speed: 21681.07 samples/sec	accuracy=nan
2023-03-22 17:42:05,097 Node[0] Epoch[1] Batch [60-80]	Speed: 21717.55 samples/sec	accuracy=nan
2023-03-22 17:42:08,100 Node[0] Epoch[1] Batch [80-100]	Speed: 21739.81 samples/sec	accuracy=nan
2023-03-22 17:42:11,101 Node[0] Epoch[1] Batch [100-120]	Speed: 21754.40 samples/sec	accuracy=nan
2023-03-22 17:42:14,101 Node[0] Epoch[1] Batch [120-140]	Speed: 21761.50 samples/sec	accuracy=nan
2023-03-22 17:42:17,100 Node[0] Epoch[1] Batch [140-160]	Speed: 21765.67 samples/sec	accuracy=nan
2023-03-22 17:42:20,102 Node[0] Epoch[1] Batch [160-180]	Speed: 21742.45 samples/sec	accuracy=nan
2023-03-22 17:42:23,101 Node[0] Epoch[1] Batch [180-200]	Speed: 21770.04 samples/sec	accuracy=nan
2023-03-22 17:42:26,100 Node[0] Epoch[1] Batch [200-220]	Speed: 21769.15 samples/sec	accuracy=nan
2023-03-22 17:42:29,100 Node[0] Epoch[1] Batch [220-240]	Speed: 21759.83 samples/sec	accuracy=nan
2023-03-22 17:42:32,102 Node[0] Epoch[1] Batch [240-260]	Speed: 21744.85 samples/sec	accuracy=nan
2023-03-22 17:42:35,105 Node[0] Epoch[1] Batch [260-280]	Speed: 21733.97 samples/sec	accuracy=nan
2023-03-22 17:42:38,107 Node[0] Epoch[1] Batch [280-300]	Speed: 21746.72 samples/sec	accuracy=nan
2023-03-22 17:42:41,117 Node[0] Epoch[1] Batch [300-320]	Speed: 21687.26 samples/sec	accuracy=nan
2023-03-22 17:42:44,121 Node[0] Epoch[1] Batch [320-340]	Speed: 21735.08 samples/sec	accuracy=nan
2023-03-22 17:42:47,121 Node[0] Epoch[1] Batch [340-360]	Speed: 21758.56 samples/sec	accuracy=nan
2023-03-22 17:42:50,126 Node[0] Epoch[1] Batch [360-380]	Speed: 21725.01 samples/sec	accuracy=nan
2023-03-22 17:42:51,925 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,925 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,925 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,925 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,925 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,925 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:51,926 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679524971925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 17:42:51,927 Node[0] Epoch[1] Time cost=59.009
:::MLLOG {"namespace": "", "time_ms": 1679524971927, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21711.295615290728}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679524971928, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 17:42:51,928 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:42:55,080 Node[0] Epoch[2] Batch [0-20]	Speed: 21733.34 samples/sec	accuracy=nan
2023-03-22 17:42:58,081 Node[0] Epoch[2] Batch [20-40]	Speed: 21751.36 samples/sec	accuracy=nan
2023-03-22 17:43:01,083 Node[0] Epoch[2] Batch [40-60]	Speed: 21748.87 samples/sec	accuracy=nan
2023-03-22 17:43:04,086 Node[0] Epoch[2] Batch [60-80]	Speed: 21739.32 samples/sec	accuracy=nan
2023-03-22 17:43:07,084 Node[0] Epoch[2] Batch [80-100]	Speed: 21770.93 samples/sec	accuracy=nan
2023-03-22 17:43:10,089 Node[0] Epoch[2] Batch [100-120]	Speed: 21728.01 samples/sec	accuracy=nan
2023-03-22 17:43:13,090 Node[0] Epoch[2] Batch [120-140]	Speed: 21753.20 samples/sec	accuracy=nan
2023-03-22 17:43:16,089 Node[0] Epoch[2] Batch [140-160]	Speed: 21765.22 samples/sec	accuracy=nan
2023-03-22 17:43:19,090 Node[0] Epoch[2] Batch [160-180]	Speed: 21748.65 samples/sec	accuracy=nan
2023-03-22 17:43:22,092 Node[0] Epoch[2] Batch [180-200]	Speed: 21750.99 samples/sec	accuracy=nan
2023-03-22 17:43:25,099 Node[0] Epoch[2] Batch [200-220]	Speed: 21707.98 samples/sec	accuracy=nan
2023-03-22 17:43:28,098 Node[0] Epoch[2] Batch [220-240]	Speed: 21763.56 samples/sec	accuracy=nan
2023-03-22 17:43:31,099 Node[0] Epoch[2] Batch [240-260]	Speed: 21759.20 samples/sec	accuracy=nan
2023-03-22 17:43:34,099 Node[0] Epoch[2] Batch [260-280]	Speed: 21754.65 samples/sec	accuracy=nan
2023-03-22 17:43:37,101 Node[0] Epoch[2] Batch [280-300]	Speed: 21747.47 samples/sec	accuracy=nan
2023-03-22 17:43:40,099 Node[0] Epoch[2] Batch [300-320]	Speed: 21772.97 samples/sec	accuracy=nan
2023-03-22 17:43:43,102 Node[0] Epoch[2] Batch [320-340]	Speed: 21739.33 samples/sec	accuracy=nan
2023-03-22 17:43:46,103 Node[0] Epoch[2] Batch [340-360]	Speed: 21751.89 samples/sec	accuracy=nan
2023-03-22 17:43:49,111 Node[0] Epoch[2] Batch [360-380]	Speed: 21701.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679525030760, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 17:43:50,761 Node[0] Epoch[2] Time cost=58.833
:::MLLOG {"namespace": "", "time_ms": 1679525030761, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21776.29649633396}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679525030906, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 17:43:50,906 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:50,906 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:52,269 Node[0] Epoch[2] Validation-accuracy=0.310880
2023-03-22 17:43:52,269 Node[0] Epoch[2] Validation-correct-count=1943.000000
2023-03-22 17:43:52,269 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679525032326, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 17:43:52,326 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:52,326 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525032326, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3099, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 17:43:52,326 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:52,326 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525032326, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 17:43:52,326 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525032326, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 17:43:52,326 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:52,326 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525032327, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 17:43:52,327 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:43:55,359 Node[0] Epoch[3] Batch [0-20]	Speed: 21589.74 samples/sec	accuracy=nan
2023-03-22 17:43:58,361 Node[0] Epoch[3] Batch [20-40]	Speed: 21742.09 samples/sec	accuracy=nan
2023-03-22 17:44:01,361 Node[0] Epoch[3] Batch [40-60]	Speed: 21759.06 samples/sec	accuracy=nan
2023-03-22 17:44:04,361 Node[0] Epoch[3] Batch [60-80]	Speed: 21758.52 samples/sec	accuracy=nan
2023-03-22 17:44:07,362 Node[0] Epoch[3] Batch [80-100]	Speed: 21756.11 samples/sec	accuracy=nan
2023-03-22 17:44:10,363 Node[0] Epoch[3] Batch [100-120]	Speed: 21750.05 samples/sec	accuracy=nan
2023-03-22 17:44:13,361 Node[0] Epoch[3] Batch [120-140]	Speed: 21773.70 samples/sec	accuracy=nan
2023-03-22 17:44:16,359 Node[0] Epoch[3] Batch [140-160]	Speed: 21779.59 samples/sec	accuracy=nan
2023-03-22 17:44:19,363 Node[0] Epoch[3] Batch [160-180]	Speed: 21726.04 samples/sec	accuracy=nan
2023-03-22 17:44:22,365 Node[0] Epoch[3] Batch [180-200]	Speed: 21750.74 samples/sec	accuracy=nan
2023-03-22 17:44:25,365 Node[0] Epoch[3] Batch [200-220]	Speed: 21755.80 samples/sec	accuracy=nan
2023-03-22 17:44:28,363 Node[0] Epoch[3] Batch [220-240]	Speed: 21779.10 samples/sec	accuracy=nan
2023-03-22 17:44:31,367 Node[0] Epoch[3] Batch [240-260]	Speed: 21726.91 samples/sec	accuracy=nan
2023-03-22 17:44:34,367 Node[0] Epoch[3] Batch [260-280]	Speed: 21759.53 samples/sec	accuracy=nan
2023-03-22 17:44:37,367 Node[0] Epoch[3] Batch [280-300]	Speed: 21761.25 samples/sec	accuracy=nan
2023-03-22 17:44:40,367 Node[0] Epoch[3] Batch [300-320]	Speed: 21759.70 samples/sec	accuracy=nan
2023-03-22 17:44:43,368 Node[0] Epoch[3] Batch [320-340]	Speed: 21754.31 samples/sec	accuracy=nan
2023-03-22 17:44:46,368 Node[0] Epoch[3] Batch [340-360]	Speed: 21758.14 samples/sec	accuracy=nan
2023-03-22 17:44:49,366 Node[0] Epoch[3] Batch [360-380]	Speed: 21774.62 samples/sec	accuracy=nan
2023-03-22 17:44:51,163 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,163 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,163 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,163 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,163 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,163 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:51,164 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525091164, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 17:44:51,165 Node[0] Epoch[3] Time cost=58.839
:::MLLOG {"namespace": "", "time_ms": 1679525091165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21774.227553869576}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679525091166, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 17:44:51,166 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:44:54,317 Node[0] Epoch[4] Batch [0-20]	Speed: 21741.15 samples/sec	accuracy=nan
2023-03-22 17:44:57,313 Node[0] Epoch[4] Batch [20-40]	Speed: 21784.95 samples/sec	accuracy=nan
2023-03-22 17:45:00,312 Node[0] Epoch[4] Batch [40-60]	Speed: 21771.17 samples/sec	accuracy=nan
2023-03-22 17:45:03,311 Node[0] Epoch[4] Batch [60-80]	Speed: 21769.72 samples/sec	accuracy=nan
2023-03-22 17:45:06,311 Node[0] Epoch[4] Batch [80-100]	Speed: 21755.53 samples/sec	accuracy=nan
2023-03-22 17:45:09,311 Node[0] Epoch[4] Batch [100-120]	Speed: 21762.31 samples/sec	accuracy=nan
2023-03-22 17:45:12,313 Node[0] Epoch[4] Batch [120-140]	Speed: 21746.68 samples/sec	accuracy=nan
2023-03-22 17:45:15,313 Node[0] Epoch[4] Batch [140-160]	Speed: 21761.42 samples/sec	accuracy=nan
2023-03-22 17:45:18,314 Node[0] Epoch[4] Batch [160-180]	Speed: 21751.17 samples/sec	accuracy=nan
2023-03-22 17:45:21,315 Node[0] Epoch[4] Batch [180-200]	Speed: 21748.90 samples/sec	accuracy=nan
2023-03-22 17:45:24,314 Node[0] Epoch[4] Batch [200-220]	Speed: 21769.38 samples/sec	accuracy=nan
2023-03-22 17:45:27,315 Node[0] Epoch[4] Batch [220-240]	Speed: 21752.75 samples/sec	accuracy=nan
2023-03-22 17:45:30,316 Node[0] Epoch[4] Batch [240-260]	Speed: 21754.15 samples/sec	accuracy=nan
2023-03-22 17:45:33,316 Node[0] Epoch[4] Batch [260-280]	Speed: 21760.27 samples/sec	accuracy=nan
2023-03-22 17:45:36,313 Node[0] Epoch[4] Batch [280-300]	Speed: 21782.66 samples/sec	accuracy=nan
2023-03-22 17:45:39,310 Node[0] Epoch[4] Batch [300-320]	Speed: 21778.55 samples/sec	accuracy=nan
2023-03-22 17:45:42,313 Node[0] Epoch[4] Batch [320-340]	Speed: 21742.18 samples/sec	accuracy=nan
2023-03-22 17:45:45,315 Node[0] Epoch[4] Batch [340-360]	Speed: 21743.39 samples/sec	accuracy=nan
2023-03-22 17:45:48,316 Node[0] Epoch[4] Batch [360-380]	Speed: 21749.96 samples/sec	accuracy=nan
2023-03-22 17:45:49,964 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525149965, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 17:45:49,965 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:49,965 Node[0] Epoch[4] Time cost=58.799
:::MLLOG {"namespace": "", "time_ms": 1679525149965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21788.874966612293}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679525149966, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 17:45:49,966 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:45:53,119 Node[0] Epoch[5] Batch [0-20]	Speed: 21767.24 samples/sec	accuracy=nan
2023-03-22 17:45:56,118 Node[0] Epoch[5] Batch [20-40]	Speed: 21762.41 samples/sec	accuracy=nan
2023-03-22 17:45:59,126 Node[0] Epoch[5] Batch [40-60]	Speed: 21701.65 samples/sec	accuracy=nan
2023-03-22 17:46:02,130 Node[0] Epoch[5] Batch [60-80]	Speed: 21732.44 samples/sec	accuracy=nan
2023-03-22 17:46:05,133 Node[0] Epoch[5] Batch [80-100]	Speed: 21741.64 samples/sec	accuracy=nan
2023-03-22 17:46:08,132 Node[0] Epoch[5] Batch [100-120]	Speed: 21763.04 samples/sec	accuracy=nan
2023-03-22 17:46:11,132 Node[0] Epoch[5] Batch [120-140]	Speed: 21759.15 samples/sec	accuracy=nan
2023-03-22 17:46:14,132 Node[0] Epoch[5] Batch [140-160]	Speed: 21764.77 samples/sec	accuracy=nan
2023-03-22 17:46:17,141 Node[0] Epoch[5] Batch [160-180]	Speed: 21693.69 samples/sec	accuracy=nan
2023-03-22 17:46:20,142 Node[0] Epoch[5] Batch [180-200]	Speed: 21754.31 samples/sec	accuracy=nan
2023-03-22 17:46:23,145 Node[0] Epoch[5] Batch [200-220]	Speed: 21737.56 samples/sec	accuracy=nan
2023-03-22 17:46:26,149 Node[0] Epoch[5] Batch [220-240]	Speed: 21733.10 samples/sec	accuracy=nan
2023-03-22 17:46:29,153 Node[0] Epoch[5] Batch [240-260]	Speed: 21730.58 samples/sec	accuracy=nan
2023-03-22 17:46:32,160 Node[0] Epoch[5] Batch [260-280]	Speed: 21704.72 samples/sec	accuracy=nan
2023-03-22 17:46:35,165 Node[0] Epoch[5] Batch [280-300]	Speed: 21727.35 samples/sec	accuracy=nan
2023-03-22 17:46:38,165 Node[0] Epoch[5] Batch [300-320]	Speed: 21755.46 samples/sec	accuracy=nan
2023-03-22 17:46:41,163 Node[0] Epoch[5] Batch [320-340]	Speed: 21778.50 samples/sec	accuracy=nan
2023-03-22 17:46:44,162 Node[0] Epoch[5] Batch [340-360]	Speed: 21766.65 samples/sec	accuracy=nan
2023-03-22 17:46:47,163 Node[0] Epoch[5] Batch [360-380]	Speed: 21754.06 samples/sec	accuracy=nan
2023-03-22 17:46:48,962 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,962 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,962 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,962 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,962 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,963 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:48,963 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525208962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 17:46:48,964 Node[0] Epoch[5] Time cost=58.998
:::MLLOG {"namespace": "", "time_ms": 1679525208964, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21715.541549912443}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679525208964, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 17:46:48,964 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:46:52,125 Node[0] Epoch[6] Batch [0-20]	Speed: 21684.67 samples/sec	accuracy=nan
2023-03-22 17:46:55,130 Node[0] Epoch[6] Batch [20-40]	Speed: 21729.33 samples/sec	accuracy=nan
2023-03-22 17:46:58,126 Node[0] Epoch[6] Batch [40-60]	Speed: 21788.47 samples/sec	accuracy=nan
2023-03-22 17:47:01,126 Node[0] Epoch[6] Batch [60-80]	Speed: 21758.68 samples/sec	accuracy=nan
2023-03-22 17:47:04,130 Node[0] Epoch[6] Batch [80-100]	Speed: 21729.60 samples/sec	accuracy=nan
2023-03-22 17:47:07,136 Node[0] Epoch[6] Batch [100-120]	Speed: 21718.76 samples/sec	accuracy=nan
2023-03-22 17:47:10,133 Node[0] Epoch[6] Batch [120-140]	Speed: 21776.42 samples/sec	accuracy=nan
2023-03-22 17:47:13,134 Node[0] Epoch[6] Batch [140-160]	Speed: 21752.91 samples/sec	accuracy=nan
2023-03-22 17:47:16,138 Node[0] Epoch[6] Batch [160-180]	Speed: 21736.10 samples/sec	accuracy=nan
2023-03-22 17:47:19,142 Node[0] Epoch[6] Batch [180-200]	Speed: 21729.30 samples/sec	accuracy=nan
2023-03-22 17:47:22,144 Node[0] Epoch[6] Batch [200-220]	Speed: 21749.27 samples/sec	accuracy=nan
2023-03-22 17:47:25,142 Node[0] Epoch[6] Batch [220-240]	Speed: 21771.91 samples/sec	accuracy=nan
2023-03-22 17:47:28,140 Node[0] Epoch[6] Batch [240-260]	Speed: 21774.51 samples/sec	accuracy=nan
2023-03-22 17:47:31,143 Node[0] Epoch[6] Batch [260-280]	Speed: 21740.69 samples/sec	accuracy=nan
2023-03-22 17:47:34,143 Node[0] Epoch[6] Batch [280-300]	Speed: 21753.71 samples/sec	accuracy=nan
2023-03-22 17:47:37,142 Node[0] Epoch[6] Batch [300-320]	Speed: 21769.57 samples/sec	accuracy=nan
2023-03-22 17:47:40,143 Node[0] Epoch[6] Batch [320-340]	Speed: 21754.53 samples/sec	accuracy=nan
2023-03-22 17:47:43,149 Node[0] Epoch[6] Batch [340-360]	Speed: 21718.82 samples/sec	accuracy=nan
2023-03-22 17:47:46,149 Node[0] Epoch[6] Batch [360-380]	Speed: 21754.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679525267798, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 17:47:47,799 Node[0] Epoch[6] Time cost=58.835
:::MLLOG {"namespace": "", "time_ms": 1679525267799, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21775.72969741694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679525267944, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 17:47:49,357 Node[0] Epoch[6] Validation-accuracy=0.442560
2023-03-22 17:47:49,357 Node[0] Epoch[6] Validation-correct-count=2766.000000
2023-03-22 17:47:49,357 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-22 17:47:49,508 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,508 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,508 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,508 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,508 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,508 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:49,509 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525269508, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679525269509, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44154, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679525269509, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679525269509, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679525269510, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 17:47:49,510 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:47:52,536 Node[0] Epoch[7] Batch [0-20]	Speed: 21643.90 samples/sec	accuracy=nan
2023-03-22 17:47:55,532 Node[0] Epoch[7] Batch [20-40]	Speed: 21789.75 samples/sec	accuracy=nan
2023-03-22 17:47:58,528 Node[0] Epoch[7] Batch [40-60]	Speed: 21785.62 samples/sec	accuracy=nan
2023-03-22 17:48:01,530 Node[0] Epoch[7] Batch [60-80]	Speed: 21752.11 samples/sec	accuracy=nan
2023-03-22 17:48:04,528 Node[0] Epoch[7] Batch [80-100]	Speed: 21771.46 samples/sec	accuracy=nan
2023-03-22 17:48:07,526 Node[0] Epoch[7] Batch [100-120]	Speed: 21773.70 samples/sec	accuracy=nan
2023-03-22 17:48:10,522 Node[0] Epoch[7] Batch [120-140]	Speed: 21789.65 samples/sec	accuracy=nan
2023-03-22 17:48:13,519 Node[0] Epoch[7] Batch [140-160]	Speed: 21778.96 samples/sec	accuracy=nan
2023-03-22 17:48:16,521 Node[0] Epoch[7] Batch [160-180]	Speed: 21747.03 samples/sec	accuracy=nan
2023-03-22 17:48:19,520 Node[0] Epoch[7] Batch [180-200]	Speed: 21765.71 samples/sec	accuracy=nan
2023-03-22 17:48:22,521 Node[0] Epoch[7] Batch [200-220]	Speed: 21758.15 samples/sec	accuracy=nan
2023-03-22 17:48:25,521 Node[0] Epoch[7] Batch [220-240]	Speed: 21759.56 samples/sec	accuracy=nan
2023-03-22 17:48:28,516 Node[0] Epoch[7] Batch [240-260]	Speed: 21797.56 samples/sec	accuracy=nan
2023-03-22 17:48:31,514 Node[0] Epoch[7] Batch [260-280]	Speed: 21772.40 samples/sec	accuracy=nan
2023-03-22 17:48:34,515 Node[0] Epoch[7] Batch [280-300]	Speed: 21754.38 samples/sec	accuracy=nan
2023-03-22 17:48:37,515 Node[0] Epoch[7] Batch [300-320]	Speed: 21757.64 samples/sec	accuracy=nan
2023-03-22 17:48:40,514 Node[0] Epoch[7] Batch [320-340]	Speed: 21769.69 samples/sec	accuracy=nan
2023-03-22 17:48:43,511 Node[0] Epoch[7] Batch [340-360]	Speed: 21778.61 samples/sec	accuracy=nan
2023-03-22 17:48:46,507 Node[0] Epoch[7] Batch [360-380]	Speed: 21786.99 samples/sec	accuracy=nan
2023-03-22 17:48:48,305 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:48,305 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:48,305 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:48,305 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:48,305 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525328305, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 17:48:48,306 Node[0] Epoch[7] Time cost=58.796
:::MLLOG {"namespace": "", "time_ms": 1679525328306, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21790.049547826588}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-22 17:48:48,306 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525328306, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 17:48:48,306 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:48,306 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:48:51,459 Node[0] Epoch[8] Batch [0-20]	Speed: 21747.75 samples/sec	accuracy=nan
2023-03-22 17:48:54,459 Node[0] Epoch[8] Batch [20-40]	Speed: 21760.73 samples/sec	accuracy=nan
2023-03-22 17:48:57,458 Node[0] Epoch[8] Batch [40-60]	Speed: 21765.46 samples/sec	accuracy=nan
2023-03-22 17:49:00,460 Node[0] Epoch[8] Batch [60-80]	Speed: 21742.08 samples/sec	accuracy=nan
2023-03-22 17:49:03,459 Node[0] Epoch[8] Batch [80-100]	Speed: 21771.67 samples/sec	accuracy=nan
2023-03-22 17:49:06,461 Node[0] Epoch[8] Batch [100-120]	Speed: 21742.69 samples/sec	accuracy=nan
2023-03-22 17:49:09,460 Node[0] Epoch[8] Batch [120-140]	Speed: 21767.01 samples/sec	accuracy=nan
2023-03-22 17:49:12,458 Node[0] Epoch[8] Batch [140-160]	Speed: 21778.47 samples/sec	accuracy=nan
2023-03-22 17:49:15,461 Node[0] Epoch[8] Batch [160-180]	Speed: 21733.33 samples/sec	accuracy=nan
2023-03-22 17:49:18,462 Node[0] Epoch[8] Batch [180-200]	Speed: 21756.46 samples/sec	accuracy=nan
2023-03-22 17:49:21,461 Node[0] Epoch[8] Batch [200-220]	Speed: 21765.99 samples/sec	accuracy=nan
2023-03-22 17:49:24,463 Node[0] Epoch[8] Batch [220-240]	Speed: 21748.95 samples/sec	accuracy=nan
2023-03-22 17:49:27,461 Node[0] Epoch[8] Batch [240-260]	Speed: 21773.62 samples/sec	accuracy=nan
2023-03-22 17:49:30,460 Node[0] Epoch[8] Batch [260-280]	Speed: 21765.04 samples/sec	accuracy=nan
2023-03-22 17:49:33,464 Node[0] Epoch[8] Batch [280-300]	Speed: 21733.70 samples/sec	accuracy=nan
2023-03-22 17:49:36,465 Node[0] Epoch[8] Batch [300-320]	Speed: 21752.89 samples/sec	accuracy=nan
2023-03-22 17:49:39,463 Node[0] Epoch[8] Batch [320-340]	Speed: 21771.33 samples/sec	accuracy=nan
2023-03-22 17:49:42,463 Node[0] Epoch[8] Batch [340-360]	Speed: 21763.60 samples/sec	accuracy=nan
2023-03-22 17:49:45,462 Node[0] Epoch[8] Batch [360-380]	Speed: 21761.20 samples/sec	accuracy=nan
2023-03-22 17:49:47,110 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:47,110 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:47,110 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:47,110 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:47,110 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:47,110 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525387110, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 17:49:47,111 Node[0] Epoch[8] Time cost=58.805
:::MLLOG {"namespace": "", "time_ms": 1679525387112, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21786.62891280454}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-22 17:49:47,111 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525387112, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 17:49:47,112 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:49:50,271 Node[0] Epoch[9] Batch [0-20]	Speed: 21714.33 samples/sec	accuracy=nan
2023-03-22 17:49:53,274 Node[0] Epoch[9] Batch [20-40]	Speed: 21738.02 samples/sec	accuracy=nan
2023-03-22 17:49:56,273 Node[0] Epoch[9] Batch [40-60]	Speed: 21768.43 samples/sec	accuracy=nan
2023-03-22 17:49:59,276 Node[0] Epoch[9] Batch [60-80]	Speed: 21736.94 samples/sec	accuracy=nan
2023-03-22 17:50:02,283 Node[0] Epoch[9] Batch [80-100]	Speed: 21713.48 samples/sec	accuracy=nan
2023-03-22 17:50:05,281 Node[0] Epoch[9] Batch [100-120]	Speed: 21771.51 samples/sec	accuracy=nan
2023-03-22 17:50:08,283 Node[0] Epoch[9] Batch [120-140]	Speed: 21744.19 samples/sec	accuracy=nan
2023-03-22 17:50:11,285 Node[0] Epoch[9] Batch [140-160]	Speed: 21749.16 samples/sec	accuracy=nan
2023-03-22 17:50:14,282 Node[0] Epoch[9] Batch [160-180]	Speed: 21776.12 samples/sec	accuracy=nan
2023-03-22 17:50:17,282 Node[0] Epoch[9] Batch [180-200]	Speed: 21764.39 samples/sec	accuracy=nan
2023-03-22 17:50:20,283 Node[0] Epoch[9] Batch [200-220]	Speed: 21752.19 samples/sec	accuracy=nan
2023-03-22 17:50:23,285 Node[0] Epoch[9] Batch [220-240]	Speed: 21742.35 samples/sec	accuracy=nan
2023-03-22 17:50:26,285 Node[0] Epoch[9] Batch [240-260]	Speed: 21763.61 samples/sec	accuracy=nan
2023-03-22 17:50:29,285 Node[0] Epoch[9] Batch [260-280]	Speed: 21760.08 samples/sec	accuracy=nan
2023-03-22 17:50:32,284 Node[0] Epoch[9] Batch [280-300]	Speed: 21769.16 samples/sec	accuracy=nan
2023-03-22 17:50:35,282 Node[0] Epoch[9] Batch [300-320]	Speed: 21769.80 samples/sec	accuracy=nan
2023-03-22 17:50:38,280 Node[0] Epoch[9] Batch [320-340]	Speed: 21773.51 samples/sec	accuracy=nan
2023-03-22 17:50:41,280 Node[0] Epoch[9] Batch [340-360]	Speed: 21759.67 samples/sec	accuracy=nan
2023-03-22 17:50:44,282 Node[0] Epoch[9] Batch [360-380]	Speed: 21745.04 samples/sec	accuracy=nan
2023-03-22 17:50:46,079 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:46,079 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:46,079 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:46,079 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:46,079 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525446079, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 17:50:46,080 Node[0] Epoch[9] Time cost=58.968
:::MLLOG {"namespace": "", "time_ms": 1679525446080, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21726.54063452499}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-22 17:50:46,080 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525446080, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 17:50:46,081 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:46,081 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:50:49,235 Node[0] Epoch[10] Batch [0-20]	Speed: 21737.96 samples/sec	accuracy=nan
2023-03-22 17:50:52,237 Node[0] Epoch[10] Batch [20-40]	Speed: 21743.43 samples/sec	accuracy=nan
2023-03-22 17:50:55,241 Node[0] Epoch[10] Batch [40-60]	Speed: 21733.66 samples/sec	accuracy=nan
2023-03-22 17:50:58,244 Node[0] Epoch[10] Batch [60-80]	Speed: 21738.27 samples/sec	accuracy=nan
2023-03-22 17:51:01,242 Node[0] Epoch[10] Batch [80-100]	Speed: 21773.13 samples/sec	accuracy=nan
2023-03-22 17:51:04,238 Node[0] Epoch[10] Batch [100-120]	Speed: 21785.81 samples/sec	accuracy=nan
2023-03-22 17:51:07,239 Node[0] Epoch[10] Batch [120-140]	Speed: 21755.19 samples/sec	accuracy=nan
2023-03-22 17:51:10,242 Node[0] Epoch[10] Batch [140-160]	Speed: 21735.08 samples/sec	accuracy=nan
2023-03-22 17:51:13,245 Node[0] Epoch[10] Batch [160-180]	Speed: 21740.45 samples/sec	accuracy=nan
2023-03-22 17:51:16,244 Node[0] Epoch[10] Batch [180-200]	Speed: 21768.53 samples/sec	accuracy=nan
2023-03-22 17:51:19,253 Node[0] Epoch[10] Batch [200-220]	Speed: 21694.14 samples/sec	accuracy=nan
2023-03-22 17:51:22,253 Node[0] Epoch[10] Batch [220-240]	Speed: 21758.78 samples/sec	accuracy=nan
2023-03-22 17:51:25,250 Node[0] Epoch[10] Batch [240-260]	Speed: 21784.62 samples/sec	accuracy=nan
2023-03-22 17:51:28,252 Node[0] Epoch[10] Batch [260-280]	Speed: 21744.88 samples/sec	accuracy=nan
2023-03-22 17:51:31,254 Node[0] Epoch[10] Batch [280-300]	Speed: 21743.71 samples/sec	accuracy=nan
2023-03-22 17:51:34,252 Node[0] Epoch[10] Batch [300-320]	Speed: 21773.86 samples/sec	accuracy=nan
2023-03-22 17:51:37,248 Node[0] Epoch[10] Batch [320-340]	Speed: 21790.55 samples/sec	accuracy=nan
2023-03-22 17:51:40,248 Node[0] Epoch[10] Batch [340-360]	Speed: 21762.87 samples/sec	accuracy=nan
2023-03-22 17:51:43,251 Node[0] Epoch[10] Batch [360-380]	Speed: 21737.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679525504903, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 17:51:44,904 Node[0] Epoch[10] Time cost=58.823
:::MLLOG {"namespace": "", "time_ms": 1679525504904, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21779.865898313845}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679525505048, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 17:51:46,556 Node[0] Epoch[10] Validation-accuracy=0.489280
2023-03-22 17:51:46,556 Node[0] Epoch[10] Validation-correct-count=3058.000000
2023-03-22 17:51:46,556 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679525506595, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679525506595, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.48936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679525506595, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 17:51:46,595 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:46,595 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525506595, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 17:51:46,595 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:46,595 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:46,595 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:46,595 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525506595, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 17:51:46,595 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:46,595 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:51:49,624 Node[0] Epoch[11] Batch [0-20]	Speed: 21625.23 samples/sec	accuracy=nan
2023-03-22 17:51:52,626 Node[0] Epoch[11] Batch [20-40]	Speed: 21746.44 samples/sec	accuracy=nan
2023-03-22 17:51:55,622 Node[0] Epoch[11] Batch [40-60]	Speed: 21791.20 samples/sec	accuracy=nan
2023-03-22 17:51:58,618 Node[0] Epoch[11] Batch [60-80]	Speed: 21784.15 samples/sec	accuracy=nan
2023-03-22 17:52:01,617 Node[0] Epoch[11] Batch [80-100]	Speed: 21767.16 samples/sec	accuracy=nan
2023-03-22 17:52:04,615 Node[0] Epoch[11] Batch [100-120]	Speed: 21776.80 samples/sec	accuracy=nan
2023-03-22 17:52:07,615 Node[0] Epoch[11] Batch [120-140]	Speed: 21762.37 samples/sec	accuracy=nan
2023-03-22 17:52:10,619 Node[0] Epoch[11] Batch [140-160]	Speed: 21727.69 samples/sec	accuracy=nan
2023-03-22 17:52:13,625 Node[0] Epoch[11] Batch [160-180]	Speed: 21712.93 samples/sec	accuracy=nan
2023-03-22 17:52:16,628 Node[0] Epoch[11] Batch [180-200]	Speed: 21745.06 samples/sec	accuracy=nan
2023-03-22 17:52:19,629 Node[0] Epoch[11] Batch [200-220]	Speed: 21752.00 samples/sec	accuracy=nan
2023-03-22 17:52:22,628 Node[0] Epoch[11] Batch [220-240]	Speed: 21766.81 samples/sec	accuracy=nan
2023-03-22 17:52:25,629 Node[0] Epoch[11] Batch [240-260]	Speed: 21748.58 samples/sec	accuracy=nan
2023-03-22 17:52:28,628 Node[0] Epoch[11] Batch [260-280]	Speed: 21768.57 samples/sec	accuracy=nan
2023-03-22 17:52:31,628 Node[0] Epoch[11] Batch [280-300]	Speed: 21760.18 samples/sec	accuracy=nan
2023-03-22 17:52:34,627 Node[0] Epoch[11] Batch [300-320]	Speed: 21766.17 samples/sec	accuracy=nan
2023-03-22 17:52:37,629 Node[0] Epoch[11] Batch [320-340]	Speed: 21744.35 samples/sec	accuracy=nan
2023-03-22 17:52:40,632 Node[0] Epoch[11] Batch [340-360]	Speed: 21743.57 samples/sec	accuracy=nan
2023-03-22 17:52:43,632 Node[0] Epoch[11] Batch [360-380]	Speed: 21757.55 samples/sec	accuracy=nan
2023-03-22 17:52:45,426 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,426 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,426 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,426 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,426 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,426 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:45,427 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525565426, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 17:52:45,427 Node[0] Epoch[11] Time cost=58.832
:::MLLOG {"namespace": "", "time_ms": 1679525565427, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21776.716386018572}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679525565428, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 17:52:45,428 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:52:48,575 Node[0] Epoch[12] Batch [0-20]	Speed: 21780.63 samples/sec	accuracy=nan
2023-03-22 17:52:51,575 Node[0] Epoch[12] Batch [20-40]	Speed: 21761.12 samples/sec	accuracy=nan
2023-03-22 17:52:54,582 Node[0] Epoch[12] Batch [40-60]	Speed: 21707.30 samples/sec	accuracy=nan
2023-03-22 17:52:57,581 Node[0] Epoch[12] Batch [60-80]	Speed: 21762.32 samples/sec	accuracy=nan
2023-03-22 17:53:00,581 Node[0] Epoch[12] Batch [80-100]	Speed: 21762.39 samples/sec	accuracy=nan
2023-03-22 17:53:03,586 Node[0] Epoch[12] Batch [100-120]	Speed: 21728.11 samples/sec	accuracy=nan
2023-03-22 17:53:06,585 Node[0] Epoch[12] Batch [120-140]	Speed: 21765.43 samples/sec	accuracy=nan
2023-03-22 17:53:09,589 Node[0] Epoch[12] Batch [140-160]	Speed: 21733.24 samples/sec	accuracy=nan
2023-03-22 17:53:12,589 Node[0] Epoch[12] Batch [160-180]	Speed: 21757.11 samples/sec	accuracy=nan
2023-03-22 17:53:15,586 Node[0] Epoch[12] Batch [180-200]	Speed: 21784.02 samples/sec	accuracy=nan
2023-03-22 17:53:18,585 Node[0] Epoch[12] Batch [200-220]	Speed: 21762.95 samples/sec	accuracy=nan
2023-03-22 17:53:21,588 Node[0] Epoch[12] Batch [220-240]	Speed: 21741.68 samples/sec	accuracy=nan
2023-03-22 17:53:24,584 Node[0] Epoch[12] Batch [240-260]	Speed: 21784.90 samples/sec	accuracy=nan
2023-03-22 17:53:27,585 Node[0] Epoch[12] Batch [260-280]	Speed: 21758.12 samples/sec	accuracy=nan
2023-03-22 17:53:30,580 Node[0] Epoch[12] Batch [280-300]	Speed: 21794.22 samples/sec	accuracy=nan
2023-03-22 17:53:33,578 Node[0] Epoch[12] Batch [300-320]	Speed: 21771.68 samples/sec	accuracy=nan
2023-03-22 17:53:36,574 Node[0] Epoch[12] Batch [320-340]	Speed: 21793.38 samples/sec	accuracy=nan
2023-03-22 17:53:39,574 Node[0] Epoch[12] Batch [340-360]	Speed: 21755.81 samples/sec	accuracy=nan
2023-03-22 17:53:42,577 Node[0] Epoch[12] Batch [360-380]	Speed: 21741.46 samples/sec	accuracy=nan
2023-03-22 17:53:44,223 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:44,223 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525624223, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 17:53:44,224 Node[0] Epoch[12] Time cost=58.796
:::MLLOG {"namespace": "", "time_ms": 1679525624224, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21790.075613762478}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679525624224, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 17:53:44,224 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:53:47,374 Node[0] Epoch[13] Batch [0-20]	Speed: 21786.89 samples/sec	accuracy=nan
2023-03-22 17:53:50,375 Node[0] Epoch[13] Batch [20-40]	Speed: 21751.81 samples/sec	accuracy=nan
2023-03-22 17:53:53,371 Node[0] Epoch[13] Batch [40-60]	Speed: 21788.72 samples/sec	accuracy=nan
2023-03-22 17:53:56,373 Node[0] Epoch[13] Batch [60-80]	Speed: 21747.46 samples/sec	accuracy=nan
2023-03-22 17:53:59,375 Node[0] Epoch[13] Batch [80-100]	Speed: 21747.74 samples/sec	accuracy=nan
2023-03-22 17:54:02,375 Node[0] Epoch[13] Batch [100-120]	Speed: 21757.25 samples/sec	accuracy=nan
2023-03-22 17:54:05,373 Node[0] Epoch[13] Batch [120-140]	Speed: 21773.05 samples/sec	accuracy=nan
2023-03-22 17:54:08,374 Node[0] Epoch[13] Batch [140-160]	Speed: 21751.68 samples/sec	accuracy=nan
2023-03-22 17:54:11,389 Node[0] Epoch[13] Batch [160-180]	Speed: 21650.68 samples/sec	accuracy=nan
2023-03-22 17:54:14,391 Node[0] Epoch[13] Batch [180-200]	Speed: 21748.18 samples/sec	accuracy=nan
2023-03-22 17:54:17,394 Node[0] Epoch[13] Batch [200-220]	Speed: 21738.44 samples/sec	accuracy=nan
2023-03-22 17:54:20,396 Node[0] Epoch[13] Batch [220-240]	Speed: 21743.56 samples/sec	accuracy=nan
2023-03-22 17:54:23,396 Node[0] Epoch[13] Batch [240-260]	Speed: 21759.88 samples/sec	accuracy=nan
2023-03-22 17:54:26,396 Node[0] Epoch[13] Batch [260-280]	Speed: 21765.08 samples/sec	accuracy=nan
2023-03-22 17:54:29,398 Node[0] Epoch[13] Batch [280-300]	Speed: 21746.23 samples/sec	accuracy=nan
2023-03-22 17:54:32,398 Node[0] Epoch[13] Batch [300-320]	Speed: 21753.88 samples/sec	accuracy=nan
2023-03-22 17:54:35,398 Node[0] Epoch[13] Batch [320-340]	Speed: 21763.38 samples/sec	accuracy=nan
2023-03-22 17:54:38,399 Node[0] Epoch[13] Batch [340-360]	Speed: 21751.17 samples/sec	accuracy=nan
2023-03-22 17:54:41,399 Node[0] Epoch[13] Batch [360-380]	Speed: 21760.06 samples/sec	accuracy=nan
2023-03-22 17:54:43,196 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,196 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,196 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,196 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,196 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,196 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:43,198 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525683197, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 17:54:43,198 Node[0] Epoch[13] Time cost=58.974
:::MLLOG {"namespace": "", "time_ms": 1679525683198, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21724.409380044683}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679525683199, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 17:54:43,199 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:54:46,355 Node[0] Epoch[14] Batch [0-20]	Speed: 21706.59 samples/sec	accuracy=nan
2023-03-22 17:54:49,360 Node[0] Epoch[14] Batch [20-40]	Speed: 21726.70 samples/sec	accuracy=nan
2023-03-22 17:54:52,361 Node[0] Epoch[14] Batch [40-60]	Speed: 21746.76 samples/sec	accuracy=nan
2023-03-22 17:54:55,363 Node[0] Epoch[14] Batch [60-80]	Speed: 21745.13 samples/sec	accuracy=nan
2023-03-22 17:54:58,365 Node[0] Epoch[14] Batch [80-100]	Speed: 21745.45 samples/sec	accuracy=nan
2023-03-22 17:55:01,370 Node[0] Epoch[14] Batch [100-120]	Speed: 21725.89 samples/sec	accuracy=nan
2023-03-22 17:55:04,374 Node[0] Epoch[14] Batch [120-140]	Speed: 21735.98 samples/sec	accuracy=nan
2023-03-22 17:55:07,375 Node[0] Epoch[14] Batch [140-160]	Speed: 21749.59 samples/sec	accuracy=nan
2023-03-22 17:55:10,382 Node[0] Epoch[14] Batch [160-180]	Speed: 21709.51 samples/sec	accuracy=nan
2023-03-22 17:55:13,380 Node[0] Epoch[14] Batch [180-200]	Speed: 21772.75 samples/sec	accuracy=nan
2023-03-22 17:55:16,383 Node[0] Epoch[14] Batch [200-220]	Speed: 21742.45 samples/sec	accuracy=nan
2023-03-22 17:55:19,385 Node[0] Epoch[14] Batch [220-240]	Speed: 21746.11 samples/sec	accuracy=nan
2023-03-22 17:55:22,388 Node[0] Epoch[14] Batch [240-260]	Speed: 21731.18 samples/sec	accuracy=nan
2023-03-22 17:55:25,391 Node[0] Epoch[14] Batch [260-280]	Speed: 21742.01 samples/sec	accuracy=nan
2023-03-22 17:55:28,396 Node[0] Epoch[14] Batch [280-300]	Speed: 21723.44 samples/sec	accuracy=nan
2023-03-22 17:55:31,396 Node[0] Epoch[14] Batch [300-320]	Speed: 21759.66 samples/sec	accuracy=nan
2023-03-22 17:55:34,396 Node[0] Epoch[14] Batch [320-340]	Speed: 21762.85 samples/sec	accuracy=nan
2023-03-22 17:55:37,399 Node[0] Epoch[14] Batch [340-360]	Speed: 21736.49 samples/sec	accuracy=nan
2023-03-22 17:55:40,399 Node[0] Epoch[14] Batch [360-380]	Speed: 21758.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679525742046, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 17:55:42,046 Node[0] Epoch[14] Time cost=58.848
:::MLLOG {"namespace": "", "time_ms": 1679525742047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21770.856426807204}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679525742191, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 17:55:43,648 Node[0] Epoch[14] Validation-accuracy=0.575360
2023-03-22 17:55:43,648 Node[0] Epoch[14] Validation-correct-count=3596.000000
2023-03-22 17:55:43,648 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-22 17:55:43,731 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:43,731 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525743730, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679525743731, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56602, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679525743731, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679525743732, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679525743732, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 17:55:43,732 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:55:46,765 Node[0] Epoch[15] Batch [0-20]	Speed: 21609.89 samples/sec	accuracy=nan
2023-03-22 17:55:49,765 Node[0] Epoch[15] Batch [20-40]	Speed: 21758.67 samples/sec	accuracy=nan
2023-03-22 17:55:52,762 Node[0] Epoch[15] Batch [40-60]	Speed: 21782.94 samples/sec	accuracy=nan
2023-03-22 17:55:55,758 Node[0] Epoch[15] Batch [60-80]	Speed: 21792.18 samples/sec	accuracy=nan
2023-03-22 17:55:58,755 Node[0] Epoch[15] Batch [80-100]	Speed: 21781.27 samples/sec	accuracy=nan
2023-03-22 17:56:01,758 Node[0] Epoch[15] Batch [100-120]	Speed: 21739.31 samples/sec	accuracy=nan
2023-03-22 17:56:04,763 Node[0] Epoch[15] Batch [120-140]	Speed: 21724.95 samples/sec	accuracy=nan
2023-03-22 17:56:07,765 Node[0] Epoch[15] Batch [140-160]	Speed: 21744.71 samples/sec	accuracy=nan
2023-03-22 17:56:10,767 Node[0] Epoch[15] Batch [160-180]	Speed: 21746.23 samples/sec	accuracy=nan
2023-03-22 17:56:13,768 Node[0] Epoch[15] Batch [180-200]	Speed: 21749.25 samples/sec	accuracy=nan
2023-03-22 17:56:16,767 Node[0] Epoch[15] Batch [200-220]	Speed: 21765.75 samples/sec	accuracy=nan
2023-03-22 17:56:19,774 Node[0] Epoch[15] Batch [220-240]	Speed: 21715.44 samples/sec	accuracy=nan
2023-03-22 17:56:22,782 Node[0] Epoch[15] Batch [240-260]	Speed: 21699.37 samples/sec	accuracy=nan
2023-03-22 17:56:25,783 Node[0] Epoch[15] Batch [260-280]	Speed: 21750.08 samples/sec	accuracy=nan
2023-03-22 17:56:28,782 Node[0] Epoch[15] Batch [280-300]	Speed: 21767.01 samples/sec	accuracy=nan
2023-03-22 17:56:31,780 Node[0] Epoch[15] Batch [300-320]	Speed: 21773.20 samples/sec	accuracy=nan
2023-03-22 17:56:34,780 Node[0] Epoch[15] Batch [320-340]	Speed: 21766.11 samples/sec	accuracy=nan
2023-03-22 17:56:37,777 Node[0] Epoch[15] Batch [340-360]	Speed: 21779.76 samples/sec	accuracy=nan
2023-03-22 17:56:40,779 Node[0] Epoch[15] Batch [360-380]	Speed: 21746.42 samples/sec	accuracy=nan
2023-03-22 17:56:42,576 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,576 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,576 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,576 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,576 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525802576, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 17:56:42,576 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,577 Node[0] Epoch[15] Time cost=58.845
:::MLLOG {"namespace": "", "time_ms": 1679525802577, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21772.019274478935}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679525802577, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 17:56:42,577 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:42,578 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:56:45,730 Node[0] Epoch[16] Batch [0-20]	Speed: 21754.53 samples/sec	accuracy=nan
2023-03-22 17:56:48,737 Node[0] Epoch[16] Batch [20-40]	Speed: 21706.25 samples/sec	accuracy=nan
2023-03-22 17:56:51,736 Node[0] Epoch[16] Batch [40-60]	Speed: 21768.47 samples/sec	accuracy=nan
2023-03-22 17:56:54,733 Node[0] Epoch[16] Batch [60-80]	Speed: 21784.40 samples/sec	accuracy=nan
2023-03-22 17:56:57,732 Node[0] Epoch[16] Batch [80-100]	Speed: 21766.54 samples/sec	accuracy=nan
2023-03-22 17:57:00,731 Node[0] Epoch[16] Batch [100-120]	Speed: 21763.06 samples/sec	accuracy=nan
2023-03-22 17:57:03,730 Node[0] Epoch[16] Batch [120-140]	Speed: 21769.10 samples/sec	accuracy=nan
2023-03-22 17:57:06,728 Node[0] Epoch[16] Batch [140-160]	Speed: 21773.75 samples/sec	accuracy=nan
2023-03-22 17:57:09,726 Node[0] Epoch[16] Batch [160-180]	Speed: 21780.18 samples/sec	accuracy=nan
2023-03-22 17:57:12,729 Node[0] Epoch[16] Batch [180-200]	Speed: 21733.33 samples/sec	accuracy=nan
2023-03-22 17:57:15,730 Node[0] Epoch[16] Batch [200-220]	Speed: 21756.23 samples/sec	accuracy=nan
2023-03-22 17:57:18,730 Node[0] Epoch[16] Batch [220-240]	Speed: 21756.47 samples/sec	accuracy=nan
2023-03-22 17:57:21,733 Node[0] Epoch[16] Batch [240-260]	Speed: 21738.31 samples/sec	accuracy=nan
2023-03-22 17:57:24,733 Node[0] Epoch[16] Batch [260-280]	Speed: 21761.42 samples/sec	accuracy=nan
2023-03-22 17:57:27,731 Node[0] Epoch[16] Batch [280-300]	Speed: 21773.50 samples/sec	accuracy=nan
2023-03-22 17:57:30,730 Node[0] Epoch[16] Batch [300-320]	Speed: 21768.98 samples/sec	accuracy=nan
2023-03-22 17:57:33,729 Node[0] Epoch[16] Batch [320-340]	Speed: 21766.71 samples/sec	accuracy=nan
2023-03-22 17:57:36,728 Node[0] Epoch[16] Batch [340-360]	Speed: 21764.12 samples/sec	accuracy=nan
2023-03-22 17:57:39,730 Node[0] Epoch[16] Batch [360-380]	Speed: 21751.55 samples/sec	accuracy=nan
2023-03-22 17:57:41,380 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,380 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,380 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,380 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,380 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,381 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:41,381 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525861380, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 17:57:41,381 Node[0] Epoch[16] Time cost=58.804
:::MLLOG {"namespace": "", "time_ms": 1679525861381, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21787.127554178118}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679525861382, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 17:57:41,382 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:57:44,542 Node[0] Epoch[17] Batch [0-20]	Speed: 21716.45 samples/sec	accuracy=nan
2023-03-22 17:57:47,545 Node[0] Epoch[17] Batch [20-40]	Speed: 21736.70 samples/sec	accuracy=nan
2023-03-22 17:57:50,544 Node[0] Epoch[17] Batch [40-60]	Speed: 21766.20 samples/sec	accuracy=nan
2023-03-22 17:57:53,545 Node[0] Epoch[17] Batch [60-80]	Speed: 21756.97 samples/sec	accuracy=nan
2023-03-22 17:57:56,550 Node[0] Epoch[17] Batch [80-100]	Speed: 21719.15 samples/sec	accuracy=nan
2023-03-22 17:57:59,555 Node[0] Epoch[17] Batch [100-120]	Speed: 21724.26 samples/sec	accuracy=nan
2023-03-22 17:58:02,559 Node[0] Epoch[17] Batch [120-140]	Speed: 21735.75 samples/sec	accuracy=nan
2023-03-22 17:58:05,564 Node[0] Epoch[17] Batch [140-160]	Speed: 21720.27 samples/sec	accuracy=nan
2023-03-22 17:58:08,577 Node[0] Epoch[17] Batch [160-180]	Speed: 21665.10 samples/sec	accuracy=nan
2023-03-22 17:58:11,578 Node[0] Epoch[17] Batch [180-200]	Speed: 21758.12 samples/sec	accuracy=nan
2023-03-22 17:58:14,579 Node[0] Epoch[17] Batch [200-220]	Speed: 21748.49 samples/sec	accuracy=nan
2023-03-22 17:58:17,583 Node[0] Epoch[17] Batch [220-240]	Speed: 21733.42 samples/sec	accuracy=nan
2023-03-22 17:58:20,583 Node[0] Epoch[17] Batch [240-260]	Speed: 21758.41 samples/sec	accuracy=nan
2023-03-22 17:58:23,583 Node[0] Epoch[17] Batch [260-280]	Speed: 21758.00 samples/sec	accuracy=nan
2023-03-22 17:58:26,583 Node[0] Epoch[17] Batch [280-300]	Speed: 21763.83 samples/sec	accuracy=nan
2023-03-22 17:58:29,588 Node[0] Epoch[17] Batch [300-320]	Speed: 21724.18 samples/sec	accuracy=nan
2023-03-22 17:58:32,589 Node[0] Epoch[17] Batch [320-340]	Speed: 21750.94 samples/sec	accuracy=nan
2023-03-22 17:58:35,589 Node[0] Epoch[17] Batch [340-360]	Speed: 21762.58 samples/sec	accuracy=nan
2023-03-22 17:58:38,592 Node[0] Epoch[17] Batch [360-380]	Speed: 21738.42 samples/sec	accuracy=nan
2023-03-22 17:58:40,389 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,389 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,389 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,389 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,389 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,389 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525920389, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 17:58:40,390 Node[0] Epoch[17] Time cost=59.008
:::MLLOG {"namespace": "", "time_ms": 1679525920390, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21711.735020958095}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679525920390, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 17:58:40,390 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:40,390 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:58:43,548 Node[0] Epoch[18] Batch [0-20]	Speed: 21709.54 samples/sec	accuracy=nan
2023-03-22 17:58:46,550 Node[0] Epoch[18] Batch [20-40]	Speed: 21752.72 samples/sec	accuracy=nan
2023-03-22 17:58:49,553 Node[0] Epoch[18] Batch [40-60]	Speed: 21735.91 samples/sec	accuracy=nan
2023-03-22 17:58:52,554 Node[0] Epoch[18] Batch [60-80]	Speed: 21752.94 samples/sec	accuracy=nan
2023-03-22 17:58:55,559 Node[0] Epoch[18] Batch [80-100]	Speed: 21723.13 samples/sec	accuracy=nan
2023-03-22 17:58:58,569 Node[0] Epoch[18] Batch [100-120]	Speed: 21688.01 samples/sec	accuracy=nan
2023-03-22 17:59:01,577 Node[0] Epoch[18] Batch [120-140]	Speed: 21698.77 samples/sec	accuracy=nan
2023-03-22 17:59:04,578 Node[0] Epoch[18] Batch [140-160]	Speed: 21758.45 samples/sec	accuracy=nan
2023-03-22 17:59:07,578 Node[0] Epoch[18] Batch [160-180]	Speed: 21755.24 samples/sec	accuracy=nan
2023-03-22 17:59:10,588 Node[0] Epoch[18] Batch [180-200]	Speed: 21687.70 samples/sec	accuracy=nan
2023-03-22 17:59:13,590 Node[0] Epoch[18] Batch [200-220]	Speed: 21743.56 samples/sec	accuracy=nan
2023-03-22 17:59:16,587 Node[0] Epoch[18] Batch [220-240]	Speed: 21783.57 samples/sec	accuracy=nan
2023-03-22 17:59:19,587 Node[0] Epoch[18] Batch [240-260]	Speed: 21762.42 samples/sec	accuracy=nan
2023-03-22 17:59:22,586 Node[0] Epoch[18] Batch [260-280]	Speed: 21764.55 samples/sec	accuracy=nan
2023-03-22 17:59:25,588 Node[0] Epoch[18] Batch [280-300]	Speed: 21750.20 samples/sec	accuracy=nan
2023-03-22 17:59:28,585 Node[0] Epoch[18] Batch [300-320]	Speed: 21781.78 samples/sec	accuracy=nan
2023-03-22 17:59:31,581 Node[0] Epoch[18] Batch [320-340]	Speed: 21788.32 samples/sec	accuracy=nan
2023-03-22 17:59:34,580 Node[0] Epoch[18] Batch [340-360]	Speed: 21762.20 samples/sec	accuracy=nan
2023-03-22 17:59:37,579 Node[0] Epoch[18] Batch [360-380]	Speed: 21770.53 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679525979226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 17:59:39,227 Node[0] Epoch[18] Time cost=58.837
:::MLLOG {"namespace": "", "time_ms": 1679525979227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21774.937481458637}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679525979371, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 17:59:40,919 Node[0] Epoch[18] Validation-accuracy=0.626080
2023-03-22 17:59:40,919 Node[0] Epoch[18] Validation-correct-count=3913.000000
2023-03-22 17:59:40,919 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679525981030, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679525981031, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.626, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 17:59:41,031 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525981031, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 17:59:41,031 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:59:41,031 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525981031, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 17:59:41,031 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:59:41,031 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:59:41,031 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:59:41,031 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679525981031, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 17:59:41,031 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 17:59:44,058 Node[0] Epoch[19] Batch [0-20]	Speed: 21659.49 samples/sec	accuracy=nan
2023-03-22 17:59:47,057 Node[0] Epoch[19] Batch [20-40]	Speed: 21763.48 samples/sec	accuracy=nan
2023-03-22 17:59:50,056 Node[0] Epoch[19] Batch [40-60]	Speed: 21773.81 samples/sec	accuracy=nan
2023-03-22 17:59:53,057 Node[0] Epoch[19] Batch [60-80]	Speed: 21752.36 samples/sec	accuracy=nan
2023-03-22 17:59:56,055 Node[0] Epoch[19] Batch [80-100]	Speed: 21769.05 samples/sec	accuracy=nan
2023-03-22 17:59:59,056 Node[0] Epoch[19] Batch [100-120]	Speed: 21756.37 samples/sec	accuracy=nan
2023-03-22 18:00:02,061 Node[0] Epoch[19] Batch [120-140]	Speed: 21721.87 samples/sec	accuracy=nan
2023-03-22 18:00:05,063 Node[0] Epoch[19] Batch [140-160]	Speed: 21747.76 samples/sec	accuracy=nan
2023-03-22 18:00:08,076 Node[0] Epoch[19] Batch [160-180]	Speed: 21663.74 samples/sec	accuracy=nan
2023-03-22 18:00:11,082 Node[0] Epoch[19] Batch [180-200]	Speed: 21720.07 samples/sec	accuracy=nan
2023-03-22 18:00:14,084 Node[0] Epoch[19] Batch [200-220]	Speed: 21740.38 samples/sec	accuracy=nan
2023-03-22 18:00:17,083 Node[0] Epoch[19] Batch [220-240]	Speed: 21772.71 samples/sec	accuracy=nan
2023-03-22 18:00:20,081 Node[0] Epoch[19] Batch [240-260]	Speed: 21768.43 samples/sec	accuracy=nan
2023-03-22 18:00:23,085 Node[0] Epoch[19] Batch [260-280]	Speed: 21735.40 samples/sec	accuracy=nan
2023-03-22 18:00:26,089 Node[0] Epoch[19] Batch [280-300]	Speed: 21729.39 samples/sec	accuracy=nan
2023-03-22 18:00:29,096 Node[0] Epoch[19] Batch [300-320]	Speed: 21710.18 samples/sec	accuracy=nan
2023-03-22 18:00:32,098 Node[0] Epoch[19] Batch [320-340]	Speed: 21745.15 samples/sec	accuracy=nan
2023-03-22 18:00:35,100 Node[0] Epoch[19] Batch [340-360]	Speed: 21742.67 samples/sec	accuracy=nan
2023-03-22 18:00:38,101 Node[0] Epoch[19] Batch [360-380]	Speed: 21758.01 samples/sec	accuracy=nan
2023-03-22 18:00:39,901 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:39,901 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526039901, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 18:00:39,902 Node[0] Epoch[19] Time cost=58.871
:::MLLOG {"namespace": "", "time_ms": 1679526039902, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21762.318687236453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679526039903, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 18:00:39,903 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:00:43,058 Node[0] Epoch[20] Batch [0-20]	Speed: 21731.73 samples/sec	accuracy=nan
2023-03-22 18:00:46,061 Node[0] Epoch[20] Batch [20-40]	Speed: 21735.71 samples/sec	accuracy=nan
2023-03-22 18:00:49,059 Node[0] Epoch[20] Batch [40-60]	Speed: 21772.30 samples/sec	accuracy=nan
2023-03-22 18:00:52,059 Node[0] Epoch[20] Batch [60-80]	Speed: 21758.98 samples/sec	accuracy=nan
2023-03-22 18:00:55,060 Node[0] Epoch[20] Batch [80-100]	Speed: 21753.77 samples/sec	accuracy=nan
2023-03-22 18:00:58,057 Node[0] Epoch[20] Batch [100-120]	Speed: 21780.58 samples/sec	accuracy=nan
2023-03-22 18:01:01,058 Node[0] Epoch[20] Batch [120-140]	Speed: 21758.82 samples/sec	accuracy=nan
2023-03-22 18:01:04,055 Node[0] Epoch[20] Batch [140-160]	Speed: 21776.27 samples/sec	accuracy=nan
2023-03-22 18:01:07,057 Node[0] Epoch[20] Batch [160-180]	Speed: 21749.85 samples/sec	accuracy=nan
2023-03-22 18:01:10,053 Node[0] Epoch[20] Batch [180-200]	Speed: 21789.20 samples/sec	accuracy=nan
2023-03-22 18:01:13,061 Node[0] Epoch[20] Batch [200-220]	Speed: 21697.10 samples/sec	accuracy=nan
2023-03-22 18:01:16,068 Node[0] Epoch[20] Batch [220-240]	Speed: 21711.45 samples/sec	accuracy=nan
2023-03-22 18:01:19,066 Node[0] Epoch[20] Batch [240-260]	Speed: 21772.62 samples/sec	accuracy=nan
2023-03-22 18:01:22,065 Node[0] Epoch[20] Batch [260-280]	Speed: 21767.15 samples/sec	accuracy=nan
2023-03-22 18:01:25,070 Node[0] Epoch[20] Batch [280-300]	Speed: 21730.01 samples/sec	accuracy=nan
2023-03-22 18:01:28,072 Node[0] Epoch[20] Batch [300-320]	Speed: 21741.24 samples/sec	accuracy=nan
2023-03-22 18:01:31,069 Node[0] Epoch[20] Batch [320-340]	Speed: 21781.63 samples/sec	accuracy=nan
2023-03-22 18:01:34,067 Node[0] Epoch[20] Batch [340-360]	Speed: 21779.87 samples/sec	accuracy=nan
2023-03-22 18:01:37,069 Node[0] Epoch[20] Batch [360-380]	Speed: 21745.34 samples/sec	accuracy=nan
2023-03-22 18:01:38,716 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:38,716 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:38,716 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:38,716 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526098716, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 18:01:38,716 Node[0] Epoch[20] Time cost=58.814
2023-03-22 18:01:38,716 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:38,716 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526098716, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21783.531752539322}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679526098717, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 18:01:38,717 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:38,717 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:01:41,868 Node[0] Epoch[21] Batch [0-20]	Speed: 21777.85 samples/sec	accuracy=nan
2023-03-22 18:01:44,873 Node[0] Epoch[21] Batch [20-40]	Speed: 21722.36 samples/sec	accuracy=nan
2023-03-22 18:01:47,873 Node[0] Epoch[21] Batch [40-60]	Speed: 21765.51 samples/sec	accuracy=nan
2023-03-22 18:01:50,875 Node[0] Epoch[21] Batch [60-80]	Speed: 21744.61 samples/sec	accuracy=nan
2023-03-22 18:01:53,878 Node[0] Epoch[21] Batch [80-100]	Speed: 21737.71 samples/sec	accuracy=nan
2023-03-22 18:01:56,882 Node[0] Epoch[21] Batch [100-120]	Speed: 21732.14 samples/sec	accuracy=nan
2023-03-22 18:01:59,888 Node[0] Epoch[21] Batch [120-140]	Speed: 21713.91 samples/sec	accuracy=nan
2023-03-22 18:02:02,895 Node[0] Epoch[21] Batch [140-160]	Speed: 21709.68 samples/sec	accuracy=nan
2023-03-22 18:02:05,897 Node[0] Epoch[21] Batch [160-180]	Speed: 21742.70 samples/sec	accuracy=nan
2023-03-22 18:02:08,899 Node[0] Epoch[21] Batch [180-200]	Speed: 21748.45 samples/sec	accuracy=nan
2023-03-22 18:02:11,905 Node[0] Epoch[21] Batch [200-220]	Speed: 21718.86 samples/sec	accuracy=nan
2023-03-22 18:02:14,906 Node[0] Epoch[21] Batch [220-240]	Speed: 21750.41 samples/sec	accuracy=nan
2023-03-22 18:02:17,907 Node[0] Epoch[21] Batch [240-260]	Speed: 21753.39 samples/sec	accuracy=nan
2023-03-22 18:02:20,911 Node[0] Epoch[21] Batch [260-280]	Speed: 21730.62 samples/sec	accuracy=nan
2023-03-22 18:02:23,915 Node[0] Epoch[21] Batch [280-300]	Speed: 21727.30 samples/sec	accuracy=nan
2023-03-22 18:02:26,919 Node[0] Epoch[21] Batch [300-320]	Speed: 21730.17 samples/sec	accuracy=nan
2023-03-22 18:02:29,920 Node[0] Epoch[21] Batch [320-340]	Speed: 21759.50 samples/sec	accuracy=nan
2023-03-22 18:02:32,918 Node[0] Epoch[21] Batch [340-360]	Speed: 21768.78 samples/sec	accuracy=nan
2023-03-22 18:02:35,926 Node[0] Epoch[21] Batch [360-380]	Speed: 21702.51 samples/sec	accuracy=nan
2023-03-22 18:02:37,725 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:37,725 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:37,725 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:37,725 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:37,726 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526157725, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 18:02:37,726 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:37,727 Node[0] Epoch[21] Time cost=59.010
2023-03-22 18:02:37,726 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526157727, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21711.143945952317}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679526157727, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 18:02:37,727 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:02:40,883 Node[0] Epoch[22] Batch [0-20]	Speed: 21728.54 samples/sec	accuracy=nan
2023-03-22 18:02:43,884 Node[0] Epoch[22] Batch [20-40]	Speed: 21749.90 samples/sec	accuracy=nan
2023-03-22 18:02:46,886 Node[0] Epoch[22] Batch [40-60]	Speed: 21746.44 samples/sec	accuracy=nan
2023-03-22 18:02:49,889 Node[0] Epoch[22] Batch [60-80]	Speed: 21738.73 samples/sec	accuracy=nan
2023-03-22 18:02:52,892 Node[0] Epoch[22] Batch [80-100]	Speed: 21736.19 samples/sec	accuracy=nan
2023-03-22 18:02:55,899 Node[0] Epoch[22] Batch [100-120]	Speed: 21708.15 samples/sec	accuracy=nan
2023-03-22 18:02:58,902 Node[0] Epoch[22] Batch [120-140]	Speed: 21743.35 samples/sec	accuracy=nan
2023-03-22 18:03:01,901 Node[0] Epoch[22] Batch [140-160]	Speed: 21766.32 samples/sec	accuracy=nan
2023-03-22 18:03:04,904 Node[0] Epoch[22] Batch [160-180]	Speed: 21739.42 samples/sec	accuracy=nan
2023-03-22 18:03:07,909 Node[0] Epoch[22] Batch [180-200]	Speed: 21719.69 samples/sec	accuracy=nan
2023-03-22 18:03:10,915 Node[0] Epoch[22] Batch [200-220]	Speed: 21719.77 samples/sec	accuracy=nan
2023-03-22 18:03:13,918 Node[0] Epoch[22] Batch [220-240]	Speed: 21735.51 samples/sec	accuracy=nan
2023-03-22 18:03:16,925 Node[0] Epoch[22] Batch [240-260]	Speed: 21710.55 samples/sec	accuracy=nan
2023-03-22 18:03:19,925 Node[0] Epoch[22] Batch [260-280]	Speed: 21760.39 samples/sec	accuracy=nan
2023-03-22 18:03:22,927 Node[0] Epoch[22] Batch [280-300]	Speed: 21744.54 samples/sec	accuracy=nan
2023-03-22 18:03:25,931 Node[0] Epoch[22] Batch [300-320]	Speed: 21734.08 samples/sec	accuracy=nan
2023-03-22 18:03:28,934 Node[0] Epoch[22] Batch [320-340]	Speed: 21736.83 samples/sec	accuracy=nan
2023-03-22 18:03:31,936 Node[0] Epoch[22] Batch [340-360]	Speed: 21743.41 samples/sec	accuracy=nan
2023-03-22 18:03:34,942 Node[0] Epoch[22] Batch [360-380]	Speed: 21714.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679526216590, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 18:03:36,590 Node[0] Epoch[22] Time cost=58.863
:::MLLOG {"namespace": "", "time_ms": 1679526216590, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21765.16799968031}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679526216735, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 18:03:38,234 Node[0] Epoch[22] Validation-accuracy=0.689920
2023-03-22 18:03:38,234 Node[0] Epoch[22] Validation-correct-count=4312.000000
2023-03-22 18:03:38,234 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-22 18:03:38,373 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:38,373 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526218373, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679526218374, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68902, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679526218374, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679526218374, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679526218374, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 18:03:38,374 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:03:41,408 Node[0] Epoch[23] Batch [0-20]	Speed: 21594.31 samples/sec	accuracy=nan
2023-03-22 18:03:44,409 Node[0] Epoch[23] Batch [20-40]	Speed: 21756.88 samples/sec	accuracy=nan
2023-03-22 18:03:47,411 Node[0] Epoch[23] Batch [40-60]	Speed: 21744.41 samples/sec	accuracy=nan
2023-03-22 18:03:50,411 Node[0] Epoch[23] Batch [60-80]	Speed: 21758.29 samples/sec	accuracy=nan
2023-03-22 18:03:53,414 Node[0] Epoch[23] Batch [80-100]	Speed: 21740.48 samples/sec	accuracy=nan
2023-03-22 18:03:56,416 Node[0] Epoch[23] Batch [100-120]	Speed: 21748.34 samples/sec	accuracy=nan
2023-03-22 18:03:59,416 Node[0] Epoch[23] Batch [120-140]	Speed: 21760.72 samples/sec	accuracy=nan
2023-03-22 18:04:02,418 Node[0] Epoch[23] Batch [140-160]	Speed: 21740.11 samples/sec	accuracy=nan
2023-03-22 18:04:05,423 Node[0] Epoch[23] Batch [160-180]	Speed: 21725.24 samples/sec	accuracy=nan
2023-03-22 18:04:08,423 Node[0] Epoch[23] Batch [180-200]	Speed: 21760.36 samples/sec	accuracy=nan
2023-03-22 18:04:11,423 Node[0] Epoch[23] Batch [200-220]	Speed: 21756.85 samples/sec	accuracy=nan
2023-03-22 18:04:14,424 Node[0] Epoch[23] Batch [220-240]	Speed: 21755.01 samples/sec	accuracy=nan
2023-03-22 18:04:17,426 Node[0] Epoch[23] Batch [240-260]	Speed: 21743.56 samples/sec	accuracy=nan
2023-03-22 18:04:20,430 Node[0] Epoch[23] Batch [260-280]	Speed: 21733.55 samples/sec	accuracy=nan
2023-03-22 18:04:23,434 Node[0] Epoch[23] Batch [280-300]	Speed: 21734.13 samples/sec	accuracy=nan
2023-03-22 18:04:26,435 Node[0] Epoch[23] Batch [300-320]	Speed: 21747.59 samples/sec	accuracy=nan
2023-03-22 18:04:29,438 Node[0] Epoch[23] Batch [320-340]	Speed: 21742.53 samples/sec	accuracy=nan
2023-03-22 18:04:32,441 Node[0] Epoch[23] Batch [340-360]	Speed: 21733.25 samples/sec	accuracy=nan
2023-03-22 18:04:35,448 Node[0] Epoch[23] Batch [360-380]	Speed: 21711.92 samples/sec	accuracy=nan
2023-03-22 18:04:37,251 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526277251, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 18:04:37,251 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:37,251 Node[0] Epoch[23] Time cost=58.877
:::MLLOG {"namespace": "", "time_ms": 1679526277251, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21760.058631151245}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679526277252, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 18:04:37,252 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:04:40,418 Node[0] Epoch[24] Batch [0-20]	Speed: 21650.71 samples/sec	accuracy=nan
2023-03-22 18:04:43,426 Node[0] Epoch[24] Batch [20-40]	Speed: 21707.16 samples/sec	accuracy=nan
2023-03-22 18:04:46,426 Node[0] Epoch[24] Batch [40-60]	Speed: 21756.07 samples/sec	accuracy=nan
2023-03-22 18:04:49,428 Node[0] Epoch[24] Batch [60-80]	Speed: 21746.72 samples/sec	accuracy=nan
2023-03-22 18:04:52,430 Node[0] Epoch[24] Batch [80-100]	Speed: 21744.03 samples/sec	accuracy=nan
2023-03-22 18:04:55,435 Node[0] Epoch[24] Batch [100-120]	Speed: 21724.96 samples/sec	accuracy=nan
2023-03-22 18:04:58,433 Node[0] Epoch[24] Batch [120-140]	Speed: 21775.51 samples/sec	accuracy=nan
2023-03-22 18:05:01,436 Node[0] Epoch[24] Batch [140-160]	Speed: 21737.87 samples/sec	accuracy=nan
2023-03-22 18:05:04,436 Node[0] Epoch[24] Batch [160-180]	Speed: 21756.42 samples/sec	accuracy=nan
2023-03-22 18:05:07,444 Node[0] Epoch[24] Batch [180-200]	Speed: 21708.38 samples/sec	accuracy=nan
2023-03-22 18:05:10,451 Node[0] Epoch[24] Batch [200-220]	Speed: 21703.37 samples/sec	accuracy=nan
2023-03-22 18:05:13,453 Node[0] Epoch[24] Batch [220-240]	Speed: 21745.35 samples/sec	accuracy=nan
2023-03-22 18:05:16,457 Node[0] Epoch[24] Batch [240-260]	Speed: 21734.88 samples/sec	accuracy=nan
2023-03-22 18:05:19,461 Node[0] Epoch[24] Batch [260-280]	Speed: 21730.98 samples/sec	accuracy=nan
2023-03-22 18:05:22,469 Node[0] Epoch[24] Batch [280-300]	Speed: 21699.63 samples/sec	accuracy=nan
2023-03-22 18:05:27,719 Node[0] Epoch[24] Batch [300-320]	Speed: 12435.05 samples/sec	accuracy=nan
2023-03-22 18:05:30,716 Node[0] Epoch[24] Batch [320-340]	Speed: 21778.36 samples/sec	accuracy=nan
2023-03-22 18:05:33,714 Node[0] Epoch[24] Batch [340-360]	Speed: 21775.43 samples/sec	accuracy=nan
2023-03-22 18:05:36,714 Node[0] Epoch[24] Batch [360-380]	Speed: 21760.39 samples/sec	accuracy=nan
2023-03-22 18:05:38,361 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:38,362 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526338362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 18:05:38,363 Node[0] Epoch[24] Time cost=61.111
:::MLLOG {"namespace": "", "time_ms": 1679526338363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20964.65787407926}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679526338363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 18:05:38,363 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:05:41,516 Node[0] Epoch[25] Batch [0-20]	Speed: 21761.68 samples/sec	accuracy=nan
2023-03-22 18:05:44,519 Node[0] Epoch[25] Batch [20-40]	Speed: 21738.61 samples/sec	accuracy=nan
2023-03-22 18:05:47,518 Node[0] Epoch[25] Batch [40-60]	Speed: 21767.37 samples/sec	accuracy=nan
2023-03-22 18:05:50,517 Node[0] Epoch[25] Batch [60-80]	Speed: 21766.18 samples/sec	accuracy=nan
2023-03-22 18:05:53,526 Node[0] Epoch[25] Batch [80-100]	Speed: 21697.96 samples/sec	accuracy=nan
2023-03-22 18:05:56,529 Node[0] Epoch[25] Batch [100-120]	Speed: 21738.47 samples/sec	accuracy=nan
2023-03-22 18:05:59,528 Node[0] Epoch[25] Batch [120-140]	Speed: 21766.65 samples/sec	accuracy=nan
2023-03-22 18:06:02,531 Node[0] Epoch[25] Batch [140-160]	Speed: 21741.28 samples/sec	accuracy=nan
2023-03-22 18:06:05,541 Node[0] Epoch[25] Batch [160-180]	Speed: 21683.74 samples/sec	accuracy=nan
2023-03-22 18:06:08,541 Node[0] Epoch[25] Batch [180-200]	Speed: 21762.13 samples/sec	accuracy=nan
2023-03-22 18:06:11,542 Node[0] Epoch[25] Batch [200-220]	Speed: 21751.09 samples/sec	accuracy=nan
2023-03-22 18:06:14,539 Node[0] Epoch[25] Batch [220-240]	Speed: 21785.02 samples/sec	accuracy=nan
2023-03-22 18:06:17,537 Node[0] Epoch[25] Batch [240-260]	Speed: 21773.98 samples/sec	accuracy=nan
2023-03-22 18:06:20,536 Node[0] Epoch[25] Batch [260-280]	Speed: 21765.01 samples/sec	accuracy=nan
2023-03-22 18:06:23,535 Node[0] Epoch[25] Batch [280-300]	Speed: 21766.64 samples/sec	accuracy=nan
2023-03-22 18:06:29,093 Node[0] Epoch[25] Batch [300-320]	Speed: 11744.88 samples/sec	accuracy=nan
2023-03-22 18:06:32,091 Node[0] Epoch[25] Batch [320-340]	Speed: 21776.12 samples/sec	accuracy=nan
2023-03-22 18:06:35,092 Node[0] Epoch[25] Batch [340-360]	Speed: 21750.78 samples/sec	accuracy=nan
2023-03-22 18:06:38,090 Node[0] Epoch[25] Batch [360-380]	Speed: 21775.04 samples/sec	accuracy=nan
2023-03-22 18:06:39,888 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:39,888 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526399888, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 18:06:39,889 Node[0] Epoch[25] Time cost=61.526
:::MLLOG {"namespace": "", "time_ms": 1679526399889, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20823.243214569193}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679526399890, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 18:06:39,890 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:06:43,041 Node[0] Epoch[26] Batch [0-20]	Speed: 21756.11 samples/sec	accuracy=nan
2023-03-22 18:06:46,047 Node[0] Epoch[26] Batch [20-40]	Speed: 21717.47 samples/sec	accuracy=nan
2023-03-22 18:06:49,053 Node[0] Epoch[26] Batch [40-60]	Speed: 21720.95 samples/sec	accuracy=nan
2023-03-22 18:06:52,056 Node[0] Epoch[26] Batch [60-80]	Speed: 21736.81 samples/sec	accuracy=nan
2023-03-22 18:06:55,065 Node[0] Epoch[26] Batch [80-100]	Speed: 21692.66 samples/sec	accuracy=nan
2023-03-22 18:06:58,072 Node[0] Epoch[26] Batch [100-120]	Speed: 21712.92 samples/sec	accuracy=nan
2023-03-22 18:07:01,081 Node[0] Epoch[26] Batch [120-140]	Speed: 21694.77 samples/sec	accuracy=nan
2023-03-22 18:07:04,079 Node[0] Epoch[26] Batch [140-160]	Speed: 21768.50 samples/sec	accuracy=nan
2023-03-22 18:07:07,093 Node[0] Epoch[26] Batch [160-180]	Speed: 21658.23 samples/sec	accuracy=nan
2023-03-22 18:07:10,103 Node[0] Epoch[26] Batch [180-200]	Speed: 21691.17 samples/sec	accuracy=nan
2023-03-22 18:07:13,106 Node[0] Epoch[26] Batch [200-220]	Speed: 21735.39 samples/sec	accuracy=nan
2023-03-22 18:07:16,103 Node[0] Epoch[26] Batch [220-240]	Speed: 21785.21 samples/sec	accuracy=nan
2023-03-22 18:07:19,100 Node[0] Epoch[26] Batch [240-260]	Speed: 21781.69 samples/sec	accuracy=nan
2023-03-22 18:07:22,105 Node[0] Epoch[26] Batch [260-280]	Speed: 21723.46 samples/sec	accuracy=nan
2023-03-22 18:07:25,109 Node[0] Epoch[26] Batch [280-300]	Speed: 21732.76 samples/sec	accuracy=nan
2023-03-22 18:07:28,106 Node[0] Epoch[26] Batch [300-320]	Speed: 21779.80 samples/sec	accuracy=nan
2023-03-22 18:07:31,104 Node[0] Epoch[26] Batch [320-340]	Speed: 21772.28 samples/sec	accuracy=nan
2023-03-22 18:07:34,110 Node[0] Epoch[26] Batch [340-360]	Speed: 21722.06 samples/sec	accuracy=nan
2023-03-22 18:07:37,109 Node[0] Epoch[26] Batch [360-380]	Speed: 21767.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679526458757, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 18:07:38,758 Node[0] Epoch[26] Time cost=58.868
:::MLLOG {"namespace": "", "time_ms": 1679526458758, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21763.433466255858}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679526458903, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 18:07:40,357 Node[0] Epoch[26] Validation-accuracy=0.720640
2023-03-22 18:07:40,358 Node[0] Epoch[26] Validation-correct-count=4504.000000
2023-03-22 18:07:40,358 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-22 18:07:40,535 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:40,535 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526460534, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679526460535, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7262, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679526460535, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679526460536, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679526460536, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 18:07:40,536 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:07:43,565 Node[0] Epoch[27] Batch [0-20]	Speed: 21632.75 samples/sec	accuracy=nan
2023-03-22 18:07:46,567 Node[0] Epoch[27] Batch [20-40]	Speed: 21749.13 samples/sec	accuracy=nan
2023-03-22 18:07:49,568 Node[0] Epoch[27] Batch [40-60]	Speed: 21750.11 samples/sec	accuracy=nan
2023-03-22 18:07:52,572 Node[0] Epoch[27] Batch [60-80]	Speed: 21727.62 samples/sec	accuracy=nan
2023-03-22 18:07:55,577 Node[0] Epoch[27] Batch [80-100]	Speed: 21722.65 samples/sec	accuracy=nan
2023-03-22 18:07:58,584 Node[0] Epoch[27] Batch [100-120]	Speed: 21714.36 samples/sec	accuracy=nan
2023-03-22 18:08:01,587 Node[0] Epoch[27] Batch [120-140]	Speed: 21739.28 samples/sec	accuracy=nan
2023-03-22 18:08:04,593 Node[0] Epoch[27] Batch [140-160]	Speed: 21717.50 samples/sec	accuracy=nan
2023-03-22 18:08:07,593 Node[0] Epoch[27] Batch [160-180]	Speed: 21754.87 samples/sec	accuracy=nan
2023-03-22 18:08:10,597 Node[0] Epoch[27] Batch [180-200]	Speed: 21735.96 samples/sec	accuracy=nan
2023-03-22 18:08:13,603 Node[0] Epoch[27] Batch [200-220]	Speed: 21714.50 samples/sec	accuracy=nan
2023-03-22 18:08:16,601 Node[0] Epoch[27] Batch [220-240]	Speed: 21773.48 samples/sec	accuracy=nan
2023-03-22 18:08:19,600 Node[0] Epoch[27] Batch [240-260]	Speed: 21765.61 samples/sec	accuracy=nan
2023-03-22 18:08:22,604 Node[0] Epoch[27] Batch [260-280]	Speed: 21730.01 samples/sec	accuracy=nan
2023-03-22 18:08:25,605 Node[0] Epoch[27] Batch [280-300]	Speed: 21752.84 samples/sec	accuracy=nan
2023-03-22 18:08:28,611 Node[0] Epoch[27] Batch [300-320]	Speed: 21721.85 samples/sec	accuracy=nan
2023-03-22 18:08:31,611 Node[0] Epoch[27] Batch [320-340]	Speed: 21760.40 samples/sec	accuracy=nan
2023-03-22 18:08:34,617 Node[0] Epoch[27] Batch [340-360]	Speed: 21714.47 samples/sec	accuracy=nan
2023-03-22 18:08:37,623 Node[0] Epoch[27] Batch [360-380]	Speed: 21717.15 samples/sec	accuracy=nan
2023-03-22 18:08:39,421 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:39,422 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526519422, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 18:08:39,422 Node[0] Epoch[27] Time cost=58.886
:::MLLOG {"namespace": "", "time_ms": 1679526519422, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21756.664582186222}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679526519423, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 18:08:39,423 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:08:42,582 Node[0] Epoch[28] Batch [0-20]	Speed: 21705.05 samples/sec	accuracy=nan
2023-03-22 18:08:45,585 Node[0] Epoch[28] Batch [20-40]	Speed: 21743.12 samples/sec	accuracy=nan
2023-03-22 18:08:48,586 Node[0] Epoch[28] Batch [40-60]	Speed: 21750.49 samples/sec	accuracy=nan
2023-03-22 18:08:51,586 Node[0] Epoch[28] Batch [60-80]	Speed: 21762.37 samples/sec	accuracy=nan
2023-03-22 18:08:54,586 Node[0] Epoch[28] Batch [80-100]	Speed: 21755.06 samples/sec	accuracy=nan
2023-03-22 18:08:57,594 Node[0] Epoch[28] Batch [100-120]	Speed: 21705.14 samples/sec	accuracy=nan
2023-03-22 18:09:00,596 Node[0] Epoch[28] Batch [120-140]	Speed: 21742.57 samples/sec	accuracy=nan
2023-03-22 18:09:03,598 Node[0] Epoch[28] Batch [140-160]	Speed: 21747.10 samples/sec	accuracy=nan
2023-03-22 18:09:06,599 Node[0] Epoch[28] Batch [160-180]	Speed: 21755.55 samples/sec	accuracy=nan
2023-03-22 18:09:09,599 Node[0] Epoch[28] Batch [180-200]	Speed: 21758.63 samples/sec	accuracy=nan
2023-03-22 18:09:12,603 Node[0] Epoch[28] Batch [200-220]	Speed: 21727.31 samples/sec	accuracy=nan
2023-03-22 18:09:15,605 Node[0] Epoch[28] Batch [220-240]	Speed: 21751.46 samples/sec	accuracy=nan
2023-03-22 18:09:18,604 Node[0] Epoch[28] Batch [240-260]	Speed: 21761.73 samples/sec	accuracy=nan
2023-03-22 18:09:21,605 Node[0] Epoch[28] Batch [260-280]	Speed: 21755.12 samples/sec	accuracy=nan
2023-03-22 18:09:24,612 Node[0] Epoch[28] Batch [280-300]	Speed: 21707.90 samples/sec	accuracy=nan
2023-03-22 18:09:29,589 Node[0] Epoch[28] Batch [300-320]	Speed: 13117.01 samples/sec	accuracy=nan
2023-03-22 18:09:32,591 Node[0] Epoch[28] Batch [320-340]	Speed: 21742.97 samples/sec	accuracy=nan
2023-03-22 18:09:35,594 Node[0] Epoch[28] Batch [340-360]	Speed: 21739.60 samples/sec	accuracy=nan
2023-03-22 18:09:38,594 Node[0] Epoch[28] Batch [360-380]	Speed: 21756.72 samples/sec	accuracy=nan
2023-03-22 18:09:40,243 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:40,243 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:40,243 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:40,243 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:40,243 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526580243, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 18:09:40,244 Node[0] Epoch[28] Time cost=60.822
2023-03-22 18:09:40,244 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526580245, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21064.278624447932}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679526580245, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 18:09:40,245 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:40,244 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:09:43,398 Node[0] Epoch[29] Batch [0-20]	Speed: 21756.87 samples/sec	accuracy=nan
2023-03-22 18:09:46,401 Node[0] Epoch[29] Batch [20-40]	Speed: 21737.94 samples/sec	accuracy=nan
2023-03-22 18:09:49,405 Node[0] Epoch[29] Batch [40-60]	Speed: 21726.53 samples/sec	accuracy=nan
2023-03-22 18:09:52,415 Node[0] Epoch[29] Batch [60-80]	Speed: 21691.02 samples/sec	accuracy=nan
2023-03-22 18:09:55,419 Node[0] Epoch[29] Batch [80-100]	Speed: 21731.13 samples/sec	accuracy=nan
2023-03-22 18:09:58,426 Node[0] Epoch[29] Batch [100-120]	Speed: 21706.93 samples/sec	accuracy=nan
2023-03-22 18:10:01,427 Node[0] Epoch[29] Batch [120-140]	Speed: 21752.78 samples/sec	accuracy=nan
2023-03-22 18:10:04,429 Node[0] Epoch[29] Batch [140-160]	Speed: 21749.19 samples/sec	accuracy=nan
2023-03-22 18:10:07,439 Node[0] Epoch[29] Batch [160-180]	Speed: 21683.45 samples/sec	accuracy=nan
2023-03-22 18:10:10,441 Node[0] Epoch[29] Batch [180-200]	Speed: 21744.70 samples/sec	accuracy=nan
2023-03-22 18:10:13,450 Node[0] Epoch[29] Batch [200-220]	Speed: 21700.89 samples/sec	accuracy=nan
2023-03-22 18:10:16,456 Node[0] Epoch[29] Batch [220-240]	Speed: 21711.58 samples/sec	accuracy=nan
2023-03-22 18:10:19,460 Node[0] Epoch[29] Batch [240-260]	Speed: 21734.91 samples/sec	accuracy=nan
2023-03-22 18:10:22,467 Node[0] Epoch[29] Batch [260-280]	Speed: 21704.90 samples/sec	accuracy=nan
2023-03-22 18:10:25,469 Node[0] Epoch[29] Batch [280-300]	Speed: 21745.17 samples/sec	accuracy=nan
2023-03-22 18:10:28,478 Node[0] Epoch[29] Batch [300-320]	Speed: 21700.88 samples/sec	accuracy=nan
2023-03-22 18:10:31,479 Node[0] Epoch[29] Batch [320-340]	Speed: 21751.67 samples/sec	accuracy=nan
2023-03-22 18:10:34,479 Node[0] Epoch[29] Batch [340-360]	Speed: 21756.89 samples/sec	accuracy=nan
2023-03-22 18:10:37,483 Node[0] Epoch[29] Batch [360-380]	Speed: 21733.41 samples/sec	accuracy=nan
2023-03-22 18:10:39,283 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:39,283 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:39,283 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:39,283 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526639283, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 18:10:39,283 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:39,283 Node[0] Epoch[29] Time cost=59.038
2023-03-22 18:10:39,283 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526639283, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21700.618412935608}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679526639284, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 18:10:39,284 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:39,284 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:10:42,439 Node[0] Epoch[30] Batch [0-20]	Speed: 21743.56 samples/sec	accuracy=nan
2023-03-22 18:10:45,445 Node[0] Epoch[30] Batch [20-40]	Speed: 21715.30 samples/sec	accuracy=nan
2023-03-22 18:10:48,446 Node[0] Epoch[30] Batch [40-60]	Speed: 21749.11 samples/sec	accuracy=nan
2023-03-22 18:10:51,453 Node[0] Epoch[30] Batch [60-80]	Speed: 21714.27 samples/sec	accuracy=nan
2023-03-22 18:10:54,456 Node[0] Epoch[30] Batch [80-100]	Speed: 21738.34 samples/sec	accuracy=nan
2023-03-22 18:10:57,465 Node[0] Epoch[30] Batch [100-120]	Speed: 21695.00 samples/sec	accuracy=nan
2023-03-22 18:11:00,469 Node[0] Epoch[30] Batch [120-140]	Speed: 21731.02 samples/sec	accuracy=nan
2023-03-22 18:11:03,475 Node[0] Epoch[30] Batch [140-160]	Speed: 21710.73 samples/sec	accuracy=nan
2023-03-22 18:11:06,481 Node[0] Epoch[30] Batch [160-180]	Speed: 21717.36 samples/sec	accuracy=nan
2023-03-22 18:11:09,487 Node[0] Epoch[30] Batch [180-200]	Speed: 21717.10 samples/sec	accuracy=nan
2023-03-22 18:11:12,494 Node[0] Epoch[30] Batch [200-220]	Speed: 21710.14 samples/sec	accuracy=nan
2023-03-22 18:11:15,501 Node[0] Epoch[30] Batch [220-240]	Speed: 21709.75 samples/sec	accuracy=nan
2023-03-22 18:11:18,507 Node[0] Epoch[30] Batch [240-260]	Speed: 21716.70 samples/sec	accuracy=nan
2023-03-22 18:11:21,520 Node[0] Epoch[30] Batch [260-280]	Speed: 21669.57 samples/sec	accuracy=nan
2023-03-22 18:11:24,524 Node[0] Epoch[30] Batch [280-300]	Speed: 21729.64 samples/sec	accuracy=nan
2023-03-22 18:11:31,734 Node[0] Epoch[30] Batch [300-320]	Speed: 9054.06 samples/sec	accuracy=nan
2023-03-22 18:11:34,731 Node[0] Epoch[30] Batch [320-340]	Speed: 21782.96 samples/sec	accuracy=nan
2023-03-22 18:11:37,729 Node[0] Epoch[30] Batch [340-360]	Speed: 21772.40 samples/sec	accuracy=nan
2023-03-22 18:11:40,727 Node[0] Epoch[30] Batch [360-380]	Speed: 21770.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679526702377, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 18:11:42,378 Node[0] Epoch[30] Time cost=63.095
:::MLLOG {"namespace": "", "time_ms": 1679526702379, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20305.48292561063}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679526702523, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 18:11:44,158 Node[0] Epoch[30] Validation-accuracy=0.757760
2023-03-22 18:11:44,158 Node[0] Epoch[30] Validation-correct-count=4736.000000
2023-03-22 18:11:44,158 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679526704158, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679526704159, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7479, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679526704159, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679526704159, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 18:11:44,159 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526704159, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 18:11:44,159 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:44,159 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:11:47,184 Node[0] Epoch[31] Batch [0-20]	Speed: 21649.28 samples/sec	accuracy=nan
2023-03-22 18:11:50,180 Node[0] Epoch[31] Batch [20-40]	Speed: 21785.44 samples/sec	accuracy=nan
2023-03-22 18:11:53,181 Node[0] Epoch[31] Batch [40-60]	Speed: 21755.45 samples/sec	accuracy=nan
2023-03-22 18:11:56,178 Node[0] Epoch[31] Batch [60-80]	Speed: 21782.25 samples/sec	accuracy=nan
2023-03-22 18:11:59,175 Node[0] Epoch[31] Batch [80-100]	Speed: 21778.69 samples/sec	accuracy=nan
2023-03-22 18:12:02,178 Node[0] Epoch[31] Batch [100-120]	Speed: 21736.02 samples/sec	accuracy=nan
2023-03-22 18:12:05,180 Node[0] Epoch[31] Batch [120-140]	Speed: 21748.52 samples/sec	accuracy=nan
2023-03-22 18:12:08,181 Node[0] Epoch[31] Batch [140-160]	Speed: 21752.82 samples/sec	accuracy=nan
2023-03-22 18:12:11,193 Node[0] Epoch[31] Batch [160-180]	Speed: 21672.71 samples/sec	accuracy=nan
2023-03-22 18:12:14,203 Node[0] Epoch[31] Batch [180-200]	Speed: 21690.73 samples/sec	accuracy=nan
2023-03-22 18:12:17,205 Node[0] Epoch[31] Batch [200-220]	Speed: 21745.16 samples/sec	accuracy=nan
2023-03-22 18:12:20,210 Node[0] Epoch[31] Batch [220-240]	Speed: 21720.85 samples/sec	accuracy=nan
2023-03-22 18:12:23,216 Node[0] Epoch[31] Batch [240-260]	Speed: 21717.85 samples/sec	accuracy=nan
2023-03-22 18:12:26,221 Node[0] Epoch[31] Batch [260-280]	Speed: 21724.98 samples/sec	accuracy=nan
2023-03-22 18:12:29,226 Node[0] Epoch[31] Batch [280-300]	Speed: 21719.22 samples/sec	accuracy=nan
2023-03-22 18:12:36,485 Node[0] Epoch[31] Batch [300-320]	Speed: 8993.90 samples/sec	accuracy=nan
2023-03-22 18:12:39,483 Node[0] Epoch[31] Batch [320-340]	Speed: 21774.79 samples/sec	accuracy=nan
2023-03-22 18:12:42,481 Node[0] Epoch[31] Batch [340-360]	Speed: 21768.95 samples/sec	accuracy=nan
2023-03-22 18:12:45,480 Node[0] Epoch[31] Batch [360-380]	Speed: 21773.17 samples/sec	accuracy=nan
2023-03-22 18:12:47,276 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:47,277 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526767277, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 18:12:47,278 Node[0] Epoch[31] Time cost=63.119
:::MLLOG {"namespace": "", "time_ms": 1679526767278, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20297.752327991224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679526767278, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 18:12:47,279 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:12:50,424 Node[0] Epoch[32] Batch [0-20]	Speed: 21787.79 samples/sec	accuracy=nan
2023-03-22 18:12:53,426 Node[0] Epoch[32] Batch [20-40]	Speed: 21747.48 samples/sec	accuracy=nan
2023-03-22 18:12:56,425 Node[0] Epoch[32] Batch [40-60]	Speed: 21767.29 samples/sec	accuracy=nan
2023-03-22 18:12:59,428 Node[0] Epoch[32] Batch [60-80]	Speed: 21736.85 samples/sec	accuracy=nan
2023-03-22 18:13:02,430 Node[0] Epoch[32] Batch [80-100]	Speed: 21746.80 samples/sec	accuracy=nan
2023-03-22 18:13:05,435 Node[0] Epoch[32] Batch [100-120]	Speed: 21719.49 samples/sec	accuracy=nan
2023-03-22 18:13:08,439 Node[0] Epoch[32] Batch [120-140]	Speed: 21732.72 samples/sec	accuracy=nan
2023-03-22 18:13:11,452 Node[0] Epoch[32] Batch [140-160]	Speed: 21665.60 samples/sec	accuracy=nan
2023-03-22 18:13:14,456 Node[0] Epoch[32] Batch [160-180]	Speed: 21728.54 samples/sec	accuracy=nan
2023-03-22 18:13:17,458 Node[0] Epoch[32] Batch [180-200]	Speed: 21746.04 samples/sec	accuracy=nan
2023-03-22 18:13:20,461 Node[0] Epoch[32] Batch [200-220]	Speed: 21741.20 samples/sec	accuracy=nan
2023-03-22 18:13:23,464 Node[0] Epoch[32] Batch [220-240]	Speed: 21739.31 samples/sec	accuracy=nan
2023-03-22 18:13:26,464 Node[0] Epoch[32] Batch [240-260]	Speed: 21757.13 samples/sec	accuracy=nan
2023-03-22 18:13:29,465 Node[0] Epoch[32] Batch [260-280]	Speed: 21750.40 samples/sec	accuracy=nan
2023-03-22 18:13:32,465 Node[0] Epoch[32] Batch [280-300]	Speed: 21766.16 samples/sec	accuracy=nan
2023-03-22 18:13:35,468 Node[0] Epoch[32] Batch [300-320]	Speed: 21735.79 samples/sec	accuracy=nan
2023-03-22 18:13:38,471 Node[0] Epoch[32] Batch [320-340]	Speed: 21736.05 samples/sec	accuracy=nan
2023-03-22 18:13:41,476 Node[0] Epoch[32] Batch [340-360]	Speed: 21726.28 samples/sec	accuracy=nan
2023-03-22 18:13:44,478 Node[0] Epoch[32] Batch [360-380]	Speed: 21745.99 samples/sec	accuracy=nan
2023-03-22 18:13:46,127 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,127 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,127 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,128 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,128 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526826128, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 18:13:46,128 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,128 Node[0] Epoch[32] Time cost=58.849
:::MLLOG {"namespace": "", "time_ms": 1679526826128, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21770.26547999629}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679526826128, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 18:13:46,129 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:46,129 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:13:49,287 Node[0] Epoch[33] Batch [0-20]	Speed: 21723.85 samples/sec	accuracy=nan
2023-03-22 18:13:52,294 Node[0] Epoch[33] Batch [20-40]	Speed: 21711.76 samples/sec	accuracy=nan
2023-03-22 18:13:55,301 Node[0] Epoch[33] Batch [40-60]	Speed: 21702.93 samples/sec	accuracy=nan
2023-03-22 18:13:58,307 Node[0] Epoch[33] Batch [60-80]	Speed: 21717.58 samples/sec	accuracy=nan
2023-03-22 18:14:01,308 Node[0] Epoch[33] Batch [80-100]	Speed: 21756.10 samples/sec	accuracy=nan
2023-03-22 18:14:04,306 Node[0] Epoch[33] Batch [100-120]	Speed: 21775.80 samples/sec	accuracy=nan
2023-03-22 18:14:07,308 Node[0] Epoch[33] Batch [120-140]	Speed: 21739.27 samples/sec	accuracy=nan
2023-03-22 18:14:10,309 Node[0] Epoch[33] Batch [140-160]	Speed: 21760.58 samples/sec	accuracy=nan
2023-03-22 18:14:13,318 Node[0] Epoch[33] Batch [160-180]	Speed: 21691.40 samples/sec	accuracy=nan
2023-03-22 18:14:16,320 Node[0] Epoch[33] Batch [180-200]	Speed: 21748.74 samples/sec	accuracy=nan
2023-03-22 18:14:19,323 Node[0] Epoch[33] Batch [200-220]	Speed: 21735.15 samples/sec	accuracy=nan
2023-03-22 18:14:22,325 Node[0] Epoch[33] Batch [220-240]	Speed: 21744.99 samples/sec	accuracy=nan
2023-03-22 18:14:25,333 Node[0] Epoch[33] Batch [240-260]	Speed: 21698.87 samples/sec	accuracy=nan
2023-03-22 18:14:28,340 Node[0] Epoch[33] Batch [260-280]	Speed: 21714.91 samples/sec	accuracy=nan
2023-03-22 18:14:31,346 Node[0] Epoch[33] Batch [280-300]	Speed: 21714.62 samples/sec	accuracy=nan
2023-03-22 18:14:34,350 Node[0] Epoch[33] Batch [300-320]	Speed: 21727.46 samples/sec	accuracy=nan
2023-03-22 18:14:37,356 Node[0] Epoch[33] Batch [320-340]	Speed: 21719.79 samples/sec	accuracy=nan
2023-03-22 18:14:40,359 Node[0] Epoch[33] Batch [340-360]	Speed: 21737.80 samples/sec	accuracy=nan
2023-03-22 18:14:43,368 Node[0] Epoch[33] Batch [360-380]	Speed: 21695.35 samples/sec	accuracy=nan
2023-03-22 18:14:45,170 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,170 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,170 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,170 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,170 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,171 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:45,171 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679526885171, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 18:14:45,172 Node[0] Epoch[33] Time cost=59.043
:::MLLOG {"namespace": "", "time_ms": 1679526885172, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21698.782172751165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679526885172, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 18:14:45,172 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:14:48,325 Node[0] Epoch[34] Batch [0-20]	Speed: 21740.53 samples/sec	accuracy=nan
2023-03-22 18:14:51,325 Node[0] Epoch[34] Batch [20-40]	Speed: 21765.78 samples/sec	accuracy=nan
2023-03-22 18:14:54,324 Node[0] Epoch[34] Batch [40-60]	Speed: 21760.97 samples/sec	accuracy=nan
2023-03-22 18:14:57,333 Node[0] Epoch[34] Batch [60-80]	Speed: 21699.68 samples/sec	accuracy=nan
2023-03-22 18:15:00,337 Node[0] Epoch[34] Batch [80-100]	Speed: 21729.57 samples/sec	accuracy=nan
2023-03-22 18:15:03,339 Node[0] Epoch[34] Batch [100-120]	Speed: 21747.40 samples/sec	accuracy=nan
2023-03-22 18:15:06,343 Node[0] Epoch[34] Batch [120-140]	Speed: 21729.59 samples/sec	accuracy=nan
2023-03-22 18:15:09,346 Node[0] Epoch[34] Batch [140-160]	Speed: 21737.83 samples/sec	accuracy=nan
2023-03-22 18:15:12,350 Node[0] Epoch[34] Batch [160-180]	Speed: 21731.61 samples/sec	accuracy=nan
2023-03-22 18:15:15,356 Node[0] Epoch[34] Batch [180-200]	Speed: 21718.25 samples/sec	accuracy=nan
2023-03-22 18:15:18,359 Node[0] Epoch[34] Batch [200-220]	Speed: 21739.01 samples/sec	accuracy=nan
2023-03-22 18:15:21,362 Node[0] Epoch[34] Batch [220-240]	Speed: 21735.21 samples/sec	accuracy=nan
2023-03-22 18:15:24,362 Node[0] Epoch[34] Batch [240-260]	Speed: 21757.84 samples/sec	accuracy=nan
2023-03-22 18:15:27,366 Node[0] Epoch[34] Batch [260-280]	Speed: 21734.41 samples/sec	accuracy=nan
2023-03-22 18:15:30,369 Node[0] Epoch[34] Batch [280-300]	Speed: 21733.61 samples/sec	accuracy=nan
2023-03-22 18:15:33,378 Node[0] Epoch[34] Batch [300-320]	Speed: 21699.85 samples/sec	accuracy=nan
2023-03-22 18:15:36,379 Node[0] Epoch[34] Batch [320-340]	Speed: 21753.15 samples/sec	accuracy=nan
2023-03-22 18:15:39,383 Node[0] Epoch[34] Batch [340-360]	Speed: 21727.44 samples/sec	accuracy=nan
2023-03-22 18:15:42,390 Node[0] Epoch[34] Batch [360-380]	Speed: 21713.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679526944189, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 18:15:44,190 Node[0] Epoch[34] Time cost=59.017
:::MLLOG {"namespace": "", "time_ms": 1679526944190, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21708.37286671235}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679526944335, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 18:15:45,772 Node[0] Epoch[34] Validation-accuracy=0.763360
2023-03-22 18:15:45,772 Node[0] Epoch[34] Validation-correct-count=4771.000000
2023-03-22 18:15:45,772 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679526945840, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679526945841, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75904, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679526945842, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679526945842, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526960
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:00 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:00 PM
+ result=2228
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2228,root,2023-03-22 05:38:52 PM'
RESULT,IMAGE_CLASSIFICATION,,2228,root,2023-03-22 05:38:52 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526960
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:00 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:00 PM
+ result=2228
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2228,root,2023-03-22 05:38:52 PM'
RESULT,IMAGE_CLASSIFICATION,,2228,root,2023-03-22 05:38:52 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526961
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:01 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:01 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:01 PM
+ result=2229
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526961
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:01 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:01 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:01 PM
+ result=2229
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM'
RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526961
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:01 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:01 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:01 PM
+ result=2229
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526961
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:01 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:01 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:01 PM
+ result=2229
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2229,root,2023-03-22 05:38:52 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526962
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:02 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:02 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:02 PM
+ result=2230
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2230,root,2023-03-22 05:38:52 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2230,root,2023-03-22 05:38:52 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679526962
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 06:16:02 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 06:16:02 PM'
ENDING TIMING RUN AT 2023-03-22 06:16:02 PM
+ result=2230
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2230,root,2023-03-22 05:38:52 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2230,root,2023-03-22 05:38:52 PM'
+ export PROFILE=0
+ PROFILE=0
