+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 '
+ echo 'hosts=node040 node041 '
hosts=node040 node041 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679529229134, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529229168, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529229170, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529229171, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529229173, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679529241946, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679529248071, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529248106, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529248108, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529248109, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529248110, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679529259797, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=11383
+ SEED=11383
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+ source ./config_2xR750xax4A100.sh
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+++ dirname ./config_2xR750xax4A100.sh
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679529261
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start_fmt='2023-03-22 06:54:21 PM'
++ date +%s
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
++ date +%s
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start=1679529261
++ date +%s
+ start=1679529261
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:54:21 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ start_fmt='2023-03-22 06:54:21 PM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ readonly global_rank=0
+ global_rank=0
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ readonly local_rank=0
+ local_rank=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ SLURM_NTASKS_PER_NODE=4
+ DALI_THREADS=6
+ OPTIMIZER=sgdwfastlars
+ DALI_CACHE_SIZE=0
+ BATCHSIZE=408
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ KVSTORE=horovod
+ DALI_TMP_BUFFER_HINT=355568328
+ LR=12.5
+ MOM=0.9
+ DALI_DECODER_BUFFER_HINT=1315942
+ LRSCHED=pow2
+ DALI_CROP_BUFFER_HINT=165581
+ WARMUP_EPOCHS=2
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ LARSETA=0.001
+ DALI_DONT_USE_MMAP=0
+ DALI_HW_DECODER_LOAD=0
+ NUMEPOCHS=37
+ WD=5.0e-05
+ NETWORK=resnet-v1b-stats-fl
+ LABELSMOOTHING=0.1
+ BN_GROUP=1
+ SEED=11383
+ PROFILE=0
+ EVAL_OFFSET=2
+ PROFILE_EXCEL=0
+ EVAL_PERIOD=4
+ NODALI=0
+ DALI_PREFETCH_QUEUE=5
+ NUMEXAMPLES=
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_THREADS=6
+ THR=0.759
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ [[ 0 == 1 ]]
+ DALI_PREALLOCATE_WIDTH=5980
+ DATAROOT=/data
+ DALI_PREALLOCATE_HEIGHT=6430
+ echo 'running benchmark'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ DALI_CROP_BUFFER_HINT=165581
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 -ge 1 ]]
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679529261
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 06:54:21 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ date +%s
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start=1679529261
+ start=1679529261
+ start=1679529261
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:54:21 PM'
+ start_fmt='2023-03-22 06:54:21 PM'
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ start_fmt='2023-03-22 06:54:21 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
+ readonly global_rank=0
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ SEED=11383
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ date +%s
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679529261
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 06:54:21 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 06:54:21 PM'
STARTING TIMING RUN AT 2023-03-22 06:54:21 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ GPUS=0,1,2,3
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11383
+ EVAL_OFFSET=2
+ GPUS=0,1,2,3
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ GPUS=0,1,2,3
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11383 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:23242] MCW rank 3 is not bound (or bound to all available processors)
[node040:23241] MCW rank 2 is not bound (or bound to all available processors)
[node040:23238] MCW rank 0 is not bound (or bound to all available processors)
[node040:23240] MCW rank 1 is not bound (or bound to all available processors)
[node041:18854] MCW rank 7 is not bound (or bound to all available processors)
[node041:18853] MCW rank 4 is not bound (or bound to all available processors)
[node041:18855] MCW rank 6 is not bound (or bound to all available processors)
[node041:18856] MCW rank 5 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679529265573, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[18:54:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679529273543, "event_type": "POINT_IN_TIME", "key": "seed", "value": 11383, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[18:54:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:54:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679529274893, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:54:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679529279701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679529279742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,289 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60378, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,289 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30780, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,289 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20798, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,289 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=412, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,292 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36332, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,293 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54425, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,293 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38259, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 18:54:41,293 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61270, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679529281293, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679529281295, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679529281296, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679529368537, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679529368538, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679529368538, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679529369170, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679529369333, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529369334, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 18:56:12,347 Node[0] Epoch[0] Batch [0-20]	Speed: 21780.81 samples/sec	accuracy=nan
2023-03-22 18:56:15,330 Node[0] Epoch[0] Batch [20-40]	Speed: 21883.24 samples/sec	accuracy=nan
2023-03-22 18:56:18,310 Node[0] Epoch[0] Batch [40-60]	Speed: 21909.57 samples/sec	accuracy=nan
2023-03-22 18:56:21,287 Node[0] Epoch[0] Batch [60-80]	Speed: 21922.40 samples/sec	accuracy=nan
2023-03-22 18:56:24,267 Node[0] Epoch[0] Batch [80-100]	Speed: 21905.37 samples/sec	accuracy=nan
2023-03-22 18:56:27,247 Node[0] Epoch[0] Batch [100-120]	Speed: 21910.55 samples/sec	accuracy=nan
2023-03-22 18:56:30,223 Node[0] Epoch[0] Batch [120-140]	Speed: 21934.44 samples/sec	accuracy=nan
2023-03-22 18:56:33,197 Node[0] Epoch[0] Batch [140-160]	Speed: 21950.21 samples/sec	accuracy=nan
2023-03-22 18:56:36,175 Node[0] Epoch[0] Batch [160-180]	Speed: 21923.71 samples/sec	accuracy=nan
2023-03-22 18:56:39,151 Node[0] Epoch[0] Batch [180-200]	Speed: 21934.95 samples/sec	accuracy=nan
2023-03-22 18:56:44,386 Node[0] Epoch[0] Batch [200-220]	Speed: 12469.82 samples/sec	accuracy=nan
2023-03-22 18:56:54,014 Node[0] Epoch[0] Batch [220-240]	Speed: 6780.26 samples/sec	accuracy=nan
2023-03-22 18:57:00,979 Node[0] Epoch[0] Batch [240-260]	Speed: 9371.52 samples/sec	accuracy=nan
2023-03-22 18:57:05,914 Node[0] Epoch[0] Batch [260-280]	Speed: 13229.66 samples/sec	accuracy=nan
2023-03-22 18:57:11,149 Node[0] Epoch[0] Batch [280-300]	Speed: 12468.58 samples/sec	accuracy=nan
2023-03-22 18:57:14,133 Node[0] Epoch[0] Batch [300-320]	Speed: 21881.64 samples/sec	accuracy=nan
2023-03-22 18:57:17,118 Node[0] Epoch[0] Batch [320-340]	Speed: 21868.18 samples/sec	accuracy=nan
2023-03-22 18:57:20,103 Node[0] Epoch[0] Batch [340-360]	Speed: 21867.16 samples/sec	accuracy=nan
2023-03-22 18:57:23,086 Node[0] Epoch[0] Batch [360-380]	Speed: 21881.31 samples/sec	accuracy=nan
2023-03-22 18:57:24,871 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,871 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,872 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,872 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,872 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,872 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529444871, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 18:57:24,872 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:24,872 Node[0] Epoch[0] Time cost=75.538
:::MLLOG {"namespace": "", "time_ms": 1679529444872, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 16960.52416784103}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679529444873, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 18:57:24,874 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:57:28,006 Node[0] Epoch[1] Batch [0-20]	Speed: 21876.16 samples/sec	accuracy=nan
2023-03-22 18:57:30,988 Node[0] Epoch[1] Batch [20-40]	Speed: 21891.57 samples/sec	accuracy=nan
2023-03-22 18:57:33,974 Node[0] Epoch[1] Batch [40-60]	Speed: 21861.75 samples/sec	accuracy=nan
2023-03-22 18:57:36,953 Node[0] Epoch[1] Batch [60-80]	Speed: 21911.52 samples/sec	accuracy=nan
2023-03-22 18:57:39,935 Node[0] Epoch[1] Batch [80-100]	Speed: 21889.78 samples/sec	accuracy=nan
2023-03-22 18:57:42,928 Node[0] Epoch[1] Batch [100-120]	Speed: 21811.51 samples/sec	accuracy=nan
2023-03-22 18:57:45,921 Node[0] Epoch[1] Batch [120-140]	Speed: 21810.78 samples/sec	accuracy=nan
2023-03-22 18:57:48,906 Node[0] Epoch[1] Batch [140-160]	Speed: 21870.26 samples/sec	accuracy=nan
2023-03-22 18:57:51,895 Node[0] Epoch[1] Batch [160-180]	Speed: 21839.47 samples/sec	accuracy=nan
2023-03-22 18:57:54,885 Node[0] Epoch[1] Batch [180-200]	Speed: 21835.84 samples/sec	accuracy=nan
2023-03-22 18:57:57,872 Node[0] Epoch[1] Batch [200-220]	Speed: 21851.95 samples/sec	accuracy=nan
2023-03-22 18:58:00,859 Node[0] Epoch[1] Batch [220-240]	Speed: 21852.86 samples/sec	accuracy=nan
2023-03-22 18:58:03,846 Node[0] Epoch[1] Batch [240-260]	Speed: 21860.84 samples/sec	accuracy=nan
2023-03-22 18:58:06,834 Node[0] Epoch[1] Batch [260-280]	Speed: 21845.73 samples/sec	accuracy=nan
2023-03-22 18:58:09,823 Node[0] Epoch[1] Batch [280-300]	Speed: 21835.68 samples/sec	accuracy=nan
2023-03-22 18:58:12,817 Node[0] Epoch[1] Batch [300-320]	Speed: 21804.67 samples/sec	accuracy=nan
2023-03-22 18:58:15,805 Node[0] Epoch[1] Batch [320-340]	Speed: 21847.01 samples/sec	accuracy=nan
2023-03-22 18:58:18,805 Node[0] Epoch[1] Batch [340-360]	Speed: 21765.01 samples/sec	accuracy=nan
2023-03-22 18:58:21,796 Node[0] Epoch[1] Batch [360-380]	Speed: 21824.40 samples/sec	accuracy=nan
2023-03-22 18:58:23,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:23,588 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529503588, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 18:58:23,589 Node[0] Epoch[1] Time cost=58.715
:::MLLOG {"namespace": "", "time_ms": 1679529503589, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21820.02427970532}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679529503589, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 18:58:23,589 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:58:26,733 Node[0] Epoch[2] Batch [0-20]	Speed: 21805.93 samples/sec	accuracy=nan
2023-03-22 18:58:29,722 Node[0] Epoch[2] Batch [20-40]	Speed: 21841.41 samples/sec	accuracy=nan
2023-03-22 18:58:32,704 Node[0] Epoch[2] Batch [40-60]	Speed: 21888.28 samples/sec	accuracy=nan
2023-03-22 18:58:35,692 Node[0] Epoch[2] Batch [60-80]	Speed: 21850.17 samples/sec	accuracy=nan
2023-03-22 18:58:38,679 Node[0] Epoch[2] Batch [80-100]	Speed: 21854.30 samples/sec	accuracy=nan
2023-03-22 18:58:41,671 Node[0] Epoch[2] Batch [100-120]	Speed: 21818.60 samples/sec	accuracy=nan
2023-03-22 18:58:44,659 Node[0] Epoch[2] Batch [120-140]	Speed: 21844.41 samples/sec	accuracy=nan
2023-03-22 18:58:47,648 Node[0] Epoch[2] Batch [140-160]	Speed: 21840.08 samples/sec	accuracy=nan
2023-03-22 18:58:50,644 Node[0] Epoch[2] Batch [160-180]	Speed: 21789.77 samples/sec	accuracy=nan
2023-03-22 18:58:53,632 Node[0] Epoch[2] Batch [180-200]	Speed: 21846.21 samples/sec	accuracy=nan
2023-03-22 18:58:56,621 Node[0] Epoch[2] Batch [200-220]	Speed: 21842.06 samples/sec	accuracy=nan
2023-03-22 18:58:59,610 Node[0] Epoch[2] Batch [220-240]	Speed: 21836.93 samples/sec	accuracy=nan
2023-03-22 18:59:02,600 Node[0] Epoch[2] Batch [240-260]	Speed: 21831.76 samples/sec	accuracy=nan
2023-03-22 18:59:05,589 Node[0] Epoch[2] Batch [260-280]	Speed: 21846.17 samples/sec	accuracy=nan
2023-03-22 18:59:08,583 Node[0] Epoch[2] Batch [280-300]	Speed: 21797.39 samples/sec	accuracy=nan
2023-03-22 18:59:11,571 Node[0] Epoch[2] Batch [300-320]	Speed: 21850.21 samples/sec	accuracy=nan
2023-03-22 18:59:14,556 Node[0] Epoch[2] Batch [320-340]	Speed: 21866.60 samples/sec	accuracy=nan
2023-03-22 18:59:17,547 Node[0] Epoch[2] Batch [340-360]	Speed: 21829.01 samples/sec	accuracy=nan
2023-03-22 18:59:20,537 Node[0] Epoch[2] Batch [360-380]	Speed: 21834.88 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679529562180, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 18:59:22,182 Node[0] Epoch[2] Time cost=58.592
:::MLLOG {"namespace": "", "time_ms": 1679529562182, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21865.802116716844}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679529562326, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 18:59:22,326 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,326 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:22,327 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:23,682 Node[0] Epoch[2] Validation-accuracy=0.288480
2023-03-22 18:59:23,682 Node[0] Epoch[2] Validation-correct-count=1803.000000
2023-03-22 18:59:23,682 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679529563740, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 18:59:23,741 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:23,741 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529563741, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.28652, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 18:59:23,741 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529563741, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679529563741, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 18:59:23,741 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:23,741 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:23,741 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:23,741 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529563741, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 18:59:23,741 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 18:59:26,760 Node[0] Epoch[3] Batch [0-20]	Speed: 21714.87 samples/sec	accuracy=nan
2023-03-22 18:59:29,755 Node[0] Epoch[3] Batch [20-40]	Speed: 21798.69 samples/sec	accuracy=nan
2023-03-22 18:59:32,746 Node[0] Epoch[3] Batch [40-60]	Speed: 21821.27 samples/sec	accuracy=nan
2023-03-22 18:59:35,733 Node[0] Epoch[3] Batch [60-80]	Speed: 21852.74 samples/sec	accuracy=nan
2023-03-22 18:59:38,724 Node[0] Epoch[3] Batch [80-100]	Speed: 21828.96 samples/sec	accuracy=nan
2023-03-22 18:59:41,722 Node[0] Epoch[3] Batch [100-120]	Speed: 21771.79 samples/sec	accuracy=nan
2023-03-22 18:59:44,711 Node[0] Epoch[3] Batch [120-140]	Speed: 21839.56 samples/sec	accuracy=nan
2023-03-22 18:59:47,702 Node[0] Epoch[3] Batch [140-160]	Speed: 21826.93 samples/sec	accuracy=nan
2023-03-22 18:59:50,699 Node[0] Epoch[3] Batch [160-180]	Speed: 21782.07 samples/sec	accuracy=nan
2023-03-22 18:59:53,689 Node[0] Epoch[3] Batch [180-200]	Speed: 21836.32 samples/sec	accuracy=nan
2023-03-22 18:59:56,678 Node[0] Epoch[3] Batch [200-220]	Speed: 21839.49 samples/sec	accuracy=nan
2023-03-22 18:59:59,666 Node[0] Epoch[3] Batch [220-240]	Speed: 21844.21 samples/sec	accuracy=nan
2023-03-22 19:00:02,660 Node[0] Epoch[3] Batch [240-260]	Speed: 21803.36 samples/sec	accuracy=nan
2023-03-22 19:00:05,649 Node[0] Epoch[3] Batch [260-280]	Speed: 21839.71 samples/sec	accuracy=nan
2023-03-22 19:00:08,640 Node[0] Epoch[3] Batch [280-300]	Speed: 21825.44 samples/sec	accuracy=nan
2023-03-22 19:00:11,636 Node[0] Epoch[3] Batch [300-320]	Speed: 21794.53 samples/sec	accuracy=nan
2023-03-22 19:00:14,624 Node[0] Epoch[3] Batch [320-340]	Speed: 21845.28 samples/sec	accuracy=nan
2023-03-22 19:00:17,615 Node[0] Epoch[3] Batch [340-360]	Speed: 21821.59 samples/sec	accuracy=nan
2023-03-22 19:00:20,614 Node[0] Epoch[3] Batch [360-380]	Speed: 21768.47 samples/sec	accuracy=nan
2023-03-22 19:00:22,407 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:22,407 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529622407, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 19:00:22,408 Node[0] Epoch[3] Time cost=58.667
:::MLLOG {"namespace": "", "time_ms": 1679529622408, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21837.983044299286}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679529622409, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 19:00:22,409 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:00:25,550 Node[0] Epoch[4] Batch [0-20]	Speed: 21820.70 samples/sec	accuracy=nan
2023-03-22 19:00:28,545 Node[0] Epoch[4] Batch [20-40]	Speed: 21794.78 samples/sec	accuracy=nan
2023-03-22 19:00:31,539 Node[0] Epoch[4] Batch [40-60]	Speed: 21809.44 samples/sec	accuracy=nan
2023-03-22 19:00:34,529 Node[0] Epoch[4] Batch [60-80]	Speed: 21832.20 samples/sec	accuracy=nan
2023-03-22 19:00:37,518 Node[0] Epoch[4] Batch [80-100]	Speed: 21838.21 samples/sec	accuracy=nan
2023-03-22 19:00:40,509 Node[0] Epoch[4] Batch [100-120]	Speed: 21827.92 samples/sec	accuracy=nan
2023-03-22 19:00:43,504 Node[0] Epoch[4] Batch [120-140]	Speed: 21791.57 samples/sec	accuracy=nan
2023-03-22 19:00:46,501 Node[0] Epoch[4] Batch [140-160]	Speed: 21783.33 samples/sec	accuracy=nan
2023-03-22 19:00:49,491 Node[0] Epoch[4] Batch [160-180]	Speed: 21832.07 samples/sec	accuracy=nan
2023-03-22 19:00:52,486 Node[0] Epoch[4] Batch [180-200]	Speed: 21797.99 samples/sec	accuracy=nan
2023-03-22 19:00:55,481 Node[0] Epoch[4] Batch [200-220]	Speed: 21793.14 samples/sec	accuracy=nan
2023-03-22 19:00:58,470 Node[0] Epoch[4] Batch [220-240]	Speed: 21846.38 samples/sec	accuracy=nan
2023-03-22 19:01:01,459 Node[0] Epoch[4] Batch [240-260]	Speed: 21836.51 samples/sec	accuracy=nan
2023-03-22 19:01:04,448 Node[0] Epoch[4] Batch [260-280]	Speed: 21843.53 samples/sec	accuracy=nan
2023-03-22 19:01:07,437 Node[0] Epoch[4] Batch [280-300]	Speed: 21834.08 samples/sec	accuracy=nan
2023-03-22 19:01:10,438 Node[0] Epoch[4] Batch [300-320]	Speed: 21755.45 samples/sec	accuracy=nan
2023-03-22 19:01:13,429 Node[0] Epoch[4] Batch [320-340]	Speed: 21822.93 samples/sec	accuracy=nan
2023-03-22 19:01:16,425 Node[0] Epoch[4] Batch [340-360]	Speed: 21793.99 samples/sec	accuracy=nan
2023-03-22 19:01:19,420 Node[0] Epoch[4] Batch [360-380]	Speed: 21794.38 samples/sec	accuracy=nan
2023-03-22 19:01:21,061 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,061 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,061 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,061 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,061 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,062 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:21,062 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529681061, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 19:01:21,062 Node[0] Epoch[4] Time cost=58.653
:::MLLOG {"namespace": "", "time_ms": 1679529681062, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21843.02679114652}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679529681062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 19:01:21,063 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:01:24,202 Node[0] Epoch[5] Batch [0-20]	Speed: 21861.78 samples/sec	accuracy=nan
2023-03-22 19:01:27,189 Node[0] Epoch[5] Batch [20-40]	Speed: 21851.14 samples/sec	accuracy=nan
2023-03-22 19:01:30,180 Node[0] Epoch[5] Batch [40-60]	Speed: 21827.93 samples/sec	accuracy=nan
2023-03-22 19:01:33,168 Node[0] Epoch[5] Batch [60-80]	Speed: 21845.32 samples/sec	accuracy=nan
2023-03-22 19:01:36,159 Node[0] Epoch[5] Batch [80-100]	Speed: 21826.91 samples/sec	accuracy=nan
2023-03-22 19:01:39,147 Node[0] Epoch[5] Batch [100-120]	Speed: 21851.06 samples/sec	accuracy=nan
2023-03-22 19:01:42,138 Node[0] Epoch[5] Batch [120-140]	Speed: 21826.27 samples/sec	accuracy=nan
2023-03-22 19:01:45,130 Node[0] Epoch[5] Batch [140-160]	Speed: 21813.44 samples/sec	accuracy=nan
2023-03-22 19:01:48,121 Node[0] Epoch[5] Batch [160-180]	Speed: 21827.88 samples/sec	accuracy=nan
2023-03-22 19:01:51,111 Node[0] Epoch[5] Batch [180-200]	Speed: 21833.49 samples/sec	accuracy=nan
2023-03-22 19:01:54,102 Node[0] Epoch[5] Batch [200-220]	Speed: 21825.22 samples/sec	accuracy=nan
2023-03-22 19:01:57,091 Node[0] Epoch[5] Batch [220-240]	Speed: 21837.13 samples/sec	accuracy=nan
2023-03-22 19:02:00,083 Node[0] Epoch[5] Batch [240-260]	Speed: 21819.73 samples/sec	accuracy=nan
2023-03-22 19:02:03,077 Node[0] Epoch[5] Batch [260-280]	Speed: 21802.04 samples/sec	accuracy=nan
2023-03-22 19:02:06,068 Node[0] Epoch[5] Batch [280-300]	Speed: 21830.76 samples/sec	accuracy=nan
2023-03-22 19:02:09,056 Node[0] Epoch[5] Batch [300-320]	Speed: 21841.76 samples/sec	accuracy=nan
2023-03-22 19:02:12,048 Node[0] Epoch[5] Batch [320-340]	Speed: 21821.50 samples/sec	accuracy=nan
2023-03-22 19:02:15,036 Node[0] Epoch[5] Batch [340-360]	Speed: 21843.77 samples/sec	accuracy=nan
2023-03-22 19:02:18,034 Node[0] Epoch[5] Batch [360-380]	Speed: 21779.93 samples/sec	accuracy=nan
2023-03-22 19:02:19,825 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:19,826 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529739826, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 19:02:19,828 Node[0] Epoch[5] Time cost=58.765
:::MLLOG {"namespace": "", "time_ms": 1679529739828, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21801.542806827416}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679529739828, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 19:02:19,828 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:02:22,971 Node[0] Epoch[6] Batch [0-20]	Speed: 21803.99 samples/sec	accuracy=nan
2023-03-22 19:02:25,960 Node[0] Epoch[6] Batch [20-40]	Speed: 21841.77 samples/sec	accuracy=nan
2023-03-22 19:02:28,948 Node[0] Epoch[6] Batch [40-60]	Speed: 21848.05 samples/sec	accuracy=nan
2023-03-22 19:02:31,937 Node[0] Epoch[6] Batch [60-80]	Speed: 21839.30 samples/sec	accuracy=nan
2023-03-22 19:02:34,925 Node[0] Epoch[6] Batch [80-100]	Speed: 21842.55 samples/sec	accuracy=nan
2023-03-22 19:02:37,915 Node[0] Epoch[6] Batch [100-120]	Speed: 21835.77 samples/sec	accuracy=nan
2023-03-22 19:02:40,905 Node[0] Epoch[6] Batch [120-140]	Speed: 21829.13 samples/sec	accuracy=nan
2023-03-22 19:02:43,894 Node[0] Epoch[6] Batch [140-160]	Speed: 21839.85 samples/sec	accuracy=nan
2023-03-22 19:02:46,883 Node[0] Epoch[6] Batch [160-180]	Speed: 21840.81 samples/sec	accuracy=nan
2023-03-22 19:02:49,873 Node[0] Epoch[6] Batch [180-200]	Speed: 21834.31 samples/sec	accuracy=nan
2023-03-22 19:02:52,862 Node[0] Epoch[6] Batch [200-220]	Speed: 21839.75 samples/sec	accuracy=nan
2023-03-22 19:02:55,849 Node[0] Epoch[6] Batch [220-240]	Speed: 21857.89 samples/sec	accuracy=nan
2023-03-22 19:02:58,836 Node[0] Epoch[6] Batch [240-260]	Speed: 21853.42 samples/sec	accuracy=nan
2023-03-22 19:03:01,832 Node[0] Epoch[6] Batch [260-280]	Speed: 21787.26 samples/sec	accuracy=nan
2023-03-22 19:03:04,821 Node[0] Epoch[6] Batch [280-300]	Speed: 21843.72 samples/sec	accuracy=nan
2023-03-22 19:03:07,811 Node[0] Epoch[6] Batch [300-320]	Speed: 21827.57 samples/sec	accuracy=nan
2023-03-22 19:03:10,800 Node[0] Epoch[6] Batch [320-340]	Speed: 21843.73 samples/sec	accuracy=nan
2023-03-22 19:03:13,792 Node[0] Epoch[6] Batch [340-360]	Speed: 21814.46 samples/sec	accuracy=nan
2023-03-22 19:03:16,783 Node[0] Epoch[6] Batch [360-380]	Speed: 21826.93 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679529798424, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 19:03:18,425 Node[0] Epoch[6] Time cost=58.597
:::MLLOG {"namespace": "", "time_ms": 1679529798425, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21864.223646466337}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679529798570, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 19:03:19,974 Node[0] Epoch[6] Validation-accuracy=0.424000
2023-03-22 19:03:19,974 Node[0] Epoch[6] Validation-correct-count=2650.000000
2023-03-22 19:03:19,974 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-22 19:03:20,115 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:20,115 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529800115, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679529800116, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.41652, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679529800116, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679529800116, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679529800117, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 19:03:20,117 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:03:23,129 Node[0] Epoch[7] Batch [0-20]	Speed: 21745.63 samples/sec	accuracy=nan
2023-03-22 19:03:26,114 Node[0] Epoch[7] Batch [20-40]	Speed: 21867.62 samples/sec	accuracy=nan
2023-03-22 19:03:29,099 Node[0] Epoch[7] Batch [40-60]	Speed: 21874.24 samples/sec	accuracy=nan
2023-03-22 19:03:32,080 Node[0] Epoch[7] Batch [60-80]	Speed: 21894.06 samples/sec	accuracy=nan
2023-03-22 19:03:35,068 Node[0] Epoch[7] Batch [80-100]	Speed: 21844.90 samples/sec	accuracy=nan
2023-03-22 19:03:38,059 Node[0] Epoch[7] Batch [100-120]	Speed: 21832.51 samples/sec	accuracy=nan
2023-03-22 19:03:41,045 Node[0] Epoch[7] Batch [120-140]	Speed: 21855.58 samples/sec	accuracy=nan
2023-03-22 19:03:44,034 Node[0] Epoch[7] Batch [140-160]	Speed: 21841.63 samples/sec	accuracy=nan
2023-03-22 19:03:47,025 Node[0] Epoch[7] Batch [160-180]	Speed: 21827.39 samples/sec	accuracy=nan
2023-03-22 19:03:50,013 Node[0] Epoch[7] Batch [180-200]	Speed: 21848.53 samples/sec	accuracy=nan
2023-03-22 19:03:53,004 Node[0] Epoch[7] Batch [200-220]	Speed: 21822.92 samples/sec	accuracy=nan
2023-03-22 19:03:55,994 Node[0] Epoch[7] Batch [220-240]	Speed: 21835.30 samples/sec	accuracy=nan
2023-03-22 19:03:58,981 Node[0] Epoch[7] Batch [240-260]	Speed: 21854.07 samples/sec	accuracy=nan
2023-03-22 19:04:01,970 Node[0] Epoch[7] Batch [260-280]	Speed: 21840.16 samples/sec	accuracy=nan
2023-03-22 19:04:04,958 Node[0] Epoch[7] Batch [280-300]	Speed: 21848.66 samples/sec	accuracy=nan
2023-03-22 19:04:07,945 Node[0] Epoch[7] Batch [300-320]	Speed: 21850.50 samples/sec	accuracy=nan
2023-03-22 19:04:10,930 Node[0] Epoch[7] Batch [320-340]	Speed: 21874.65 samples/sec	accuracy=nan
2023-03-22 19:04:13,918 Node[0] Epoch[7] Batch [340-360]	Speed: 21845.74 samples/sec	accuracy=nan
2023-03-22 19:04:16,906 Node[0] Epoch[7] Batch [360-380]	Speed: 21847.09 samples/sec	accuracy=nan
2023-03-22 19:04:18,696 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:04:18,696 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:04:18,696 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:04:18,696 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529858696, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 19:04:18,697 Node[0] Epoch[7] Time cost=58.580
2023-03-22 19:04:18,697 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529858697, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21870.325800253675}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-22 19:04:18,697 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:04:18,697 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529858697, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 19:04:18,697 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:04:21,842 Node[0] Epoch[8] Batch [0-20]	Speed: 21797.20 samples/sec	accuracy=nan
2023-03-22 19:04:24,839 Node[0] Epoch[8] Batch [20-40]	Speed: 21776.05 samples/sec	accuracy=nan
2023-03-22 19:04:27,828 Node[0] Epoch[8] Batch [40-60]	Speed: 21846.36 samples/sec	accuracy=nan
2023-03-22 19:04:30,816 Node[0] Epoch[8] Batch [60-80]	Speed: 21846.01 samples/sec	accuracy=nan
2023-03-22 19:04:33,812 Node[0] Epoch[8] Batch [80-100]	Speed: 21787.71 samples/sec	accuracy=nan
2023-03-22 19:04:36,806 Node[0] Epoch[8] Batch [100-120]	Speed: 21804.23 samples/sec	accuracy=nan
2023-03-22 19:04:39,795 Node[0] Epoch[8] Batch [120-140]	Speed: 21841.94 samples/sec	accuracy=nan
2023-03-22 19:04:42,790 Node[0] Epoch[8] Batch [140-160]	Speed: 21793.21 samples/sec	accuracy=nan
2023-03-22 19:04:45,787 Node[0] Epoch[8] Batch [160-180]	Speed: 21784.25 samples/sec	accuracy=nan
2023-03-22 19:04:48,774 Node[0] Epoch[8] Batch [180-200]	Speed: 21850.43 samples/sec	accuracy=nan
2023-03-22 19:04:51,766 Node[0] Epoch[8] Batch [200-220]	Speed: 21818.25 samples/sec	accuracy=nan
2023-03-22 19:04:54,758 Node[0] Epoch[8] Batch [220-240]	Speed: 21819.55 samples/sec	accuracy=nan
2023-03-22 19:04:57,750 Node[0] Epoch[8] Batch [240-260]	Speed: 21819.53 samples/sec	accuracy=nan
2023-03-22 19:05:00,740 Node[0] Epoch[8] Batch [260-280]	Speed: 21831.75 samples/sec	accuracy=nan
2023-03-22 19:05:03,730 Node[0] Epoch[8] Batch [280-300]	Speed: 21834.24 samples/sec	accuracy=nan
2023-03-22 19:05:06,722 Node[0] Epoch[8] Batch [300-320]	Speed: 21818.19 samples/sec	accuracy=nan
2023-03-22 19:05:09,711 Node[0] Epoch[8] Batch [320-340]	Speed: 21841.11 samples/sec	accuracy=nan
2023-03-22 19:05:12,704 Node[0] Epoch[8] Batch [340-360]	Speed: 21810.78 samples/sec	accuracy=nan
2023-03-22 19:05:15,700 Node[0] Epoch[8] Batch [360-380]	Speed: 21785.28 samples/sec	accuracy=nan
2023-03-22 19:05:17,342 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,342 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,342 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,342 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,342 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,342 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:17,343 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529917342, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 19:05:17,343 Node[0] Epoch[8] Time cost=58.646
:::MLLOG {"namespace": "", "time_ms": 1679529917343, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21845.86317424082}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679529917344, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 19:05:17,344 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:05:20,491 Node[0] Epoch[9] Batch [0-20]	Speed: 21796.85 samples/sec	accuracy=nan
2023-03-22 19:05:23,483 Node[0] Epoch[9] Batch [20-40]	Speed: 21813.02 samples/sec	accuracy=nan
2023-03-22 19:05:26,475 Node[0] Epoch[9] Batch [40-60]	Speed: 21818.88 samples/sec	accuracy=nan
2023-03-22 19:05:29,477 Node[0] Epoch[9] Batch [60-80]	Speed: 21747.67 samples/sec	accuracy=nan
2023-03-22 19:05:32,468 Node[0] Epoch[9] Batch [80-100]	Speed: 21824.18 samples/sec	accuracy=nan
2023-03-22 19:05:35,454 Node[0] Epoch[9] Batch [100-120]	Speed: 21861.96 samples/sec	accuracy=nan
2023-03-22 19:05:38,441 Node[0] Epoch[9] Batch [120-140]	Speed: 21851.38 samples/sec	accuracy=nan
2023-03-22 19:05:41,429 Node[0] Epoch[9] Batch [140-160]	Speed: 21848.89 samples/sec	accuracy=nan
2023-03-22 19:05:44,421 Node[0] Epoch[9] Batch [160-180]	Speed: 21818.77 samples/sec	accuracy=nan
2023-03-22 19:05:47,416 Node[0] Epoch[9] Batch [180-200]	Speed: 21801.48 samples/sec	accuracy=nan
2023-03-22 19:05:50,404 Node[0] Epoch[9] Batch [200-220]	Speed: 21842.67 samples/sec	accuracy=nan
2023-03-22 19:05:53,392 Node[0] Epoch[9] Batch [220-240]	Speed: 21850.36 samples/sec	accuracy=nan
2023-03-22 19:05:56,380 Node[0] Epoch[9] Batch [240-260]	Speed: 21843.55 samples/sec	accuracy=nan
2023-03-22 19:05:59,373 Node[0] Epoch[9] Batch [260-280]	Speed: 21809.84 samples/sec	accuracy=nan
2023-03-22 19:06:02,364 Node[0] Epoch[9] Batch [280-300]	Speed: 21830.04 samples/sec	accuracy=nan
2023-03-22 19:06:05,356 Node[0] Epoch[9] Batch [300-320]	Speed: 21816.51 samples/sec	accuracy=nan
2023-03-22 19:06:08,346 Node[0] Epoch[9] Batch [320-340]	Speed: 21832.57 samples/sec	accuracy=nan
2023-03-22 19:06:11,341 Node[0] Epoch[9] Batch [340-360]	Speed: 21798.22 samples/sec	accuracy=nan
2023-03-22 19:06:14,330 Node[0] Epoch[9] Batch [360-380]	Speed: 21838.84 samples/sec	accuracy=nan
2023-03-22 19:06:16,120 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:16,120 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:16,120 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:16,120 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:16,120 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:16,120 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529976120, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 19:06:16,121 Node[0] Epoch[9] Time cost=58.777
2023-03-22 19:06:16,121 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679529976121, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21797.014020407256}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679529976121, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 19:06:16,122 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:06:19,258 Node[0] Epoch[10] Batch [0-20]	Speed: 21853.92 samples/sec	accuracy=nan
2023-03-22 19:06:22,251 Node[0] Epoch[10] Batch [20-40]	Speed: 21816.23 samples/sec	accuracy=nan
2023-03-22 19:06:25,241 Node[0] Epoch[10] Batch [40-60]	Speed: 21829.55 samples/sec	accuracy=nan
2023-03-22 19:06:28,231 Node[0] Epoch[10] Batch [60-80]	Speed: 21836.44 samples/sec	accuracy=nan
2023-03-22 19:06:31,220 Node[0] Epoch[10] Batch [80-100]	Speed: 21837.60 samples/sec	accuracy=nan
2023-03-22 19:06:34,217 Node[0] Epoch[10] Batch [100-120]	Speed: 21782.55 samples/sec	accuracy=nan
2023-03-22 19:06:37,207 Node[0] Epoch[10] Batch [120-140]	Speed: 21828.03 samples/sec	accuracy=nan
2023-03-22 19:06:40,198 Node[0] Epoch[10] Batch [140-160]	Speed: 21830.58 samples/sec	accuracy=nan
2023-03-22 19:06:43,191 Node[0] Epoch[10] Batch [160-180]	Speed: 21805.75 samples/sec	accuracy=nan
2023-03-22 19:06:46,178 Node[0] Epoch[10] Batch [180-200]	Speed: 21855.41 samples/sec	accuracy=nan
2023-03-22 19:06:49,168 Node[0] Epoch[10] Batch [200-220]	Speed: 21837.75 samples/sec	accuracy=nan
2023-03-22 19:06:52,158 Node[0] Epoch[10] Batch [220-240]	Speed: 21830.86 samples/sec	accuracy=nan
2023-03-22 19:06:55,147 Node[0] Epoch[10] Batch [240-260]	Speed: 21840.63 samples/sec	accuracy=nan
2023-03-22 19:06:58,138 Node[0] Epoch[10] Batch [260-280]	Speed: 21826.00 samples/sec	accuracy=nan
2023-03-22 19:07:01,126 Node[0] Epoch[10] Batch [280-300]	Speed: 21846.20 samples/sec	accuracy=nan
2023-03-22 19:07:04,118 Node[0] Epoch[10] Batch [300-320]	Speed: 21814.60 samples/sec	accuracy=nan
2023-03-22 19:07:07,109 Node[0] Epoch[10] Batch [320-340]	Speed: 21830.56 samples/sec	accuracy=nan
2023-03-22 19:07:10,109 Node[0] Epoch[10] Batch [340-360]	Speed: 21756.97 samples/sec	accuracy=nan
2023-03-22 19:07:13,104 Node[0] Epoch[10] Batch [360-380]	Speed: 21796.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679530034745, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 19:07:14,746 Node[0] Epoch[10] Time cost=58.625
:::MLLOG {"namespace": "", "time_ms": 1679530034746, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21853.666960677227}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679530034891, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 19:07:16,392 Node[0] Epoch[10] Validation-accuracy=0.484160
2023-03-22 19:07:16,392 Node[0] Epoch[10] Validation-correct-count=3026.000000
2023-03-22 19:07:16,392 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679530036439, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-22 19:07:16,439 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:07:16,439 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530036439, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.48192, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 19:07:16,439 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530036439, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 19:07:16,439 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530036440, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 19:07:16,439 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:07:16,439 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:07:16,439 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530036440, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 19:07:16,440 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:07:19,458 Node[0] Epoch[11] Batch [0-20]	Speed: 21710.95 samples/sec	accuracy=nan
2023-03-22 19:07:22,446 Node[0] Epoch[11] Batch [20-40]	Speed: 21842.85 samples/sec	accuracy=nan
2023-03-22 19:07:25,435 Node[0] Epoch[11] Batch [40-60]	Speed: 21842.84 samples/sec	accuracy=nan
2023-03-22 19:07:28,424 Node[0] Epoch[11] Batch [60-80]	Speed: 21841.04 samples/sec	accuracy=nan
2023-03-22 19:07:31,416 Node[0] Epoch[11] Batch [80-100]	Speed: 21814.66 samples/sec	accuracy=nan
2023-03-22 19:07:34,408 Node[0] Epoch[11] Batch [100-120]	Speed: 21819.05 samples/sec	accuracy=nan
2023-03-22 19:07:37,397 Node[0] Epoch[11] Batch [120-140]	Speed: 21837.05 samples/sec	accuracy=nan
2023-03-22 19:07:40,391 Node[0] Epoch[11] Batch [140-160]	Speed: 21808.57 samples/sec	accuracy=nan
2023-03-22 19:07:43,385 Node[0] Epoch[11] Batch [160-180]	Speed: 21803.84 samples/sec	accuracy=nan
2023-03-22 19:07:46,376 Node[0] Epoch[11] Batch [180-200]	Speed: 21827.01 samples/sec	accuracy=nan
2023-03-22 19:07:49,369 Node[0] Epoch[11] Batch [200-220]	Speed: 21806.67 samples/sec	accuracy=nan
2023-03-22 19:07:52,358 Node[0] Epoch[11] Batch [220-240]	Speed: 21838.28 samples/sec	accuracy=nan
2023-03-22 19:07:55,350 Node[0] Epoch[11] Batch [240-260]	Speed: 21821.09 samples/sec	accuracy=nan
2023-03-22 19:07:58,339 Node[0] Epoch[11] Batch [260-280]	Speed: 21836.96 samples/sec	accuracy=nan
2023-03-22 19:08:01,328 Node[0] Epoch[11] Batch [280-300]	Speed: 21844.20 samples/sec	accuracy=nan
2023-03-22 19:08:04,317 Node[0] Epoch[11] Batch [300-320]	Speed: 21839.96 samples/sec	accuracy=nan
2023-03-22 19:08:07,304 Node[0] Epoch[11] Batch [320-340]	Speed: 21850.48 samples/sec	accuracy=nan
2023-03-22 19:08:10,298 Node[0] Epoch[11] Batch [340-360]	Speed: 21808.60 samples/sec	accuracy=nan
2023-03-22 19:08:13,291 Node[0] Epoch[11] Batch [360-380]	Speed: 21808.75 samples/sec	accuracy=nan
2023-03-22 19:08:15,083 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,083 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,083 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,083 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,083 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,084 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:15,084 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530095083, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 19:08:15,085 Node[0] Epoch[11] Time cost=58.645
:::MLLOG {"namespace": "", "time_ms": 1679530095085, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21846.185478575015}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679530095085, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 19:08:15,085 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:08:18,226 Node[0] Epoch[12] Batch [0-20]	Speed: 21832.13 samples/sec	accuracy=nan
2023-03-22 19:08:21,218 Node[0] Epoch[12] Batch [20-40]	Speed: 21819.51 samples/sec	accuracy=nan
2023-03-22 19:08:24,217 Node[0] Epoch[12] Batch [40-60]	Speed: 21764.22 samples/sec	accuracy=nan
2023-03-22 19:08:27,212 Node[0] Epoch[12] Batch [60-80]	Speed: 21793.41 samples/sec	accuracy=nan
2023-03-22 19:08:30,213 Node[0] Epoch[12] Batch [80-100]	Speed: 21755.10 samples/sec	accuracy=nan
2023-03-22 19:08:33,208 Node[0] Epoch[12] Batch [100-120]	Speed: 21796.61 samples/sec	accuracy=nan
2023-03-22 19:08:36,199 Node[0] Epoch[12] Batch [120-140]	Speed: 21822.89 samples/sec	accuracy=nan
2023-03-22 19:08:39,190 Node[0] Epoch[12] Batch [140-160]	Speed: 21830.91 samples/sec	accuracy=nan
2023-03-22 19:08:42,184 Node[0] Epoch[12] Batch [160-180]	Speed: 21798.89 samples/sec	accuracy=nan
2023-03-22 19:08:45,175 Node[0] Epoch[12] Batch [180-200]	Speed: 21829.61 samples/sec	accuracy=nan
2023-03-22 19:08:48,167 Node[0] Epoch[12] Batch [200-220]	Speed: 21818.10 samples/sec	accuracy=nan
2023-03-22 19:08:51,155 Node[0] Epoch[12] Batch [220-240]	Speed: 21845.33 samples/sec	accuracy=nan
2023-03-22 19:08:54,143 Node[0] Epoch[12] Batch [240-260]	Speed: 21848.90 samples/sec	accuracy=nan
2023-03-22 19:08:57,133 Node[0] Epoch[12] Batch [260-280]	Speed: 21828.90 samples/sec	accuracy=nan
2023-03-22 19:09:00,124 Node[0] Epoch[12] Batch [280-300]	Speed: 21829.61 samples/sec	accuracy=nan
2023-03-22 19:09:03,112 Node[0] Epoch[12] Batch [300-320]	Speed: 21847.95 samples/sec	accuracy=nan
2023-03-22 19:09:06,099 Node[0] Epoch[12] Batch [320-340]	Speed: 21854.70 samples/sec	accuracy=nan
2023-03-22 19:09:09,088 Node[0] Epoch[12] Batch [340-360]	Speed: 21836.12 samples/sec	accuracy=nan
2023-03-22 19:09:12,082 Node[0] Epoch[12] Batch [360-380]	Speed: 21805.18 samples/sec	accuracy=nan
2023-03-22 19:09:13,722 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:13,722 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:13,722 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530153722, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 19:09:13,723 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:13,723 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:13,723 Node[0] Epoch[12] Time cost=58.637
:::MLLOG {"namespace": "", "time_ms": 1679530153723, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21848.9461929306}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 19:09:13,723 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530153723, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 19:09:13,723 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:13,724 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:09:16,862 Node[0] Epoch[13] Batch [0-20]	Speed: 21867.17 samples/sec	accuracy=nan
2023-03-22 19:09:19,848 Node[0] Epoch[13] Batch [20-40]	Speed: 21859.60 samples/sec	accuracy=nan
2023-03-22 19:09:22,846 Node[0] Epoch[13] Batch [40-60]	Speed: 21771.64 samples/sec	accuracy=nan
2023-03-22 19:09:25,838 Node[0] Epoch[13] Batch [60-80]	Speed: 21820.59 samples/sec	accuracy=nan
2023-03-22 19:09:28,829 Node[0] Epoch[13] Batch [80-100]	Speed: 21826.41 samples/sec	accuracy=nan
2023-03-22 19:09:31,827 Node[0] Epoch[13] Batch [100-120]	Speed: 21777.53 samples/sec	accuracy=nan
2023-03-22 19:09:34,815 Node[0] Epoch[13] Batch [120-140]	Speed: 21846.18 samples/sec	accuracy=nan
2023-03-22 19:09:37,807 Node[0] Epoch[13] Batch [140-160]	Speed: 21814.08 samples/sec	accuracy=nan
2023-03-22 19:09:40,803 Node[0] Epoch[13] Batch [160-180]	Speed: 21789.71 samples/sec	accuracy=nan
2023-03-22 19:09:43,793 Node[0] Epoch[13] Batch [180-200]	Speed: 21837.28 samples/sec	accuracy=nan
2023-03-22 19:09:46,790 Node[0] Epoch[13] Batch [200-220]	Speed: 21779.49 samples/sec	accuracy=nan
2023-03-22 19:09:49,782 Node[0] Epoch[13] Batch [220-240]	Speed: 21821.14 samples/sec	accuracy=nan
2023-03-22 19:09:52,780 Node[0] Epoch[13] Batch [240-260]	Speed: 21774.35 samples/sec	accuracy=nan
2023-03-22 19:09:55,770 Node[0] Epoch[13] Batch [260-280]	Speed: 21829.96 samples/sec	accuracy=nan
2023-03-22 19:09:58,761 Node[0] Epoch[13] Batch [280-300]	Speed: 21822.54 samples/sec	accuracy=nan
2023-03-22 19:10:01,751 Node[0] Epoch[13] Batch [300-320]	Speed: 21833.27 samples/sec	accuracy=nan
2023-03-22 19:10:04,738 Node[0] Epoch[13] Batch [320-340]	Speed: 21854.48 samples/sec	accuracy=nan
2023-03-22 19:10:07,732 Node[0] Epoch[13] Batch [340-360]	Speed: 21803.30 samples/sec	accuracy=nan
2023-03-22 19:10:10,723 Node[0] Epoch[13] Batch [360-380]	Speed: 21827.99 samples/sec	accuracy=nan
2023-03-22 19:10:12,518 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,518 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,518 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,518 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,518 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,518 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:12,519 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530212518, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 19:10:12,519 Node[0] Epoch[13] Time cost=58.796
:::MLLOG {"namespace": "", "time_ms": 1679530212519, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21790.130219891354}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679530212520, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 19:10:12,520 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:10:15,663 Node[0] Epoch[14] Batch [0-20]	Speed: 21813.99 samples/sec	accuracy=nan
2023-03-22 19:10:18,654 Node[0] Epoch[14] Batch [20-40]	Speed: 21826.01 samples/sec	accuracy=nan
2023-03-22 19:10:21,648 Node[0] Epoch[14] Batch [40-60]	Speed: 21797.09 samples/sec	accuracy=nan
2023-03-22 19:10:24,637 Node[0] Epoch[14] Batch [60-80]	Speed: 21840.67 samples/sec	accuracy=nan
2023-03-22 19:10:27,629 Node[0] Epoch[14] Batch [80-100]	Speed: 21822.36 samples/sec	accuracy=nan
2023-03-22 19:10:30,624 Node[0] Epoch[14] Batch [100-120]	Speed: 21795.01 samples/sec	accuracy=nan
2023-03-22 19:10:33,615 Node[0] Epoch[14] Batch [120-140]	Speed: 21822.01 samples/sec	accuracy=nan
2023-03-22 19:10:36,605 Node[0] Epoch[14] Batch [140-160]	Speed: 21836.95 samples/sec	accuracy=nan
2023-03-22 19:10:39,597 Node[0] Epoch[14] Batch [160-180]	Speed: 21813.33 samples/sec	accuracy=nan
2023-03-22 19:10:42,590 Node[0] Epoch[14] Batch [180-200]	Speed: 21813.64 samples/sec	accuracy=nan
2023-03-22 19:10:45,582 Node[0] Epoch[14] Batch [200-220]	Speed: 21818.45 samples/sec	accuracy=nan
2023-03-22 19:10:48,576 Node[0] Epoch[14] Batch [220-240]	Speed: 21803.11 samples/sec	accuracy=nan
2023-03-22 19:10:51,569 Node[0] Epoch[14] Batch [240-260]	Speed: 21811.86 samples/sec	accuracy=nan
2023-03-22 19:10:54,564 Node[0] Epoch[14] Batch [260-280]	Speed: 21796.31 samples/sec	accuracy=nan
2023-03-22 19:10:57,560 Node[0] Epoch[14] Batch [280-300]	Speed: 21791.77 samples/sec	accuracy=nan
2023-03-22 19:11:00,553 Node[0] Epoch[14] Batch [300-320]	Speed: 21806.25 samples/sec	accuracy=nan
2023-03-22 19:11:03,542 Node[0] Epoch[14] Batch [320-340]	Speed: 21838.98 samples/sec	accuracy=nan
2023-03-22 19:11:06,533 Node[0] Epoch[14] Batch [340-360]	Speed: 21828.56 samples/sec	accuracy=nan
2023-03-22 19:11:09,529 Node[0] Epoch[14] Batch [360-380]	Speed: 21792.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679530271169, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 19:11:11,170 Node[0] Epoch[14] Time cost=58.650
:::MLLOG {"namespace": "", "time_ms": 1679530271170, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21844.277369390078}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679530271317, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 19:11:12,770 Node[0] Epoch[14] Validation-accuracy=0.580640
2023-03-22 19:11:12,771 Node[0] Epoch[14] Validation-correct-count=3629.000000
2023-03-22 19:11:12,771 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-22 19:11:12,863 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:12,863 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530272862, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679530272863, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57508, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679530272864, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679530272864, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679530272864, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 19:11:12,864 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:11:15,880 Node[0] Epoch[15] Batch [0-20]	Speed: 21718.73 samples/sec	accuracy=nan
2023-03-22 19:11:18,867 Node[0] Epoch[15] Batch [20-40]	Speed: 21853.33 samples/sec	accuracy=nan
2023-03-22 19:11:21,852 Node[0] Epoch[15] Batch [40-60]	Speed: 21869.07 samples/sec	accuracy=nan
2023-03-22 19:11:24,841 Node[0] Epoch[15] Batch [60-80]	Speed: 21838.38 samples/sec	accuracy=nan
2023-03-22 19:11:27,831 Node[0] Epoch[15] Batch [80-100]	Speed: 21831.65 samples/sec	accuracy=nan
2023-03-22 19:11:30,819 Node[0] Epoch[15] Batch [100-120]	Speed: 21850.77 samples/sec	accuracy=nan
2023-03-22 19:11:33,807 Node[0] Epoch[15] Batch [120-140]	Speed: 21843.96 samples/sec	accuracy=nan
2023-03-22 19:11:36,798 Node[0] Epoch[15] Batch [140-160]	Speed: 21823.86 samples/sec	accuracy=nan
2023-03-22 19:11:39,790 Node[0] Epoch[15] Batch [160-180]	Speed: 21819.15 samples/sec	accuracy=nan
2023-03-22 19:11:42,786 Node[0] Epoch[15] Batch [180-200]	Speed: 21789.24 samples/sec	accuracy=nan
2023-03-22 19:11:45,781 Node[0] Epoch[15] Batch [200-220]	Speed: 21801.17 samples/sec	accuracy=nan
2023-03-22 19:11:48,769 Node[0] Epoch[15] Batch [220-240]	Speed: 21848.02 samples/sec	accuracy=nan
2023-03-22 19:11:51,756 Node[0] Epoch[15] Batch [240-260]	Speed: 21849.32 samples/sec	accuracy=nan
2023-03-22 19:11:54,745 Node[0] Epoch[15] Batch [260-280]	Speed: 21844.87 samples/sec	accuracy=nan
2023-03-22 19:11:57,738 Node[0] Epoch[15] Batch [280-300]	Speed: 21809.21 samples/sec	accuracy=nan
2023-03-22 19:12:00,735 Node[0] Epoch[15] Batch [300-320]	Speed: 21780.56 samples/sec	accuracy=nan
2023-03-22 19:12:03,726 Node[0] Epoch[15] Batch [320-340]	Speed: 21827.82 samples/sec	accuracy=nan
2023-03-22 19:12:06,715 Node[0] Epoch[15] Batch [340-360]	Speed: 21839.61 samples/sec	accuracy=nan
2023-03-22 19:12:09,705 Node[0] Epoch[15] Batch [360-380]	Speed: 21829.67 samples/sec	accuracy=nan
2023-03-22 19:12:11,499 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,499 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,499 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,499 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,499 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,499 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530331499, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 19:12:11,500 Node[0] Epoch[15] Time cost=58.636
:::MLLOG {"namespace": "", "time_ms": 1679530331500, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21849.640123105735}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679530331500, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 19:12:11,500 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:11,500 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:12:14,642 Node[0] Epoch[16] Batch [0-20]	Speed: 21814.14 samples/sec	accuracy=nan
2023-03-22 19:12:17,637 Node[0] Epoch[16] Batch [20-40]	Speed: 21798.62 samples/sec	accuracy=nan
2023-03-22 19:12:20,625 Node[0] Epoch[16] Batch [40-60]	Speed: 21850.78 samples/sec	accuracy=nan
2023-03-22 19:12:23,615 Node[0] Epoch[16] Batch [60-80]	Speed: 21830.20 samples/sec	accuracy=nan
2023-03-22 19:12:26,603 Node[0] Epoch[16] Batch [80-100]	Speed: 21845.13 samples/sec	accuracy=nan
2023-03-22 19:12:29,596 Node[0] Epoch[16] Batch [100-120]	Speed: 21814.13 samples/sec	accuracy=nan
2023-03-22 19:12:32,585 Node[0] Epoch[16] Batch [120-140]	Speed: 21839.62 samples/sec	accuracy=nan
2023-03-22 19:12:35,578 Node[0] Epoch[16] Batch [140-160]	Speed: 21812.92 samples/sec	accuracy=nan
2023-03-22 19:12:38,578 Node[0] Epoch[16] Batch [160-180]	Speed: 21758.44 samples/sec	accuracy=nan
2023-03-22 19:12:41,573 Node[0] Epoch[16] Batch [180-200]	Speed: 21798.04 samples/sec	accuracy=nan
2023-03-22 19:12:44,564 Node[0] Epoch[16] Batch [200-220]	Speed: 21821.53 samples/sec	accuracy=nan
2023-03-22 19:12:47,554 Node[0] Epoch[16] Batch [220-240]	Speed: 21836.56 samples/sec	accuracy=nan
2023-03-22 19:12:50,542 Node[0] Epoch[16] Batch [240-260]	Speed: 21842.18 samples/sec	accuracy=nan
2023-03-22 19:12:53,531 Node[0] Epoch[16] Batch [260-280]	Speed: 21841.24 samples/sec	accuracy=nan
2023-03-22 19:12:56,522 Node[0] Epoch[16] Batch [280-300]	Speed: 21830.20 samples/sec	accuracy=nan
2023-03-22 19:12:59,517 Node[0] Epoch[16] Batch [300-320]	Speed: 21795.77 samples/sec	accuracy=nan
2023-03-22 19:13:02,508 Node[0] Epoch[16] Batch [320-340]	Speed: 21821.69 samples/sec	accuracy=nan
2023-03-22 19:13:05,497 Node[0] Epoch[16] Batch [340-360]	Speed: 21841.46 samples/sec	accuracy=nan
2023-03-22 19:13:08,491 Node[0] Epoch[16] Batch [360-380]	Speed: 21801.15 samples/sec	accuracy=nan
2023-03-22 19:13:10,134 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,134 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,134 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,135 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,135 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,135 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:10,135 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530390134, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 19:13:10,136 Node[0] Epoch[16] Time cost=58.635
:::MLLOG {"namespace": "", "time_ms": 1679530390136, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21849.75544185219}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679530390136, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 19:13:10,136 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:13:13,280 Node[0] Epoch[17] Batch [0-20]	Speed: 21815.47 samples/sec	accuracy=nan
2023-03-22 19:13:16,272 Node[0] Epoch[17] Batch [20-40]	Speed: 21819.59 samples/sec	accuracy=nan
2023-03-22 19:13:19,263 Node[0] Epoch[17] Batch [40-60]	Speed: 21828.26 samples/sec	accuracy=nan
2023-03-22 19:13:22,259 Node[0] Epoch[17] Batch [60-80]	Speed: 21786.21 samples/sec	accuracy=nan
2023-03-22 19:13:25,255 Node[0] Epoch[17] Batch [80-100]	Speed: 21792.37 samples/sec	accuracy=nan
2023-03-22 19:13:28,243 Node[0] Epoch[17] Batch [100-120]	Speed: 21848.15 samples/sec	accuracy=nan
2023-03-22 19:13:31,233 Node[0] Epoch[17] Batch [120-140]	Speed: 21832.13 samples/sec	accuracy=nan
2023-03-22 19:13:34,223 Node[0] Epoch[17] Batch [140-160]	Speed: 21828.33 samples/sec	accuracy=nan
2023-03-22 19:13:37,213 Node[0] Epoch[17] Batch [160-180]	Speed: 21836.45 samples/sec	accuracy=nan
2023-03-22 19:13:40,201 Node[0] Epoch[17] Batch [180-200]	Speed: 21844.89 samples/sec	accuracy=nan
2023-03-22 19:13:43,192 Node[0] Epoch[17] Batch [200-220]	Speed: 21828.83 samples/sec	accuracy=nan
2023-03-22 19:13:46,185 Node[0] Epoch[17] Batch [220-240]	Speed: 21806.30 samples/sec	accuracy=nan
2023-03-22 19:13:49,175 Node[0] Epoch[17] Batch [240-260]	Speed: 21834.40 samples/sec	accuracy=nan
2023-03-22 19:13:52,166 Node[0] Epoch[17] Batch [260-280]	Speed: 21826.67 samples/sec	accuracy=nan
2023-03-22 19:13:55,169 Node[0] Epoch[17] Batch [280-300]	Speed: 21745.88 samples/sec	accuracy=nan
2023-03-22 19:13:58,163 Node[0] Epoch[17] Batch [300-320]	Speed: 21796.70 samples/sec	accuracy=nan
2023-03-22 19:14:01,159 Node[0] Epoch[17] Batch [320-340]	Speed: 21788.51 samples/sec	accuracy=nan
2023-03-22 19:14:04,158 Node[0] Epoch[17] Batch [340-360]	Speed: 21763.81 samples/sec	accuracy=nan
2023-03-22 19:14:07,153 Node[0] Epoch[17] Batch [360-380]	Speed: 21796.70 samples/sec	accuracy=nan
2023-03-22 19:14:08,943 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:08,943 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:08,943 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:08,944 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:08,944 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530448943, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 19:14:08,944 Node[0] Epoch[17] Time cost=58.808
2023-03-22 19:14:08,944 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530448944, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21785.690521921133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679530448944, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 19:14:08,945 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:08,945 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:14:12,088 Node[0] Epoch[18] Batch [0-20]	Speed: 21811.83 samples/sec	accuracy=nan
2023-03-22 19:14:15,081 Node[0] Epoch[18] Batch [20-40]	Speed: 21814.43 samples/sec	accuracy=nan
2023-03-22 19:14:18,072 Node[0] Epoch[18] Batch [40-60]	Speed: 21818.45 samples/sec	accuracy=nan
2023-03-22 19:14:21,063 Node[0] Epoch[18] Batch [60-80]	Speed: 21825.94 samples/sec	accuracy=nan
2023-03-22 19:14:24,056 Node[0] Epoch[18] Batch [80-100]	Speed: 21810.34 samples/sec	accuracy=nan
2023-03-22 19:14:27,049 Node[0] Epoch[18] Batch [100-120]	Speed: 21815.09 samples/sec	accuracy=nan
2023-03-22 19:14:30,039 Node[0] Epoch[18] Batch [120-140]	Speed: 21829.24 samples/sec	accuracy=nan
2023-03-22 19:14:33,028 Node[0] Epoch[18] Batch [140-160]	Speed: 21844.62 samples/sec	accuracy=nan
2023-03-22 19:14:36,022 Node[0] Epoch[18] Batch [160-180]	Speed: 21801.38 samples/sec	accuracy=nan
2023-03-22 19:14:39,017 Node[0] Epoch[18] Batch [180-200]	Speed: 21796.92 samples/sec	accuracy=nan
2023-03-22 19:14:42,020 Node[0] Epoch[18] Batch [200-220]	Speed: 21740.23 samples/sec	accuracy=nan
2023-03-22 19:14:45,008 Node[0] Epoch[18] Batch [220-240]	Speed: 21847.89 samples/sec	accuracy=nan
2023-03-22 19:14:47,998 Node[0] Epoch[18] Batch [240-260]	Speed: 21827.47 samples/sec	accuracy=nan
2023-03-22 19:14:50,992 Node[0] Epoch[18] Batch [260-280]	Speed: 21804.79 samples/sec	accuracy=nan
2023-03-22 19:14:53,981 Node[0] Epoch[18] Batch [280-300]	Speed: 21841.31 samples/sec	accuracy=nan
2023-03-22 19:14:56,969 Node[0] Epoch[18] Batch [300-320]	Speed: 21845.90 samples/sec	accuracy=nan
2023-03-22 19:14:59,957 Node[0] Epoch[18] Batch [320-340]	Speed: 21846.13 samples/sec	accuracy=nan
2023-03-22 19:15:02,948 Node[0] Epoch[18] Batch [340-360]	Speed: 21830.48 samples/sec	accuracy=nan
2023-03-22 19:15:05,939 Node[0] Epoch[18] Batch [360-380]	Speed: 21825.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679530507583, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 19:15:07,584 Node[0] Epoch[18] Time cost=58.639
:::MLLOG {"namespace": "", "time_ms": 1679530507584, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21848.248664734325}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679530507728, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 19:15:09,272 Node[0] Epoch[18] Validation-accuracy=0.634240
2023-03-22 19:15:09,272 Node[0] Epoch[18] Validation-correct-count=3964.000000
2023-03-22 19:15:09,273 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679530509369, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679530509369, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6341, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679530509369, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 19:15:09,369 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:09,369 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:09,369 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530509369, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 19:15:09,369 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:09,369 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:09,369 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:09,369 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530509370, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 19:15:09,370 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:15:12,389 Node[0] Epoch[19] Batch [0-20]	Speed: 21703.42 samples/sec	accuracy=nan
2023-03-22 19:15:15,383 Node[0] Epoch[19] Batch [20-40]	Speed: 21806.46 samples/sec	accuracy=nan
2023-03-22 19:15:18,375 Node[0] Epoch[19] Batch [40-60]	Speed: 21815.92 samples/sec	accuracy=nan
2023-03-22 19:15:21,367 Node[0] Epoch[19] Batch [60-80]	Speed: 21819.61 samples/sec	accuracy=nan
2023-03-22 19:15:24,358 Node[0] Epoch[19] Batch [80-100]	Speed: 21826.20 samples/sec	accuracy=nan
2023-03-22 19:15:27,352 Node[0] Epoch[19] Batch [100-120]	Speed: 21802.05 samples/sec	accuracy=nan
2023-03-22 19:15:30,351 Node[0] Epoch[19] Batch [120-140]	Speed: 21769.61 samples/sec	accuracy=nan
2023-03-22 19:15:33,344 Node[0] Epoch[19] Batch [140-160]	Speed: 21809.99 samples/sec	accuracy=nan
2023-03-22 19:15:36,339 Node[0] Epoch[19] Batch [160-180]	Speed: 21796.92 samples/sec	accuracy=nan
2023-03-22 19:15:39,331 Node[0] Epoch[19] Batch [180-200]	Speed: 21813.97 samples/sec	accuracy=nan
2023-03-22 19:15:42,329 Node[0] Epoch[19] Batch [200-220]	Speed: 21779.87 samples/sec	accuracy=nan
2023-03-22 19:15:45,320 Node[0] Epoch[19] Batch [220-240]	Speed: 21821.35 samples/sec	accuracy=nan
2023-03-22 19:15:48,316 Node[0] Epoch[19] Batch [240-260]	Speed: 21790.24 samples/sec	accuracy=nan
2023-03-22 19:15:51,306 Node[0] Epoch[19] Batch [260-280]	Speed: 21832.69 samples/sec	accuracy=nan
2023-03-22 19:15:54,297 Node[0] Epoch[19] Batch [280-300]	Speed: 21825.98 samples/sec	accuracy=nan
2023-03-22 19:15:57,292 Node[0] Epoch[19] Batch [300-320]	Speed: 21796.42 samples/sec	accuracy=nan
2023-03-22 19:16:00,282 Node[0] Epoch[19] Batch [320-340]	Speed: 21834.46 samples/sec	accuracy=nan
2023-03-22 19:16:03,272 Node[0] Epoch[19] Batch [340-360]	Speed: 21833.01 samples/sec	accuracy=nan
2023-03-22 19:16:06,263 Node[0] Epoch[19] Batch [360-380]	Speed: 21820.79 samples/sec	accuracy=nan
2023-03-22 19:16:08,057 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,057 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,057 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,058 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,057 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,058 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:08,058 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530568057, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 19:16:08,059 Node[0] Epoch[19] Time cost=58.689
:::MLLOG {"namespace": "", "time_ms": 1679530568059, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21829.846716034113}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679530568059, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 19:16:08,059 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:16:11,213 Node[0] Epoch[20] Batch [0-20]	Speed: 21762.54 samples/sec	accuracy=nan
2023-03-22 19:16:14,207 Node[0] Epoch[20] Batch [20-40]	Speed: 21798.69 samples/sec	accuracy=nan
2023-03-22 19:16:17,197 Node[0] Epoch[20] Batch [40-60]	Speed: 21837.75 samples/sec	accuracy=nan
2023-03-22 19:16:20,188 Node[0] Epoch[20] Batch [60-80]	Speed: 21822.73 samples/sec	accuracy=nan
2023-03-22 19:16:23,182 Node[0] Epoch[20] Batch [80-100]	Speed: 21801.50 samples/sec	accuracy=nan
2023-03-22 19:16:26,177 Node[0] Epoch[20] Batch [100-120]	Speed: 21797.32 samples/sec	accuracy=nan
2023-03-22 19:16:29,168 Node[0] Epoch[20] Batch [120-140]	Speed: 21823.33 samples/sec	accuracy=nan
2023-03-22 19:16:32,161 Node[0] Epoch[20] Batch [140-160]	Speed: 21815.97 samples/sec	accuracy=nan
2023-03-22 19:16:35,157 Node[0] Epoch[20] Batch [160-180]	Speed: 21786.50 samples/sec	accuracy=nan
2023-03-22 19:16:38,147 Node[0] Epoch[20] Batch [180-200]	Speed: 21833.26 samples/sec	accuracy=nan
2023-03-22 19:16:41,139 Node[0] Epoch[20] Batch [200-220]	Speed: 21821.47 samples/sec	accuracy=nan
2023-03-22 19:16:44,134 Node[0] Epoch[20] Batch [220-240]	Speed: 21795.59 samples/sec	accuracy=nan
2023-03-22 19:16:47,124 Node[0] Epoch[20] Batch [240-260]	Speed: 21830.57 samples/sec	accuracy=nan
2023-03-22 19:16:50,121 Node[0] Epoch[20] Batch [260-280]	Speed: 21785.10 samples/sec	accuracy=nan
2023-03-22 19:16:53,116 Node[0] Epoch[20] Batch [280-300]	Speed: 21790.15 samples/sec	accuracy=nan
2023-03-22 19:16:56,107 Node[0] Epoch[20] Batch [300-320]	Speed: 21826.18 samples/sec	accuracy=nan
2023-03-22 19:16:59,098 Node[0] Epoch[20] Batch [320-340]	Speed: 21830.98 samples/sec	accuracy=nan
2023-03-22 19:17:02,088 Node[0] Epoch[20] Batch [340-360]	Speed: 21827.04 samples/sec	accuracy=nan
2023-03-22 19:17:05,077 Node[0] Epoch[20] Batch [360-380]	Speed: 21843.94 samples/sec	accuracy=nan
2023-03-22 19:17:06,722 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,722 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,722 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,723 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,722 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530626722, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 19:17:06,723 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,723 Node[0] Epoch[20] Time cost=58.664
:::MLLOG {"namespace": "", "time_ms": 1679530626723, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21839.202600989607}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679530626723, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 19:17:06,723 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:06,724 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:17:09,871 Node[0] Epoch[21] Batch [0-20]	Speed: 21794.51 samples/sec	accuracy=nan
2023-03-22 19:17:12,862 Node[0] Epoch[21] Batch [20-40]	Speed: 21824.09 samples/sec	accuracy=nan
2023-03-22 19:17:15,856 Node[0] Epoch[21] Batch [40-60]	Speed: 21806.75 samples/sec	accuracy=nan
2023-03-22 19:17:18,848 Node[0] Epoch[21] Batch [60-80]	Speed: 21817.81 samples/sec	accuracy=nan
2023-03-22 19:17:21,841 Node[0] Epoch[21] Batch [80-100]	Speed: 21812.28 samples/sec	accuracy=nan
2023-03-22 19:17:24,836 Node[0] Epoch[21] Batch [100-120]	Speed: 21790.39 samples/sec	accuracy=nan
2023-03-22 19:17:27,832 Node[0] Epoch[21] Batch [120-140]	Speed: 21789.07 samples/sec	accuracy=nan
2023-03-22 19:17:30,824 Node[0] Epoch[21] Batch [140-160]	Speed: 21821.89 samples/sec	accuracy=nan
2023-03-22 19:17:33,818 Node[0] Epoch[21] Batch [160-180]	Speed: 21804.35 samples/sec	accuracy=nan
2023-03-22 19:17:36,813 Node[0] Epoch[21] Batch [180-200]	Speed: 21796.22 samples/sec	accuracy=nan
2023-03-22 19:17:39,805 Node[0] Epoch[21] Batch [200-220]	Speed: 21814.11 samples/sec	accuracy=nan
2023-03-22 19:17:42,798 Node[0] Epoch[21] Batch [220-240]	Speed: 21814.78 samples/sec	accuracy=nan
2023-03-22 19:17:45,789 Node[0] Epoch[21] Batch [240-260]	Speed: 21820.53 samples/sec	accuracy=nan
2023-03-22 19:17:48,782 Node[0] Epoch[21] Batch [260-280]	Speed: 21815.14 samples/sec	accuracy=nan
2023-03-22 19:17:51,772 Node[0] Epoch[21] Batch [280-300]	Speed: 21830.27 samples/sec	accuracy=nan
2023-03-22 19:17:54,763 Node[0] Epoch[21] Batch [300-320]	Speed: 21827.61 samples/sec	accuracy=nan
2023-03-22 19:17:57,751 Node[0] Epoch[21] Batch [320-340]	Speed: 21849.17 samples/sec	accuracy=nan
2023-03-22 19:18:00,741 Node[0] Epoch[21] Batch [340-360]	Speed: 21830.39 samples/sec	accuracy=nan
2023-03-22 19:18:03,732 Node[0] Epoch[21] Batch [360-380]	Speed: 21827.17 samples/sec	accuracy=nan
2023-03-22 19:18:05,523 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,523 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,523 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,524 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,524 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,524 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530685524, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 19:18:05,525 Node[0] Epoch[21] Time cost=58.801
:::MLLOG {"namespace": "", "time_ms": 1679530685525, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21788.025961255968}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679530685525, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 19:18:05,525 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:05,525 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:18:08,666 Node[0] Epoch[22] Batch [0-20]	Speed: 21821.25 samples/sec	accuracy=nan
2023-03-22 19:18:11,657 Node[0] Epoch[22] Batch [20-40]	Speed: 21822.94 samples/sec	accuracy=nan
2023-03-22 19:18:14,652 Node[0] Epoch[22] Batch [40-60]	Speed: 21797.59 samples/sec	accuracy=nan
2023-03-22 19:18:17,640 Node[0] Epoch[22] Batch [60-80]	Speed: 21850.30 samples/sec	accuracy=nan
2023-03-22 19:18:20,632 Node[0] Epoch[22] Batch [80-100]	Speed: 21814.67 samples/sec	accuracy=nan
2023-03-22 19:18:23,626 Node[0] Epoch[22] Batch [100-120]	Speed: 21806.11 samples/sec	accuracy=nan
2023-03-22 19:18:26,621 Node[0] Epoch[22] Batch [120-140]	Speed: 21796.16 samples/sec	accuracy=nan
2023-03-22 19:18:29,614 Node[0] Epoch[22] Batch [140-160]	Speed: 21814.09 samples/sec	accuracy=nan
2023-03-22 19:18:32,610 Node[0] Epoch[22] Batch [160-180]	Speed: 21787.06 samples/sec	accuracy=nan
2023-03-22 19:18:35,600 Node[0] Epoch[22] Batch [180-200]	Speed: 21829.46 samples/sec	accuracy=nan
2023-03-22 19:18:38,596 Node[0] Epoch[22] Batch [200-220]	Speed: 21791.13 samples/sec	accuracy=nan
2023-03-22 19:18:41,592 Node[0] Epoch[22] Batch [220-240]	Speed: 21789.67 samples/sec	accuracy=nan
2023-03-22 19:18:44,581 Node[0] Epoch[22] Batch [240-260]	Speed: 21842.45 samples/sec	accuracy=nan
2023-03-22 19:18:47,573 Node[0] Epoch[22] Batch [260-280]	Speed: 21812.56 samples/sec	accuracy=nan
2023-03-22 19:18:50,565 Node[0] Epoch[22] Batch [280-300]	Speed: 21818.55 samples/sec	accuracy=nan
2023-03-22 19:18:53,554 Node[0] Epoch[22] Batch [300-320]	Speed: 21844.98 samples/sec	accuracy=nan
2023-03-22 19:18:56,544 Node[0] Epoch[22] Batch [320-340]	Speed: 21827.05 samples/sec	accuracy=nan
2023-03-22 19:18:59,547 Node[0] Epoch[22] Batch [340-360]	Speed: 21744.75 samples/sec	accuracy=nan
2023-03-22 19:19:02,542 Node[0] Epoch[22] Batch [360-380]	Speed: 21796.23 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679530744187, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 19:19:04,187 Node[0] Epoch[22] Time cost=58.662
:::MLLOG {"namespace": "", "time_ms": 1679530744187, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21839.888811278095}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679530744331, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 19:19:05,830 Node[0] Epoch[22] Validation-accuracy=0.673760
2023-03-22 19:19:05,831 Node[0] Epoch[22] Validation-correct-count=4211.000000
2023-03-22 19:19:05,831 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-22 19:19:05,971 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:05,972 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530745971, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679530745972, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.66848, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679530745972, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679530745972, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679530745973, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 19:19:05,973 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:19:08,993 Node[0] Epoch[23] Batch [0-20]	Speed: 21689.52 samples/sec	accuracy=nan
2023-03-22 19:19:11,982 Node[0] Epoch[23] Batch [20-40]	Speed: 21834.68 samples/sec	accuracy=nan
2023-03-22 19:19:14,970 Node[0] Epoch[23] Batch [40-60]	Speed: 21850.70 samples/sec	accuracy=nan
2023-03-22 19:19:17,959 Node[0] Epoch[23] Batch [60-80]	Speed: 21841.03 samples/sec	accuracy=nan
2023-03-22 19:19:20,950 Node[0] Epoch[23] Batch [80-100]	Speed: 21821.86 samples/sec	accuracy=nan
2023-03-22 19:19:23,943 Node[0] Epoch[23] Batch [100-120]	Speed: 21812.96 samples/sec	accuracy=nan
2023-03-22 19:19:26,933 Node[0] Epoch[23] Batch [120-140]	Speed: 21833.08 samples/sec	accuracy=nan
2023-03-22 19:19:29,931 Node[0] Epoch[23] Batch [140-160]	Speed: 21771.48 samples/sec	accuracy=nan
2023-03-22 19:19:32,921 Node[0] Epoch[23] Batch [160-180]	Speed: 21836.60 samples/sec	accuracy=nan
2023-03-22 19:19:35,913 Node[0] Epoch[23] Batch [180-200]	Speed: 21819.20 samples/sec	accuracy=nan
2023-03-22 19:19:38,900 Node[0] Epoch[23] Batch [200-220]	Speed: 21852.64 samples/sec	accuracy=nan
2023-03-22 19:19:41,894 Node[0] Epoch[23] Batch [220-240]	Speed: 21805.38 samples/sec	accuracy=nan
2023-03-22 19:19:44,884 Node[0] Epoch[23] Batch [240-260]	Speed: 21831.44 samples/sec	accuracy=nan
2023-03-22 19:19:47,874 Node[0] Epoch[23] Batch [260-280]	Speed: 21829.68 samples/sec	accuracy=nan
2023-03-22 19:19:50,867 Node[0] Epoch[23] Batch [280-300]	Speed: 21813.48 samples/sec	accuracy=nan
2023-03-22 19:19:53,860 Node[0] Epoch[23] Batch [300-320]	Speed: 21810.99 samples/sec	accuracy=nan
2023-03-22 19:19:56,850 Node[0] Epoch[23] Batch [320-340]	Speed: 21835.57 samples/sec	accuracy=nan
2023-03-22 19:19:59,841 Node[0] Epoch[23] Batch [340-360]	Speed: 21825.26 samples/sec	accuracy=nan
2023-03-22 19:20:02,833 Node[0] Epoch[23] Batch [360-380]	Speed: 21818.48 samples/sec	accuracy=nan
2023-03-22 19:20:04,626 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,626 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,627 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,627 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,627 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,627 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530804627, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 19:20:04,627 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:04,627 Node[0] Epoch[23] Time cost=58.654
:::MLLOG {"namespace": "", "time_ms": 1679530804627, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21842.678299220446}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679530804628, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 19:20:04,628 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:20:07,780 Node[0] Epoch[24] Batch [0-20]	Speed: 21743.77 samples/sec	accuracy=nan
2023-03-22 19:20:10,778 Node[0] Epoch[24] Batch [20-40]	Speed: 21778.07 samples/sec	accuracy=nan
2023-03-22 19:20:13,770 Node[0] Epoch[24] Batch [40-60]	Speed: 21814.97 samples/sec	accuracy=nan
2023-03-22 19:20:16,762 Node[0] Epoch[24] Batch [60-80]	Speed: 21820.66 samples/sec	accuracy=nan
2023-03-22 19:20:19,753 Node[0] Epoch[24] Batch [80-100]	Speed: 21822.05 samples/sec	accuracy=nan
2023-03-22 19:20:22,753 Node[0] Epoch[24] Batch [100-120]	Speed: 21759.00 samples/sec	accuracy=nan
2023-03-22 19:20:25,745 Node[0] Epoch[24] Batch [120-140]	Speed: 21820.37 samples/sec	accuracy=nan
2023-03-22 19:20:28,734 Node[0] Epoch[24] Batch [140-160]	Speed: 21842.26 samples/sec	accuracy=nan
2023-03-22 19:20:31,727 Node[0] Epoch[24] Batch [160-180]	Speed: 21807.89 samples/sec	accuracy=nan
2023-03-22 19:20:34,716 Node[0] Epoch[24] Batch [180-200]	Speed: 21842.02 samples/sec	accuracy=nan
2023-03-22 19:20:37,705 Node[0] Epoch[24] Batch [200-220]	Speed: 21839.06 samples/sec	accuracy=nan
2023-03-22 19:20:40,696 Node[0] Epoch[24] Batch [220-240]	Speed: 21823.98 samples/sec	accuracy=nan
2023-03-22 19:20:43,698 Node[0] Epoch[24] Batch [240-260]	Speed: 21746.36 samples/sec	accuracy=nan
2023-03-22 19:20:46,692 Node[0] Epoch[24] Batch [260-280]	Speed: 21807.72 samples/sec	accuracy=nan
2023-03-22 19:20:49,680 Node[0] Epoch[24] Batch [280-300]	Speed: 21842.55 samples/sec	accuracy=nan
2023-03-22 19:20:54,982 Node[0] Epoch[24] Batch [300-320]	Speed: 12313.52 samples/sec	accuracy=nan
2023-03-22 19:20:57,966 Node[0] Epoch[24] Batch [320-340]	Speed: 21871.79 samples/sec	accuracy=nan
2023-03-22 19:21:00,955 Node[0] Epoch[24] Batch [340-360]	Speed: 21843.38 samples/sec	accuracy=nan
2023-03-22 19:21:03,946 Node[0] Epoch[24] Batch [360-380]	Speed: 21824.62 samples/sec	accuracy=nan
2023-03-22 19:21:05,586 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,586 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,587 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,587 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,587 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,587 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:05,587 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530865587, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 19:21:05,588 Node[0] Epoch[24] Time cost=60.961
:::MLLOG {"namespace": "", "time_ms": 1679530865588, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21016.334649485427}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679530865589, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 19:21:05,589 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:21:08,732 Node[0] Epoch[25] Batch [0-20]	Speed: 21828.73 samples/sec	accuracy=nan
2023-03-22 19:21:11,722 Node[0] Epoch[25] Batch [20-40]	Speed: 21832.48 samples/sec	accuracy=nan
2023-03-22 19:21:14,714 Node[0] Epoch[25] Batch [40-60]	Speed: 21820.17 samples/sec	accuracy=nan
2023-03-22 19:21:17,703 Node[0] Epoch[25] Batch [60-80]	Speed: 21841.51 samples/sec	accuracy=nan
2023-03-22 19:21:20,691 Node[0] Epoch[25] Batch [80-100]	Speed: 21849.12 samples/sec	accuracy=nan
2023-03-22 19:21:23,682 Node[0] Epoch[25] Batch [100-120]	Speed: 21822.92 samples/sec	accuracy=nan
2023-03-22 19:21:26,679 Node[0] Epoch[25] Batch [120-140]	Speed: 21782.62 samples/sec	accuracy=nan
2023-03-22 19:21:29,672 Node[0] Epoch[25] Batch [140-160]	Speed: 21808.73 samples/sec	accuracy=nan
2023-03-22 19:21:32,661 Node[0] Epoch[25] Batch [160-180]	Speed: 21839.55 samples/sec	accuracy=nan
2023-03-22 19:21:35,652 Node[0] Epoch[25] Batch [180-200]	Speed: 21827.81 samples/sec	accuracy=nan
2023-03-22 19:21:38,652 Node[0] Epoch[25] Batch [200-220]	Speed: 21758.65 samples/sec	accuracy=nan
2023-03-22 19:21:41,644 Node[0] Epoch[25] Batch [220-240]	Speed: 21821.38 samples/sec	accuracy=nan
2023-03-22 19:21:44,633 Node[0] Epoch[25] Batch [240-260]	Speed: 21835.59 samples/sec	accuracy=nan
2023-03-22 19:21:47,619 Node[0] Epoch[25] Batch [260-280]	Speed: 21861.65 samples/sec	accuracy=nan
2023-03-22 19:21:50,613 Node[0] Epoch[25] Batch [280-300]	Speed: 21807.45 samples/sec	accuracy=nan
2023-03-22 19:21:55,864 Node[0] Epoch[25] Batch [300-320]	Speed: 12432.07 samples/sec	accuracy=nan
2023-03-22 19:21:58,849 Node[0] Epoch[25] Batch [320-340]	Speed: 21865.17 samples/sec	accuracy=nan
2023-03-22 19:22:01,839 Node[0] Epoch[25] Batch [340-360]	Speed: 21835.15 samples/sec	accuracy=nan
2023-03-22 19:22:04,829 Node[0] Epoch[25] Batch [360-380]	Speed: 21835.32 samples/sec	accuracy=nan
2023-03-22 19:22:06,618 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:06,618 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:06,618 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:06,618 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:06,618 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:06,618 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530926618, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 19:22:06,619 Node[0] Epoch[25] Time cost=61.030
:::MLLOG {"namespace": "", "time_ms": 1679530926619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20992.285316360554}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-22 19:22:06,619 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530926620, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 19:22:06,620 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:22:09,758 Node[0] Epoch[26] Batch [0-20]	Speed: 21841.12 samples/sec	accuracy=nan
2023-03-22 19:22:12,749 Node[0] Epoch[26] Batch [20-40]	Speed: 21828.89 samples/sec	accuracy=nan
2023-03-22 19:22:15,743 Node[0] Epoch[26] Batch [40-60]	Speed: 21798.11 samples/sec	accuracy=nan
2023-03-22 19:22:18,736 Node[0] Epoch[26] Batch [60-80]	Speed: 21815.41 samples/sec	accuracy=nan
2023-03-22 19:22:21,730 Node[0] Epoch[26] Batch [80-100]	Speed: 21801.64 samples/sec	accuracy=nan
2023-03-22 19:22:24,727 Node[0] Epoch[26] Batch [100-120]	Speed: 21783.22 samples/sec	accuracy=nan
2023-03-22 19:22:27,717 Node[0] Epoch[26] Batch [120-140]	Speed: 21828.58 samples/sec	accuracy=nan
2023-03-22 19:22:30,715 Node[0] Epoch[26] Batch [140-160]	Speed: 21776.27 samples/sec	accuracy=nan
2023-03-22 19:22:33,704 Node[0] Epoch[26] Batch [160-180]	Speed: 21842.27 samples/sec	accuracy=nan
2023-03-22 19:22:36,699 Node[0] Epoch[26] Batch [180-200]	Speed: 21792.46 samples/sec	accuracy=nan
2023-03-22 19:22:39,691 Node[0] Epoch[26] Batch [200-220]	Speed: 21824.94 samples/sec	accuracy=nan
2023-03-22 19:22:42,685 Node[0] Epoch[26] Batch [220-240]	Speed: 21798.24 samples/sec	accuracy=nan
2023-03-22 19:22:45,676 Node[0] Epoch[26] Batch [240-260]	Speed: 21824.72 samples/sec	accuracy=nan
2023-03-22 19:22:48,672 Node[0] Epoch[26] Batch [260-280]	Speed: 21792.14 samples/sec	accuracy=nan
2023-03-22 19:22:51,666 Node[0] Epoch[26] Batch [280-300]	Speed: 21802.78 samples/sec	accuracy=nan
2023-03-22 19:22:54,660 Node[0] Epoch[26] Batch [300-320]	Speed: 21807.50 samples/sec	accuracy=nan
2023-03-22 19:22:57,649 Node[0] Epoch[26] Batch [320-340]	Speed: 21838.89 samples/sec	accuracy=nan
2023-03-22 19:23:00,639 Node[0] Epoch[26] Batch [340-360]	Speed: 21832.18 samples/sec	accuracy=nan
2023-03-22 19:23:03,632 Node[0] Epoch[26] Batch [360-380]	Speed: 21813.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679530985272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 19:23:05,273 Node[0] Epoch[26] Time cost=58.653
:::MLLOG {"namespace": "", "time_ms": 1679530985273, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21843.10776716833}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679530985417, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 19:23:06,871 Node[0] Epoch[26] Validation-accuracy=0.719360
2023-03-22 19:23:06,871 Node[0] Epoch[26] Validation-correct-count=4496.000000
2023-03-22 19:23:06,871 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-22 19:23:07,054 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:07,054 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679530987054, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679530987055, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72242, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679530987055, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679530987055, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679530987056, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 19:23:07,056 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:23:10,073 Node[0] Epoch[27] Batch [0-20]	Speed: 21714.05 samples/sec	accuracy=nan
2023-03-22 19:23:13,061 Node[0] Epoch[27] Batch [20-40]	Speed: 21848.67 samples/sec	accuracy=nan
2023-03-22 19:23:16,054 Node[0] Epoch[27] Batch [40-60]	Speed: 21810.82 samples/sec	accuracy=nan
2023-03-22 19:23:19,046 Node[0] Epoch[27] Batch [60-80]	Speed: 21820.84 samples/sec	accuracy=nan
2023-03-22 19:23:22,038 Node[0] Epoch[27] Batch [80-100]	Speed: 21819.70 samples/sec	accuracy=nan
2023-03-22 19:23:25,036 Node[0] Epoch[27] Batch [100-120]	Speed: 21769.98 samples/sec	accuracy=nan
2023-03-22 19:23:28,029 Node[0] Epoch[27] Batch [120-140]	Speed: 21812.48 samples/sec	accuracy=nan
2023-03-22 19:23:31,022 Node[0] Epoch[27] Batch [140-160]	Speed: 21813.57 samples/sec	accuracy=nan
2023-03-22 19:23:34,017 Node[0] Epoch[27] Batch [160-180]	Speed: 21790.76 samples/sec	accuracy=nan
2023-03-22 19:23:37,015 Node[0] Epoch[27] Batch [180-200]	Speed: 21776.88 samples/sec	accuracy=nan
2023-03-22 19:23:40,019 Node[0] Epoch[27] Batch [200-220]	Speed: 21731.49 samples/sec	accuracy=nan
2023-03-22 19:23:43,015 Node[0] Epoch[27] Batch [220-240]	Speed: 21791.06 samples/sec	accuracy=nan
2023-03-22 19:23:46,007 Node[0] Epoch[27] Batch [240-260]	Speed: 21816.21 samples/sec	accuracy=nan
2023-03-22 19:23:49,004 Node[0] Epoch[27] Batch [260-280]	Speed: 21780.62 samples/sec	accuracy=nan
2023-03-22 19:23:51,997 Node[0] Epoch[27] Batch [280-300]	Speed: 21810.46 samples/sec	accuracy=nan
2023-03-22 19:23:56,964 Node[0] Epoch[27] Batch [300-320]	Speed: 13143.10 samples/sec	accuracy=nan
2023-03-22 19:23:59,953 Node[0] Epoch[27] Batch [320-340]	Speed: 21838.59 samples/sec	accuracy=nan
2023-03-22 19:24:02,943 Node[0] Epoch[27] Batch [340-360]	Speed: 21833.63 samples/sec	accuracy=nan
2023-03-22 19:24:05,935 Node[0] Epoch[27] Batch [360-380]	Speed: 21820.49 samples/sec	accuracy=nan
2023-03-22 19:24:07,730 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,731 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,730 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,730 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,731 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,731 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:07,731 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531047731, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 19:24:07,732 Node[0] Epoch[27] Time cost=60.676
:::MLLOG {"namespace": "", "time_ms": 1679531047732, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21114.93276733388}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679531047732, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 19:24:07,733 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:24:10,878 Node[0] Epoch[28] Batch [0-20]	Speed: 21794.77 samples/sec	accuracy=nan
2023-03-22 19:24:13,873 Node[0] Epoch[28] Batch [20-40]	Speed: 21794.49 samples/sec	accuracy=nan
2023-03-22 19:24:16,865 Node[0] Epoch[28] Batch [40-60]	Speed: 21820.29 samples/sec	accuracy=nan
2023-03-22 19:24:19,858 Node[0] Epoch[28] Batch [60-80]	Speed: 21811.98 samples/sec	accuracy=nan
2023-03-22 19:24:22,850 Node[0] Epoch[28] Batch [80-100]	Speed: 21811.73 samples/sec	accuracy=nan
2023-03-22 19:24:25,844 Node[0] Epoch[28] Batch [100-120]	Speed: 21806.92 samples/sec	accuracy=nan
2023-03-22 19:24:28,838 Node[0] Epoch[28] Batch [120-140]	Speed: 21802.49 samples/sec	accuracy=nan
2023-03-22 19:24:31,835 Node[0] Epoch[28] Batch [140-160]	Speed: 21784.42 samples/sec	accuracy=nan
2023-03-22 19:24:34,831 Node[0] Epoch[28] Batch [160-180]	Speed: 21785.41 samples/sec	accuracy=nan
2023-03-22 19:24:37,829 Node[0] Epoch[28] Batch [180-200]	Speed: 21776.96 samples/sec	accuracy=nan
2023-03-22 19:24:40,824 Node[0] Epoch[28] Batch [200-220]	Speed: 21794.82 samples/sec	accuracy=nan
2023-03-22 19:24:43,817 Node[0] Epoch[28] Batch [220-240]	Speed: 21810.44 samples/sec	accuracy=nan
2023-03-22 19:24:46,812 Node[0] Epoch[28] Batch [240-260]	Speed: 21799.56 samples/sec	accuracy=nan
2023-03-22 19:24:49,806 Node[0] Epoch[28] Batch [260-280]	Speed: 21798.48 samples/sec	accuracy=nan
2023-03-22 19:24:52,803 Node[0] Epoch[28] Batch [280-300]	Speed: 21788.46 samples/sec	accuracy=nan
2023-03-22 19:24:57,754 Node[0] Epoch[28] Batch [300-320]	Speed: 13184.08 samples/sec	accuracy=nan
2023-03-22 19:25:00,745 Node[0] Epoch[28] Batch [320-340]	Speed: 21826.31 samples/sec	accuracy=nan
2023-03-22 19:25:03,740 Node[0] Epoch[28] Batch [340-360]	Speed: 21792.53 samples/sec	accuracy=nan
2023-03-22 19:25:06,732 Node[0] Epoch[28] Batch [360-380]	Speed: 21821.87 samples/sec	accuracy=nan
2023-03-22 19:25:08,374 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,374 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,375 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,375 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,375 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,375 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531108374, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 19:25:08,376 Node[0] Epoch[28] Time cost=60.643
:::MLLOG {"namespace": "", "time_ms": 1679531108376, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21126.375522760554}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679531108376, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 19:25:08,376 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:08,376 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:25:11,521 Node[0] Epoch[29] Batch [0-20]	Speed: 21810.47 samples/sec	accuracy=nan
2023-03-22 19:25:14,515 Node[0] Epoch[29] Batch [20-40]	Speed: 21805.50 samples/sec	accuracy=nan
2023-03-22 19:25:17,509 Node[0] Epoch[29] Batch [40-60]	Speed: 21807.50 samples/sec	accuracy=nan
2023-03-22 19:25:20,504 Node[0] Epoch[29] Batch [60-80]	Speed: 21792.92 samples/sec	accuracy=nan
2023-03-22 19:25:23,501 Node[0] Epoch[29] Batch [80-100]	Speed: 21782.68 samples/sec	accuracy=nan
2023-03-22 19:25:26,494 Node[0] Epoch[29] Batch [100-120]	Speed: 21809.07 samples/sec	accuracy=nan
2023-03-22 19:25:29,489 Node[0] Epoch[29] Batch [120-140]	Speed: 21800.06 samples/sec	accuracy=nan
2023-03-22 19:25:32,482 Node[0] Epoch[29] Batch [140-160]	Speed: 21807.23 samples/sec	accuracy=nan
2023-03-22 19:25:35,478 Node[0] Epoch[29] Batch [160-180]	Speed: 21792.71 samples/sec	accuracy=nan
2023-03-22 19:25:38,472 Node[0] Epoch[29] Batch [180-200]	Speed: 21801.01 samples/sec	accuracy=nan
2023-03-22 19:25:41,470 Node[0] Epoch[29] Batch [200-220]	Speed: 21777.69 samples/sec	accuracy=nan
2023-03-22 19:25:44,463 Node[0] Epoch[29] Batch [220-240]	Speed: 21805.68 samples/sec	accuracy=nan
2023-03-22 19:25:47,455 Node[0] Epoch[29] Batch [240-260]	Speed: 21817.54 samples/sec	accuracy=nan
2023-03-22 19:25:50,448 Node[0] Epoch[29] Batch [260-280]	Speed: 21816.04 samples/sec	accuracy=nan
2023-03-22 19:25:53,445 Node[0] Epoch[29] Batch [280-300]	Speed: 21779.34 samples/sec	accuracy=nan
2023-03-22 19:25:58,437 Node[0] Epoch[29] Batch [300-320]	Speed: 13078.43 samples/sec	accuracy=nan
2023-03-22 19:26:01,427 Node[0] Epoch[29] Batch [320-340]	Speed: 21830.62 samples/sec	accuracy=nan
2023-03-22 19:26:04,417 Node[0] Epoch[29] Batch [340-360]	Speed: 21828.81 samples/sec	accuracy=nan
2023-03-22 19:26:07,409 Node[0] Epoch[29] Batch [360-380]	Speed: 21821.66 samples/sec	accuracy=nan
2023-03-22 19:26:09,200 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:09,200 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531169200, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 19:26:09,201 Node[0] Epoch[29] Time cost=60.825
:::MLLOG {"namespace": "", "time_ms": 1679531169201, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21063.13788532151}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679531169202, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 19:26:09,202 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:26:12,346 Node[0] Epoch[30] Batch [0-20]	Speed: 21801.90 samples/sec	accuracy=nan
2023-03-22 19:26:15,340 Node[0] Epoch[30] Batch [20-40]	Speed: 21804.89 samples/sec	accuracy=nan
2023-03-22 19:26:18,330 Node[0] Epoch[30] Batch [40-60]	Speed: 21830.21 samples/sec	accuracy=nan
2023-03-22 19:26:21,323 Node[0] Epoch[30] Batch [60-80]	Speed: 21809.14 samples/sec	accuracy=nan
2023-03-22 19:26:24,319 Node[0] Epoch[30] Batch [80-100]	Speed: 21793.31 samples/sec	accuracy=nan
2023-03-22 19:26:27,313 Node[0] Epoch[30] Batch [100-120]	Speed: 21800.51 samples/sec	accuracy=nan
2023-03-22 19:26:30,308 Node[0] Epoch[30] Batch [120-140]	Speed: 21795.47 samples/sec	accuracy=nan
2023-03-22 19:26:33,303 Node[0] Epoch[30] Batch [140-160]	Speed: 21794.85 samples/sec	accuracy=nan
2023-03-22 19:26:36,296 Node[0] Epoch[30] Batch [160-180]	Speed: 21811.78 samples/sec	accuracy=nan
2023-03-22 19:26:39,293 Node[0] Epoch[30] Batch [180-200]	Speed: 21780.27 samples/sec	accuracy=nan
2023-03-22 19:26:42,297 Node[0] Epoch[30] Batch [200-220]	Speed: 21736.82 samples/sec	accuracy=nan
2023-03-22 19:26:45,294 Node[0] Epoch[30] Batch [220-240]	Speed: 21775.91 samples/sec	accuracy=nan
2023-03-22 19:26:48,292 Node[0] Epoch[30] Batch [240-260]	Speed: 21775.80 samples/sec	accuracy=nan
2023-03-22 19:26:51,296 Node[0] Epoch[30] Batch [260-280]	Speed: 21735.34 samples/sec	accuracy=nan
2023-03-22 19:26:54,297 Node[0] Epoch[30] Batch [280-300]	Speed: 21750.68 samples/sec	accuracy=nan
2023-03-22 19:26:59,565 Node[0] Epoch[30] Batch [300-320]	Speed: 12392.64 samples/sec	accuracy=nan
2023-03-22 19:27:02,560 Node[0] Epoch[30] Batch [320-340]	Speed: 21793.87 samples/sec	accuracy=nan
2023-03-22 19:27:05,553 Node[0] Epoch[30] Batch [340-360]	Speed: 21807.12 samples/sec	accuracy=nan
2023-03-22 19:27:08,544 Node[0] Epoch[30] Batch [360-380]	Speed: 21829.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679531230185, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 19:27:10,187 Node[0] Epoch[30] Time cost=60.985
:::MLLOG {"namespace": "", "time_ms": 1679531230187, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21007.97392217054}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679531230331, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 19:27:11,968 Node[0] Epoch[30] Validation-accuracy=0.753440
2023-03-22 19:27:11,968 Node[0] Epoch[30] Validation-correct-count=4709.000000
2023-03-22 19:27:11,968 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679531231968, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679531231968, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74922, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679531231969, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-22 19:27:11,968 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:11,968 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:11,968 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:11,968 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531231969, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 19:27:11,968 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:11,969 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531231969, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 19:27:11,969 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:11,969 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:27:14,991 Node[0] Epoch[31] Batch [0-20]	Speed: 21668.29 samples/sec	accuracy=nan
2023-03-22 19:27:17,981 Node[0] Epoch[31] Batch [20-40]	Speed: 21833.94 samples/sec	accuracy=nan
2023-03-22 19:27:20,973 Node[0] Epoch[31] Batch [40-60]	Speed: 21822.54 samples/sec	accuracy=nan
2023-03-22 19:27:23,963 Node[0] Epoch[31] Batch [60-80]	Speed: 21827.65 samples/sec	accuracy=nan
2023-03-22 19:27:26,954 Node[0] Epoch[31] Batch [80-100]	Speed: 21824.39 samples/sec	accuracy=nan
2023-03-22 19:27:29,944 Node[0] Epoch[31] Batch [100-120]	Speed: 21838.46 samples/sec	accuracy=nan
2023-03-22 19:27:32,937 Node[0] Epoch[31] Batch [120-140]	Speed: 21808.70 samples/sec	accuracy=nan
2023-03-22 19:27:35,928 Node[0] Epoch[31] Batch [140-160]	Speed: 21823.27 samples/sec	accuracy=nan
2023-03-22 19:27:38,925 Node[0] Epoch[31] Batch [160-180]	Speed: 21779.98 samples/sec	accuracy=nan
2023-03-22 19:27:41,924 Node[0] Epoch[31] Batch [180-200]	Speed: 21772.27 samples/sec	accuracy=nan
2023-03-22 19:27:44,915 Node[0] Epoch[31] Batch [200-220]	Speed: 21822.23 samples/sec	accuracy=nan
2023-03-22 19:27:47,907 Node[0] Epoch[31] Batch [220-240]	Speed: 21819.78 samples/sec	accuracy=nan
2023-03-22 19:27:50,900 Node[0] Epoch[31] Batch [240-260]	Speed: 21808.88 samples/sec	accuracy=nan
2023-03-22 19:27:53,892 Node[0] Epoch[31] Batch [260-280]	Speed: 21819.51 samples/sec	accuracy=nan
2023-03-22 19:27:56,885 Node[0] Epoch[31] Batch [280-300]	Speed: 21810.27 samples/sec	accuracy=nan
2023-03-22 19:28:02,168 Node[0] Epoch[31] Batch [300-320]	Speed: 12357.89 samples/sec	accuracy=nan
2023-03-22 19:28:05,158 Node[0] Epoch[31] Batch [320-340]	Speed: 21829.47 samples/sec	accuracy=nan
2023-03-22 19:28:08,149 Node[0] Epoch[31] Batch [340-360]	Speed: 21824.93 samples/sec	accuracy=nan
2023-03-22 19:28:11,137 Node[0] Epoch[31] Batch [360-380]	Speed: 21845.41 samples/sec	accuracy=nan
2023-03-22 19:28:12,931 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:12,931 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:12,931 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:12,931 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:12,931 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:12,931 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531292931, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 19:28:12,932 Node[0] Epoch[31] Time cost=60.963
:::MLLOG {"namespace": "", "time_ms": 1679531292932, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21015.360923929336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-22 19:28:12,932 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531292933, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 19:28:12,933 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:28:16,074 Node[0] Epoch[32] Batch [0-20]	Speed: 21815.02 samples/sec	accuracy=nan
2023-03-22 19:28:19,065 Node[0] Epoch[32] Batch [20-40]	Speed: 21824.31 samples/sec	accuracy=nan
2023-03-22 19:28:22,058 Node[0] Epoch[32] Batch [40-60]	Speed: 21809.59 samples/sec	accuracy=nan
2023-03-22 19:28:25,048 Node[0] Epoch[32] Batch [60-80]	Speed: 21835.50 samples/sec	accuracy=nan
2023-03-22 19:28:28,034 Node[0] Epoch[32] Batch [80-100]	Speed: 21860.81 samples/sec	accuracy=nan
2023-03-22 19:28:31,026 Node[0] Epoch[32] Batch [100-120]	Speed: 21817.05 samples/sec	accuracy=nan
2023-03-22 19:28:34,018 Node[0] Epoch[32] Batch [120-140]	Speed: 21819.78 samples/sec	accuracy=nan
2023-03-22 19:28:37,008 Node[0] Epoch[32] Batch [140-160]	Speed: 21832.53 samples/sec	accuracy=nan
2023-03-22 19:28:40,003 Node[0] Epoch[32] Batch [160-180]	Speed: 21793.60 samples/sec	accuracy=nan
2023-03-22 19:28:42,999 Node[0] Epoch[32] Batch [180-200]	Speed: 21793.16 samples/sec	accuracy=nan
2023-03-22 19:28:45,987 Node[0] Epoch[32] Batch [200-220]	Speed: 21844.04 samples/sec	accuracy=nan
2023-03-22 19:28:48,982 Node[0] Epoch[32] Batch [220-240]	Speed: 21797.00 samples/sec	accuracy=nan
2023-03-22 19:28:51,973 Node[0] Epoch[32] Batch [240-260]	Speed: 21825.38 samples/sec	accuracy=nan
2023-03-22 19:28:54,964 Node[0] Epoch[32] Batch [260-280]	Speed: 21827.91 samples/sec	accuracy=nan
2023-03-22 19:28:57,961 Node[0] Epoch[32] Batch [280-300]	Speed: 21776.73 samples/sec	accuracy=nan
2023-03-22 19:29:00,954 Node[0] Epoch[32] Batch [300-320]	Speed: 21812.14 samples/sec	accuracy=nan
2023-03-22 19:29:03,951 Node[0] Epoch[32] Batch [320-340]	Speed: 21786.70 samples/sec	accuracy=nan
2023-03-22 19:29:06,945 Node[0] Epoch[32] Batch [340-360]	Speed: 21800.69 samples/sec	accuracy=nan
2023-03-22 19:29:09,936 Node[0] Epoch[32] Batch [360-380]	Speed: 21822.49 samples/sec	accuracy=nan
2023-03-22 19:29:11,583 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,583 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,583 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,583 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,583 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,583 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531351583, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 19:29:11,584 Node[0] Epoch[32] Time cost=58.651
:::MLLOG {"namespace": "", "time_ms": 1679531351584, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21844.060345969974}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679531351584, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 19:29:11,584 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:11,584 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:29:14,727 Node[0] Epoch[33] Batch [0-20]	Speed: 21835.53 samples/sec	accuracy=nan
2023-03-22 19:29:17,719 Node[0] Epoch[33] Batch [20-40]	Speed: 21819.93 samples/sec	accuracy=nan
2023-03-22 19:29:20,711 Node[0] Epoch[33] Batch [40-60]	Speed: 21815.51 samples/sec	accuracy=nan
2023-03-22 19:29:23,705 Node[0] Epoch[33] Batch [60-80]	Speed: 21800.93 samples/sec	accuracy=nan
2023-03-22 19:29:26,697 Node[0] Epoch[33] Batch [80-100]	Speed: 21817.73 samples/sec	accuracy=nan
2023-03-22 19:29:29,700 Node[0] Epoch[33] Batch [100-120]	Speed: 21741.64 samples/sec	accuracy=nan
2023-03-22 19:29:32,695 Node[0] Epoch[33] Batch [120-140]	Speed: 21798.11 samples/sec	accuracy=nan
2023-03-22 19:29:35,689 Node[0] Epoch[33] Batch [140-160]	Speed: 21803.32 samples/sec	accuracy=nan
2023-03-22 19:29:38,680 Node[0] Epoch[33] Batch [160-180]	Speed: 21826.88 samples/sec	accuracy=nan
2023-03-22 19:29:41,676 Node[0] Epoch[33] Batch [180-200]	Speed: 21789.11 samples/sec	accuracy=nan
2023-03-22 19:29:44,667 Node[0] Epoch[33] Batch [200-220]	Speed: 21821.16 samples/sec	accuracy=nan
2023-03-22 19:29:47,662 Node[0] Epoch[33] Batch [220-240]	Speed: 21798.20 samples/sec	accuracy=nan
2023-03-22 19:29:50,658 Node[0] Epoch[33] Batch [240-260]	Speed: 21789.87 samples/sec	accuracy=nan
2023-03-22 19:29:53,652 Node[0] Epoch[33] Batch [260-280]	Speed: 21804.24 samples/sec	accuracy=nan
2023-03-22 19:29:56,651 Node[0] Epoch[33] Batch [280-300]	Speed: 21763.56 samples/sec	accuracy=nan
2023-03-22 19:29:59,644 Node[0] Epoch[33] Batch [300-320]	Speed: 21809.62 samples/sec	accuracy=nan
2023-03-22 19:30:02,636 Node[0] Epoch[33] Batch [320-340]	Speed: 21821.93 samples/sec	accuracy=nan
2023-03-22 19:30:05,628 Node[0] Epoch[33] Batch [340-360]	Speed: 21816.07 samples/sec	accuracy=nan
2023-03-22 19:30:08,624 Node[0] Epoch[33] Batch [360-380]	Speed: 21791.86 samples/sec	accuracy=nan
2023-03-22 19:30:10,421 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:10,421 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531410421, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 19:30:10,422 Node[0] Epoch[33] Time cost=58.838
:::MLLOG {"namespace": "", "time_ms": 1679531410423, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21774.403222667705}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679531410423, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 19:30:10,423 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:30:13,568 Node[0] Epoch[34] Batch [0-20]	Speed: 21782.23 samples/sec	accuracy=nan
2023-03-22 19:30:16,565 Node[0] Epoch[34] Batch [20-40]	Speed: 21781.98 samples/sec	accuracy=nan
2023-03-22 19:30:19,558 Node[0] Epoch[34] Batch [40-60]	Speed: 21815.76 samples/sec	accuracy=nan
2023-03-22 19:30:22,555 Node[0] Epoch[34] Batch [60-80]	Speed: 21776.38 samples/sec	accuracy=nan
2023-03-22 19:30:25,547 Node[0] Epoch[34] Batch [80-100]	Speed: 21818.50 samples/sec	accuracy=nan
2023-03-22 19:30:28,540 Node[0] Epoch[34] Batch [100-120]	Speed: 21813.14 samples/sec	accuracy=nan
2023-03-22 19:30:31,533 Node[0] Epoch[34] Batch [120-140]	Speed: 21812.30 samples/sec	accuracy=nan
2023-03-22 19:30:34,523 Node[0] Epoch[34] Batch [140-160]	Speed: 21829.87 samples/sec	accuracy=nan
2023-03-22 19:30:37,520 Node[0] Epoch[34] Batch [160-180]	Speed: 21785.59 samples/sec	accuracy=nan
2023-03-22 19:30:40,510 Node[0] Epoch[34] Batch [180-200]	Speed: 21831.82 samples/sec	accuracy=nan
2023-03-22 19:30:43,499 Node[0] Epoch[34] Batch [200-220]	Speed: 21837.97 samples/sec	accuracy=nan
2023-03-22 19:30:46,487 Node[0] Epoch[34] Batch [220-240]	Speed: 21851.77 samples/sec	accuracy=nan
2023-03-22 19:30:49,479 Node[0] Epoch[34] Batch [240-260]	Speed: 21817.85 samples/sec	accuracy=nan
2023-03-22 19:30:52,475 Node[0] Epoch[34] Batch [260-280]	Speed: 21785.04 samples/sec	accuracy=nan
2023-03-22 19:30:55,473 Node[0] Epoch[34] Batch [280-300]	Speed: 21778.45 samples/sec	accuracy=nan
2023-03-22 19:30:58,465 Node[0] Epoch[34] Batch [300-320]	Speed: 21818.50 samples/sec	accuracy=nan
2023-03-22 19:31:01,457 Node[0] Epoch[34] Batch [320-340]	Speed: 21815.96 samples/sec	accuracy=nan
2023-03-22 19:31:04,445 Node[0] Epoch[34] Batch [340-360]	Speed: 21847.35 samples/sec	accuracy=nan
2023-03-22 19:31:07,435 Node[0] Epoch[34] Batch [360-380]	Speed: 21833.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679531469227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 19:31:09,227 Node[0] Epoch[34] Time cost=58.804
:::MLLOG {"namespace": "", "time_ms": 1679531469227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21787.04628600237}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679531469371, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 19:31:10,809 Node[0] Epoch[34] Validation-accuracy=0.762560
2023-03-22 19:31:10,809 Node[0] Epoch[34] Validation-correct-count=4766.000000
2023-03-22 19:31:10,809 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679531470873, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679531470874, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75918, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679531470875, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679531470875, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531496
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:36 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:36 PM
+ result=2235
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531496
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:36 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:36 PM
+ result=2235
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM'
RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531496
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:36 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:36 PM
+ result=2235
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531497
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:37 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:37 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531497
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:37 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:37 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531497
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:37 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:37 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531497
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:37 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:37 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679531497
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 07:31:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 07:31:37 PM'
ENDING TIMING RUN AT 2023-03-22 07:31:37 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 06:54:21 PM'
+ export PROFILE=0
+ PROFILE=0
