+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 '
+ echo 'hosts=node040 node041 '
hosts=node040 node041 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679531502423, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531502458, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531502459, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531502460, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531502462, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679531515266, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679531520402, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531520436, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531520437, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531520439, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531520440, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679531531153, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=3798
+ SEED=3798
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export LR=12.5
++ LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ date +%s
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ date +%s
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DGXSYSTEM=2xR750xax4A100
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DGXSYSTEM=2xR750xax4A100
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export WALLTIME=00:40:00
++ HOROVOD_NUM_NCCL_STREAMS=2
++ WALLTIME=00:40:00
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679531533
+ start=1679531533
+ start=1679531533
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 07:32:13 PM'
+ start_fmt='2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
+ start_fmt='2023-03-22 07:32:13 PM'
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ SLURM_NTASKS_PER_NODE=4
+ LR=12.5
+ OPTIMIZER=sgdwfastlars
+ SLURM_NTASKS_PER_NODE=4
+ MOM=0.9
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ WARMUP_EPOCHS=2
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ LARSETA=0.001
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_HW_DECODER_LOAD=0
+ LR=12.5
+ MOM=0.9
+ KVSTORE=horovod
+ LR=12.5
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ MOM=0.9
+ LRSCHED=pow2
+ SEED=3798
+ EVAL_OFFSET=2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ EVAL_PERIOD=4
+ LARSETA=0.001
+ DALI_PREFETCH_QUEUE=5
+ DALI_HW_DECODER_LOAD=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ LABELSMOOTHING=0.1
+ DALI_THREADS=6
+ SEED=3798
+ EVAL_OFFSET=2
+ DALI_CACHE_SIZE=0
+ SEED=3798
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_ROI_DECODE=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_CACHE_SIZE=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_ROI_DECODE=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DONT_USE_MMAP=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ BN_GROUP=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE=0
+ DALI_DONT_USE_MMAP=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEPOCHS=37
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ [[ 0 == 1 ]]
+ NODALI=0
+ NODALI=0
+ NUMEXAMPLES=
+ DATAROOT=/data
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ echo 'running benchmark'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ THR=0.759
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 == 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
running benchmark
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ echo 'running benchmark'
+ [[ 0 -ge 1 ]]
+ NGPUS=4
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
+ start=1679531533
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ readonly global_rank=0
+ global_rank=0
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=3798
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 -lt 1 ]]
+ DALI_TMP_BUFFER_HINT=355568328
+ PARAMS+=(--use-dali)
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ [[ '' -ge 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start=1679531533
+ start=1679531533
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date +%s
+ start_fmt='2023-03-22 07:32:13 PM'
+ start_fmt='2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=3798
+ LABELSMOOTHING=0.1
+ SEED=3798
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679531533
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=3798
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ seq 0 3
++ date +%s
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679531533
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ start_fmt='2023-03-22 07:32:13 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 07:32:13 PM'
STARTING TIMING RUN AT 2023-03-22 07:32:13 PM
+ readonly global_rank=0
+ global_rank=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=3798
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ '' -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 3798 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:26741] MCW rank 0 is not bound (or bound to all available processors)
[node040:26742] MCW rank 2 is not bound (or bound to all available processors)
[node040:26743] MCW rank 3 is not bound (or bound to all available processors)
[node040:26740] MCW rank 1 is not bound (or bound to all available processors)
[node041:21555] MCW rank 4 is not bound (or bound to all available processors)
[node041:21554] MCW rank 7 is not bound (or bound to all available processors)
[node041:21561] MCW rank 5 is not bound (or bound to all available processors)
[node041:21560] MCW rank 6 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679531537920, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[19:32:24] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:24] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:24] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:25] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:25] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:25] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[19:32:25] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679531545868, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3798, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[19:32:25] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679531547226, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[19:32:31] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:31] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:31] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:31] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[19:32:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679531552229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552229, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552230, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552231, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552232, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552233, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552234, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552235, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552236, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679531552269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,814 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7387, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,814 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6786, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,814 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59058, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,814 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56578, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,817 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27859, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,817 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37426, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,817 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49721, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 19:32:33,817 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3814, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679531553818, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679531553819, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679531553820, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679531553821, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679531553821, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679531553821, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679531553821, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679531641570, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679531641571, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679531641571, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679531642200, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679531642348, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531642349, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 19:34:05,375 Node[0] Epoch[0] Batch [0-20]	Speed: 21716.14 samples/sec	accuracy=nan
2023-03-22 19:34:08,352 Node[0] Epoch[0] Batch [20-40]	Speed: 21926.68 samples/sec	accuracy=nan
2023-03-22 19:34:11,330 Node[0] Epoch[0] Batch [40-60]	Speed: 21921.52 samples/sec	accuracy=nan
2023-03-22 19:34:14,310 Node[0] Epoch[0] Batch [60-80]	Speed: 21908.73 samples/sec	accuracy=nan
2023-03-22 19:34:17,283 Node[0] Epoch[0] Batch [80-100]	Speed: 21952.26 samples/sec	accuracy=nan
2023-03-22 19:34:20,264 Node[0] Epoch[0] Batch [100-120]	Speed: 21900.32 samples/sec	accuracy=nan
2023-03-22 19:34:23,244 Node[0] Epoch[0] Batch [120-140]	Speed: 21906.18 samples/sec	accuracy=nan
2023-03-22 19:34:26,224 Node[0] Epoch[0] Batch [140-160]	Speed: 21905.70 samples/sec	accuracy=nan
2023-03-22 19:34:29,205 Node[0] Epoch[0] Batch [160-180]	Speed: 21901.53 samples/sec	accuracy=nan
2023-03-22 19:34:32,189 Node[0] Epoch[0] Batch [180-200]	Speed: 21874.18 samples/sec	accuracy=nan
2023-03-22 19:34:35,177 Node[0] Epoch[0] Batch [200-220]	Speed: 21850.41 samples/sec	accuracy=nan
2023-03-22 19:34:47,283 Node[0] Epoch[0] Batch [220-240]	Speed: 5392.20 samples/sec	accuracy=nan
2023-03-22 19:34:56,232 Node[0] Epoch[0] Batch [240-260]	Speed: 7294.57 samples/sec	accuracy=nan
2023-03-22 19:35:01,174 Node[0] Epoch[0] Batch [260-280]	Speed: 13210.99 samples/sec	accuracy=nan
2023-03-22 19:35:04,150 Node[0] Epoch[0] Batch [280-300]	Speed: 21929.17 samples/sec	accuracy=nan
2023-03-22 19:35:07,132 Node[0] Epoch[0] Batch [300-320]	Speed: 21893.92 samples/sec	accuracy=nan
2023-03-22 19:35:10,112 Node[0] Epoch[0] Batch [320-340]	Speed: 21908.25 samples/sec	accuracy=nan
2023-03-22 19:35:13,099 Node[0] Epoch[0] Batch [340-360]	Speed: 21854.92 samples/sec	accuracy=nan
2023-03-22 19:35:16,084 Node[0] Epoch[0] Batch [360-380]	Speed: 21868.62 samples/sec	accuracy=nan
2023-03-22 19:35:17,873 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:35:17,873 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:35:17,874 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531717873, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 19:35:17,874 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:35:17,874 Node[0] Epoch[0] Time cost=75.525
2023-03-22 19:35:17,874 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:35:17,874 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531717874, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 16963.437875877822}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 19:35:17,874 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531717875, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 19:35:17,875 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:35:21,009 Node[0] Epoch[1] Batch [0-20]	Speed: 21865.51 samples/sec	accuracy=nan
2023-03-22 19:35:23,999 Node[0] Epoch[1] Batch [20-40]	Speed: 21834.98 samples/sec	accuracy=nan
2023-03-22 19:35:26,985 Node[0] Epoch[1] Batch [40-60]	Speed: 21861.23 samples/sec	accuracy=nan
2023-03-22 19:35:29,972 Node[0] Epoch[1] Batch [60-80]	Speed: 21855.76 samples/sec	accuracy=nan
2023-03-22 19:35:32,963 Node[0] Epoch[1] Batch [80-100]	Speed: 21824.46 samples/sec	accuracy=nan
2023-03-22 19:35:35,951 Node[0] Epoch[1] Batch [100-120]	Speed: 21848.47 samples/sec	accuracy=nan
2023-03-22 19:35:38,940 Node[0] Epoch[1] Batch [120-140]	Speed: 21843.01 samples/sec	accuracy=nan
2023-03-22 19:35:41,935 Node[0] Epoch[1] Batch [140-160]	Speed: 21791.38 samples/sec	accuracy=nan
2023-03-22 19:35:44,930 Node[0] Epoch[1] Batch [160-180]	Speed: 21797.65 samples/sec	accuracy=nan
2023-03-22 19:35:47,923 Node[0] Epoch[1] Batch [180-200]	Speed: 21810.65 samples/sec	accuracy=nan
2023-03-22 19:35:50,915 Node[0] Epoch[1] Batch [200-220]	Speed: 21821.55 samples/sec	accuracy=nan
2023-03-22 19:35:53,908 Node[0] Epoch[1] Batch [220-240]	Speed: 21810.84 samples/sec	accuracy=nan
2023-03-22 19:35:56,900 Node[0] Epoch[1] Batch [240-260]	Speed: 21815.19 samples/sec	accuracy=nan
2023-03-22 19:35:59,892 Node[0] Epoch[1] Batch [260-280]	Speed: 21819.21 samples/sec	accuracy=nan
2023-03-22 19:36:02,884 Node[0] Epoch[1] Batch [280-300]	Speed: 21820.27 samples/sec	accuracy=nan
2023-03-22 19:36:05,879 Node[0] Epoch[1] Batch [300-320]	Speed: 21791.87 samples/sec	accuracy=nan
2023-03-22 19:36:08,871 Node[0] Epoch[1] Batch [320-340]	Speed: 21819.99 samples/sec	accuracy=nan
2023-03-22 19:36:11,862 Node[0] Epoch[1] Batch [340-360]	Speed: 21826.25 samples/sec	accuracy=nan
2023-03-22 19:36:14,855 Node[0] Epoch[1] Batch [360-380]	Speed: 21810.57 samples/sec	accuracy=nan
2023-03-22 19:36:16,647 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:16,647 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:16,647 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:16,647 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:16,647 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:16,647 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531776647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 19:36:16,648 Node[0] Epoch[1] Time cost=58.773
2023-03-22 19:36:16,648 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531776648, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21798.69652021479}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679531776648, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 19:36:16,649 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:36:19,792 Node[0] Epoch[2] Batch [0-20]	Speed: 21802.35 samples/sec	accuracy=nan
2023-03-22 19:36:22,782 Node[0] Epoch[2] Batch [20-40]	Speed: 21834.05 samples/sec	accuracy=nan
2023-03-22 19:36:25,776 Node[0] Epoch[2] Batch [40-60]	Speed: 21805.98 samples/sec	accuracy=nan
2023-03-22 19:36:28,763 Node[0] Epoch[2] Batch [60-80]	Speed: 21853.99 samples/sec	accuracy=nan
2023-03-22 19:36:31,758 Node[0] Epoch[2] Batch [80-100]	Speed: 21795.07 samples/sec	accuracy=nan
2023-03-22 19:36:34,750 Node[0] Epoch[2] Batch [100-120]	Speed: 21817.98 samples/sec	accuracy=nan
2023-03-22 19:36:37,743 Node[0] Epoch[2] Batch [120-140]	Speed: 21812.76 samples/sec	accuracy=nan
2023-03-22 19:36:40,733 Node[0] Epoch[2] Batch [140-160]	Speed: 21830.98 samples/sec	accuracy=nan
2023-03-22 19:36:43,730 Node[0] Epoch[2] Batch [160-180]	Speed: 21783.58 samples/sec	accuracy=nan
2023-03-22 19:36:46,720 Node[0] Epoch[2] Batch [180-200]	Speed: 21830.37 samples/sec	accuracy=nan
2023-03-22 19:36:49,713 Node[0] Epoch[2] Batch [200-220]	Speed: 21811.57 samples/sec	accuracy=nan
2023-03-22 19:36:52,709 Node[0] Epoch[2] Batch [220-240]	Speed: 21790.82 samples/sec	accuracy=nan
2023-03-22 19:36:55,702 Node[0] Epoch[2] Batch [240-260]	Speed: 21812.53 samples/sec	accuracy=nan
2023-03-22 19:36:58,698 Node[0] Epoch[2] Batch [260-280]	Speed: 21786.22 samples/sec	accuracy=nan
2023-03-22 19:37:01,693 Node[0] Epoch[2] Batch [280-300]	Speed: 21798.41 samples/sec	accuracy=nan
2023-03-22 19:37:04,684 Node[0] Epoch[2] Batch [300-320]	Speed: 21821.91 samples/sec	accuracy=nan
2023-03-22 19:37:07,677 Node[0] Epoch[2] Batch [320-340]	Speed: 21812.72 samples/sec	accuracy=nan
2023-03-22 19:37:10,669 Node[0] Epoch[2] Batch [340-360]	Speed: 21814.84 samples/sec	accuracy=nan
2023-03-22 19:37:13,667 Node[0] Epoch[2] Batch [360-380]	Speed: 21774.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679531835309, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 19:37:15,310 Node[0] Epoch[2] Time cost=58.662
:::MLLOG {"namespace": "", "time_ms": 1679531835310, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21839.93656623121}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679531835454, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 19:37:15,454 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,454 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:15,455 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:16,805 Node[0] Epoch[2] Validation-accuracy=0.295200
2023-03-22 19:37:16,806 Node[0] Epoch[2] Validation-correct-count=1845.000000
2023-03-22 19:37:16,806 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-22 19:37:16,870 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:16,870 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531836870, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 19:37:16,870 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:16,870 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531836870, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.29358, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 19:37:16,870 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531836870, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 19:37:16,870 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:16,870 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531836870, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679531836871, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 19:37:16,871 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:37:19,893 Node[0] Epoch[3] Batch [0-20]	Speed: 21664.82 samples/sec	accuracy=nan
2023-03-22 19:37:22,882 Node[0] Epoch[3] Batch [20-40]	Speed: 21835.70 samples/sec	accuracy=nan
2023-03-22 19:37:25,869 Node[0] Epoch[3] Batch [40-60]	Speed: 21858.66 samples/sec	accuracy=nan
2023-03-22 19:37:28,860 Node[0] Epoch[3] Batch [60-80]	Speed: 21825.52 samples/sec	accuracy=nan
2023-03-22 19:37:31,858 Node[0] Epoch[3] Batch [80-100]	Speed: 21774.49 samples/sec	accuracy=nan
2023-03-22 19:37:34,849 Node[0] Epoch[3] Batch [100-120]	Speed: 21824.38 samples/sec	accuracy=nan
2023-03-22 19:37:37,838 Node[0] Epoch[3] Batch [120-140]	Speed: 21838.20 samples/sec	accuracy=nan
2023-03-22 19:37:40,831 Node[0] Epoch[3] Batch [140-160]	Speed: 21808.77 samples/sec	accuracy=nan
2023-03-22 19:37:43,823 Node[0] Epoch[3] Batch [160-180]	Speed: 21821.05 samples/sec	accuracy=nan
2023-03-22 19:37:46,818 Node[0] Epoch[3] Batch [180-200]	Speed: 21793.28 samples/sec	accuracy=nan
2023-03-22 19:37:49,805 Node[0] Epoch[3] Batch [200-220]	Speed: 21855.84 samples/sec	accuracy=nan
2023-03-22 19:37:52,795 Node[0] Epoch[3] Batch [220-240]	Speed: 21831.93 samples/sec	accuracy=nan
2023-03-22 19:37:55,784 Node[0] Epoch[3] Batch [240-260]	Speed: 21842.91 samples/sec	accuracy=nan
2023-03-22 19:37:58,777 Node[0] Epoch[3] Batch [260-280]	Speed: 21810.64 samples/sec	accuracy=nan
2023-03-22 19:38:01,765 Node[0] Epoch[3] Batch [280-300]	Speed: 21848.84 samples/sec	accuracy=nan
2023-03-22 19:38:04,754 Node[0] Epoch[3] Batch [300-320]	Speed: 21838.20 samples/sec	accuracy=nan
2023-03-22 19:38:07,745 Node[0] Epoch[3] Batch [320-340]	Speed: 21825.33 samples/sec	accuracy=nan
2023-03-22 19:38:10,738 Node[0] Epoch[3] Batch [340-360]	Speed: 21809.28 samples/sec	accuracy=nan
2023-03-22 19:38:13,730 Node[0] Epoch[3] Batch [360-380]	Speed: 21820.33 samples/sec	accuracy=nan
2023-03-22 19:38:15,525 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,525 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,525 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,526 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,526 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,526 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:15,526 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531895525, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 19:38:15,527 Node[0] Epoch[3] Time cost=58.656
:::MLLOG {"namespace": "", "time_ms": 1679531895527, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21842.13014614275}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679531895527, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 19:38:15,527 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:38:18,672 Node[0] Epoch[4] Batch [0-20]	Speed: 21795.92 samples/sec	accuracy=nan
2023-03-22 19:38:21,669 Node[0] Epoch[4] Batch [20-40]	Speed: 21781.24 samples/sec	accuracy=nan
2023-03-22 19:38:24,663 Node[0] Epoch[4] Batch [40-60]	Speed: 21802.83 samples/sec	accuracy=nan
2023-03-22 19:38:27,650 Node[0] Epoch[4] Batch [60-80]	Speed: 21856.61 samples/sec	accuracy=nan
2023-03-22 19:38:30,639 Node[0] Epoch[4] Batch [80-100]	Speed: 21833.86 samples/sec	accuracy=nan
2023-03-22 19:38:33,633 Node[0] Epoch[4] Batch [100-120]	Speed: 21804.40 samples/sec	accuracy=nan
2023-03-22 19:38:36,627 Node[0] Epoch[4] Batch [120-140]	Speed: 21806.21 samples/sec	accuracy=nan
2023-03-22 19:38:39,623 Node[0] Epoch[4] Batch [140-160]	Speed: 21791.62 samples/sec	accuracy=nan
2023-03-22 19:38:42,622 Node[0] Epoch[4] Batch [160-180]	Speed: 21761.71 samples/sec	accuracy=nan
2023-03-22 19:38:45,613 Node[0] Epoch[4] Batch [180-200]	Speed: 21827.94 samples/sec	accuracy=nan
2023-03-22 19:38:48,607 Node[0] Epoch[4] Batch [200-220]	Speed: 21803.94 samples/sec	accuracy=nan
2023-03-22 19:38:51,598 Node[0] Epoch[4] Batch [220-240]	Speed: 21826.34 samples/sec	accuracy=nan
2023-03-22 19:38:54,597 Node[0] Epoch[4] Batch [240-260]	Speed: 21770.11 samples/sec	accuracy=nan
2023-03-22 19:38:57,589 Node[0] Epoch[4] Batch [260-280]	Speed: 21814.96 samples/sec	accuracy=nan
2023-03-22 19:39:00,580 Node[0] Epoch[4] Batch [280-300]	Speed: 21821.94 samples/sec	accuracy=nan
2023-03-22 19:39:03,577 Node[0] Epoch[4] Batch [300-320]	Speed: 21787.98 samples/sec	accuracy=nan
2023-03-22 19:39:06,566 Node[0] Epoch[4] Batch [320-340]	Speed: 21836.21 samples/sec	accuracy=nan
2023-03-22 19:39:09,557 Node[0] Epoch[4] Batch [340-360]	Speed: 21829.85 samples/sec	accuracy=nan
2023-03-22 19:39:12,551 Node[0] Epoch[4] Batch [360-380]	Speed: 21803.37 samples/sec	accuracy=nan
2023-03-22 19:39:14,194 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,194 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,195 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,194 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,195 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,195 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:14,195 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679531954195, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 19:39:14,195 Node[0] Epoch[4] Time cost=58.668
:::MLLOG {"namespace": "", "time_ms": 1679531954196, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21837.477901407532}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679531954196, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 19:39:14,196 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:39:17,335 Node[0] Epoch[5] Batch [0-20]	Speed: 21855.16 samples/sec	accuracy=nan
2023-03-22 19:39:20,323 Node[0] Epoch[5] Batch [20-40]	Speed: 21848.43 samples/sec	accuracy=nan
2023-03-22 19:39:23,315 Node[0] Epoch[5] Batch [40-60]	Speed: 21821.91 samples/sec	accuracy=nan
2023-03-22 19:39:26,315 Node[0] Epoch[5] Batch [60-80]	Speed: 21757.26 samples/sec	accuracy=nan
2023-03-22 19:39:29,313 Node[0] Epoch[5] Batch [80-100]	Speed: 21772.37 samples/sec	accuracy=nan
2023-03-22 19:39:32,304 Node[0] Epoch[5] Batch [100-120]	Speed: 21827.56 samples/sec	accuracy=nan
2023-03-22 19:39:35,296 Node[0] Epoch[5] Batch [120-140]	Speed: 21819.62 samples/sec	accuracy=nan
2023-03-22 19:39:38,288 Node[0] Epoch[5] Batch [140-160]	Speed: 21817.35 samples/sec	accuracy=nan
2023-03-22 19:39:41,292 Node[0] Epoch[5] Batch [160-180]	Speed: 21731.38 samples/sec	accuracy=nan
2023-03-22 19:39:44,285 Node[0] Epoch[5] Batch [180-200]	Speed: 21812.25 samples/sec	accuracy=nan
2023-03-22 19:39:47,283 Node[0] Epoch[5] Batch [200-220]	Speed: 21770.52 samples/sec	accuracy=nan
2023-03-22 19:39:50,279 Node[0] Epoch[5] Batch [220-240]	Speed: 21792.62 samples/sec	accuracy=nan
2023-03-22 19:39:53,278 Node[0] Epoch[5] Batch [240-260]	Speed: 21766.76 samples/sec	accuracy=nan
2023-03-22 19:39:56,269 Node[0] Epoch[5] Batch [260-280]	Speed: 21824.86 samples/sec	accuracy=nan
2023-03-22 19:39:59,257 Node[0] Epoch[5] Batch [280-300]	Speed: 21847.51 samples/sec	accuracy=nan
2023-03-22 19:40:02,247 Node[0] Epoch[5] Batch [300-320]	Speed: 21833.66 samples/sec	accuracy=nan
2023-03-22 19:40:05,235 Node[0] Epoch[5] Batch [320-340]	Speed: 21849.19 samples/sec	accuracy=nan
2023-03-22 19:40:08,225 Node[0] Epoch[5] Batch [340-360]	Speed: 21833.02 samples/sec	accuracy=nan
2023-03-22 19:40:11,212 Node[0] Epoch[5] Batch [360-380]	Speed: 21848.39 samples/sec	accuracy=nan
2023-03-22 19:40:13,006 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,006 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,006 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,006 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,006 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,006 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:13,007 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532013006, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 19:40:13,008 Node[0] Epoch[5] Time cost=58.812
:::MLLOG {"namespace": "", "time_ms": 1679532013008, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21784.208816814877}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679532013008, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 19:40:13,008 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:40:16,156 Node[0] Epoch[6] Batch [0-20]	Speed: 21766.59 samples/sec	accuracy=nan
2023-03-22 19:40:19,152 Node[0] Epoch[6] Batch [20-40]	Speed: 21790.77 samples/sec	accuracy=nan
2023-03-22 19:40:22,140 Node[0] Epoch[6] Batch [40-60]	Speed: 21850.12 samples/sec	accuracy=nan
2023-03-22 19:40:25,129 Node[0] Epoch[6] Batch [60-80]	Speed: 21837.56 samples/sec	accuracy=nan
2023-03-22 19:40:28,129 Node[0] Epoch[6] Batch [80-100]	Speed: 21759.12 samples/sec	accuracy=nan
2023-03-22 19:40:31,118 Node[0] Epoch[6] Batch [100-120]	Speed: 21839.76 samples/sec	accuracy=nan
2023-03-22 19:40:34,104 Node[0] Epoch[6] Batch [120-140]	Speed: 21864.31 samples/sec	accuracy=nan
2023-03-22 19:40:37,095 Node[0] Epoch[6] Batch [140-160]	Speed: 21823.42 samples/sec	accuracy=nan
2023-03-22 19:40:40,085 Node[0] Epoch[6] Batch [160-180]	Speed: 21837.70 samples/sec	accuracy=nan
2023-03-22 19:40:43,076 Node[0] Epoch[6] Batch [180-200]	Speed: 21825.26 samples/sec	accuracy=nan
2023-03-22 19:40:46,067 Node[0] Epoch[6] Batch [200-220]	Speed: 21822.76 samples/sec	accuracy=nan
2023-03-22 19:40:49,057 Node[0] Epoch[6] Batch [220-240]	Speed: 21832.98 samples/sec	accuracy=nan
2023-03-22 19:40:52,046 Node[0] Epoch[6] Batch [240-260]	Speed: 21842.18 samples/sec	accuracy=nan
2023-03-22 19:40:55,035 Node[0] Epoch[6] Batch [260-280]	Speed: 21834.93 samples/sec	accuracy=nan
2023-03-22 19:40:58,022 Node[0] Epoch[6] Batch [280-300]	Speed: 21854.98 samples/sec	accuracy=nan
2023-03-22 19:41:01,007 Node[0] Epoch[6] Batch [300-320]	Speed: 21869.33 samples/sec	accuracy=nan
2023-03-22 19:41:03,997 Node[0] Epoch[6] Batch [320-340]	Speed: 21835.24 samples/sec	accuracy=nan
2023-03-22 19:41:06,987 Node[0] Epoch[6] Batch [340-360]	Speed: 21834.99 samples/sec	accuracy=nan
2023-03-22 19:41:09,981 Node[0] Epoch[6] Batch [360-380]	Speed: 21800.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679532071625, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 19:41:11,625 Node[0] Epoch[6] Time cost=58.617
:::MLLOG {"namespace": "", "time_ms": 1679532071625, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21856.568603965603}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679532071769, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 19:41:13,164 Node[0] Epoch[6] Validation-accuracy=0.376320
2023-03-22 19:41:13,164 Node[0] Epoch[6] Validation-correct-count=2352.000000
2023-03-22 19:41:13,164 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-22 19:41:13,315 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:13,315 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532073315, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679532073316, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.37284, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679532073316, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679532073316, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679532073316, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 19:41:13,316 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:41:16,327 Node[0] Epoch[7] Batch [0-20]	Speed: 21744.68 samples/sec	accuracy=nan
2023-03-22 19:41:19,315 Node[0] Epoch[7] Batch [20-40]	Speed: 21845.22 samples/sec	accuracy=nan
2023-03-22 19:41:22,305 Node[0] Epoch[7] Batch [40-60]	Speed: 21835.25 samples/sec	accuracy=nan
2023-03-22 19:41:25,293 Node[0] Epoch[7] Batch [60-80]	Speed: 21850.49 samples/sec	accuracy=nan
2023-03-22 19:41:28,282 Node[0] Epoch[7] Batch [80-100]	Speed: 21835.99 samples/sec	accuracy=nan
2023-03-22 19:41:31,269 Node[0] Epoch[7] Batch [100-120]	Speed: 21853.53 samples/sec	accuracy=nan
2023-03-22 19:41:34,259 Node[0] Epoch[7] Batch [120-140]	Speed: 21839.32 samples/sec	accuracy=nan
2023-03-22 19:41:37,252 Node[0] Epoch[7] Batch [140-160]	Speed: 21804.89 samples/sec	accuracy=nan
2023-03-22 19:41:40,242 Node[0] Epoch[7] Batch [160-180]	Speed: 21835.46 samples/sec	accuracy=nan
2023-03-22 19:41:43,233 Node[0] Epoch[7] Batch [180-200]	Speed: 21824.14 samples/sec	accuracy=nan
2023-03-22 19:41:46,220 Node[0] Epoch[7] Batch [200-220]	Speed: 21856.28 samples/sec	accuracy=nan
2023-03-22 19:41:49,207 Node[0] Epoch[7] Batch [220-240]	Speed: 21855.42 samples/sec	accuracy=nan
2023-03-22 19:41:52,202 Node[0] Epoch[7] Batch [240-260]	Speed: 21798.78 samples/sec	accuracy=nan
2023-03-22 19:41:55,190 Node[0] Epoch[7] Batch [260-280]	Speed: 21845.32 samples/sec	accuracy=nan
2023-03-22 19:41:58,181 Node[0] Epoch[7] Batch [280-300]	Speed: 21825.14 samples/sec	accuracy=nan
2023-03-22 19:42:01,170 Node[0] Epoch[7] Batch [300-320]	Speed: 21837.90 samples/sec	accuracy=nan
2023-03-22 19:42:04,165 Node[0] Epoch[7] Batch [320-340]	Speed: 21796.01 samples/sec	accuracy=nan
2023-03-22 19:42:07,158 Node[0] Epoch[7] Batch [340-360]	Speed: 21813.77 samples/sec	accuracy=nan
2023-03-22 19:42:10,149 Node[0] Epoch[7] Batch [360-380]	Speed: 21824.96 samples/sec	accuracy=nan
2023-03-22 19:42:11,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:11,942 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:11,942 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532131942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 19:42:11,942 Node[0] Epoch[7] Time cost=58.626
:::MLLOG {"namespace": "", "time_ms": 1679532131943, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21853.14198457944}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-22 19:42:11,942 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:11,942 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532131943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 19:42:11,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:11,943 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:11,943 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:42:15,084 Node[0] Epoch[8] Batch [0-20]	Speed: 21821.24 samples/sec	accuracy=nan
2023-03-22 19:42:18,081 Node[0] Epoch[8] Batch [20-40]	Speed: 21782.13 samples/sec	accuracy=nan
2023-03-22 19:42:21,072 Node[0] Epoch[8] Batch [40-60]	Speed: 21828.62 samples/sec	accuracy=nan
2023-03-22 19:42:24,061 Node[0] Epoch[8] Batch [60-80]	Speed: 21839.67 samples/sec	accuracy=nan
2023-03-22 19:42:27,049 Node[0] Epoch[8] Batch [80-100]	Speed: 21844.26 samples/sec	accuracy=nan
2023-03-22 19:42:30,039 Node[0] Epoch[8] Batch [100-120]	Speed: 21834.38 samples/sec	accuracy=nan
2023-03-22 19:42:33,028 Node[0] Epoch[8] Batch [120-140]	Speed: 21837.71 samples/sec	accuracy=nan
2023-03-22 19:42:36,021 Node[0] Epoch[8] Batch [140-160]	Speed: 21809.78 samples/sec	accuracy=nan
2023-03-22 19:42:39,016 Node[0] Epoch[8] Batch [160-180]	Speed: 21795.81 samples/sec	accuracy=nan
2023-03-22 19:42:42,011 Node[0] Epoch[8] Batch [180-200]	Speed: 21800.59 samples/sec	accuracy=nan
2023-03-22 19:42:44,999 Node[0] Epoch[8] Batch [200-220]	Speed: 21849.43 samples/sec	accuracy=nan
2023-03-22 19:42:47,987 Node[0] Epoch[8] Batch [220-240]	Speed: 21842.38 samples/sec	accuracy=nan
2023-03-22 19:42:50,974 Node[0] Epoch[8] Batch [240-260]	Speed: 21856.02 samples/sec	accuracy=nan
2023-03-22 19:42:53,962 Node[0] Epoch[8] Batch [260-280]	Speed: 21845.26 samples/sec	accuracy=nan
2023-03-22 19:42:56,951 Node[0] Epoch[8] Batch [280-300]	Speed: 21839.23 samples/sec	accuracy=nan
2023-03-22 19:42:59,943 Node[0] Epoch[8] Batch [300-320]	Speed: 21823.53 samples/sec	accuracy=nan
2023-03-22 19:43:02,935 Node[0] Epoch[8] Batch [320-340]	Speed: 21816.89 samples/sec	accuracy=nan
2023-03-22 19:43:05,930 Node[0] Epoch[8] Batch [340-360]	Speed: 21796.44 samples/sec	accuracy=nan
2023-03-22 19:43:08,922 Node[0] Epoch[8] Batch [360-380]	Speed: 21817.41 samples/sec	accuracy=nan
2023-03-22 19:43:10,564 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:10,564 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:10,564 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:10,564 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:10,564 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:10,565 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532190564, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 19:43:10,565 Node[0] Epoch[8] Time cost=58.622
2023-03-22 19:43:10,565 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532190565, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21854.607305953028}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679532190566, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 19:43:10,566 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:43:13,711 Node[0] Epoch[9] Batch [0-20]	Speed: 21811.81 samples/sec	accuracy=nan
2023-03-22 19:43:16,702 Node[0] Epoch[9] Batch [20-40]	Speed: 21826.18 samples/sec	accuracy=nan
2023-03-22 19:43:19,696 Node[0] Epoch[9] Batch [40-60]	Speed: 21803.92 samples/sec	accuracy=nan
2023-03-22 19:43:22,691 Node[0] Epoch[9] Batch [60-80]	Speed: 21794.96 samples/sec	accuracy=nan
2023-03-22 19:43:25,681 Node[0] Epoch[9] Batch [80-100]	Speed: 21833.60 samples/sec	accuracy=nan
2023-03-22 19:43:28,672 Node[0] Epoch[9] Batch [100-120]	Speed: 21824.71 samples/sec	accuracy=nan
2023-03-22 19:43:31,663 Node[0] Epoch[9] Batch [120-140]	Speed: 21822.29 samples/sec	accuracy=nan
2023-03-22 19:43:34,653 Node[0] Epoch[9] Batch [140-160]	Speed: 21836.58 samples/sec	accuracy=nan
2023-03-22 19:43:37,649 Node[0] Epoch[9] Batch [160-180]	Speed: 21788.13 samples/sec	accuracy=nan
2023-03-22 19:43:40,644 Node[0] Epoch[9] Batch [180-200]	Speed: 21798.64 samples/sec	accuracy=nan
2023-03-22 19:43:43,635 Node[0] Epoch[9] Batch [200-220]	Speed: 21823.57 samples/sec	accuracy=nan
2023-03-22 19:43:46,626 Node[0] Epoch[9] Batch [220-240]	Speed: 21825.64 samples/sec	accuracy=nan
2023-03-22 19:43:49,615 Node[0] Epoch[9] Batch [240-260]	Speed: 21841.51 samples/sec	accuracy=nan
2023-03-22 19:43:52,605 Node[0] Epoch[9] Batch [260-280]	Speed: 21828.34 samples/sec	accuracy=nan
2023-03-22 19:43:55,594 Node[0] Epoch[9] Batch [280-300]	Speed: 21838.47 samples/sec	accuracy=nan
2023-03-22 19:43:58,588 Node[0] Epoch[9] Batch [300-320]	Speed: 21809.03 samples/sec	accuracy=nan
2023-03-22 19:44:01,583 Node[0] Epoch[9] Batch [320-340]	Speed: 21791.56 samples/sec	accuracy=nan
2023-03-22 19:44:04,570 Node[0] Epoch[9] Batch [340-360]	Speed: 21855.08 samples/sec	accuracy=nan
2023-03-22 19:44:07,560 Node[0] Epoch[9] Batch [360-380]	Speed: 21834.94 samples/sec	accuracy=nan
2023-03-22 19:44:09,350 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:09,350 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:09,350 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:09,351 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532249350, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 19:44:09,351 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:09,351 Node[0] Epoch[9] Time cost=58.785
2023-03-22 19:44:09,351 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:09,351 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532249351, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21794.02165533968}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679532249351, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 19:44:09,352 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:44:12,487 Node[0] Epoch[10] Batch [0-20]	Speed: 21861.59 samples/sec	accuracy=nan
2023-03-22 19:44:15,476 Node[0] Epoch[10] Batch [20-40]	Speed: 21839.71 samples/sec	accuracy=nan
2023-03-22 19:44:18,466 Node[0] Epoch[10] Batch [40-60]	Speed: 21836.90 samples/sec	accuracy=nan
2023-03-22 19:44:21,458 Node[0] Epoch[10] Batch [60-80]	Speed: 21814.53 samples/sec	accuracy=nan
2023-03-22 19:44:24,451 Node[0] Epoch[10] Batch [80-100]	Speed: 21814.01 samples/sec	accuracy=nan
2023-03-22 19:44:27,444 Node[0] Epoch[10] Batch [100-120]	Speed: 21807.04 samples/sec	accuracy=nan
2023-03-22 19:44:30,439 Node[0] Epoch[10] Batch [120-140]	Speed: 21801.40 samples/sec	accuracy=nan
2023-03-22 19:44:33,430 Node[0] Epoch[10] Batch [140-160]	Speed: 21824.28 samples/sec	accuracy=nan
2023-03-22 19:44:36,424 Node[0] Epoch[10] Batch [160-180]	Speed: 21802.40 samples/sec	accuracy=nan
2023-03-22 19:44:39,414 Node[0] Epoch[10] Batch [180-200]	Speed: 21836.66 samples/sec	accuracy=nan
2023-03-22 19:44:42,407 Node[0] Epoch[10] Batch [200-220]	Speed: 21806.85 samples/sec	accuracy=nan
2023-03-22 19:44:45,400 Node[0] Epoch[10] Batch [220-240]	Speed: 21810.60 samples/sec	accuracy=nan
2023-03-22 19:44:48,391 Node[0] Epoch[10] Batch [240-260]	Speed: 21829.29 samples/sec	accuracy=nan
2023-03-22 19:44:51,381 Node[0] Epoch[10] Batch [260-280]	Speed: 21828.67 samples/sec	accuracy=nan
2023-03-22 19:44:54,373 Node[0] Epoch[10] Batch [280-300]	Speed: 21818.93 samples/sec	accuracy=nan
2023-03-22 19:44:57,365 Node[0] Epoch[10] Batch [300-320]	Speed: 21821.87 samples/sec	accuracy=nan
2023-03-22 19:45:00,355 Node[0] Epoch[10] Batch [320-340]	Speed: 21830.60 samples/sec	accuracy=nan
2023-03-22 19:45:03,347 Node[0] Epoch[10] Batch [340-360]	Speed: 21816.54 samples/sec	accuracy=nan
2023-03-22 19:45:06,339 Node[0] Epoch[10] Batch [360-380]	Speed: 21822.23 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679532307979, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 19:45:07,981 Node[0] Epoch[10] Time cost=58.629
:::MLLOG {"namespace": "", "time_ms": 1679532307981, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21852.1201887541}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679532308124, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 19:45:09,625 Node[0] Epoch[10] Validation-accuracy=0.509600
2023-03-22 19:45:09,625 Node[0] Epoch[10] Validation-correct-count=3185.000000
2023-03-22 19:45:09,625 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679532309665, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679532309665, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5119, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679532309665, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679532309665, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 19:45:09,665 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532309665, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 19:45:09,666 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:09,665 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:45:12,688 Node[0] Epoch[11] Batch [0-20]	Speed: 21659.81 samples/sec	accuracy=nan
2023-03-22 19:45:15,679 Node[0] Epoch[11] Batch [20-40]	Speed: 21824.53 samples/sec	accuracy=nan
2023-03-22 19:45:18,672 Node[0] Epoch[11] Batch [40-60]	Speed: 21809.49 samples/sec	accuracy=nan
2023-03-22 19:45:21,660 Node[0] Epoch[11] Batch [60-80]	Speed: 21845.64 samples/sec	accuracy=nan
2023-03-22 19:45:24,651 Node[0] Epoch[11] Batch [80-100]	Speed: 21829.72 samples/sec	accuracy=nan
2023-03-22 19:45:27,645 Node[0] Epoch[11] Batch [100-120]	Speed: 21800.52 samples/sec	accuracy=nan
2023-03-22 19:45:30,636 Node[0] Epoch[11] Batch [120-140]	Speed: 21825.42 samples/sec	accuracy=nan
2023-03-22 19:45:33,626 Node[0] Epoch[11] Batch [140-160]	Speed: 21834.20 samples/sec	accuracy=nan
2023-03-22 19:45:36,623 Node[0] Epoch[11] Batch [160-180]	Speed: 21783.86 samples/sec	accuracy=nan
2023-03-22 19:45:39,616 Node[0] Epoch[11] Batch [180-200]	Speed: 21810.38 samples/sec	accuracy=nan
2023-03-22 19:45:42,607 Node[0] Epoch[11] Batch [200-220]	Speed: 21824.55 samples/sec	accuracy=nan
2023-03-22 19:45:45,595 Node[0] Epoch[11] Batch [220-240]	Speed: 21846.78 samples/sec	accuracy=nan
2023-03-22 19:45:48,586 Node[0] Epoch[11] Batch [240-260]	Speed: 21821.29 samples/sec	accuracy=nan
2023-03-22 19:45:51,578 Node[0] Epoch[11] Batch [260-280]	Speed: 21820.22 samples/sec	accuracy=nan
2023-03-22 19:45:54,569 Node[0] Epoch[11] Batch [280-300]	Speed: 21826.53 samples/sec	accuracy=nan
2023-03-22 19:45:57,559 Node[0] Epoch[11] Batch [300-320]	Speed: 21835.58 samples/sec	accuracy=nan
2023-03-22 19:46:00,548 Node[0] Epoch[11] Batch [320-340]	Speed: 21834.79 samples/sec	accuracy=nan
2023-03-22 19:46:03,541 Node[0] Epoch[11] Batch [340-360]	Speed: 21812.44 samples/sec	accuracy=nan
2023-03-22 19:46:06,534 Node[0] Epoch[11] Batch [360-380]	Speed: 21814.13 samples/sec	accuracy=nan
2023-03-22 19:46:08,326 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:08,326 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532368326, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 19:46:08,327 Node[0] Epoch[11] Time cost=58.661
:::MLLOG {"namespace": "", "time_ms": 1679532368327, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21840.010773227026}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679532368327, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 19:46:08,328 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:46:11,473 Node[0] Epoch[12] Batch [0-20]	Speed: 21776.88 samples/sec	accuracy=nan
2023-03-22 19:46:14,463 Node[0] Epoch[12] Batch [20-40]	Speed: 21837.46 samples/sec	accuracy=nan
2023-03-22 19:46:17,455 Node[0] Epoch[12] Batch [40-60]	Speed: 21819.53 samples/sec	accuracy=nan
2023-03-22 19:46:20,445 Node[0] Epoch[12] Batch [60-80]	Speed: 21828.81 samples/sec	accuracy=nan
2023-03-22 19:46:23,437 Node[0] Epoch[12] Batch [80-100]	Speed: 21817.49 samples/sec	accuracy=nan
2023-03-22 19:46:26,433 Node[0] Epoch[12] Batch [100-120]	Speed: 21786.92 samples/sec	accuracy=nan
2023-03-22 19:46:29,426 Node[0] Epoch[12] Batch [120-140]	Speed: 21811.92 samples/sec	accuracy=nan
2023-03-22 19:46:32,423 Node[0] Epoch[12] Batch [140-160]	Speed: 21783.70 samples/sec	accuracy=nan
2023-03-22 19:46:35,426 Node[0] Epoch[12] Batch [160-180]	Speed: 21740.97 samples/sec	accuracy=nan
2023-03-22 19:46:38,415 Node[0] Epoch[12] Batch [180-200]	Speed: 21840.80 samples/sec	accuracy=nan
2023-03-22 19:46:41,407 Node[0] Epoch[12] Batch [200-220]	Speed: 21814.74 samples/sec	accuracy=nan
2023-03-22 19:46:44,398 Node[0] Epoch[12] Batch [220-240]	Speed: 21824.58 samples/sec	accuracy=nan
2023-03-22 19:46:47,389 Node[0] Epoch[12] Batch [240-260]	Speed: 21824.47 samples/sec	accuracy=nan
2023-03-22 19:46:50,384 Node[0] Epoch[12] Batch [260-280]	Speed: 21799.14 samples/sec	accuracy=nan
2023-03-22 19:46:53,379 Node[0] Epoch[12] Batch [280-300]	Speed: 21797.29 samples/sec	accuracy=nan
2023-03-22 19:46:56,374 Node[0] Epoch[12] Batch [300-320]	Speed: 21794.23 samples/sec	accuracy=nan
2023-03-22 19:46:59,365 Node[0] Epoch[12] Batch [320-340]	Speed: 21825.87 samples/sec	accuracy=nan
2023-03-22 19:47:02,358 Node[0] Epoch[12] Batch [340-360]	Speed: 21807.76 samples/sec	accuracy=nan
2023-03-22 19:47:05,353 Node[0] Epoch[12] Batch [360-380]	Speed: 21801.91 samples/sec	accuracy=nan
2023-03-22 19:47:06,999 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:06,999 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:06,999 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:06,999 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:06,999 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:06,999 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:07,000 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532426999, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 19:47:07,000 Node[0] Epoch[12] Time cost=58.672
:::MLLOG {"namespace": "", "time_ms": 1679532427000, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21836.017005635273}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679532427000, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 19:47:07,000 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:47:10,149 Node[0] Epoch[13] Batch [0-20]	Speed: 21800.97 samples/sec	accuracy=nan
2023-03-22 19:47:13,141 Node[0] Epoch[13] Batch [20-40]	Speed: 21811.54 samples/sec	accuracy=nan
2023-03-22 19:47:16,132 Node[0] Epoch[13] Batch [40-60]	Speed: 21826.42 samples/sec	accuracy=nan
2023-03-22 19:47:19,123 Node[0] Epoch[13] Batch [60-80]	Speed: 21830.36 samples/sec	accuracy=nan
2023-03-22 19:47:22,111 Node[0] Epoch[13] Batch [80-100]	Speed: 21842.36 samples/sec	accuracy=nan
2023-03-22 19:47:25,106 Node[0] Epoch[13] Batch [100-120]	Speed: 21795.86 samples/sec	accuracy=nan
2023-03-22 19:47:28,093 Node[0] Epoch[13] Batch [120-140]	Speed: 21858.49 samples/sec	accuracy=nan
2023-03-22 19:47:31,083 Node[0] Epoch[13] Batch [140-160]	Speed: 21834.03 samples/sec	accuracy=nan
2023-03-22 19:47:34,080 Node[0] Epoch[13] Batch [160-180]	Speed: 21778.52 samples/sec	accuracy=nan
2023-03-22 19:47:37,073 Node[0] Epoch[13] Batch [180-200]	Speed: 21814.51 samples/sec	accuracy=nan
2023-03-22 19:47:40,070 Node[0] Epoch[13] Batch [200-220]	Speed: 21781.98 samples/sec	accuracy=nan
2023-03-22 19:47:43,069 Node[0] Epoch[13] Batch [220-240]	Speed: 21767.47 samples/sec	accuracy=nan
2023-03-22 19:47:46,058 Node[0] Epoch[13] Batch [240-260]	Speed: 21839.12 samples/sec	accuracy=nan
2023-03-22 19:47:49,051 Node[0] Epoch[13] Batch [260-280]	Speed: 21810.97 samples/sec	accuracy=nan
2023-03-22 19:47:52,042 Node[0] Epoch[13] Batch [280-300]	Speed: 21822.44 samples/sec	accuracy=nan
2023-03-22 19:47:55,035 Node[0] Epoch[13] Batch [300-320]	Speed: 21812.66 samples/sec	accuracy=nan
2023-03-22 19:47:58,025 Node[0] Epoch[13] Batch [320-340]	Speed: 21830.30 samples/sec	accuracy=nan
2023-03-22 19:48:01,020 Node[0] Epoch[13] Batch [340-360]	Speed: 21795.39 samples/sec	accuracy=nan
2023-03-22 19:48:04,015 Node[0] Epoch[13] Batch [360-380]	Speed: 21798.75 samples/sec	accuracy=nan
2023-03-22 19:48:05,809 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:48:05,810 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:48:05,810 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:48:05,810 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532485809, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 19:48:05,811 Node[0] Epoch[13] Time cost=58.810
2023-03-22 19:48:05,810 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532485811, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21784.710703409786}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-22 19:48:05,811 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:48:05,811 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532485811, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 19:48:05,811 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:48:08,954 Node[0] Epoch[14] Batch [0-20]	Speed: 21816.42 samples/sec	accuracy=nan
2023-03-22 19:48:11,946 Node[0] Epoch[14] Batch [20-40]	Speed: 21821.60 samples/sec	accuracy=nan
2023-03-22 19:48:14,934 Node[0] Epoch[14] Batch [40-60]	Speed: 21847.66 samples/sec	accuracy=nan
2023-03-22 19:48:17,931 Node[0] Epoch[14] Batch [60-80]	Speed: 21782.62 samples/sec	accuracy=nan
2023-03-22 19:48:20,919 Node[0] Epoch[14] Batch [80-100]	Speed: 21848.10 samples/sec	accuracy=nan
2023-03-22 19:48:23,915 Node[0] Epoch[14] Batch [100-120]	Speed: 21786.92 samples/sec	accuracy=nan
2023-03-22 19:48:26,907 Node[0] Epoch[14] Batch [120-140]	Speed: 21819.18 samples/sec	accuracy=nan
2023-03-22 19:48:29,897 Node[0] Epoch[14] Batch [140-160]	Speed: 21830.43 samples/sec	accuracy=nan
2023-03-22 19:48:32,885 Node[0] Epoch[14] Batch [160-180]	Speed: 21846.42 samples/sec	accuracy=nan
2023-03-22 19:48:35,886 Node[0] Epoch[14] Batch [180-200]	Speed: 21753.42 samples/sec	accuracy=nan
2023-03-22 19:48:38,887 Node[0] Epoch[14] Batch [200-220]	Speed: 21754.69 samples/sec	accuracy=nan
2023-03-22 19:48:41,879 Node[0] Epoch[14] Batch [220-240]	Speed: 21815.10 samples/sec	accuracy=nan
2023-03-22 19:48:44,868 Node[0] Epoch[14] Batch [240-260]	Speed: 21840.38 samples/sec	accuracy=nan
2023-03-22 19:48:47,859 Node[0] Epoch[14] Batch [260-280]	Speed: 21824.82 samples/sec	accuracy=nan
2023-03-22 19:48:50,850 Node[0] Epoch[14] Batch [280-300]	Speed: 21826.60 samples/sec	accuracy=nan
2023-03-22 19:48:53,841 Node[0] Epoch[14] Batch [300-320]	Speed: 21824.06 samples/sec	accuracy=nan
2023-03-22 19:48:56,830 Node[0] Epoch[14] Batch [320-340]	Speed: 21845.16 samples/sec	accuracy=nan
2023-03-22 19:48:59,822 Node[0] Epoch[14] Batch [340-360]	Speed: 21818.42 samples/sec	accuracy=nan
2023-03-22 19:49:02,811 Node[0] Epoch[14] Batch [360-380]	Speed: 21833.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679532544454, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 19:49:04,455 Node[0] Epoch[14] Time cost=58.643
:::MLLOG {"namespace": "", "time_ms": 1679532544455, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21846.726107943417}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679532544599, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 19:49:06,050 Node[0] Epoch[14] Validation-accuracy=0.558400
2023-03-22 19:49:06,050 Node[0] Epoch[14] Validation-correct-count=3490.000000
2023-03-22 19:49:06,050 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-22 19:49:06,146 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:06,146 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532546146, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679532546147, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56032, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679532546147, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679532546147, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679532546147, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 19:49:06,148 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:49:09,166 Node[0] Epoch[15] Batch [0-20]	Speed: 21704.81 samples/sec	accuracy=nan
2023-03-22 19:49:12,151 Node[0] Epoch[15] Batch [20-40]	Speed: 21867.74 samples/sec	accuracy=nan
2023-03-22 19:49:15,137 Node[0] Epoch[15] Batch [40-60]	Speed: 21862.34 samples/sec	accuracy=nan
2023-03-22 19:49:18,124 Node[0] Epoch[15] Batch [60-80]	Speed: 21856.10 samples/sec	accuracy=nan
2023-03-22 19:49:21,113 Node[0] Epoch[15] Batch [80-100]	Speed: 21835.26 samples/sec	accuracy=nan
2023-03-22 19:49:24,107 Node[0] Epoch[15] Batch [100-120]	Speed: 21803.13 samples/sec	accuracy=nan
2023-03-22 19:49:27,100 Node[0] Epoch[15] Batch [120-140]	Speed: 21817.52 samples/sec	accuracy=nan
2023-03-22 19:49:30,087 Node[0] Epoch[15] Batch [140-160]	Speed: 21851.69 samples/sec	accuracy=nan
2023-03-22 19:49:33,091 Node[0] Epoch[15] Batch [160-180]	Speed: 21727.29 samples/sec	accuracy=nan
2023-03-22 19:49:36,082 Node[0] Epoch[15] Batch [180-200]	Speed: 21831.35 samples/sec	accuracy=nan
2023-03-22 19:49:39,074 Node[0] Epoch[15] Batch [200-220]	Speed: 21814.77 samples/sec	accuracy=nan
2023-03-22 19:49:42,067 Node[0] Epoch[15] Batch [220-240]	Speed: 21810.33 samples/sec	accuracy=nan
2023-03-22 19:49:45,059 Node[0] Epoch[15] Batch [240-260]	Speed: 21818.98 samples/sec	accuracy=nan
2023-03-22 19:49:48,047 Node[0] Epoch[15] Batch [260-280]	Speed: 21850.69 samples/sec	accuracy=nan
2023-03-22 19:49:51,037 Node[0] Epoch[15] Batch [280-300]	Speed: 21833.57 samples/sec	accuracy=nan
2023-03-22 19:49:54,031 Node[0] Epoch[15] Batch [300-320]	Speed: 21802.03 samples/sec	accuracy=nan
2023-03-22 19:49:57,017 Node[0] Epoch[15] Batch [320-340]	Speed: 21859.79 samples/sec	accuracy=nan
2023-03-22 19:50:00,007 Node[0] Epoch[15] Batch [340-360]	Speed: 21834.65 samples/sec	accuracy=nan
2023-03-22 19:50:02,998 Node[0] Epoch[15] Batch [360-380]	Speed: 21822.80 samples/sec	accuracy=nan
2023-03-22 19:50:04,792 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:04,792 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532604792, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 19:50:04,793 Node[0] Epoch[15] Time cost=58.645
:::MLLOG {"namespace": "", "time_ms": 1679532604793, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21846.016021156374}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679532604793, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 19:50:04,793 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:50:07,940 Node[0] Epoch[16] Batch [0-20]	Speed: 21777.97 samples/sec	accuracy=nan
2023-03-22 19:50:10,934 Node[0] Epoch[16] Batch [20-40]	Speed: 21806.23 samples/sec	accuracy=nan
2023-03-22 19:50:13,927 Node[0] Epoch[16] Batch [40-60]	Speed: 21804.14 samples/sec	accuracy=nan
2023-03-22 19:50:16,922 Node[0] Epoch[16] Batch [60-80]	Speed: 21796.32 samples/sec	accuracy=nan
2023-03-22 19:50:19,922 Node[0] Epoch[16] Batch [80-100]	Speed: 21762.33 samples/sec	accuracy=nan
2023-03-22 19:50:22,913 Node[0] Epoch[16] Batch [100-120]	Speed: 21824.26 samples/sec	accuracy=nan
2023-03-22 19:50:25,903 Node[0] Epoch[16] Batch [120-140]	Speed: 21834.24 samples/sec	accuracy=nan
2023-03-22 19:50:28,892 Node[0] Epoch[16] Batch [140-160]	Speed: 21843.43 samples/sec	accuracy=nan
2023-03-22 19:50:31,882 Node[0] Epoch[16] Batch [160-180]	Speed: 21832.70 samples/sec	accuracy=nan
2023-03-22 19:50:34,872 Node[0] Epoch[16] Batch [180-200]	Speed: 21829.71 samples/sec	accuracy=nan
2023-03-22 19:50:37,862 Node[0] Epoch[16] Batch [200-220]	Speed: 21836.15 samples/sec	accuracy=nan
2023-03-22 19:50:40,857 Node[0] Epoch[16] Batch [220-240]	Speed: 21792.87 samples/sec	accuracy=nan
2023-03-22 19:50:43,852 Node[0] Epoch[16] Batch [240-260]	Speed: 21800.21 samples/sec	accuracy=nan
2023-03-22 19:50:46,835 Node[0] Epoch[16] Batch [260-280]	Speed: 21879.69 samples/sec	accuracy=nan
2023-03-22 19:50:49,823 Node[0] Epoch[16] Batch [280-300]	Speed: 21848.45 samples/sec	accuracy=nan
2023-03-22 19:50:52,810 Node[0] Epoch[16] Batch [300-320]	Speed: 21852.29 samples/sec	accuracy=nan
2023-03-22 19:50:55,802 Node[0] Epoch[16] Batch [320-340]	Speed: 21823.52 samples/sec	accuracy=nan
2023-03-22 19:50:58,789 Node[0] Epoch[16] Batch [340-360]	Speed: 21855.13 samples/sec	accuracy=nan
2023-03-22 19:51:01,780 Node[0] Epoch[16] Batch [360-380]	Speed: 21819.87 samples/sec	accuracy=nan
2023-03-22 19:51:03,421 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:03,421 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:03,421 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:03,421 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:03,421 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:03,422 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532663421, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 19:51:03,422 Node[0] Epoch[16] Time cost=58.629
:::MLLOG {"namespace": "", "time_ms": 1679532663422, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21852.233134351794}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-22 19:51:03,422 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532663423, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 19:51:03,423 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:51:06,563 Node[0] Epoch[17] Batch [0-20]	Speed: 21845.89 samples/sec	accuracy=nan
2023-03-22 19:51:09,562 Node[0] Epoch[17] Batch [20-40]	Speed: 21762.70 samples/sec	accuracy=nan
2023-03-22 19:51:12,560 Node[0] Epoch[17] Batch [40-60]	Speed: 21774.19 samples/sec	accuracy=nan
2023-03-22 19:51:15,553 Node[0] Epoch[17] Batch [60-80]	Speed: 21815.90 samples/sec	accuracy=nan
2023-03-22 19:51:18,548 Node[0] Epoch[17] Batch [80-100]	Speed: 21797.58 samples/sec	accuracy=nan
2023-03-22 19:51:21,547 Node[0] Epoch[17] Batch [100-120]	Speed: 21763.22 samples/sec	accuracy=nan
2023-03-22 19:51:24,537 Node[0] Epoch[17] Batch [120-140]	Speed: 21834.59 samples/sec	accuracy=nan
2023-03-22 19:51:27,531 Node[0] Epoch[17] Batch [140-160]	Speed: 21805.46 samples/sec	accuracy=nan
2023-03-22 19:51:30,524 Node[0] Epoch[17] Batch [160-180]	Speed: 21805.22 samples/sec	accuracy=nan
2023-03-22 19:51:33,515 Node[0] Epoch[17] Batch [180-200]	Speed: 21828.08 samples/sec	accuracy=nan
2023-03-22 19:51:36,506 Node[0] Epoch[17] Batch [200-220]	Speed: 21828.63 samples/sec	accuracy=nan
2023-03-22 19:51:39,497 Node[0] Epoch[17] Batch [220-240]	Speed: 21821.17 samples/sec	accuracy=nan
2023-03-22 19:51:42,507 Node[0] Epoch[17] Batch [240-260]	Speed: 21687.65 samples/sec	accuracy=nan
2023-03-22 19:51:45,501 Node[0] Epoch[17] Batch [260-280]	Speed: 21802.13 samples/sec	accuracy=nan
2023-03-22 19:51:48,493 Node[0] Epoch[17] Batch [280-300]	Speed: 21823.16 samples/sec	accuracy=nan
2023-03-22 19:51:51,480 Node[0] Epoch[17] Batch [300-320]	Speed: 21854.83 samples/sec	accuracy=nan
2023-03-22 19:51:54,468 Node[0] Epoch[17] Batch [320-340]	Speed: 21847.01 samples/sec	accuracy=nan
2023-03-22 19:51:57,457 Node[0] Epoch[17] Batch [340-360]	Speed: 21835.55 samples/sec	accuracy=nan
2023-03-22 19:52:00,448 Node[0] Epoch[17] Batch [360-380]	Speed: 21827.14 samples/sec	accuracy=nan
2023-03-22 19:52:02,240 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:02,240 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:02,240 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532722240, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 19:52:02,240 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:02,241 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:02,241 Node[0] Epoch[17] Time cost=58.818
:::MLLOG {"namespace": "", "time_ms": 1679532722241, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21781.86095177892}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-22 19:52:02,241 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532722241, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 19:52:02,241 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:02,242 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:52:05,390 Node[0] Epoch[18] Batch [0-20]	Speed: 21776.40 samples/sec	accuracy=nan
2023-03-22 19:52:08,384 Node[0] Epoch[18] Batch [20-40]	Speed: 21804.02 samples/sec	accuracy=nan
2023-03-22 19:52:11,379 Node[0] Epoch[18] Batch [40-60]	Speed: 21795.82 samples/sec	accuracy=nan
2023-03-22 19:52:14,365 Node[0] Epoch[18] Batch [60-80]	Speed: 21861.10 samples/sec	accuracy=nan
2023-03-22 19:52:17,356 Node[0] Epoch[18] Batch [80-100]	Speed: 21826.98 samples/sec	accuracy=nan
2023-03-22 19:52:20,348 Node[0] Epoch[18] Batch [100-120]	Speed: 21818.69 samples/sec	accuracy=nan
2023-03-22 19:52:23,340 Node[0] Epoch[18] Batch [120-140]	Speed: 21813.14 samples/sec	accuracy=nan
2023-03-22 19:52:26,331 Node[0] Epoch[18] Batch [140-160]	Speed: 21829.85 samples/sec	accuracy=nan
2023-03-22 19:52:29,331 Node[0] Epoch[18] Batch [160-180]	Speed: 21757.81 samples/sec	accuracy=nan
2023-03-22 19:52:32,322 Node[0] Epoch[18] Batch [180-200]	Speed: 21828.40 samples/sec	accuracy=nan
2023-03-22 19:52:35,310 Node[0] Epoch[18] Batch [200-220]	Speed: 21846.16 samples/sec	accuracy=nan
2023-03-22 19:52:38,302 Node[0] Epoch[18] Batch [220-240]	Speed: 21817.91 samples/sec	accuracy=nan
2023-03-22 19:52:41,294 Node[0] Epoch[18] Batch [240-260]	Speed: 21818.39 samples/sec	accuracy=nan
2023-03-22 19:52:44,283 Node[0] Epoch[18] Batch [260-280]	Speed: 21841.19 samples/sec	accuracy=nan
2023-03-22 19:52:47,269 Node[0] Epoch[18] Batch [280-300]	Speed: 21860.73 samples/sec	accuracy=nan
2023-03-22 19:52:50,260 Node[0] Epoch[18] Batch [300-320]	Speed: 21823.69 samples/sec	accuracy=nan
2023-03-22 19:52:53,256 Node[0] Epoch[18] Batch [320-340]	Speed: 21790.63 samples/sec	accuracy=nan
2023-03-22 19:52:56,246 Node[0] Epoch[18] Batch [340-360]	Speed: 21830.42 samples/sec	accuracy=nan
2023-03-22 19:52:59,236 Node[0] Epoch[18] Batch [360-380]	Speed: 21836.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679532780876, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 19:53:00,877 Node[0] Epoch[18] Time cost=58.636
:::MLLOG {"namespace": "", "time_ms": 1679532780877, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21849.628840058016}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679532781021, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 19:53:02,563 Node[0] Epoch[18] Validation-accuracy=0.603520
2023-03-22 19:53:02,563 Node[0] Epoch[18] Validation-correct-count=3772.000000
2023-03-22 19:53:02,563 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679532782659, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-22 19:53:02,660 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532782660, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60836, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 19:53:02,660 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:53:02,660 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532782660, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 19:53:02,660 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532782660, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 19:53:02,660 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:53:02,660 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:53:02,660 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532782660, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 19:53:02,660 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:53:05,672 Node[0] Epoch[19] Batch [0-20]	Speed: 21755.90 samples/sec	accuracy=nan
2023-03-22 19:53:08,659 Node[0] Epoch[19] Batch [20-40]	Speed: 21857.12 samples/sec	accuracy=nan
2023-03-22 19:53:11,645 Node[0] Epoch[19] Batch [40-60]	Speed: 21855.00 samples/sec	accuracy=nan
2023-03-22 19:53:14,632 Node[0] Epoch[19] Batch [60-80]	Speed: 21858.34 samples/sec	accuracy=nan
2023-03-22 19:53:17,622 Node[0] Epoch[19] Batch [80-100]	Speed: 21835.01 samples/sec	accuracy=nan
2023-03-22 19:53:20,615 Node[0] Epoch[19] Batch [100-120]	Speed: 21807.71 samples/sec	accuracy=nan
2023-03-22 19:53:23,602 Node[0] Epoch[19] Batch [120-140]	Speed: 21857.29 samples/sec	accuracy=nan
2023-03-22 19:53:26,590 Node[0] Epoch[19] Batch [140-160]	Speed: 21845.08 samples/sec	accuracy=nan
2023-03-22 19:53:29,579 Node[0] Epoch[19] Batch [160-180]	Speed: 21838.63 samples/sec	accuracy=nan
2023-03-22 19:53:32,566 Node[0] Epoch[19] Batch [180-200]	Speed: 21853.76 samples/sec	accuracy=nan
2023-03-22 19:53:35,556 Node[0] Epoch[19] Batch [200-220]	Speed: 21834.77 samples/sec	accuracy=nan
2023-03-22 19:53:38,546 Node[0] Epoch[19] Batch [220-240]	Speed: 21833.01 samples/sec	accuracy=nan
2023-03-22 19:53:41,538 Node[0] Epoch[19] Batch [240-260]	Speed: 21815.62 samples/sec	accuracy=nan
2023-03-22 19:53:44,531 Node[0] Epoch[19] Batch [260-280]	Speed: 21814.34 samples/sec	accuracy=nan
2023-03-22 19:53:47,521 Node[0] Epoch[19] Batch [280-300]	Speed: 21831.89 samples/sec	accuracy=nan
2023-03-22 19:53:50,512 Node[0] Epoch[19] Batch [300-320]	Speed: 21826.96 samples/sec	accuracy=nan
2023-03-22 19:53:53,500 Node[0] Epoch[19] Batch [320-340]	Speed: 21843.61 samples/sec	accuracy=nan
2023-03-22 19:53:56,491 Node[0] Epoch[19] Batch [340-360]	Speed: 21827.06 samples/sec	accuracy=nan
2023-03-22 19:53:59,482 Node[0] Epoch[19] Batch [360-380]	Speed: 21825.58 samples/sec	accuracy=nan
2023-03-22 19:54:01,277 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:01,277 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:01,278 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:01,278 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:01,278 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:01,278 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532841277, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 19:54:01,279 Node[0] Epoch[19] Time cost=58.618
2023-03-22 19:54:01,279 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532841279, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21856.13433954235}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679532841279, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 19:54:01,279 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:04,421 Node[0] Epoch[20] Batch [0-20]	Speed: 21806.29 samples/sec	accuracy=nan
2023-03-22 19:54:07,407 Node[0] Epoch[20] Batch [20-40]	Speed: 21857.03 samples/sec	accuracy=nan
2023-03-22 19:54:10,397 Node[0] Epoch[20] Batch [40-60]	Speed: 21833.16 samples/sec	accuracy=nan
2023-03-22 19:54:13,395 Node[0] Epoch[20] Batch [60-80]	Speed: 21779.31 samples/sec	accuracy=nan
2023-03-22 19:54:16,392 Node[0] Epoch[20] Batch [80-100]	Speed: 21778.81 samples/sec	accuracy=nan
2023-03-22 19:54:19,383 Node[0] Epoch[20] Batch [100-120]	Speed: 21827.00 samples/sec	accuracy=nan
2023-03-22 19:54:22,385 Node[0] Epoch[20] Batch [120-140]	Speed: 21745.98 samples/sec	accuracy=nan
2023-03-22 19:54:25,380 Node[0] Epoch[20] Batch [140-160]	Speed: 21795.75 samples/sec	accuracy=nan
2023-03-22 19:54:28,371 Node[0] Epoch[20] Batch [160-180]	Speed: 21823.17 samples/sec	accuracy=nan
2023-03-22 19:54:31,362 Node[0] Epoch[20] Batch [180-200]	Speed: 21829.56 samples/sec	accuracy=nan
2023-03-22 19:54:34,350 Node[0] Epoch[20] Batch [200-220]	Speed: 21845.46 samples/sec	accuracy=nan
2023-03-22 19:54:37,341 Node[0] Epoch[20] Batch [220-240]	Speed: 21827.00 samples/sec	accuracy=nan
2023-03-22 19:54:40,332 Node[0] Epoch[20] Batch [240-260]	Speed: 21824.18 samples/sec	accuracy=nan
2023-03-22 19:54:43,322 Node[0] Epoch[20] Batch [260-280]	Speed: 21834.24 samples/sec	accuracy=nan
2023-03-22 19:54:46,312 Node[0] Epoch[20] Batch [280-300]	Speed: 21828.69 samples/sec	accuracy=nan
2023-03-22 19:54:49,303 Node[0] Epoch[20] Batch [300-320]	Speed: 21826.10 samples/sec	accuracy=nan
2023-03-22 19:54:52,295 Node[0] Epoch[20] Batch [320-340]	Speed: 21819.15 samples/sec	accuracy=nan
2023-03-22 19:54:55,291 Node[0] Epoch[20] Batch [340-360]	Speed: 21785.76 samples/sec	accuracy=nan
2023-03-22 19:54:58,297 Node[0] Epoch[20] Batch [360-380]	Speed: 21721.59 samples/sec	accuracy=nan
2023-03-22 19:54:59,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:59,942 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:59,942 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:59,943 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532899942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 19:54:59,942 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:59,943 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:54:59,943 Node[0] Epoch[20] Time cost=58.664
2023-03-22 19:54:59,943 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532899943, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21839.17561856618}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679532899943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 19:54:59,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:03,084 Node[0] Epoch[21] Batch [0-20]	Speed: 21852.34 samples/sec	accuracy=nan
2023-03-22 19:55:06,074 Node[0] Epoch[21] Batch [20-40]	Speed: 21826.66 samples/sec	accuracy=nan
2023-03-22 19:55:09,066 Node[0] Epoch[21] Batch [40-60]	Speed: 21818.31 samples/sec	accuracy=nan
2023-03-22 19:55:12,071 Node[0] Epoch[21] Batch [60-80]	Speed: 21729.23 samples/sec	accuracy=nan
2023-03-22 19:55:15,067 Node[0] Epoch[21] Batch [80-100]	Speed: 21786.92 samples/sec	accuracy=nan
2023-03-22 19:55:18,058 Node[0] Epoch[21] Batch [100-120]	Speed: 21828.87 samples/sec	accuracy=nan
2023-03-22 19:55:21,047 Node[0] Epoch[21] Batch [120-140]	Speed: 21837.87 samples/sec	accuracy=nan
2023-03-22 19:55:24,037 Node[0] Epoch[21] Batch [140-160]	Speed: 21828.91 samples/sec	accuracy=nan
2023-03-22 19:55:27,027 Node[0] Epoch[21] Batch [160-180]	Speed: 21833.17 samples/sec	accuracy=nan
2023-03-22 19:55:30,020 Node[0] Epoch[21] Batch [180-200]	Speed: 21816.04 samples/sec	accuracy=nan
2023-03-22 19:55:33,014 Node[0] Epoch[21] Batch [200-220]	Speed: 21798.43 samples/sec	accuracy=nan
2023-03-22 19:55:36,012 Node[0] Epoch[21] Batch [220-240]	Speed: 21776.80 samples/sec	accuracy=nan
2023-03-22 19:55:39,004 Node[0] Epoch[21] Batch [240-260]	Speed: 21815.61 samples/sec	accuracy=nan
2023-03-22 19:55:42,002 Node[0] Epoch[21] Batch [260-280]	Speed: 21778.29 samples/sec	accuracy=nan
2023-03-22 19:55:44,994 Node[0] Epoch[21] Batch [280-300]	Speed: 21819.56 samples/sec	accuracy=nan
2023-03-22 19:55:47,987 Node[0] Epoch[21] Batch [300-320]	Speed: 21806.90 samples/sec	accuracy=nan
2023-03-22 19:55:50,981 Node[0] Epoch[21] Batch [320-340]	Speed: 21805.72 samples/sec	accuracy=nan
2023-03-22 19:55:53,971 Node[0] Epoch[21] Batch [340-360]	Speed: 21832.73 samples/sec	accuracy=nan
2023-03-22 19:55:56,971 Node[0] Epoch[21] Batch [360-380]	Speed: 21759.48 samples/sec	accuracy=nan
2023-03-22 19:55:58,765 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:58,765 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:58,765 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:58,765 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:58,765 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:55:58,766 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532958765, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 19:55:58,766 Node[0] Epoch[21] Time cost=58.823
2023-03-22 19:55:58,766 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679532958767, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21779.984983867133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679532958767, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 19:55:58,767 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:56:01,911 Node[0] Epoch[22] Batch [0-20]	Speed: 21809.28 samples/sec	accuracy=nan
2023-03-22 19:56:04,910 Node[0] Epoch[22] Batch [20-40]	Speed: 21765.69 samples/sec	accuracy=nan
2023-03-22 19:56:07,908 Node[0] Epoch[22] Batch [40-60]	Speed: 21775.05 samples/sec	accuracy=nan
2023-03-22 19:56:10,903 Node[0] Epoch[22] Batch [60-80]	Speed: 21793.24 samples/sec	accuracy=nan
2023-03-22 19:56:13,901 Node[0] Epoch[22] Batch [80-100]	Speed: 21776.45 samples/sec	accuracy=nan
2023-03-22 19:56:16,894 Node[0] Epoch[22] Batch [100-120]	Speed: 21812.47 samples/sec	accuracy=nan
2023-03-22 19:56:19,883 Node[0] Epoch[22] Batch [120-140]	Speed: 21838.52 samples/sec	accuracy=nan
2023-03-22 19:56:22,873 Node[0] Epoch[22] Batch [140-160]	Speed: 21831.52 samples/sec	accuracy=nan
2023-03-22 19:56:25,866 Node[0] Epoch[22] Batch [160-180]	Speed: 21807.73 samples/sec	accuracy=nan
2023-03-22 19:56:28,856 Node[0] Epoch[22] Batch [180-200]	Speed: 21838.38 samples/sec	accuracy=nan
2023-03-22 19:56:31,849 Node[0] Epoch[22] Batch [200-220]	Speed: 21806.70 samples/sec	accuracy=nan
2023-03-22 19:56:34,837 Node[0] Epoch[22] Batch [220-240]	Speed: 21851.59 samples/sec	accuracy=nan
2023-03-22 19:56:37,833 Node[0] Epoch[22] Batch [240-260]	Speed: 21789.85 samples/sec	accuracy=nan
2023-03-22 19:56:40,823 Node[0] Epoch[22] Batch [260-280]	Speed: 21827.82 samples/sec	accuracy=nan
2023-03-22 19:56:43,815 Node[0] Epoch[22] Batch [280-300]	Speed: 21817.76 samples/sec	accuracy=nan
2023-03-22 19:56:48,823 Node[0] Epoch[22] Batch [300-320]	Speed: 13037.12 samples/sec	accuracy=nan
2023-03-22 19:56:51,812 Node[0] Epoch[22] Batch [320-340]	Speed: 21840.13 samples/sec	accuracy=nan
2023-03-22 19:56:54,801 Node[0] Epoch[22] Batch [340-360]	Speed: 21838.29 samples/sec	accuracy=nan
2023-03-22 19:56:57,791 Node[0] Epoch[22] Batch [360-380]	Speed: 21830.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679533019433, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 19:56:59,434 Node[0] Epoch[22] Time cost=60.667
:::MLLOG {"namespace": "", "time_ms": 1679533019434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21117.918980582162}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679533019578, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 19:57:01,072 Node[0] Epoch[22] Validation-accuracy=0.674560
2023-03-22 19:57:01,073 Node[0] Epoch[22] Validation-correct-count=4216.000000
2023-03-22 19:57:01,073 Node[0] Epoch[22] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679533021214, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679533021214, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67772, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-22 19:57:01,214 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:01,214 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533021214, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-22 19:57:01,214 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533021215, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 19:57:01,214 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:01,214 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:01,214 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:01,214 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533021215, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 19:57:01,215 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:04,232 Node[0] Epoch[23] Batch [0-20]	Speed: 21699.85 samples/sec	accuracy=nan
2023-03-22 19:57:07,221 Node[0] Epoch[23] Batch [20-40]	Speed: 21838.84 samples/sec	accuracy=nan
2023-03-22 19:57:10,209 Node[0] Epoch[23] Batch [40-60]	Speed: 21849.72 samples/sec	accuracy=nan
2023-03-22 19:57:13,199 Node[0] Epoch[23] Batch [60-80]	Speed: 21831.90 samples/sec	accuracy=nan
2023-03-22 19:57:16,191 Node[0] Epoch[23] Batch [80-100]	Speed: 21815.24 samples/sec	accuracy=nan
2023-03-22 19:57:19,182 Node[0] Epoch[23] Batch [100-120]	Speed: 21826.96 samples/sec	accuracy=nan
2023-03-22 19:57:22,172 Node[0] Epoch[23] Batch [120-140]	Speed: 21830.53 samples/sec	accuracy=nan
2023-03-22 19:57:25,161 Node[0] Epoch[23] Batch [140-160]	Speed: 21843.98 samples/sec	accuracy=nan
2023-03-22 19:57:28,152 Node[0] Epoch[23] Batch [160-180]	Speed: 21826.35 samples/sec	accuracy=nan
2023-03-22 19:57:31,141 Node[0] Epoch[23] Batch [180-200]	Speed: 21838.42 samples/sec	accuracy=nan
2023-03-22 19:57:34,137 Node[0] Epoch[23] Batch [200-220]	Speed: 21789.38 samples/sec	accuracy=nan
2023-03-22 19:57:37,130 Node[0] Epoch[23] Batch [220-240]	Speed: 21806.81 samples/sec	accuracy=nan
2023-03-22 19:57:40,129 Node[0] Epoch[23] Batch [240-260]	Speed: 21768.45 samples/sec	accuracy=nan
2023-03-22 19:57:43,124 Node[0] Epoch[23] Batch [260-280]	Speed: 21797.30 samples/sec	accuracy=nan
2023-03-22 19:57:46,116 Node[0] Epoch[23] Batch [280-300]	Speed: 21818.73 samples/sec	accuracy=nan
2023-03-22 19:57:49,107 Node[0] Epoch[23] Batch [300-320]	Speed: 21827.32 samples/sec	accuracy=nan
2023-03-22 19:57:52,099 Node[0] Epoch[23] Batch [320-340]	Speed: 21817.91 samples/sec	accuracy=nan
2023-03-22 19:57:55,092 Node[0] Epoch[23] Batch [340-360]	Speed: 21808.85 samples/sec	accuracy=nan
2023-03-22 19:57:58,085 Node[0] Epoch[23] Batch [360-380]	Speed: 21810.36 samples/sec	accuracy=nan
2023-03-22 19:57:59,877 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:57:59,878 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533079878, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 19:57:59,879 Node[0] Epoch[23] Time cost=58.664
:::MLLOG {"namespace": "", "time_ms": 1679533079879, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21839.057304976923}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679533079879, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 19:57:59,879 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:03,026 Node[0] Epoch[24] Batch [0-20]	Speed: 21781.06 samples/sec	accuracy=nan
2023-03-22 19:58:06,024 Node[0] Epoch[24] Batch [20-40]	Speed: 21779.87 samples/sec	accuracy=nan
2023-03-22 19:58:09,026 Node[0] Epoch[24] Batch [40-60]	Speed: 21743.72 samples/sec	accuracy=nan
2023-03-22 19:58:12,022 Node[0] Epoch[24] Batch [60-80]	Speed: 21788.16 samples/sec	accuracy=nan
2023-03-22 19:58:15,012 Node[0] Epoch[24] Batch [80-100]	Speed: 21831.59 samples/sec	accuracy=nan
2023-03-22 19:58:18,013 Node[0] Epoch[24] Batch [100-120]	Speed: 21754.13 samples/sec	accuracy=nan
2023-03-22 19:58:21,009 Node[0] Epoch[24] Batch [120-140]	Speed: 21792.98 samples/sec	accuracy=nan
2023-03-22 19:58:24,001 Node[0] Epoch[24] Batch [140-160]	Speed: 21812.35 samples/sec	accuracy=nan
2023-03-22 19:58:26,990 Node[0] Epoch[24] Batch [160-180]	Speed: 21840.84 samples/sec	accuracy=nan
2023-03-22 19:58:29,983 Node[0] Epoch[24] Batch [180-200]	Speed: 21813.74 samples/sec	accuracy=nan
2023-03-22 19:58:32,980 Node[0] Epoch[24] Batch [200-220]	Speed: 21782.23 samples/sec	accuracy=nan
2023-03-22 19:58:35,972 Node[0] Epoch[24] Batch [220-240]	Speed: 21815.12 samples/sec	accuracy=nan
2023-03-22 19:58:38,962 Node[0] Epoch[24] Batch [240-260]	Speed: 21831.52 samples/sec	accuracy=nan
2023-03-22 19:58:41,956 Node[0] Epoch[24] Batch [260-280]	Speed: 21804.46 samples/sec	accuracy=nan
2023-03-22 19:58:44,944 Node[0] Epoch[24] Batch [280-300]	Speed: 21845.78 samples/sec	accuracy=nan
2023-03-22 19:58:47,939 Node[0] Epoch[24] Batch [300-320]	Speed: 21798.92 samples/sec	accuracy=nan
2023-03-22 19:58:50,927 Node[0] Epoch[24] Batch [320-340]	Speed: 21851.53 samples/sec	accuracy=nan
2023-03-22 19:58:53,919 Node[0] Epoch[24] Batch [340-360]	Speed: 21817.75 samples/sec	accuracy=nan
2023-03-22 19:58:56,913 Node[0] Epoch[24] Batch [360-380]	Speed: 21799.01 samples/sec	accuracy=nan
2023-03-22 19:58:58,556 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,556 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,556 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,556 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,556 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,556 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533138556, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 19:58:58,557 Node[0] Epoch[24] Time cost=58.677
:::MLLOG {"namespace": "", "time_ms": 1679533138557, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21834.166120323967}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679533138557, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 19:58:58,557 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:58:58,557 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:01,705 Node[0] Epoch[25] Batch [0-20]	Speed: 21801.91 samples/sec	accuracy=nan
2023-03-22 19:59:04,710 Node[0] Epoch[25] Batch [20-40]	Speed: 21725.00 samples/sec	accuracy=nan
2023-03-22 19:59:07,704 Node[0] Epoch[25] Batch [40-60]	Speed: 21806.35 samples/sec	accuracy=nan
2023-03-22 19:59:10,695 Node[0] Epoch[25] Batch [60-80]	Speed: 21820.87 samples/sec	accuracy=nan
2023-03-22 19:59:13,698 Node[0] Epoch[25] Batch [80-100]	Speed: 21739.48 samples/sec	accuracy=nan
2023-03-22 19:59:16,698 Node[0] Epoch[25] Batch [100-120]	Speed: 21760.47 samples/sec	accuracy=nan
2023-03-22 19:59:19,697 Node[0] Epoch[25] Batch [120-140]	Speed: 21770.52 samples/sec	accuracy=nan
2023-03-22 19:59:22,691 Node[0] Epoch[25] Batch [140-160]	Speed: 21798.90 samples/sec	accuracy=nan
2023-03-22 19:59:25,687 Node[0] Epoch[25] Batch [160-180]	Speed: 21791.94 samples/sec	accuracy=nan
2023-03-22 19:59:28,687 Node[0] Epoch[25] Batch [180-200]	Speed: 21758.18 samples/sec	accuracy=nan
2023-03-22 19:59:31,682 Node[0] Epoch[25] Batch [200-220]	Speed: 21799.25 samples/sec	accuracy=nan
2023-03-22 19:59:34,677 Node[0] Epoch[25] Batch [220-240]	Speed: 21794.16 samples/sec	accuracy=nan
2023-03-22 19:59:37,683 Node[0] Epoch[25] Batch [240-260]	Speed: 21718.91 samples/sec	accuracy=nan
2023-03-22 19:59:40,678 Node[0] Epoch[25] Batch [260-280]	Speed: 21796.40 samples/sec	accuracy=nan
2023-03-22 19:59:43,682 Node[0] Epoch[25] Batch [280-300]	Speed: 21727.55 samples/sec	accuracy=nan
2023-03-22 19:59:48,687 Node[0] Epoch[25] Batch [300-320]	Speed: 13043.87 samples/sec	accuracy=nan
2023-03-22 19:59:51,672 Node[0] Epoch[25] Batch [320-340]	Speed: 21868.29 samples/sec	accuracy=nan
2023-03-22 19:59:54,668 Node[0] Epoch[25] Batch [340-360]	Speed: 21788.05 samples/sec	accuracy=nan
2023-03-22 19:59:57,662 Node[0] Epoch[25] Batch [360-380]	Speed: 21803.95 samples/sec	accuracy=nan
2023-03-22 19:59:59,454 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,454 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,455 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,455 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,455 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,455 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 19:59:59,455 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533199457, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 19:59:59,459 Node[0] Epoch[25] Time cost=60.902
:::MLLOG {"namespace": "", "time_ms": 1679533199459, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21036.688370573855}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679533199459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 19:59:59,459 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:02,596 Node[0] Epoch[26] Batch [0-20]	Speed: 21827.57 samples/sec	accuracy=nan
2023-03-22 20:00:05,593 Node[0] Epoch[26] Batch [20-40]	Speed: 21779.17 samples/sec	accuracy=nan
2023-03-22 20:00:08,582 Node[0] Epoch[26] Batch [40-60]	Speed: 21836.81 samples/sec	accuracy=nan
2023-03-22 20:00:11,578 Node[0] Epoch[26] Batch [60-80]	Speed: 21788.51 samples/sec	accuracy=nan
2023-03-22 20:00:14,574 Node[0] Epoch[26] Batch [80-100]	Speed: 21795.65 samples/sec	accuracy=nan
2023-03-22 20:00:17,561 Node[0] Epoch[26] Batch [100-120]	Speed: 21848.17 samples/sec	accuracy=nan
2023-03-22 20:00:20,553 Node[0] Epoch[26] Batch [120-140]	Speed: 21820.62 samples/sec	accuracy=nan
2023-03-22 20:00:23,542 Node[0] Epoch[26] Batch [140-160]	Speed: 21840.39 samples/sec	accuracy=nan
2023-03-22 20:00:26,538 Node[0] Epoch[26] Batch [160-180]	Speed: 21787.78 samples/sec	accuracy=nan
2023-03-22 20:00:29,534 Node[0] Epoch[26] Batch [180-200]	Speed: 21790.89 samples/sec	accuracy=nan
2023-03-22 20:00:32,523 Node[0] Epoch[26] Batch [200-220]	Speed: 21838.90 samples/sec	accuracy=nan
2023-03-22 20:00:35,513 Node[0] Epoch[26] Batch [220-240]	Speed: 21834.81 samples/sec	accuracy=nan
2023-03-22 20:00:38,502 Node[0] Epoch[26] Batch [240-260]	Speed: 21841.47 samples/sec	accuracy=nan
2023-03-22 20:00:41,495 Node[0] Epoch[26] Batch [260-280]	Speed: 21807.90 samples/sec	accuracy=nan
2023-03-22 20:00:44,483 Node[0] Epoch[26] Batch [280-300]	Speed: 21848.23 samples/sec	accuracy=nan
2023-03-22 20:00:47,473 Node[0] Epoch[26] Batch [300-320]	Speed: 21835.46 samples/sec	accuracy=nan
2023-03-22 20:00:50,463 Node[0] Epoch[26] Batch [320-340]	Speed: 21831.28 samples/sec	accuracy=nan
2023-03-22 20:00:53,453 Node[0] Epoch[26] Batch [340-360]	Speed: 21830.33 samples/sec	accuracy=nan
2023-03-22 20:00:56,442 Node[0] Epoch[26] Batch [360-380]	Speed: 21842.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679533258088, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 20:00:58,089 Node[0] Epoch[26] Time cost=58.630
:::MLLOG {"namespace": "", "time_ms": 1679533258089, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21851.8216127812}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679533258234, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 20:00:59,681 Node[0] Epoch[26] Validation-accuracy=0.718880
2023-03-22 20:00:59,681 Node[0] Epoch[26] Validation-correct-count=4493.000000
2023-03-22 20:00:59,681 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-22 20:00:59,871 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:59,871 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:59,871 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:59,871 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:59,871 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533259871, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-22 20:00:59,871 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:00:59,871 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533259872, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72288, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679533259872, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679533259872, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679533259872, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 20:00:59,872 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:01:02,894 Node[0] Epoch[27] Batch [0-20]	Speed: 21666.37 samples/sec	accuracy=nan
2023-03-22 20:01:05,895 Node[0] Epoch[27] Batch [20-40]	Speed: 21750.79 samples/sec	accuracy=nan
2023-03-22 20:01:08,887 Node[0] Epoch[27] Batch [40-60]	Speed: 21817.81 samples/sec	accuracy=nan
2023-03-22 20:01:11,884 Node[0] Epoch[27] Batch [60-80]	Speed: 21783.85 samples/sec	accuracy=nan
2023-03-22 20:01:14,877 Node[0] Epoch[27] Batch [80-100]	Speed: 21810.77 samples/sec	accuracy=nan
2023-03-22 20:01:17,870 Node[0] Epoch[27] Batch [100-120]	Speed: 21811.97 samples/sec	accuracy=nan
2023-03-22 20:01:20,858 Node[0] Epoch[27] Batch [120-140]	Speed: 21850.54 samples/sec	accuracy=nan
2023-03-22 20:01:23,848 Node[0] Epoch[27] Batch [140-160]	Speed: 21830.04 samples/sec	accuracy=nan
2023-03-22 20:01:26,838 Node[0] Epoch[27] Batch [160-180]	Speed: 21832.39 samples/sec	accuracy=nan
2023-03-22 20:01:29,830 Node[0] Epoch[27] Batch [180-200]	Speed: 21819.61 samples/sec	accuracy=nan
2023-03-22 20:01:32,822 Node[0] Epoch[27] Batch [200-220]	Speed: 21814.74 samples/sec	accuracy=nan
2023-03-22 20:01:35,819 Node[0] Epoch[27] Batch [220-240]	Speed: 21784.71 samples/sec	accuracy=nan
2023-03-22 20:01:38,813 Node[0] Epoch[27] Batch [240-260]	Speed: 21800.41 samples/sec	accuracy=nan
2023-03-22 20:01:41,807 Node[0] Epoch[27] Batch [260-280]	Speed: 21805.55 samples/sec	accuracy=nan
2023-03-22 20:01:44,802 Node[0] Epoch[27] Batch [280-300]	Speed: 21799.90 samples/sec	accuracy=nan
2023-03-22 20:01:49,761 Node[0] Epoch[27] Batch [300-320]	Speed: 13162.95 samples/sec	accuracy=nan
2023-03-22 20:01:52,750 Node[0] Epoch[27] Batch [320-340]	Speed: 21841.80 samples/sec	accuracy=nan
2023-03-22 20:01:55,740 Node[0] Epoch[27] Batch [340-360]	Speed: 21827.76 samples/sec	accuracy=nan
2023-03-22 20:01:58,729 Node[0] Epoch[27] Batch [360-380]	Speed: 21846.23 samples/sec	accuracy=nan
2023-03-22 20:02:00,519 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:00,519 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533320519, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 20:02:00,521 Node[0] Epoch[27] Time cost=60.648
:::MLLOG {"namespace": "", "time_ms": 1679533320521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21124.48461496788}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679533320521, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 20:02:00,521 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:02:03,663 Node[0] Epoch[28] Batch [0-20]	Speed: 21815.94 samples/sec	accuracy=nan
2023-03-22 20:02:06,652 Node[0] Epoch[28] Batch [20-40]	Speed: 21842.40 samples/sec	accuracy=nan
2023-03-22 20:02:09,640 Node[0] Epoch[28] Batch [40-60]	Speed: 21845.95 samples/sec	accuracy=nan
2023-03-22 20:02:12,635 Node[0] Epoch[28] Batch [60-80]	Speed: 21796.14 samples/sec	accuracy=nan
2023-03-22 20:02:15,629 Node[0] Epoch[28] Batch [80-100]	Speed: 21802.35 samples/sec	accuracy=nan
2023-03-22 20:02:18,622 Node[0] Epoch[28] Batch [100-120]	Speed: 21812.81 samples/sec	accuracy=nan
2023-03-22 20:02:21,612 Node[0] Epoch[28] Batch [120-140]	Speed: 21833.37 samples/sec	accuracy=nan
2023-03-22 20:02:24,611 Node[0] Epoch[28] Batch [140-160]	Speed: 21762.68 samples/sec	accuracy=nan
2023-03-22 20:02:27,602 Node[0] Epoch[28] Batch [160-180]	Speed: 21824.54 samples/sec	accuracy=nan
2023-03-22 20:02:30,600 Node[0] Epoch[28] Batch [180-200]	Speed: 21781.20 samples/sec	accuracy=nan
2023-03-22 20:02:33,591 Node[0] Epoch[28] Batch [200-220]	Speed: 21821.32 samples/sec	accuracy=nan
2023-03-22 20:02:36,582 Node[0] Epoch[28] Batch [220-240]	Speed: 21826.50 samples/sec	accuracy=nan
2023-03-22 20:02:39,573 Node[0] Epoch[28] Batch [240-260]	Speed: 21829.01 samples/sec	accuracy=nan
2023-03-22 20:02:42,564 Node[0] Epoch[28] Batch [260-280]	Speed: 21825.44 samples/sec	accuracy=nan
2023-03-22 20:02:45,554 Node[0] Epoch[28] Batch [280-300]	Speed: 21828.15 samples/sec	accuracy=nan
2023-03-22 20:02:50,520 Node[0] Epoch[28] Batch [300-320]	Speed: 13147.15 samples/sec	accuracy=nan
2023-03-22 20:02:53,507 Node[0] Epoch[28] Batch [320-340]	Speed: 21850.14 samples/sec	accuracy=nan
2023-03-22 20:02:56,493 Node[0] Epoch[28] Batch [340-360]	Speed: 21864.93 samples/sec	accuracy=nan
2023-03-22 20:02:59,487 Node[0] Epoch[28] Batch [360-380]	Speed: 21801.76 samples/sec	accuracy=nan
2023-03-22 20:03:01,129 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:01,130 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533381129, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 20:03:01,131 Node[0] Epoch[28] Time cost=60.609
:::MLLOG {"namespace": "", "time_ms": 1679533381131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21138.08154963394}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679533381131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 20:03:01,131 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:04,275 Node[0] Epoch[29] Batch [0-20]	Speed: 21821.32 samples/sec	accuracy=nan
2023-03-22 20:03:07,270 Node[0] Epoch[29] Batch [20-40]	Speed: 21796.23 samples/sec	accuracy=nan
2023-03-22 20:03:10,260 Node[0] Epoch[29] Batch [40-60]	Speed: 21835.42 samples/sec	accuracy=nan
2023-03-22 20:03:13,255 Node[0] Epoch[29] Batch [60-80]	Speed: 21797.05 samples/sec	accuracy=nan
2023-03-22 20:03:16,246 Node[0] Epoch[29] Batch [80-100]	Speed: 21821.35 samples/sec	accuracy=nan
2023-03-22 20:03:19,239 Node[0] Epoch[29] Batch [100-120]	Speed: 21808.86 samples/sec	accuracy=nan
2023-03-22 20:03:22,235 Node[0] Epoch[29] Batch [120-140]	Speed: 21790.29 samples/sec	accuracy=nan
2023-03-22 20:03:25,227 Node[0] Epoch[29] Batch [140-160]	Speed: 21816.40 samples/sec	accuracy=nan
2023-03-22 20:03:28,228 Node[0] Epoch[29] Batch [160-180]	Speed: 21758.46 samples/sec	accuracy=nan
2023-03-22 20:03:31,225 Node[0] Epoch[29] Batch [180-200]	Speed: 21778.37 samples/sec	accuracy=nan
2023-03-22 20:03:34,215 Node[0] Epoch[29] Batch [200-220]	Speed: 21833.41 samples/sec	accuracy=nan
2023-03-22 20:03:37,205 Node[0] Epoch[29] Batch [220-240]	Speed: 21835.54 samples/sec	accuracy=nan
2023-03-22 20:03:40,199 Node[0] Epoch[29] Batch [240-260]	Speed: 21804.43 samples/sec	accuracy=nan
2023-03-22 20:03:43,194 Node[0] Epoch[29] Batch [260-280]	Speed: 21791.01 samples/sec	accuracy=nan
2023-03-22 20:03:46,187 Node[0] Epoch[29] Batch [280-300]	Speed: 21815.50 samples/sec	accuracy=nan
2023-03-22 20:03:49,181 Node[0] Epoch[29] Batch [300-320]	Speed: 21801.14 samples/sec	accuracy=nan
2023-03-22 20:03:52,171 Node[0] Epoch[29] Batch [320-340]	Speed: 21833.72 samples/sec	accuracy=nan
2023-03-22 20:03:55,161 Node[0] Epoch[29] Batch [340-360]	Speed: 21834.35 samples/sec	accuracy=nan
2023-03-22 20:03:58,154 Node[0] Epoch[29] Batch [360-380]	Speed: 21808.33 samples/sec	accuracy=nan
2023-03-22 20:03:59,950 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:59,950 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533439950, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 20:03:59,950 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:59,950 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:59,951 Node[0] Epoch[29] Time cost=58.819
2023-03-22 20:03:59,950 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533439951, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21781.369791111036}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-22 20:03:59,951 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533439951, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 20:03:59,951 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:03:59,951 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:04:03,095 Node[0] Epoch[30] Batch [0-20]	Speed: 21809.89 samples/sec	accuracy=nan
2023-03-22 20:04:06,092 Node[0] Epoch[30] Batch [20-40]	Speed: 21780.78 samples/sec	accuracy=nan
2023-03-22 20:04:09,086 Node[0] Epoch[30] Batch [40-60]	Speed: 21802.28 samples/sec	accuracy=nan
2023-03-22 20:04:12,090 Node[0] Epoch[30] Batch [60-80]	Speed: 21735.39 samples/sec	accuracy=nan
2023-03-22 20:04:15,083 Node[0] Epoch[30] Batch [80-100]	Speed: 21805.32 samples/sec	accuracy=nan
2023-03-22 20:04:18,074 Node[0] Epoch[30] Batch [100-120]	Speed: 21830.40 samples/sec	accuracy=nan
2023-03-22 20:04:21,065 Node[0] Epoch[30] Batch [120-140]	Speed: 21823.90 samples/sec	accuracy=nan
2023-03-22 20:04:24,061 Node[0] Epoch[30] Batch [140-160]	Speed: 21790.65 samples/sec	accuracy=nan
2023-03-22 20:04:27,064 Node[0] Epoch[30] Batch [160-180]	Speed: 21734.95 samples/sec	accuracy=nan
2023-03-22 20:04:30,056 Node[0] Epoch[30] Batch [180-200]	Speed: 21817.54 samples/sec	accuracy=nan
2023-03-22 20:04:33,049 Node[0] Epoch[30] Batch [200-220]	Speed: 21809.93 samples/sec	accuracy=nan
2023-03-22 20:04:36,047 Node[0] Epoch[30] Batch [220-240]	Speed: 21777.95 samples/sec	accuracy=nan
2023-03-22 20:04:39,041 Node[0] Epoch[30] Batch [240-260]	Speed: 21805.96 samples/sec	accuracy=nan
2023-03-22 20:04:42,040 Node[0] Epoch[30] Batch [260-280]	Speed: 21760.45 samples/sec	accuracy=nan
2023-03-22 20:04:45,041 Node[0] Epoch[30] Batch [280-300]	Speed: 21756.14 samples/sec	accuracy=nan
2023-03-22 20:04:48,042 Node[0] Epoch[30] Batch [300-320]	Speed: 21755.31 samples/sec	accuracy=nan
2023-03-22 20:04:51,039 Node[0] Epoch[30] Batch [320-340]	Speed: 21781.30 samples/sec	accuracy=nan
2023-03-22 20:04:54,041 Node[0] Epoch[30] Batch [340-360]	Speed: 21740.39 samples/sec	accuracy=nan
2023-03-22 20:04:57,037 Node[0] Epoch[30] Batch [360-380]	Speed: 21789.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679533498684, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 20:04:58,685 Node[0] Epoch[30] Time cost=58.734
:::MLLOG {"namespace": "", "time_ms": 1679533498685, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21813.023403823645}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679533498829, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 20:05:00,463 Node[0] Epoch[30] Validation-accuracy=0.750720
2023-03-22 20:05:00,464 Node[0] Epoch[30] Validation-correct-count=4692.000000
2023-03-22 20:05:00,464 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679533500464, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679533500464, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74298, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679533500464, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-22 20:05:00,464 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:00,464 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:00,464 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533500464, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 20:05:00,464 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:00,464 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:00,464 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:00,464 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533500465, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 20:05:00,465 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:05:03,489 Node[0] Epoch[31] Batch [0-20]	Speed: 21647.03 samples/sec	accuracy=nan
2023-03-22 20:05:06,490 Node[0] Epoch[31] Batch [20-40]	Speed: 21752.80 samples/sec	accuracy=nan
2023-03-22 20:05:09,484 Node[0] Epoch[31] Batch [40-60]	Speed: 21802.32 samples/sec	accuracy=nan
2023-03-22 20:05:12,477 Node[0] Epoch[31] Batch [60-80]	Speed: 21810.39 samples/sec	accuracy=nan
2023-03-22 20:05:15,471 Node[0] Epoch[31] Batch [80-100]	Speed: 21807.76 samples/sec	accuracy=nan
2023-03-22 20:05:18,465 Node[0] Epoch[31] Batch [100-120]	Speed: 21801.98 samples/sec	accuracy=nan
2023-03-22 20:05:21,460 Node[0] Epoch[31] Batch [120-140]	Speed: 21796.09 samples/sec	accuracy=nan
2023-03-22 20:05:24,452 Node[0] Epoch[31] Batch [140-160]	Speed: 21819.85 samples/sec	accuracy=nan
2023-03-22 20:05:27,448 Node[0] Epoch[31] Batch [160-180]	Speed: 21790.26 samples/sec	accuracy=nan
2023-03-22 20:05:30,450 Node[0] Epoch[31] Batch [180-200]	Speed: 21742.05 samples/sec	accuracy=nan
2023-03-22 20:05:33,443 Node[0] Epoch[31] Batch [200-220]	Speed: 21815.42 samples/sec	accuracy=nan
2023-03-22 20:05:36,436 Node[0] Epoch[31] Batch [220-240]	Speed: 21806.92 samples/sec	accuracy=nan
2023-03-22 20:05:39,427 Node[0] Epoch[31] Batch [240-260]	Speed: 21827.47 samples/sec	accuracy=nan
2023-03-22 20:05:42,424 Node[0] Epoch[31] Batch [260-280]	Speed: 21779.62 samples/sec	accuracy=nan
2023-03-22 20:05:45,416 Node[0] Epoch[31] Batch [280-300]	Speed: 21822.41 samples/sec	accuracy=nan
2023-03-22 20:05:50,670 Node[0] Epoch[31] Batch [300-320]	Speed: 12423.27 samples/sec	accuracy=nan
2023-03-22 20:05:53,660 Node[0] Epoch[31] Batch [320-340]	Speed: 21837.63 samples/sec	accuracy=nan
2023-03-22 20:05:56,652 Node[0] Epoch[31] Batch [340-360]	Speed: 21818.67 samples/sec	accuracy=nan
2023-03-22 20:05:59,642 Node[0] Epoch[31] Batch [360-380]	Speed: 21827.13 samples/sec	accuracy=nan
2023-03-22 20:06:01,432 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:01,432 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533561432, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 20:06:01,433 Node[0] Epoch[31] Time cost=60.969
:::MLLOG {"namespace": "", "time_ms": 1679533561433, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21013.54316628404}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679533561434, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 20:06:01,434 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:06:04,578 Node[0] Epoch[32] Batch [0-20]	Speed: 21799.87 samples/sec	accuracy=nan
2023-03-22 20:06:07,574 Node[0] Epoch[32] Batch [20-40]	Speed: 21788.94 samples/sec	accuracy=nan
2023-03-22 20:06:10,566 Node[0] Epoch[32] Batch [40-60]	Speed: 21816.18 samples/sec	accuracy=nan
2023-03-22 20:06:13,569 Node[0] Epoch[32] Batch [60-80]	Speed: 21736.75 samples/sec	accuracy=nan
2023-03-22 20:06:16,561 Node[0] Epoch[32] Batch [80-100]	Speed: 21820.22 samples/sec	accuracy=nan
2023-03-22 20:06:19,552 Node[0] Epoch[32] Batch [100-120]	Speed: 21823.19 samples/sec	accuracy=nan
2023-03-22 20:06:22,547 Node[0] Epoch[32] Batch [120-140]	Speed: 21798.83 samples/sec	accuracy=nan
2023-03-22 20:06:25,544 Node[0] Epoch[32] Batch [140-160]	Speed: 21782.74 samples/sec	accuracy=nan
2023-03-22 20:06:28,541 Node[0] Epoch[32] Batch [160-180]	Speed: 21782.63 samples/sec	accuracy=nan
2023-03-22 20:06:31,535 Node[0] Epoch[32] Batch [180-200]	Speed: 21801.05 samples/sec	accuracy=nan
2023-03-22 20:06:34,527 Node[0] Epoch[32] Batch [200-220]	Speed: 21820.32 samples/sec	accuracy=nan
2023-03-22 20:06:37,517 Node[0] Epoch[32] Batch [220-240]	Speed: 21829.64 samples/sec	accuracy=nan
2023-03-22 20:06:40,510 Node[0] Epoch[32] Batch [240-260]	Speed: 21814.25 samples/sec	accuracy=nan
2023-03-22 20:06:43,508 Node[0] Epoch[32] Batch [260-280]	Speed: 21776.52 samples/sec	accuracy=nan
2023-03-22 20:06:46,499 Node[0] Epoch[32] Batch [280-300]	Speed: 21823.93 samples/sec	accuracy=nan
2023-03-22 20:06:51,757 Node[0] Epoch[32] Batch [300-320]	Speed: 12416.01 samples/sec	accuracy=nan
2023-03-22 20:06:54,744 Node[0] Epoch[32] Batch [320-340]	Speed: 21849.06 samples/sec	accuracy=nan
2023-03-22 20:06:57,735 Node[0] Epoch[32] Batch [340-360]	Speed: 21825.39 samples/sec	accuracy=nan
2023-03-22 20:07:00,733 Node[0] Epoch[32] Batch [360-380]	Speed: 21777.63 samples/sec	accuracy=nan
2023-03-22 20:07:02,376 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,376 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,376 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,377 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,376 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,377 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:02,377 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533622377, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 20:07:02,378 Node[0] Epoch[32] Time cost=60.944
:::MLLOG {"namespace": "", "time_ms": 1679533622378, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21021.968362703712}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679533622379, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 20:07:02,379 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:07:05,519 Node[0] Epoch[33] Batch [0-20]	Speed: 21853.34 samples/sec	accuracy=nan
2023-03-22 20:07:08,509 Node[0] Epoch[33] Batch [20-40]	Speed: 21831.42 samples/sec	accuracy=nan
2023-03-22 20:07:11,499 Node[0] Epoch[33] Batch [40-60]	Speed: 21832.10 samples/sec	accuracy=nan
2023-03-22 20:07:14,494 Node[0] Epoch[33] Batch [60-80]	Speed: 21798.60 samples/sec	accuracy=nan
2023-03-22 20:07:17,490 Node[0] Epoch[33] Batch [80-100]	Speed: 21789.61 samples/sec	accuracy=nan
2023-03-22 20:07:20,483 Node[0] Epoch[33] Batch [100-120]	Speed: 21810.25 samples/sec	accuracy=nan
2023-03-22 20:07:23,481 Node[0] Epoch[33] Batch [120-140]	Speed: 21774.97 samples/sec	accuracy=nan
2023-03-22 20:07:26,475 Node[0] Epoch[33] Batch [140-160]	Speed: 21800.18 samples/sec	accuracy=nan
2023-03-22 20:07:29,471 Node[0] Epoch[33] Batch [160-180]	Speed: 21790.45 samples/sec	accuracy=nan
2023-03-22 20:07:32,470 Node[0] Epoch[33] Batch [180-200]	Speed: 21764.46 samples/sec	accuracy=nan
2023-03-22 20:07:35,463 Node[0] Epoch[33] Batch [200-220]	Speed: 21812.14 samples/sec	accuracy=nan
2023-03-22 20:07:38,455 Node[0] Epoch[33] Batch [220-240]	Speed: 21822.52 samples/sec	accuracy=nan
2023-03-22 20:07:41,445 Node[0] Epoch[33] Batch [240-260]	Speed: 21826.03 samples/sec	accuracy=nan
2023-03-22 20:07:44,441 Node[0] Epoch[33] Batch [260-280]	Speed: 21793.99 samples/sec	accuracy=nan
2023-03-22 20:07:47,435 Node[0] Epoch[33] Batch [280-300]	Speed: 21804.29 samples/sec	accuracy=nan
2023-03-22 20:07:52,697 Node[0] Epoch[33] Batch [300-320]	Speed: 12405.79 samples/sec	accuracy=nan
2023-03-22 20:07:55,685 Node[0] Epoch[33] Batch [320-340]	Speed: 21847.31 samples/sec	accuracy=nan
2023-03-22 20:07:58,679 Node[0] Epoch[33] Batch [340-360]	Speed: 21799.63 samples/sec	accuracy=nan
2023-03-22 20:08:01,670 Node[0] Epoch[33] Batch [360-380]	Speed: 21831.55 samples/sec	accuracy=nan
2023-03-22 20:08:03,463 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,463 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,463 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,463 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,463 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,463 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:03,464 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679533683463, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 20:08:03,464 Node[0] Epoch[33] Time cost=61.086
:::MLLOG {"namespace": "", "time_ms": 1679533683464, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20973.277613137816}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679533683465, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 20:08:03,465 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 20:08:06,607 Node[0] Epoch[34] Batch [0-20]	Speed: 21810.45 samples/sec	accuracy=nan
2023-03-22 20:08:09,599 Node[0] Epoch[34] Batch [20-40]	Speed: 21819.52 samples/sec	accuracy=nan
2023-03-22 20:08:12,591 Node[0] Epoch[34] Batch [40-60]	Speed: 21814.94 samples/sec	accuracy=nan
2023-03-22 20:08:15,585 Node[0] Epoch[34] Batch [60-80]	Speed: 21800.95 samples/sec	accuracy=nan
2023-03-22 20:08:18,575 Node[0] Epoch[34] Batch [80-100]	Speed: 21833.48 samples/sec	accuracy=nan
2023-03-22 20:08:21,571 Node[0] Epoch[34] Batch [100-120]	Speed: 21788.22 samples/sec	accuracy=nan
2023-03-22 20:08:24,567 Node[0] Epoch[34] Batch [120-140]	Speed: 21795.53 samples/sec	accuracy=nan
2023-03-22 20:08:27,562 Node[0] Epoch[34] Batch [140-160]	Speed: 21795.77 samples/sec	accuracy=nan
2023-03-22 20:08:30,553 Node[0] Epoch[34] Batch [160-180]	Speed: 21824.04 samples/sec	accuracy=nan
2023-03-22 20:08:33,545 Node[0] Epoch[34] Batch [180-200]	Speed: 21813.47 samples/sec	accuracy=nan
2023-03-22 20:08:36,537 Node[0] Epoch[34] Batch [200-220]	Speed: 21825.05 samples/sec	accuracy=nan
2023-03-22 20:08:39,529 Node[0] Epoch[34] Batch [220-240]	Speed: 21817.78 samples/sec	accuracy=nan
2023-03-22 20:08:42,527 Node[0] Epoch[34] Batch [240-260]	Speed: 21769.04 samples/sec	accuracy=nan
2023-03-22 20:08:45,521 Node[0] Epoch[34] Batch [260-280]	Speed: 21809.05 samples/sec	accuracy=nan
2023-03-22 20:08:48,510 Node[0] Epoch[34] Batch [280-300]	Speed: 21836.39 samples/sec	accuracy=nan
2023-03-22 20:08:51,503 Node[0] Epoch[34] Batch [300-320]	Speed: 21815.09 samples/sec	accuracy=nan
2023-03-22 20:08:54,493 Node[0] Epoch[34] Batch [320-340]	Speed: 21831.54 samples/sec	accuracy=nan
2023-03-22 20:08:57,489 Node[0] Epoch[34] Batch [340-360]	Speed: 21789.29 samples/sec	accuracy=nan
2023-03-22 20:09:00,481 Node[0] Epoch[34] Batch [360-380]	Speed: 21815.42 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679533742275, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 20:09:02,275 Node[0] Epoch[34] Time cost=58.810
:::MLLOG {"namespace": "", "time_ms": 1679533742275, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21784.75609777732}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679533742419, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 20:09:03,857 Node[0] Epoch[34] Validation-accuracy=0.762240
2023-03-22 20:09:03,857 Node[0] Epoch[34] Validation-correct-count=4764.000000
2023-03-22 20:09:03,857 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679533743916, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679533743917, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75958, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679533743917, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679533743917, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533768
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:28 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:28 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:28 PM
+ result=2235
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533768
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:28 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:28 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:28 PM
+ result=2235
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2235,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533769
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:29 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:29 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:29 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533769
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:29 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:29 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:29 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM'
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533769
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:29 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:29 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:29 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533769
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:29 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:29 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:29 PM
+ result=2236
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2236,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533770
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:30 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:30 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:30 PM
+ result=2237
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2237,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2237,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679533770
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 08:09:30 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 08:09:30 PM'
ENDING TIMING RUN AT 2023-03-22 08:09:30 PM
+ result=2237
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2237,root,2023-03-22 07:32:13 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2237,root,2023-03-22 07:32:13 PM'
+ export PROFILE=0
+ PROFILE=0
