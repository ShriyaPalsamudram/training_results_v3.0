+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node042 node043 node044 node045 node046 node047 '
+ echo 'hosts=node040 node041 node042 node043 node044 node045 node046 node047 '
hosts=node040 node041 node042 node043 node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434040018, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434040052, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434040054, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434040055, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434040056, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434054530, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434060721, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434060756, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434060758, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434060759, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434060761, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434073134, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434078122, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434078158, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434078159, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434078160, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434078162, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node042 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node042
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434085643, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
srun: Job 73 step creation temporarily disabled, retrying (Requested nodes are busy)
srun: Step created for job 73
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434092954, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434092989, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434092991, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434092992, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434092993, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434106554, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434111551, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434111586, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434111588, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434111589, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434111590, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434124336, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434130356, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434130391, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434130393, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434130394, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434130396, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434143137, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434148159, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434148194, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434148195, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434148197, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434148198, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434160949, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434166964, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434166999, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434167000, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434167002, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434167003, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679434179754, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=10730
+ SEED=10730
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32 singularity exec --nv -B /mnt/data/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node042: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679434181
+ start=1679434181
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ readonly local_rank=0
+ local_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ SLURM_NTASKS_PER_NODE=4
++ export DGXSYSTEM=8xR750xax4A100
+ OPTIMIZER=sgdwfastlars
+ INPUT_BATCH_MULTIPLIER=1
++ DGXSYSTEM=8xR750xax4A100
+ KVSTORE=horovod
+ BATCHSIZE=102
+ LR=10.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ LRSCHED=pow2
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ KVSTORE=horovod
+ LR=10.5
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ MOM=0.9
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LABELSMOOTHING=0.1
+ LARSETA=0.001
+ SEED=10730
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ DALI_HW_DECODER_LOAD=0.7
+ EVAL_OFFSET=2
+ WD=5.0e-05
+ EVAL_PERIOD=4
+ LABELSMOOTHING=0.1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ DALI_PREFETCH_QUEUE=3
+ SEED=10730
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_CACHE_SIZE=12288
+ DALI_PREFETCH_QUEUE=3
+ DALI_ROI_DECODE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=12288
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DONT_USE_MMAP=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BN_GROUP=1
+ DALI_DONT_USE_MMAP=0
+ PROFILE=0
+ NUMEPOCHS=37
+ PROFILE_EXCEL=0
+ NODALI=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 == 1 ]]
+ NUMEXAMPLES=
+ DATAROOT=/data
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ start=1679434181
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ seq 0 3
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
+ GPUS=0,1,2,3
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ sed 's/,$//'
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ [[ 0 -lt 1 ]]
++ export DGXNNODES=8
++ DGXNNODES=8
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679434181
++ date '+%Y-%m-%d %r'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ source ./config_8xR750xax4A100.sh
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ source ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
+++ dirname ./config_8xR750xax4A100.sh
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ sed 's/\.sh$//'
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++++ readlink -f ./config_8xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++++ readlink -f ./config_8xR750xax4A100.sh
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ NCCL_MAX_RINGS=4
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export DGXSYSTEM=8xR750xax4A100
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ DGXSYSTEM=8xR750xax4A100
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ date +%s
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679434181
+ start=1679434181
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ source ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start=1679434181
++ date +%s
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-21 04:29:41 PM'
+++ dirname ./config_8xR750xax4A100.sh
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=6
+ global_rank=6
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=6
+ global_rank=6
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ start=1679434181
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ date '+%Y-%m-%d %r'
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
++ seq 0 3
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ seq 0 3
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
++ tr '\n' ,
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ tr '\n' ,
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
++ sed 's/,$//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export WALLTIME=00:40:00
++ seq 0 3
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ tr '\n' ,
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ sed 's/,$//'
++ seq 0 3
++ date +%s
++ tr '\n' ,
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ sed 's/,$//'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start=1679434181
+ start=1679434181
++ date +%s
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+ start_fmt='2023-03-21 04:29:41 PM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+++ sed 's/\.sh$//'
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
++++ readlink -f ./config_8xR750xax4A100.sh
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
+ start=1679434181
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679434181
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ start_fmt='2023-03-21 04:29:41 PM'
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=5
+ global_rank=5
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+++ dirname ./config_8xR750xax4A100.sh
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ tr '\n' ,
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ sed 's/^config_//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ sed 's/\.sh$//'
+ [[ '' -ge 1 ]]
++++ readlink -f ./config_8xR750xax4A100.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
++ date +%s
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679434181
+ start=1679434181
+ start=1679434181
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+ start_fmt='2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=1
+ global_rank=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=1
+ global_rank=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
++ date +%s
+ start=1679434181
++ date '+%Y-%m-%d %r'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=1
+ global_rank=1
+ GPUS=0,1,2,3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ GPUS=0,1,2,3
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ dirname ./config_8xR750xax4A100.sh
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ dirname ./config_8xR750xax4A100.sh
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679434181
+ start=1679434181
+ start=1679434181
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-21 04:29:41 PM'
+ start_fmt='2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=2
+ global_rank=2
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=2
+ global_rank=2
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+++ sed 's/^config_//'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+++ sed 's/\.sh$//'
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
++++ readlink -f ./config_8xR750xax4A100.sh
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+++ sed 's/\.sh$//'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++++ readlink -f ./config_8xR750xax4A100.sh
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
running benchmark
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+++ dirname ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start=1679434181
++ date +%s
++ date '+%Y-%m-%d %r'
+ start=1679434181
++ date +%s
+ start=1679434181
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ start_fmt='2023-03-21 04:29:41 PM'
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=4
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ seq 0 3
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
+ start=1679434181
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679434181
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ source ./config_8xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ date '+%Y-%m-%d %r'
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+++ dirname ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+++ sed 's/^config_//'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ KVSTORE=horovod
+ LR=10.5
+ start_fmt='2023-03-21 04:29:41 PM'
+ MOM=0.9
+ LRSCHED=pow2
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+++ sed 's/\.sh$//'
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
++++ readlink -f ./config_8xR750xax4A100.sh
+ readonly global_rank=4
+ global_rank=4
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ readonly local_rank=0
+ local_rank=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++++ readlink -f ./config_8xR750xax4A100.sh
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ [[ '' -ge 1 ]]
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ source ./config_8xR750xax4A100.sh
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ source ./config_8xR750xax4A100.sh
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+++ sed 's/^config_//'
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++++ readlink -f ./config_8xR750xax4A100.sh
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ sed 's/\.sh$//'
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++++ readlink -f ./config_8xR750xax4A100.sh
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679434181
+ start=1679434181
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679434181
+ start=1679434181
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start_fmt='2023-03-21 04:29:41 PM'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
++ date +%s
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ date +%s
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ start_fmt='2023-03-21 04:29:41 PM'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ echo 'running benchmark'
+ export NGPUS=1
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679434181
++ date '+%Y-%m-%d %r'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=3
+ global_rank=3
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=3
+ global_rank=3
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
++ seq 0 3
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ start=1679434181
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
++ seq 0 3
++ tr '\n' ,
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ tr '\n' ,
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ sed 's/,$//'
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ sed 's/,$//'
+ DATAROOT=/data
+ echo 'running benchmark'
++ date '+%Y-%m-%d %r'
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
+ start_fmt='2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
++ seq 0 3
++ tr '\n' ,
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ tr '\n' ,
+ OPTIMIZER=sgdwfastlars
++ sed 's/,$//'
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ sed 's/,$//'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ tr '\n' ,
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
+ start=1679434181
++ seq 0 3
+ start=1679434181
++ tr '\n' ,
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:29:41 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ start_fmt='2023-03-21 04:29:41 PM'
+ readonly global_rank=3
+ global_rank=3
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:29:41 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
STARTING TIMING RUN AT 2023-03-21 04:29:41 PM
+ readonly global_rank=3
+ global_rank=3
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ SEED=10730
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10730
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
+ GPUS=0,1,2,3
++ tr '\n' ,
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10730 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node042:87393] MCW rank 10 is not bound (or bound to all available processors)
[node042:87394] MCW rank 11 is not bound (or bound to all available processors)
[node040:93630] MCW rank 3 is not bound (or bound to all available processors)
[node040:93638] MCW rank 1 is not bound (or bound to all available processors)
[node042:87391] MCW rank 9 is not bound (or bound to all available processors)
[node042:87392] MCW rank 8 is not bound (or bound to all available processors)
[node040:93631] MCW rank 0 is not bound (or bound to all available processors)
[node040:93629] MCW rank 2 is not bound (or bound to all available processors)
[node041:85200] MCW rank 7 is not bound (or bound to all available processors)
[node041:85198] MCW rank 6 is not bound (or bound to all available processors)
[node041:85201] MCW rank 5 is not bound (or bound to all available processors)
[node041:85199] MCW rank 4 is not bound (or bound to all available processors)
[node046:83951] MCW rank 27 is not bound (or bound to all available processors)
[node043:76326] MCW rank 14 is not bound (or bound to all available processors)
[node045:93303] MCW rank 23 is not bound (or bound to all available processors)
[node046:83952] MCW rank 25 is not bound (or bound to all available processors)
[node046:83950] MCW rank 26 is not bound (or bound to all available processors)
[node046:83953] MCW rank 24 is not bound (or bound to all available processors)
[node047:88918] MCW rank 28 is not bound (or bound to all available processors)
[node043:76328] MCW rank 15 is not bound (or bound to all available processors)
[node043:76327] MCW rank 13 is not bound (or bound to all available processors)
[node043:76334] MCW rank 12 is not bound (or bound to all available processors)
[node045:93306] MCW rank 20 is not bound (or bound to all available processors)
[node047:88917] MCW rank 29 is not bound (or bound to all available processors)
[node045:93305] MCW rank 22 is not bound (or bound to all available processors)
[node045:93304] MCW rank 21 is not bound (or bound to all available processors)
[node047:88919] MCW rank 31 is not bound (or bound to all available processors)
[node047:88916] MCW rank 30 is not bound (or bound to all available processors)
[node044:100739] MCW rank 18 is not bound (or bound to all available processors)
[node044:100741] MCW rank 16 is not bound (or bound to all available processors)
[node044:100738] MCW rank 17 is not bound (or bound to all available processors)
[node044:100740] MCW rank 19 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679434186350, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[16:29:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679434194337, "event_type": "POINT_IN_TIME", "key": "seed", "value": 10730, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:29:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679434196770, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 102, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[16:30:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679434201666, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201671, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201671, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201671, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201671, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201672, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201672, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201672, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201673, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201673, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201673, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201673, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201674, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201674, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201674, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201674, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201675, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201675, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201675, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201675, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201676, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201676, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201676, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201676, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201677, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201677, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201677, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201677, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201678, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201678, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201678, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201678, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201678, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201679, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201679, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201679, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201679, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201680, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201680, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201680, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201680, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201681, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201681, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201681, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201681, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201682, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201682, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201682, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201682, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201683, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201683, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201683, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201683, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201684, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201684, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201684, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201684, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201685, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201685, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201685, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201685, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201685, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201686, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201686, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201686, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201686, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201687, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201687, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201687, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201687, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201688, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201688, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201688, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201688, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201689, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201689, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201689, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201689, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679434201706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:30:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,709 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59302, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,710 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41177, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,711 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61928, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,711 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61277, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,711 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7586, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,712 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36613, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,712 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32841, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,712 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26881, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59744, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41334, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51221, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13028, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61780, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18005, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55859, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27169, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36962, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63401, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23416, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23969, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62592, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42522, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[31] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54055, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,713 Node[25] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15473, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[24] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32150, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[30] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2443, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[27] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24995, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[26] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37383, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679434203713, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,714 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54629, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,715 Node[28] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64522, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679434203715, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,715 Node[29] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27860, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679434203716, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:30:03,717 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11364, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679434252653, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679434252654, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679434252655, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679434253819, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50016, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679434254043, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434254043, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 16:30:56,428 Node[0] Epoch[0] Batch [0-20]	Speed: 27443.10 samples/sec	accuracy=nan
2023-03-21 16:30:58,326 Node[0] Epoch[0] Batch [20-40]	Speed: 34397.92 samples/sec	accuracy=nan
2023-03-21 16:31:00,248 Node[0] Epoch[0] Batch [40-60]	Speed: 33965.01 samples/sec	accuracy=nan
2023-03-21 16:31:02,320 Node[0] Epoch[0] Batch [60-80]	Speed: 31507.15 samples/sec	accuracy=nan
2023-03-21 16:31:04,259 Node[0] Epoch[0] Batch [80-100]	Speed: 33674.31 samples/sec	accuracy=nan
2023-03-21 16:31:06,190 Node[0] Epoch[0] Batch [100-120]	Speed: 33802.48 samples/sec	accuracy=nan
2023-03-21 16:31:08,130 Node[0] Epoch[0] Batch [120-140]	Speed: 33646.94 samples/sec	accuracy=nan
2023-03-21 16:31:10,060 Node[0] Epoch[0] Batch [140-160]	Speed: 33829.67 samples/sec	accuracy=nan
2023-03-21 16:31:12,102 Node[0] Epoch[0] Batch [160-180]	Speed: 31959.56 samples/sec	accuracy=nan
2023-03-21 16:31:14,116 Node[0] Epoch[0] Batch [180-200]	Speed: 32408.46 samples/sec	accuracy=nan
2023-03-21 16:31:16,034 Node[0] Epoch[0] Batch [200-220]	Speed: 34048.65 samples/sec	accuracy=nan
2023-03-21 16:31:17,955 Node[0] Epoch[0] Batch [220-240]	Speed: 33985.28 samples/sec	accuracy=nan
2023-03-21 16:31:19,921 Node[0] Epoch[0] Batch [240-260]	Speed: 33188.13 samples/sec	accuracy=nan
2023-03-21 16:31:21,873 Node[0] Epoch[0] Batch [260-280]	Speed: 33458.97 samples/sec	accuracy=nan
2023-03-21 16:31:23,962 Node[0] Epoch[0] Batch [280-300]	Speed: 31237.22 samples/sec	accuracy=nan
2023-03-21 16:31:25,990 Node[0] Epoch[0] Batch [300-320]	Speed: 32188.90 samples/sec	accuracy=nan
2023-03-21 16:31:27,856 Node[0] Epoch[0] Batch [320-340]	Speed: 34988.69 samples/sec	accuracy=nan
2023-03-21 16:31:29,871 Node[0] Epoch[0] Batch [340-360]	Speed: 32398.18 samples/sec	accuracy=nan
2023-03-21 16:31:31,880 Node[0] Epoch[0] Batch [360-380]	Speed: 32500.47 samples/sec	accuracy=nan
2023-03-21 16:31:32,499 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,500 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:32,501 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434292501, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 16:31:32,501 Node[0] Epoch[0] Time cost=38.458
:::MLLOG {"namespace": "", "time_ms": 1679434292501, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 33313.210683829595}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 16:31:32,501 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434292502, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 16:31:32,502 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:33,376 Node[0] Epoch[1] Batch [0-20]	Speed: 78300.77 samples/sec	accuracy=nan
2023-03-21 16:31:34,206 Node[0] Epoch[1] Batch [20-40]	Speed: 78723.02 samples/sec	accuracy=nan
2023-03-21 16:31:35,034 Node[0] Epoch[1] Batch [40-60]	Speed: 78826.48 samples/sec	accuracy=nan
2023-03-21 16:31:35,862 Node[0] Epoch[1] Batch [60-80]	Speed: 78810.80 samples/sec	accuracy=nan
2023-03-21 16:31:36,694 Node[0] Epoch[1] Batch [80-100]	Speed: 78486.28 samples/sec	accuracy=nan
2023-03-21 16:31:37,523 Node[0] Epoch[1] Batch [100-120]	Speed: 78693.92 samples/sec	accuracy=nan
2023-03-21 16:31:38,351 Node[0] Epoch[1] Batch [120-140]	Speed: 78864.96 samples/sec	accuracy=nan
2023-03-21 16:31:39,180 Node[0] Epoch[1] Batch [140-160]	Speed: 78757.30 samples/sec	accuracy=nan
2023-03-21 16:31:40,008 Node[0] Epoch[1] Batch [160-180]	Speed: 78889.59 samples/sec	accuracy=nan
2023-03-21 16:31:40,836 Node[0] Epoch[1] Batch [180-200]	Speed: 78770.44 samples/sec	accuracy=nan
2023-03-21 16:31:41,665 Node[0] Epoch[1] Batch [200-220]	Speed: 78793.22 samples/sec	accuracy=nan
2023-03-21 16:31:42,492 Node[0] Epoch[1] Batch [220-240]	Speed: 78875.23 samples/sec	accuracy=nan
2023-03-21 16:31:43,323 Node[0] Epoch[1] Batch [240-260]	Speed: 78606.60 samples/sec	accuracy=nan
2023-03-21 16:31:44,152 Node[0] Epoch[1] Batch [260-280]	Speed: 78695.16 samples/sec	accuracy=nan
2023-03-21 16:31:44,979 Node[0] Epoch[1] Batch [280-300]	Speed: 78935.01 samples/sec	accuracy=nan
2023-03-21 16:31:45,811 Node[0] Epoch[1] Batch [300-320]	Speed: 78547.23 samples/sec	accuracy=nan
2023-03-21 16:31:46,641 Node[0] Epoch[1] Batch [320-340]	Speed: 78619.13 samples/sec	accuracy=nan
2023-03-21 16:31:47,468 Node[0] Epoch[1] Batch [340-360]	Speed: 78960.12 samples/sec	accuracy=nan
2023-03-21 16:31:48,297 Node[0] Epoch[1] Batch [360-380]	Speed: 78729.49 samples/sec	accuracy=nan
2023-03-21 16:31:48,793 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,793 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,793 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434308794, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 16:31:48,794 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,795 Node[0] Epoch[1] Time cost=16.293
2023-03-21 16:31:48,794 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,794 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434308795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78633.72613196463}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-21 16:31:48,795 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:48,795 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434308795, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 16:31:48,795 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:31:49,673 Node[0] Epoch[2] Batch [0-20]	Speed: 78062.08 samples/sec	accuracy=nan
2023-03-21 16:31:50,503 Node[0] Epoch[2] Batch [20-40]	Speed: 78613.03 samples/sec	accuracy=nan
2023-03-21 16:31:51,336 Node[0] Epoch[2] Batch [40-60]	Speed: 78335.18 samples/sec	accuracy=nan
2023-03-21 16:31:52,168 Node[0] Epoch[2] Batch [60-80]	Speed: 78526.64 samples/sec	accuracy=nan
2023-03-21 16:31:53,000 Node[0] Epoch[2] Batch [80-100]	Speed: 78428.36 samples/sec	accuracy=nan
2023-03-21 16:31:53,830 Node[0] Epoch[2] Batch [100-120]	Speed: 78607.93 samples/sec	accuracy=nan
2023-03-21 16:31:54,661 Node[0] Epoch[2] Batch [120-140]	Speed: 78553.00 samples/sec	accuracy=nan
2023-03-21 16:31:55,491 Node[0] Epoch[2] Batch [140-160]	Speed: 78687.79 samples/sec	accuracy=nan
2023-03-21 16:31:56,320 Node[0] Epoch[2] Batch [160-180]	Speed: 78760.97 samples/sec	accuracy=nan
2023-03-21 16:31:57,148 Node[0] Epoch[2] Batch [180-200]	Speed: 78788.17 samples/sec	accuracy=nan
2023-03-21 16:31:57,979 Node[0] Epoch[2] Batch [200-220]	Speed: 78624.28 samples/sec	accuracy=nan
2023-03-21 16:31:58,809 Node[0] Epoch[2] Batch [220-240]	Speed: 78585.19 samples/sec	accuracy=nan
2023-03-21 16:31:59,640 Node[0] Epoch[2] Batch [240-260]	Speed: 78633.08 samples/sec	accuracy=nan
2023-03-21 16:32:00,468 Node[0] Epoch[2] Batch [260-280]	Speed: 78839.62 samples/sec	accuracy=nan
2023-03-21 16:32:01,301 Node[0] Epoch[2] Batch [280-300]	Speed: 78360.83 samples/sec	accuracy=nan
2023-03-21 16:32:02,131 Node[0] Epoch[2] Batch [300-320]	Speed: 78593.40 samples/sec	accuracy=nan
2023-03-21 16:32:02,961 Node[0] Epoch[2] Batch [320-340]	Speed: 78665.52 samples/sec	accuracy=nan
2023-03-21 16:32:03,789 Node[0] Epoch[2] Batch [340-360]	Speed: 78812.80 samples/sec	accuracy=nan
2023-03-21 16:32:04,621 Node[0] Epoch[2] Batch [360-380]	Speed: 78485.69 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434325077, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 16:32:05,078 Node[0] Epoch[2] Time cost=16.283
:::MLLOG {"namespace": "", "time_ms": 1679434325078, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78683.62565978718}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-21 16:32:05,114 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,114 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434325115, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 16:32:05,115 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,115 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:05,116 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,403 Node[0] Epoch[2] Validation-accuracy=0.326504
2023-03-21 16:32:06,403 Node[0] Epoch[2] Validation-correct-count=510.000000
2023-03-21 16:32:06,403 Node[0] Epoch[2] Validation-total-count=1562.000000
2023-03-21 16:32:06,417 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434326417, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679434326417, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.33876, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 16:32:06,417 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434326417, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 16:32:06,417 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434326417, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 16:32:06,417 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434326417, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 16:32:06,417 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:06,417 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:07,251 Node[0] Epoch[3] Batch [0-20]	Speed: 78783.04 samples/sec	accuracy=nan
2023-03-21 16:32:08,083 Node[0] Epoch[3] Batch [20-40]	Speed: 78486.84 samples/sec	accuracy=nan
2023-03-21 16:32:08,914 Node[0] Epoch[3] Batch [40-60]	Speed: 78574.05 samples/sec	accuracy=nan
2023-03-21 16:32:09,746 Node[0] Epoch[3] Batch [60-80]	Speed: 78393.92 samples/sec	accuracy=nan
2023-03-21 16:32:10,585 Node[0] Epoch[3] Batch [80-100]	Speed: 77867.08 samples/sec	accuracy=nan
2023-03-21 16:32:11,416 Node[0] Epoch[3] Batch [100-120]	Speed: 78516.12 samples/sec	accuracy=nan
2023-03-21 16:32:12,247 Node[0] Epoch[3] Batch [120-140]	Speed: 78518.64 samples/sec	accuracy=nan
2023-03-21 16:32:13,079 Node[0] Epoch[3] Batch [140-160]	Speed: 78479.53 samples/sec	accuracy=nan
2023-03-21 16:32:13,907 Node[0] Epoch[3] Batch [160-180]	Speed: 78853.52 samples/sec	accuracy=nan
2023-03-21 16:32:14,735 Node[0] Epoch[3] Batch [180-200]	Speed: 78824.00 samples/sec	accuracy=nan
2023-03-21 16:32:15,567 Node[0] Epoch[3] Batch [200-220]	Speed: 78445.82 samples/sec	accuracy=nan
2023-03-21 16:32:16,397 Node[0] Epoch[3] Batch [220-240]	Speed: 78674.00 samples/sec	accuracy=nan
2023-03-21 16:32:17,229 Node[0] Epoch[3] Batch [240-260]	Speed: 78498.56 samples/sec	accuracy=nan
2023-03-21 16:32:18,057 Node[0] Epoch[3] Batch [260-280]	Speed: 78863.51 samples/sec	accuracy=nan
2023-03-21 16:32:18,888 Node[0] Epoch[3] Batch [280-300]	Speed: 78501.40 samples/sec	accuracy=nan
2023-03-21 16:32:19,722 Node[0] Epoch[3] Batch [300-320]	Speed: 78243.31 samples/sec	accuracy=nan
2023-03-21 16:32:20,555 Node[0] Epoch[3] Batch [320-340]	Speed: 78442.48 samples/sec	accuracy=nan
2023-03-21 16:32:21,384 Node[0] Epoch[3] Batch [340-360]	Speed: 78718.08 samples/sec	accuracy=nan
2023-03-21 16:32:22,215 Node[0] Epoch[3] Batch [360-380]	Speed: 78583.45 samples/sec	accuracy=nan
2023-03-21 16:32:22,713 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,713 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434342714, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 16:32:22,714 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[0] Epoch[3] Time cost=16.297
2023-03-21 16:32:22,714 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434342714, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78615.17590100745}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-21 16:32:22,714 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434342714, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 16:32:22,715 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:22,714 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:23,589 Node[0] Epoch[4] Batch [0-20]	Speed: 78314.52 samples/sec	accuracy=nan
2023-03-21 16:32:24,422 Node[0] Epoch[4] Batch [20-40]	Speed: 78434.34 samples/sec	accuracy=nan
2023-03-21 16:32:25,252 Node[0] Epoch[4] Batch [40-60]	Speed: 78595.30 samples/sec	accuracy=nan
2023-03-21 16:32:26,085 Node[0] Epoch[4] Batch [60-80]	Speed: 78416.08 samples/sec	accuracy=nan
2023-03-21 16:32:26,916 Node[0] Epoch[4] Batch [80-100]	Speed: 78512.56 samples/sec	accuracy=nan
2023-03-21 16:32:27,748 Node[0] Epoch[4] Batch [100-120]	Speed: 78509.03 samples/sec	accuracy=nan
2023-03-21 16:32:28,582 Node[0] Epoch[4] Batch [120-140]	Speed: 78200.85 samples/sec	accuracy=nan
2023-03-21 16:32:29,414 Node[0] Epoch[4] Batch [140-160]	Speed: 78491.56 samples/sec	accuracy=nan
2023-03-21 16:32:30,245 Node[0] Epoch[4] Batch [160-180]	Speed: 78584.60 samples/sec	accuracy=nan
2023-03-21 16:32:31,074 Node[0] Epoch[4] Batch [180-200]	Speed: 78753.63 samples/sec	accuracy=nan
2023-03-21 16:32:31,902 Node[0] Epoch[4] Batch [200-220]	Speed: 78792.41 samples/sec	accuracy=nan
2023-03-21 16:32:32,733 Node[0] Epoch[4] Batch [220-240]	Speed: 78610.39 samples/sec	accuracy=nan
2023-03-21 16:32:33,562 Node[0] Epoch[4] Batch [240-260]	Speed: 78747.29 samples/sec	accuracy=nan
2023-03-21 16:32:34,391 Node[0] Epoch[4] Batch [260-280]	Speed: 78668.26 samples/sec	accuracy=nan
2023-03-21 16:32:35,223 Node[0] Epoch[4] Batch [280-300]	Speed: 78515.47 samples/sec	accuracy=nan
2023-03-21 16:32:36,055 Node[0] Epoch[4] Batch [300-320]	Speed: 78486.01 samples/sec	accuracy=nan
2023-03-21 16:32:36,887 Node[0] Epoch[4] Batch [320-340]	Speed: 78445.58 samples/sec	accuracy=nan
2023-03-21 16:32:37,717 Node[0] Epoch[4] Batch [340-360]	Speed: 78591.98 samples/sec	accuracy=nan
2023-03-21 16:32:38,550 Node[0] Epoch[4] Batch [360-380]	Speed: 78371.64 samples/sec	accuracy=nan
2023-03-21 16:32:39,006 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,006 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434359007, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 16:32:39,007 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[0] Epoch[4] Time cost=16.293
2023-03-21 16:32:39,007 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434359007, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78633.77561095075}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 16:32:39,007 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434359008, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 16:32:39,007 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,008 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,008 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,007 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:39,880 Node[0] Epoch[5] Batch [0-20]	Speed: 78694.42 samples/sec	accuracy=nan
2023-03-21 16:32:40,714 Node[0] Epoch[5] Batch [20-40]	Speed: 78283.40 samples/sec	accuracy=nan
2023-03-21 16:32:41,546 Node[0] Epoch[5] Batch [40-60]	Speed: 78394.05 samples/sec	accuracy=nan
2023-03-21 16:32:42,379 Node[0] Epoch[5] Batch [60-80]	Speed: 78415.56 samples/sec	accuracy=nan
2023-03-21 16:32:43,211 Node[0] Epoch[5] Batch [80-100]	Speed: 78479.01 samples/sec	accuracy=nan
2023-03-21 16:32:44,047 Node[0] Epoch[5] Batch [100-120]	Speed: 78047.18 samples/sec	accuracy=nan
2023-03-21 16:32:44,880 Node[0] Epoch[5] Batch [120-140]	Speed: 78397.06 samples/sec	accuracy=nan
2023-03-21 16:32:45,713 Node[0] Epoch[5] Batch [140-160]	Speed: 78389.59 samples/sec	accuracy=nan
2023-03-21 16:32:46,540 Node[0] Epoch[5] Batch [160-180]	Speed: 78888.25 samples/sec	accuracy=nan
2023-03-21 16:32:47,370 Node[0] Epoch[5] Batch [180-200]	Speed: 78650.79 samples/sec	accuracy=nan
2023-03-21 16:32:48,203 Node[0] Epoch[5] Batch [200-220]	Speed: 78366.21 samples/sec	accuracy=nan
2023-03-21 16:32:49,032 Node[0] Epoch[5] Batch [220-240]	Speed: 78784.88 samples/sec	accuracy=nan
2023-03-21 16:32:49,863 Node[0] Epoch[5] Batch [240-260]	Speed: 78565.91 samples/sec	accuracy=nan
2023-03-21 16:32:50,692 Node[0] Epoch[5] Batch [260-280]	Speed: 78693.29 samples/sec	accuracy=nan
2023-03-21 16:32:51,522 Node[0] Epoch[5] Batch [280-300]	Speed: 78701.25 samples/sec	accuracy=nan
2023-03-21 16:32:52,355 Node[0] Epoch[5] Batch [300-320]	Speed: 78365.20 samples/sec	accuracy=nan
2023-03-21 16:32:53,200 Node[0] Epoch[5] Batch [320-340]	Speed: 77199.07 samples/sec	accuracy=nan
2023-03-21 16:32:54,030 Node[0] Epoch[5] Batch [340-360]	Speed: 78675.04 samples/sec	accuracy=nan
2023-03-21 16:32:54,862 Node[0] Epoch[5] Batch [360-380]	Speed: 78439.73 samples/sec	accuracy=nan
2023-03-21 16:32:55,361 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,361 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:55,362 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434375362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 16:32:55,363 Node[0] Epoch[5] Time cost=16.355
:::MLLOG {"namespace": "", "time_ms": 1679434375363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78333.2287078773}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679434375363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 16:32:55,363 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:32:56,237 Node[0] Epoch[6] Batch [0-20]	Speed: 78393.13 samples/sec	accuracy=nan
2023-03-21 16:32:57,074 Node[0] Epoch[6] Batch [20-40]	Speed: 77965.30 samples/sec	accuracy=nan
2023-03-21 16:32:57,904 Node[0] Epoch[6] Batch [40-60]	Speed: 78655.56 samples/sec	accuracy=nan
2023-03-21 16:32:58,737 Node[0] Epoch[6] Batch [60-80]	Speed: 78399.35 samples/sec	accuracy=nan
2023-03-21 16:32:59,570 Node[0] Epoch[6] Batch [80-100]	Speed: 78401.62 samples/sec	accuracy=nan
2023-03-21 16:33:00,403 Node[0] Epoch[6] Batch [100-120]	Speed: 78306.30 samples/sec	accuracy=nan
2023-03-21 16:33:01,236 Node[0] Epoch[6] Batch [120-140]	Speed: 78359.88 samples/sec	accuracy=nan
2023-03-21 16:33:02,068 Node[0] Epoch[6] Batch [140-160]	Speed: 78522.43 samples/sec	accuracy=nan
2023-03-21 16:33:02,898 Node[0] Epoch[6] Batch [160-180]	Speed: 78613.91 samples/sec	accuracy=nan
2023-03-21 16:33:03,727 Node[0] Epoch[6] Batch [180-200]	Speed: 78729.72 samples/sec	accuracy=nan
2023-03-21 16:33:04,558 Node[0] Epoch[6] Batch [200-220]	Speed: 78606.38 samples/sec	accuracy=nan
2023-03-21 16:33:05,388 Node[0] Epoch[6] Batch [220-240]	Speed: 78651.97 samples/sec	accuracy=nan
2023-03-21 16:33:06,221 Node[0] Epoch[6] Batch [240-260]	Speed: 78301.82 samples/sec	accuracy=nan
2023-03-21 16:33:07,051 Node[0] Epoch[6] Batch [260-280]	Speed: 78658.34 samples/sec	accuracy=nan
2023-03-21 16:33:07,882 Node[0] Epoch[6] Batch [280-300]	Speed: 78568.93 samples/sec	accuracy=nan
2023-03-21 16:33:08,731 Node[0] Epoch[6] Batch [300-320]	Speed: 76873.47 samples/sec	accuracy=nan
2023-03-21 16:33:09,562 Node[0] Epoch[6] Batch [320-340]	Speed: 78545.38 samples/sec	accuracy=nan
2023-03-21 16:33:10,394 Node[0] Epoch[6] Batch [340-360]	Speed: 78458.03 samples/sec	accuracy=nan
2023-03-21 16:33:11,225 Node[0] Epoch[6] Batch [360-380]	Speed: 78641.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434391684, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 16:33:11,685 Node[0] Epoch[6] Time cost=16.321
:::MLLOG {"namespace": "", "time_ms": 1679434391685, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78496.56619063769}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679434391722, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 16:33:11,912 Node[0] Epoch[6] Validation-accuracy=0.454545
2023-03-21 16:33:11,912 Node[0] Epoch[6] Validation-correct-count=710.000000
2023-03-21 16:33:11,912 Node[0] Epoch[6] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434391934, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679434391935, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4554, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 16:33:11,935 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434391935, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-21 16:33:11,935 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434391935, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 16:33:11,935 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434391935, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 16:33:11,935 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:11,935 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:12,771 Node[0] Epoch[7] Batch [0-20]	Speed: 78543.64 samples/sec	accuracy=nan
2023-03-21 16:33:13,603 Node[0] Epoch[7] Batch [20-40]	Speed: 78496.13 samples/sec	accuracy=nan
2023-03-21 16:33:14,434 Node[0] Epoch[7] Batch [40-60]	Speed: 78587.27 samples/sec	accuracy=nan
2023-03-21 16:33:15,269 Node[0] Epoch[7] Batch [60-80]	Speed: 78117.29 samples/sec	accuracy=nan
2023-03-21 16:33:16,100 Node[0] Epoch[7] Batch [80-100]	Speed: 78614.16 samples/sec	accuracy=nan
2023-03-21 16:33:16,930 Node[0] Epoch[7] Batch [100-120]	Speed: 78675.67 samples/sec	accuracy=nan
2023-03-21 16:33:17,759 Node[0] Epoch[7] Batch [120-140]	Speed: 78717.99 samples/sec	accuracy=nan
2023-03-21 16:33:18,592 Node[0] Epoch[7] Batch [140-160]	Speed: 78340.67 samples/sec	accuracy=nan
2023-03-21 16:33:19,422 Node[0] Epoch[7] Batch [160-180]	Speed: 78667.63 samples/sec	accuracy=nan
2023-03-21 16:33:20,251 Node[0] Epoch[7] Batch [180-200]	Speed: 78725.21 samples/sec	accuracy=nan
2023-03-21 16:33:21,080 Node[0] Epoch[7] Batch [200-220]	Speed: 78734.36 samples/sec	accuracy=nan
2023-03-21 16:33:21,911 Node[0] Epoch[7] Batch [220-240]	Speed: 78563.39 samples/sec	accuracy=nan
2023-03-21 16:33:22,742 Node[0] Epoch[7] Batch [240-260]	Speed: 78603.92 samples/sec	accuracy=nan
2023-03-21 16:33:23,571 Node[0] Epoch[7] Batch [260-280]	Speed: 78693.85 samples/sec	accuracy=nan
2023-03-21 16:33:24,403 Node[0] Epoch[7] Batch [280-300]	Speed: 78525.40 samples/sec	accuracy=nan
2023-03-21 16:33:25,233 Node[0] Epoch[7] Batch [300-320]	Speed: 78651.38 samples/sec	accuracy=nan
2023-03-21 16:33:26,064 Node[0] Epoch[7] Batch [320-340]	Speed: 78480.99 samples/sec	accuracy=nan
2023-03-21 16:33:26,896 Node[0] Epoch[7] Batch [340-360]	Speed: 78491.05 samples/sec	accuracy=nan
2023-03-21 16:33:27,728 Node[0] Epoch[7] Batch [360-380]	Speed: 78421.11 samples/sec	accuracy=nan
2023-03-21 16:33:28,226 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,226 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434408227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 16:33:28,227 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:28,227 Node[0] Epoch[7] Time cost=16.292
2023-03-21 16:33:28,227 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434408227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78636.3336442873}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679434408228, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 16:33:28,228 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:29,105 Node[0] Epoch[8] Batch [0-20]	Speed: 78048.24 samples/sec	accuracy=nan
2023-03-21 16:33:29,938 Node[0] Epoch[8] Batch [20-40]	Speed: 78381.80 samples/sec	accuracy=nan
2023-03-21 16:33:30,770 Node[0] Epoch[8] Batch [40-60]	Speed: 78435.06 samples/sec	accuracy=nan
2023-03-21 16:33:31,599 Node[0] Epoch[8] Batch [60-80]	Speed: 78743.19 samples/sec	accuracy=nan
2023-03-21 16:33:32,433 Node[0] Epoch[8] Batch [80-100]	Speed: 78282.32 samples/sec	accuracy=nan
2023-03-21 16:33:33,266 Node[0] Epoch[8] Batch [100-120]	Speed: 78441.10 samples/sec	accuracy=nan
2023-03-21 16:33:34,098 Node[0] Epoch[8] Batch [120-140]	Speed: 78451.49 samples/sec	accuracy=nan
2023-03-21 16:33:34,927 Node[0] Epoch[8] Batch [140-160]	Speed: 78737.37 samples/sec	accuracy=nan
2023-03-21 16:33:35,759 Node[0] Epoch[8] Batch [160-180]	Speed: 78479.44 samples/sec	accuracy=nan
2023-03-21 16:33:36,586 Node[0] Epoch[8] Batch [180-200]	Speed: 78853.02 samples/sec	accuracy=nan
2023-03-21 16:33:37,418 Node[0] Epoch[8] Batch [200-220]	Speed: 78498.81 samples/sec	accuracy=nan
2023-03-21 16:33:38,249 Node[0] Epoch[8] Batch [220-240]	Speed: 78565.39 samples/sec	accuracy=nan
2023-03-21 16:33:39,078 Node[0] Epoch[8] Batch [240-260]	Speed: 78697.83 samples/sec	accuracy=nan
2023-03-21 16:33:39,909 Node[0] Epoch[8] Batch [260-280]	Speed: 78589.34 samples/sec	accuracy=nan
2023-03-21 16:33:40,740 Node[0] Epoch[8] Batch [280-300]	Speed: 78590.97 samples/sec	accuracy=nan
2023-03-21 16:33:41,576 Node[0] Epoch[8] Batch [300-320]	Speed: 78095.19 samples/sec	accuracy=nan
2023-03-21 16:33:42,408 Node[0] Epoch[8] Batch [320-340]	Speed: 78476.33 samples/sec	accuracy=nan
2023-03-21 16:33:43,239 Node[0] Epoch[8] Batch [340-360]	Speed: 78497.12 samples/sec	accuracy=nan
2023-03-21 16:33:44,077 Node[0] Epoch[8] Batch [360-380]	Speed: 77894.15 samples/sec	accuracy=nan
2023-03-21 16:33:44,532 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,532 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434424533, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 16:33:44,533 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[0] Epoch[8] Time cost=16.305
2023-03-21 16:33:44,533 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434424533, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78574.04576042912}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-21 16:33:44,533 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434424533, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 16:33:44,533 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:44,533 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:33:45,410 Node[0] Epoch[9] Batch [0-20]	Speed: 78375.50 samples/sec	accuracy=nan
2023-03-21 16:33:46,245 Node[0] Epoch[9] Batch [20-40]	Speed: 78153.48 samples/sec	accuracy=nan
2023-03-21 16:33:47,078 Node[0] Epoch[9] Batch [40-60]	Speed: 78376.15 samples/sec	accuracy=nan
2023-03-21 16:33:47,909 Node[0] Epoch[9] Batch [60-80]	Speed: 78555.72 samples/sec	accuracy=nan
2023-03-21 16:33:48,742 Node[0] Epoch[9] Batch [80-100]	Speed: 78335.90 samples/sec	accuracy=nan
2023-03-21 16:33:49,572 Node[0] Epoch[9] Batch [100-120]	Speed: 78627.98 samples/sec	accuracy=nan
2023-03-21 16:33:50,405 Node[0] Epoch[9] Batch [120-140]	Speed: 78444.54 samples/sec	accuracy=nan
2023-03-21 16:33:51,236 Node[0] Epoch[9] Batch [140-160]	Speed: 78524.75 samples/sec	accuracy=nan
2023-03-21 16:33:52,067 Node[0] Epoch[9] Batch [160-180]	Speed: 78503.76 samples/sec	accuracy=nan
2023-03-21 16:33:52,897 Node[0] Epoch[9] Batch [180-200]	Speed: 78711.61 samples/sec	accuracy=nan
2023-03-21 16:33:53,732 Node[0] Epoch[9] Batch [200-220]	Speed: 78180.66 samples/sec	accuracy=nan
2023-03-21 16:33:54,563 Node[0] Epoch[9] Batch [220-240]	Speed: 78526.68 samples/sec	accuracy=nan
2023-03-21 16:33:55,393 Node[0] Epoch[9] Batch [240-260]	Speed: 78645.07 samples/sec	accuracy=nan
2023-03-21 16:33:56,221 Node[0] Epoch[9] Batch [260-280]	Speed: 78842.34 samples/sec	accuracy=nan
2023-03-21 16:33:57,052 Node[0] Epoch[9] Batch [280-300]	Speed: 78574.75 samples/sec	accuracy=nan
2023-03-21 16:33:57,884 Node[0] Epoch[9] Batch [300-320]	Speed: 78496.00 samples/sec	accuracy=nan
2023-03-21 16:33:58,718 Node[0] Epoch[9] Batch [320-340]	Speed: 78243.49 samples/sec	accuracy=nan
2023-03-21 16:33:59,548 Node[0] Epoch[9] Batch [340-360]	Speed: 78618.77 samples/sec	accuracy=nan
2023-03-21 16:34:00,379 Node[0] Epoch[9] Batch [360-380]	Speed: 78550.49 samples/sec	accuracy=nan
2023-03-21 16:34:00,875 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,875 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434440876, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 16:34:00,876 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:00,876 Node[0] Epoch[9] Time cost=16.343
2023-03-21 16:34:00,876 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434440877, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78392.17886521772}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 16:34:00,876 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434440877, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 16:34:00,877 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:01,749 Node[0] Epoch[10] Batch [0-20]	Speed: 78555.84 samples/sec	accuracy=nan
2023-03-21 16:34:02,588 Node[0] Epoch[10] Batch [20-40]	Speed: 77807.64 samples/sec	accuracy=nan
2023-03-21 16:34:03,423 Node[0] Epoch[10] Batch [40-60]	Speed: 78145.28 samples/sec	accuracy=nan
2023-03-21 16:34:04,257 Node[0] Epoch[10] Batch [60-80]	Speed: 78345.11 samples/sec	accuracy=nan
2023-03-21 16:34:05,088 Node[0] Epoch[10] Batch [80-100]	Speed: 78533.93 samples/sec	accuracy=nan
2023-03-21 16:34:05,923 Node[0] Epoch[10] Batch [100-120]	Speed: 78138.32 samples/sec	accuracy=nan
2023-03-21 16:34:06,756 Node[0] Epoch[10] Batch [120-140]	Speed: 78373.61 samples/sec	accuracy=nan
2023-03-21 16:34:07,586 Node[0] Epoch[10] Batch [140-160]	Speed: 78621.34 samples/sec	accuracy=nan
2023-03-21 16:34:08,417 Node[0] Epoch[10] Batch [160-180]	Speed: 78604.16 samples/sec	accuracy=nan
2023-03-21 16:34:09,245 Node[0] Epoch[10] Batch [180-200]	Speed: 78843.41 samples/sec	accuracy=nan
2023-03-21 16:34:10,074 Node[0] Epoch[10] Batch [200-220]	Speed: 78716.54 samples/sec	accuracy=nan
2023-03-21 16:34:10,906 Node[0] Epoch[10] Batch [220-240]	Speed: 78524.75 samples/sec	accuracy=nan
2023-03-21 16:34:11,737 Node[0] Epoch[10] Batch [240-260]	Speed: 78499.85 samples/sec	accuracy=nan
2023-03-21 16:34:12,568 Node[0] Epoch[10] Batch [260-280]	Speed: 78604.62 samples/sec	accuracy=nan
2023-03-21 16:34:13,405 Node[0] Epoch[10] Batch [280-300]	Speed: 78005.60 samples/sec	accuracy=nan
2023-03-21 16:34:14,240 Node[0] Epoch[10] Batch [300-320]	Speed: 78174.46 samples/sec	accuracy=nan
2023-03-21 16:34:15,071 Node[0] Epoch[10] Batch [320-340]	Speed: 78475.93 samples/sec	accuracy=nan
2023-03-21 16:34:15,901 Node[0] Epoch[10] Batch [340-360]	Speed: 78720.84 samples/sec	accuracy=nan
2023-03-21 16:34:16,735 Node[0] Epoch[10] Batch [360-380]	Speed: 78270.35 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434457191, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 16:34:17,192 Node[0] Epoch[10] Time cost=16.315
:::MLLOG {"namespace": "", "time_ms": 1679434457192, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78526.6294350522}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679434457230, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 16:34:17,419 Node[0] Epoch[10] Validation-accuracy=0.542894
2023-03-21 16:34:17,419 Node[0] Epoch[10] Validation-correct-count=848.000000
2023-03-21 16:34:17,419 Node[0] Epoch[10] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434457442, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679434457443, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53066, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 16:34:17,443 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,443 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434457443, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 16:34:17,442 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,443 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434457443, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 16:34:17,442 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,443 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434457443, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 16:34:17,442 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,443 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:17,442 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:18,276 Node[0] Epoch[11] Batch [0-20]	Speed: 78804.18 samples/sec	accuracy=nan
2023-03-21 16:34:19,109 Node[0] Epoch[11] Batch [20-40]	Speed: 78424.43 samples/sec	accuracy=nan
2023-03-21 16:34:19,940 Node[0] Epoch[11] Batch [40-60]	Speed: 78533.66 samples/sec	accuracy=nan
2023-03-21 16:34:20,771 Node[0] Epoch[11] Batch [60-80]	Speed: 78580.30 samples/sec	accuracy=nan
2023-03-21 16:34:21,604 Node[0] Epoch[11] Batch [80-100]	Speed: 78344.57 samples/sec	accuracy=nan
2023-03-21 16:34:22,436 Node[0] Epoch[11] Batch [100-120]	Speed: 78433.44 samples/sec	accuracy=nan
2023-03-21 16:34:23,268 Node[0] Epoch[11] Batch [120-140]	Speed: 78458.10 samples/sec	accuracy=nan
2023-03-21 16:34:24,101 Node[0] Epoch[11] Batch [140-160]	Speed: 78393.60 samples/sec	accuracy=nan
2023-03-21 16:34:24,935 Node[0] Epoch[11] Batch [160-180]	Speed: 78323.30 samples/sec	accuracy=nan
2023-03-21 16:34:25,764 Node[0] Epoch[11] Batch [180-200]	Speed: 78712.86 samples/sec	accuracy=nan
2023-03-21 16:34:26,595 Node[0] Epoch[11] Batch [200-220]	Speed: 78566.97 samples/sec	accuracy=nan
2023-03-21 16:34:27,426 Node[0] Epoch[11] Batch [220-240]	Speed: 78494.33 samples/sec	accuracy=nan
2023-03-21 16:34:28,258 Node[0] Epoch[11] Batch [240-260]	Speed: 78463.92 samples/sec	accuracy=nan
2023-03-21 16:34:29,091 Node[0] Epoch[11] Batch [260-280]	Speed: 78436.05 samples/sec	accuracy=nan
2023-03-21 16:34:29,921 Node[0] Epoch[11] Batch [280-300]	Speed: 78596.20 samples/sec	accuracy=nan
2023-03-21 16:34:30,754 Node[0] Epoch[11] Batch [300-320]	Speed: 78401.62 samples/sec	accuracy=nan
2023-03-21 16:34:31,584 Node[0] Epoch[11] Batch [320-340]	Speed: 78603.42 samples/sec	accuracy=nan
2023-03-21 16:34:32,414 Node[0] Epoch[11] Batch [340-360]	Speed: 78711.61 samples/sec	accuracy=nan
2023-03-21 16:34:33,246 Node[0] Epoch[11] Batch [360-380]	Speed: 78414.01 samples/sec	accuracy=nan
2023-03-21 16:34:33,746 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,746 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434473747, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 16:34:33,747 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[0] Epoch[11] Time cost=16.304
2023-03-21 16:34:33,747 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434473747, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78580.1734680354}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 16:34:33,747 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434473747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 16:34:33,747 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:33,747 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:34,622 Node[0] Epoch[12] Batch [0-20]	Speed: 78365.40 samples/sec	accuracy=nan
2023-03-21 16:34:35,455 Node[0] Epoch[12] Batch [20-40]	Speed: 78344.55 samples/sec	accuracy=nan
2023-03-21 16:34:36,288 Node[0] Epoch[12] Batch [40-60]	Speed: 78341.92 samples/sec	accuracy=nan
2023-03-21 16:34:37,121 Node[0] Epoch[12] Batch [60-80]	Speed: 78410.42 samples/sec	accuracy=nan
2023-03-21 16:34:37,954 Node[0] Epoch[12] Batch [80-100]	Speed: 78352.39 samples/sec	accuracy=nan
2023-03-21 16:34:38,785 Node[0] Epoch[12] Batch [100-120]	Speed: 78553.11 samples/sec	accuracy=nan
2023-03-21 16:34:39,618 Node[0] Epoch[12] Batch [120-140]	Speed: 78325.68 samples/sec	accuracy=nan
2023-03-21 16:34:40,448 Node[0] Epoch[12] Batch [140-160]	Speed: 78644.28 samples/sec	accuracy=nan
2023-03-21 16:34:41,282 Node[0] Epoch[12] Batch [160-180]	Speed: 78344.91 samples/sec	accuracy=nan
2023-03-21 16:34:42,112 Node[0] Epoch[12] Batch [180-200]	Speed: 78610.05 samples/sec	accuracy=nan
2023-03-21 16:34:42,942 Node[0] Epoch[12] Batch [200-220]	Speed: 78639.00 samples/sec	accuracy=nan
2023-03-21 16:34:43,772 Node[0] Epoch[12] Batch [220-240]	Speed: 78684.78 samples/sec	accuracy=nan
2023-03-21 16:34:44,603 Node[0] Epoch[12] Batch [240-260]	Speed: 78524.86 samples/sec	accuracy=nan
2023-03-21 16:34:45,434 Node[0] Epoch[12] Batch [260-280]	Speed: 78620.05 samples/sec	accuracy=nan
2023-03-21 16:34:46,263 Node[0] Epoch[12] Batch [280-300]	Speed: 78744.82 samples/sec	accuracy=nan
2023-03-21 16:34:47,097 Node[0] Epoch[12] Batch [300-320]	Speed: 78254.02 samples/sec	accuracy=nan
2023-03-21 16:34:47,930 Node[0] Epoch[12] Batch [320-340]	Speed: 78312.95 samples/sec	accuracy=nan
2023-03-21 16:34:48,763 Node[0] Epoch[12] Batch [340-360]	Speed: 78425.47 samples/sec	accuracy=nan
2023-03-21 16:34:49,593 Node[0] Epoch[12] Batch [360-380]	Speed: 78611.52 samples/sec	accuracy=nan
2023-03-21 16:34:50,052 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,052 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434490053, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 16:34:50,053 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[0] Epoch[12] Time cost=16.306
2023-03-21 16:34:50,053 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434490053, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78570.65657082612}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 16:34:50,053 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434490054, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 16:34:50,053 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,054 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,053 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:34:50,929 Node[0] Epoch[13] Batch [0-20]	Speed: 78491.70 samples/sec	accuracy=nan
2023-03-21 16:34:51,761 Node[0] Epoch[13] Batch [20-40]	Speed: 78458.12 samples/sec	accuracy=nan
2023-03-21 16:34:52,595 Node[0] Epoch[13] Batch [40-60]	Speed: 78277.15 samples/sec	accuracy=nan
2023-03-21 16:34:53,428 Node[0] Epoch[13] Batch [60-80]	Speed: 78356.99 samples/sec	accuracy=nan
2023-03-21 16:34:54,260 Node[0] Epoch[13] Batch [80-100]	Speed: 78437.67 samples/sec	accuracy=nan
2023-03-21 16:34:55,093 Node[0] Epoch[13] Batch [100-120]	Speed: 78382.20 samples/sec	accuracy=nan
2023-03-21 16:34:55,923 Node[0] Epoch[13] Batch [120-140]	Speed: 78646.95 samples/sec	accuracy=nan
2023-03-21 16:34:56,753 Node[0] Epoch[13] Batch [140-160]	Speed: 78635.52 samples/sec	accuracy=nan
2023-03-21 16:34:57,583 Node[0] Epoch[13] Batch [160-180]	Speed: 78624.09 samples/sec	accuracy=nan
2023-03-21 16:34:58,416 Node[0] Epoch[13] Batch [180-200]	Speed: 78446.70 samples/sec	accuracy=nan
2023-03-21 16:34:59,247 Node[0] Epoch[13] Batch [200-220]	Speed: 78551.67 samples/sec	accuracy=nan
2023-03-21 16:35:00,076 Node[0] Epoch[13] Batch [220-240]	Speed: 78727.05 samples/sec	accuracy=nan
2023-03-21 16:35:00,909 Node[0] Epoch[13] Batch [240-260]	Speed: 78384.67 samples/sec	accuracy=nan
2023-03-21 16:35:01,740 Node[0] Epoch[13] Batch [260-280]	Speed: 78546.08 samples/sec	accuracy=nan
2023-03-21 16:35:02,572 Node[0] Epoch[13] Batch [280-300]	Speed: 78409.05 samples/sec	accuracy=nan
2023-03-21 16:35:03,406 Node[0] Epoch[13] Batch [300-320]	Speed: 78310.65 samples/sec	accuracy=nan
2023-03-21 16:35:04,237 Node[0] Epoch[13] Batch [320-340]	Speed: 78571.71 samples/sec	accuracy=nan
2023-03-21 16:35:05,069 Node[0] Epoch[13] Batch [340-360]	Speed: 78425.47 samples/sec	accuracy=nan
2023-03-21 16:35:05,900 Node[0] Epoch[13] Batch [360-380]	Speed: 78528.60 samples/sec	accuracy=nan
2023-03-21 16:35:06,398 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,398 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,398 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,398 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,398 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,399 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,400 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,400 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:06,400 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434506399, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 16:35:06,400 Node[0] Epoch[13] Time cost=16.346
:::MLLOG {"namespace": "", "time_ms": 1679434506400, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78375.90631583099}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679434506400, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 16:35:06,401 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:07,274 Node[0] Epoch[14] Batch [0-20]	Speed: 78402.52 samples/sec	accuracy=nan
2023-03-21 16:35:08,113 Node[0] Epoch[14] Batch [20-40]	Speed: 77828.83 samples/sec	accuracy=nan
2023-03-21 16:35:08,943 Node[0] Epoch[14] Batch [40-60]	Speed: 78620.37 samples/sec	accuracy=nan
2023-03-21 16:35:09,781 Node[0] Epoch[14] Batch [60-80]	Speed: 77866.86 samples/sec	accuracy=nan
2023-03-21 16:35:10,616 Node[0] Epoch[14] Batch [80-100]	Speed: 78211.53 samples/sec	accuracy=nan
2023-03-21 16:35:11,449 Node[0] Epoch[14] Batch [100-120]	Speed: 78358.34 samples/sec	accuracy=nan
2023-03-21 16:35:12,282 Node[0] Epoch[14] Batch [120-140]	Speed: 78416.86 samples/sec	accuracy=nan
2023-03-21 16:35:13,113 Node[0] Epoch[14] Batch [140-160]	Speed: 78556.87 samples/sec	accuracy=nan
2023-03-21 16:35:13,943 Node[0] Epoch[14] Batch [160-180]	Speed: 78571.68 samples/sec	accuracy=nan
2023-03-21 16:35:14,774 Node[0] Epoch[14] Batch [180-200]	Speed: 78636.76 samples/sec	accuracy=nan
2023-03-21 16:35:15,604 Node[0] Epoch[14] Batch [200-220]	Speed: 78638.55 samples/sec	accuracy=nan
2023-03-21 16:35:16,433 Node[0] Epoch[14] Batch [220-240]	Speed: 78688.11 samples/sec	accuracy=nan
2023-03-21 16:35:17,264 Node[0] Epoch[14] Batch [240-260]	Speed: 78618.45 samples/sec	accuracy=nan
2023-03-21 16:35:18,093 Node[0] Epoch[14] Batch [260-280]	Speed: 78705.86 samples/sec	accuracy=nan
2023-03-21 16:35:18,925 Node[0] Epoch[14] Batch [280-300]	Speed: 78481.31 samples/sec	accuracy=nan
2023-03-21 16:35:19,757 Node[0] Epoch[14] Batch [300-320]	Speed: 78445.37 samples/sec	accuracy=nan
2023-03-21 16:35:20,591 Node[0] Epoch[14] Batch [320-340]	Speed: 78273.59 samples/sec	accuracy=nan
2023-03-21 16:35:21,422 Node[0] Epoch[14] Batch [340-360]	Speed: 78535.47 samples/sec	accuracy=nan
2023-03-21 16:35:22,253 Node[0] Epoch[14] Batch [360-380]	Speed: 78570.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434522708, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 16:35:22,709 Node[0] Epoch[14] Time cost=16.309
:::MLLOG {"namespace": "", "time_ms": 1679434522709, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78557.37491499163}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679434522747, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 16:35:22,936 Node[0] Epoch[14] Validation-accuracy=0.603713
2023-03-21 16:35:22,936 Node[0] Epoch[14] Validation-correct-count=943.000000
2023-03-21 16:35:22,936 Node[0] Epoch[14] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434522960, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679434522960, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59174, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-21 16:35:22,960 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434522960, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 16:35:22,960 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434522960, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 16:35:22,960 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434522961, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 16:35:22,960 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,960 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:22,961 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:23,798 Node[0] Epoch[15] Batch [0-20]	Speed: 78438.52 samples/sec	accuracy=nan
2023-03-21 16:35:24,631 Node[0] Epoch[15] Batch [20-40]	Speed: 78373.99 samples/sec	accuracy=nan
2023-03-21 16:35:25,465 Node[0] Epoch[15] Batch [40-60]	Speed: 78270.95 samples/sec	accuracy=nan
2023-03-21 16:35:26,299 Node[0] Epoch[15] Batch [60-80]	Speed: 78254.36 samples/sec	accuracy=nan
2023-03-21 16:35:27,132 Node[0] Epoch[15] Batch [80-100]	Speed: 78371.46 samples/sec	accuracy=nan
2023-03-21 16:35:27,969 Node[0] Epoch[15] Batch [100-120]	Speed: 78038.63 samples/sec	accuracy=nan
2023-03-21 16:35:28,802 Node[0] Epoch[15] Batch [120-140]	Speed: 78348.83 samples/sec	accuracy=nan
2023-03-21 16:35:29,633 Node[0] Epoch[15] Batch [140-160]	Speed: 78582.66 samples/sec	accuracy=nan
2023-03-21 16:35:30,462 Node[0] Epoch[15] Batch [160-180]	Speed: 78686.46 samples/sec	accuracy=nan
2023-03-21 16:35:31,299 Node[0] Epoch[15] Batch [180-200]	Speed: 78017.15 samples/sec	accuracy=nan
2023-03-21 16:35:32,147 Node[0] Epoch[15] Batch [200-220]	Speed: 76929.37 samples/sec	accuracy=nan
2023-03-21 16:35:32,982 Node[0] Epoch[15] Batch [220-240]	Speed: 78257.29 samples/sec	accuracy=nan
2023-03-21 16:35:33,811 Node[0] Epoch[15] Batch [240-260]	Speed: 78741.33 samples/sec	accuracy=nan
2023-03-21 16:35:34,641 Node[0] Epoch[15] Batch [260-280]	Speed: 78628.23 samples/sec	accuracy=nan
2023-03-21 16:35:35,474 Node[0] Epoch[15] Batch [280-300]	Speed: 78323.93 samples/sec	accuracy=nan
2023-03-21 16:35:36,308 Node[0] Epoch[15] Batch [300-320]	Speed: 78326.84 samples/sec	accuracy=nan
2023-03-21 16:35:37,138 Node[0] Epoch[15] Batch [320-340]	Speed: 78604.62 samples/sec	accuracy=nan
2023-03-21 16:35:37,972 Node[0] Epoch[15] Batch [340-360]	Speed: 78328.77 samples/sec	accuracy=nan
2023-03-21 16:35:38,807 Node[0] Epoch[15] Batch [360-380]	Speed: 78105.51 samples/sec	accuracy=nan
2023-03-21 16:35:39,306 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,306 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434539307, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 16:35:39,307 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,308 Node[0] Epoch[15] Time cost=16.347
2023-03-21 16:35:39,307 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,307 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434539308, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78373.1274404969}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 16:35:39,308 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,308 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:39,308 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434539308, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 16:35:39,308 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:40,181 Node[0] Epoch[16] Batch [0-20]	Speed: 78501.44 samples/sec	accuracy=nan
2023-03-21 16:35:41,011 Node[0] Epoch[16] Batch [20-40]	Speed: 78629.76 samples/sec	accuracy=nan
2023-03-21 16:35:41,843 Node[0] Epoch[16] Batch [40-60]	Speed: 78480.05 samples/sec	accuracy=nan
2023-03-21 16:35:42,676 Node[0] Epoch[16] Batch [60-80]	Speed: 78368.65 samples/sec	accuracy=nan
2023-03-21 16:35:43,510 Node[0] Epoch[16] Batch [80-100]	Speed: 78308.05 samples/sec	accuracy=nan
2023-03-21 16:35:44,343 Node[0] Epoch[16] Batch [100-120]	Speed: 78340.13 samples/sec	accuracy=nan
2023-03-21 16:35:45,174 Node[0] Epoch[16] Batch [120-140]	Speed: 78537.22 samples/sec	accuracy=nan
2023-03-21 16:35:46,003 Node[0] Epoch[16] Batch [140-160]	Speed: 78698.44 samples/sec	accuracy=nan
2023-03-21 16:35:46,836 Node[0] Epoch[16] Batch [160-180]	Speed: 78386.42 samples/sec	accuracy=nan
2023-03-21 16:35:47,664 Node[0] Epoch[16] Batch [180-200]	Speed: 78891.73 samples/sec	accuracy=nan
2023-03-21 16:35:48,496 Node[0] Epoch[16] Batch [200-220]	Speed: 78440.32 samples/sec	accuracy=nan
2023-03-21 16:35:49,327 Node[0] Epoch[16] Batch [220-240]	Speed: 78546.37 samples/sec	accuracy=nan
2023-03-21 16:35:50,159 Node[0] Epoch[16] Batch [240-260]	Speed: 78436.72 samples/sec	accuracy=nan
2023-03-21 16:35:50,994 Node[0] Epoch[16] Batch [260-280]	Speed: 78263.71 samples/sec	accuracy=nan
2023-03-21 16:35:51,823 Node[0] Epoch[16] Batch [280-300]	Speed: 78648.08 samples/sec	accuracy=nan
2023-03-21 16:35:52,659 Node[0] Epoch[16] Batch [300-320]	Speed: 78105.11 samples/sec	accuracy=nan
2023-03-21 16:35:53,491 Node[0] Epoch[16] Batch [320-340]	Speed: 78466.69 samples/sec	accuracy=nan
2023-03-21 16:35:54,321 Node[0] Epoch[16] Batch [340-360]	Speed: 78633.85 samples/sec	accuracy=nan
2023-03-21 16:35:55,154 Node[0] Epoch[16] Batch [360-380]	Speed: 78448.34 samples/sec	accuracy=nan
2023-03-21 16:35:55,611 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,611 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434555611, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 16:35:55,612 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[0] Epoch[16] Time cost=16.304
:::MLLOG {"namespace": "", "time_ms": 1679434555612, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78580.84110464087}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-21 16:35:55,612 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:55,612 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434555612, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 16:35:55,612 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:35:56,488 Node[0] Epoch[17] Batch [0-20]	Speed: 78405.61 samples/sec	accuracy=nan
2023-03-21 16:35:57,319 Node[0] Epoch[17] Batch [20-40]	Speed: 78551.98 samples/sec	accuracy=nan
2023-03-21 16:35:58,151 Node[0] Epoch[17] Batch [40-60]	Speed: 78479.84 samples/sec	accuracy=nan
2023-03-21 16:35:58,986 Node[0] Epoch[17] Batch [60-80]	Speed: 78212.60 samples/sec	accuracy=nan
2023-03-21 16:35:59,820 Node[0] Epoch[17] Batch [80-100]	Speed: 78239.93 samples/sec	accuracy=nan
2023-03-21 16:36:00,654 Node[0] Epoch[17] Batch [100-120]	Speed: 78254.09 samples/sec	accuracy=nan
2023-03-21 16:36:01,486 Node[0] Epoch[17] Batch [120-140]	Speed: 78486.77 samples/sec	accuracy=nan
2023-03-21 16:36:02,317 Node[0] Epoch[17] Batch [140-160]	Speed: 78532.27 samples/sec	accuracy=nan
2023-03-21 16:36:03,146 Node[0] Epoch[17] Batch [160-180]	Speed: 78726.91 samples/sec	accuracy=nan
2023-03-21 16:36:03,977 Node[0] Epoch[17] Batch [180-200]	Speed: 78612.49 samples/sec	accuracy=nan
2023-03-21 16:36:04,808 Node[0] Epoch[17] Batch [200-220]	Speed: 78572.07 samples/sec	accuracy=nan
2023-03-21 16:36:05,640 Node[0] Epoch[17] Batch [220-240]	Speed: 78450.77 samples/sec	accuracy=nan
2023-03-21 16:36:06,470 Node[0] Epoch[17] Batch [240-260]	Speed: 78578.90 samples/sec	accuracy=nan
2023-03-21 16:36:07,300 Node[0] Epoch[17] Batch [260-280]	Speed: 78696.07 samples/sec	accuracy=nan
2023-03-21 16:36:08,133 Node[0] Epoch[17] Batch [280-300]	Speed: 78318.64 samples/sec	accuracy=nan
2023-03-21 16:36:08,965 Node[0] Epoch[17] Batch [300-320]	Speed: 78529.18 samples/sec	accuracy=nan
2023-03-21 16:36:09,798 Node[0] Epoch[17] Batch [320-340]	Speed: 78375.94 samples/sec	accuracy=nan
2023-03-21 16:36:10,628 Node[0] Epoch[17] Batch [340-360]	Speed: 78629.99 samples/sec	accuracy=nan
2023-03-21 16:36:11,463 Node[0] Epoch[17] Batch [360-380]	Speed: 78135.73 samples/sec	accuracy=nan
2023-03-21 16:36:11,962 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,962 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:11,963 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434571962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 16:36:11,963 Node[0] Epoch[17] Time cost=16.351
:::MLLOG {"namespace": "", "time_ms": 1679434571963, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78353.66826189523}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679434571964, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 16:36:11,964 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:12,836 Node[0] Epoch[18] Batch [0-20]	Speed: 78512.45 samples/sec	accuracy=nan
2023-03-21 16:36:13,667 Node[0] Epoch[18] Batch [20-40]	Speed: 78539.86 samples/sec	accuracy=nan
2023-03-21 16:36:14,500 Node[0] Epoch[18] Batch [40-60]	Speed: 78380.32 samples/sec	accuracy=nan
2023-03-21 16:36:15,333 Node[0] Epoch[18] Batch [60-80]	Speed: 78356.86 samples/sec	accuracy=nan
2023-03-21 16:36:16,166 Node[0] Epoch[18] Batch [80-100]	Speed: 78385.64 samples/sec	accuracy=nan
2023-03-21 16:36:16,997 Node[0] Epoch[18] Batch [100-120]	Speed: 78509.77 samples/sec	accuracy=nan
2023-03-21 16:36:17,826 Node[0] Epoch[18] Batch [120-140]	Speed: 78702.61 samples/sec	accuracy=nan
2023-03-21 16:36:18,657 Node[0] Epoch[18] Batch [140-160]	Speed: 78562.46 samples/sec	accuracy=nan
2023-03-21 16:36:19,489 Node[0] Epoch[18] Batch [160-180]	Speed: 78545.42 samples/sec	accuracy=nan
2023-03-21 16:36:20,319 Node[0] Epoch[18] Batch [180-200]	Speed: 78632.90 samples/sec	accuracy=nan
2023-03-21 16:36:21,153 Node[0] Epoch[18] Batch [200-220]	Speed: 78259.39 samples/sec	accuracy=nan
2023-03-21 16:36:21,984 Node[0] Epoch[18] Batch [220-240]	Speed: 78569.27 samples/sec	accuracy=nan
2023-03-21 16:36:22,815 Node[0] Epoch[18] Batch [240-260]	Speed: 78529.54 samples/sec	accuracy=nan
2023-03-21 16:36:23,645 Node[0] Epoch[18] Batch [260-280]	Speed: 78685.37 samples/sec	accuracy=nan
2023-03-21 16:36:24,480 Node[0] Epoch[18] Batch [280-300]	Speed: 78118.14 samples/sec	accuracy=nan
2023-03-21 16:36:25,313 Node[0] Epoch[18] Batch [300-320]	Speed: 78407.12 samples/sec	accuracy=nan
2023-03-21 16:36:26,143 Node[0] Epoch[18] Batch [320-340]	Speed: 78594.98 samples/sec	accuracy=nan
2023-03-21 16:36:26,973 Node[0] Epoch[18] Batch [340-360]	Speed: 78737.23 samples/sec	accuracy=nan
2023-03-21 16:36:27,806 Node[0] Epoch[18] Batch [360-380]	Speed: 78326.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434588262, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 16:36:28,263 Node[0] Epoch[18] Time cost=16.299
:::MLLOG {"namespace": "", "time_ms": 1679434588263, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78603.8360997687}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679434588301, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 16:36:28,490 Node[0] Epoch[18] Validation-accuracy=0.656210
2023-03-21 16:36:28,490 Node[0] Epoch[18] Validation-correct-count=1025.000000
2023-03-21 16:36:28,490 Node[0] Epoch[18] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434588513, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679434588513, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6565, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 16:36:28,513 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434588513, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679434588514, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 16:36:28,513 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434588514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 16:36:28,513 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,514 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:28,513 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:29,350 Node[0] Epoch[19] Batch [0-20]	Speed: 78480.47 samples/sec	accuracy=nan
2023-03-21 16:36:30,182 Node[0] Epoch[19] Batch [20-40]	Speed: 78471.45 samples/sec	accuracy=nan
2023-03-21 16:36:31,017 Node[0] Epoch[19] Batch [40-60]	Speed: 78178.99 samples/sec	accuracy=nan
2023-03-21 16:36:31,851 Node[0] Epoch[19] Batch [60-80]	Speed: 78301.37 samples/sec	accuracy=nan
2023-03-21 16:36:32,689 Node[0] Epoch[19] Batch [80-100]	Speed: 77934.12 samples/sec	accuracy=nan
2023-03-21 16:36:33,520 Node[0] Epoch[19] Batch [100-120]	Speed: 78514.12 samples/sec	accuracy=nan
2023-03-21 16:36:34,353 Node[0] Epoch[19] Batch [120-140]	Speed: 78409.90 samples/sec	accuracy=nan
2023-03-21 16:36:35,185 Node[0] Epoch[19] Batch [140-160]	Speed: 78393.76 samples/sec	accuracy=nan
2023-03-21 16:36:36,018 Node[0] Epoch[19] Batch [160-180]	Speed: 78384.92 samples/sec	accuracy=nan
2023-03-21 16:36:36,851 Node[0] Epoch[19] Batch [180-200]	Speed: 78429.02 samples/sec	accuracy=nan
2023-03-21 16:36:37,680 Node[0] Epoch[19] Batch [200-220]	Speed: 78660.01 samples/sec	accuracy=nan
2023-03-21 16:36:38,513 Node[0] Epoch[19] Batch [220-240]	Speed: 78424.93 samples/sec	accuracy=nan
2023-03-21 16:36:39,344 Node[0] Epoch[19] Batch [240-260]	Speed: 78534.18 samples/sec	accuracy=nan
2023-03-21 16:36:40,174 Node[0] Epoch[19] Batch [260-280]	Speed: 78658.11 samples/sec	accuracy=nan
2023-03-21 16:36:41,005 Node[0] Epoch[19] Batch [280-300]	Speed: 78587.49 samples/sec	accuracy=nan
2023-03-21 16:36:41,837 Node[0] Epoch[19] Batch [300-320]	Speed: 78452.30 samples/sec	accuracy=nan
2023-03-21 16:36:42,670 Node[0] Epoch[19] Batch [320-340]	Speed: 78350.82 samples/sec	accuracy=nan
2023-03-21 16:36:43,501 Node[0] Epoch[19] Batch [340-360]	Speed: 78512.41 samples/sec	accuracy=nan
2023-03-21 16:36:44,336 Node[0] Epoch[19] Batch [360-380]	Speed: 78168.41 samples/sec	accuracy=nan
2023-03-21 16:36:44,833 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,833 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,833 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,833 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,833 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434604834, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 16:36:44,834 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[0] Epoch[19] Time cost=16.321
2023-03-21 16:36:44,834 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434604834, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78500.03843875433}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-21 16:36:44,834 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434604835, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 16:36:44,834 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,835 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:44,834 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:36:45,716 Node[0] Epoch[20] Batch [0-20]	Speed: 77738.21 samples/sec	accuracy=nan
2023-03-21 16:36:46,548 Node[0] Epoch[20] Batch [20-40]	Speed: 78415.58 samples/sec	accuracy=nan
2023-03-21 16:36:47,381 Node[0] Epoch[20] Batch [40-60]	Speed: 78355.65 samples/sec	accuracy=nan
2023-03-21 16:36:48,213 Node[0] Epoch[20] Batch [60-80]	Speed: 78451.98 samples/sec	accuracy=nan
2023-03-21 16:36:49,044 Node[0] Epoch[20] Batch [80-100]	Speed: 78544.52 samples/sec	accuracy=nan
2023-03-21 16:36:49,879 Node[0] Epoch[20] Batch [100-120]	Speed: 78211.88 samples/sec	accuracy=nan
2023-03-21 16:36:50,712 Node[0] Epoch[20] Batch [120-140]	Speed: 78376.64 samples/sec	accuracy=nan
2023-03-21 16:36:51,545 Node[0] Epoch[20] Batch [140-160]	Speed: 78365.56 samples/sec	accuracy=nan
2023-03-21 16:36:52,375 Node[0] Epoch[20] Batch [160-180]	Speed: 78645.89 samples/sec	accuracy=nan
2023-03-21 16:36:53,203 Node[0] Epoch[20] Batch [180-200]	Speed: 78822.44 samples/sec	accuracy=nan
2023-03-21 16:36:54,036 Node[0] Epoch[20] Batch [200-220]	Speed: 78435.49 samples/sec	accuracy=nan
2023-03-21 16:36:54,868 Node[0] Epoch[20] Batch [220-240]	Speed: 78447.51 samples/sec	accuracy=nan
2023-03-21 16:36:55,698 Node[0] Epoch[20] Batch [240-260]	Speed: 78584.49 samples/sec	accuracy=nan
2023-03-21 16:36:56,529 Node[0] Epoch[20] Batch [260-280]	Speed: 78637.82 samples/sec	accuracy=nan
2023-03-21 16:36:57,363 Node[0] Epoch[20] Batch [280-300]	Speed: 78249.19 samples/sec	accuracy=nan
2023-03-21 16:36:58,197 Node[0] Epoch[20] Batch [300-320]	Speed: 78232.94 samples/sec	accuracy=nan
2023-03-21 16:36:59,029 Node[0] Epoch[20] Batch [320-340]	Speed: 78479.17 samples/sec	accuracy=nan
2023-03-21 16:36:59,858 Node[0] Epoch[20] Batch [340-360]	Speed: 78721.95 samples/sec	accuracy=nan
2023-03-21 16:37:00,691 Node[0] Epoch[20] Batch [360-380]	Speed: 78354.97 samples/sec	accuracy=nan
2023-03-21 16:37:01,146 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,146 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434621147, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 16:37:01,147 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[0] Epoch[20] Time cost=16.312
2023-03-21 16:37:01,147 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434621147, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78540.03155992732}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 16:37:01,147 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434621147, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 16:37:01,147 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:01,147 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:02,021 Node[0] Epoch[21] Batch [0-20]	Speed: 78580.91 samples/sec	accuracy=nan
2023-03-21 16:37:02,855 Node[0] Epoch[21] Batch [20-40]	Speed: 78207.48 samples/sec	accuracy=nan
2023-03-21 16:37:03,690 Node[0] Epoch[21] Batch [40-60]	Speed: 78205.63 samples/sec	accuracy=nan
2023-03-21 16:37:04,523 Node[0] Epoch[21] Batch [60-80]	Speed: 78343.94 samples/sec	accuracy=nan
2023-03-21 16:37:05,356 Node[0] Epoch[21] Batch [80-100]	Speed: 78422.55 samples/sec	accuracy=nan
2023-03-21 16:37:06,188 Node[0] Epoch[21] Batch [100-120]	Speed: 78444.36 samples/sec	accuracy=nan
2023-03-21 16:37:07,023 Node[0] Epoch[21] Batch [120-140]	Speed: 78195.51 samples/sec	accuracy=nan
2023-03-21 16:37:07,854 Node[0] Epoch[21] Batch [140-160]	Speed: 78496.09 samples/sec	accuracy=nan
2023-03-21 16:37:08,689 Node[0] Epoch[21] Batch [160-180]	Speed: 78261.80 samples/sec	accuracy=nan
2023-03-21 16:37:09,517 Node[0] Epoch[21] Batch [180-200]	Speed: 78759.79 samples/sec	accuracy=nan
2023-03-21 16:37:10,347 Node[0] Epoch[21] Batch [200-220]	Speed: 78648.06 samples/sec	accuracy=nan
2023-03-21 16:37:11,180 Node[0] Epoch[21] Batch [220-240]	Speed: 78417.67 samples/sec	accuracy=nan
2023-03-21 16:37:12,010 Node[0] Epoch[21] Batch [240-260]	Speed: 78628.27 samples/sec	accuracy=nan
2023-03-21 16:37:12,842 Node[0] Epoch[21] Batch [260-280]	Speed: 78472.89 samples/sec	accuracy=nan
2023-03-21 16:37:13,671 Node[0] Epoch[21] Batch [280-300]	Speed: 78773.41 samples/sec	accuracy=nan
2023-03-21 16:37:14,502 Node[0] Epoch[21] Batch [300-320]	Speed: 78491.16 samples/sec	accuracy=nan
2023-03-21 16:37:15,333 Node[0] Epoch[21] Batch [320-340]	Speed: 78553.78 samples/sec	accuracy=nan
2023-03-21 16:37:16,167 Node[0] Epoch[21] Batch [340-360]	Speed: 78321.04 samples/sec	accuracy=nan
2023-03-21 16:37:17,000 Node[0] Epoch[21] Batch [360-380]	Speed: 78328.48 samples/sec	accuracy=nan
2023-03-21 16:37:17,497 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,497 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:17,498 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434637498, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 16:37:17,499 Node[0] Epoch[21] Time cost=16.351
2023-03-21 16:37:17,498 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434637499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78353.74595140161}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679434637499, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 16:37:17,499 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:18,374 Node[0] Epoch[22] Batch [0-20]	Speed: 78378.88 samples/sec	accuracy=nan
2023-03-21 16:37:19,207 Node[0] Epoch[22] Batch [20-40]	Speed: 78327.63 samples/sec	accuracy=nan
2023-03-21 16:37:20,041 Node[0] Epoch[22] Batch [40-60]	Speed: 78340.04 samples/sec	accuracy=nan
2023-03-21 16:37:20,874 Node[0] Epoch[22] Batch [60-80]	Speed: 78317.75 samples/sec	accuracy=nan
2023-03-21 16:37:21,705 Node[0] Epoch[22] Batch [80-100]	Speed: 78519.72 samples/sec	accuracy=nan
2023-03-21 16:37:22,541 Node[0] Epoch[22] Batch [100-120]	Speed: 78129.26 samples/sec	accuracy=nan
2023-03-21 16:37:23,375 Node[0] Epoch[22] Batch [120-140]	Speed: 78258.16 samples/sec	accuracy=nan
2023-03-21 16:37:24,208 Node[0] Epoch[22] Batch [140-160]	Speed: 78426.95 samples/sec	accuracy=nan
2023-03-21 16:37:25,037 Node[0] Epoch[22] Batch [160-180]	Speed: 78736.03 samples/sec	accuracy=nan
2023-03-21 16:37:25,868 Node[0] Epoch[22] Batch [180-200]	Speed: 78483.31 samples/sec	accuracy=nan
2023-03-21 16:37:26,699 Node[0] Epoch[22] Batch [200-220]	Speed: 78570.17 samples/sec	accuracy=nan
2023-03-21 16:37:27,533 Node[0] Epoch[22] Batch [220-240]	Speed: 78332.20 samples/sec	accuracy=nan
2023-03-21 16:37:28,363 Node[0] Epoch[22] Batch [240-260]	Speed: 78641.48 samples/sec	accuracy=nan
2023-03-21 16:37:29,195 Node[0] Epoch[22] Batch [260-280]	Speed: 78439.31 samples/sec	accuracy=nan
2023-03-21 16:37:30,026 Node[0] Epoch[22] Batch [280-300]	Speed: 78550.02 samples/sec	accuracy=nan
2023-03-21 16:37:30,858 Node[0] Epoch[22] Batch [300-320]	Speed: 78439.76 samples/sec	accuracy=nan
2023-03-21 16:37:31,690 Node[0] Epoch[22] Batch [320-340]	Speed: 78532.85 samples/sec	accuracy=nan
2023-03-21 16:37:32,521 Node[0] Epoch[22] Batch [340-360]	Speed: 78500.18 samples/sec	accuracy=nan
2023-03-21 16:37:33,352 Node[0] Epoch[22] Batch [360-380]	Speed: 78530.53 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434653808, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 16:37:33,809 Node[0] Epoch[22] Time cost=16.310
:::MLLOG {"namespace": "", "time_ms": 1679434653809, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78551.06244807888}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679434653847, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 16:37:34,036 Node[0] Epoch[22] Validation-accuracy=0.693342
2023-03-21 16:37:34,036 Node[0] Epoch[22] Validation-correct-count=1083.000000
2023-03-21 16:37:34,036 Node[0] Epoch[22] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434654059, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679434654059, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69198, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 16:37:34,059 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434654059, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-21 16:37:34,059 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434654059, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 16:37:34,059 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434654060, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 16:37:34,059 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,060 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,059 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:34,895 Node[0] Epoch[23] Batch [0-20]	Speed: 78656.60 samples/sec	accuracy=nan
2023-03-21 16:37:35,729 Node[0] Epoch[23] Batch [20-40]	Speed: 78287.65 samples/sec	accuracy=nan
2023-03-21 16:37:36,561 Node[0] Epoch[23] Batch [40-60]	Speed: 78403.66 samples/sec	accuracy=nan
2023-03-21 16:37:37,395 Node[0] Epoch[23] Batch [60-80]	Speed: 78281.32 samples/sec	accuracy=nan
2023-03-21 16:37:38,233 Node[0] Epoch[23] Batch [80-100]	Speed: 77872.75 samples/sec	accuracy=nan
2023-03-21 16:37:39,065 Node[0] Epoch[23] Batch [100-120]	Speed: 78518.76 samples/sec	accuracy=nan
2023-03-21 16:37:39,899 Node[0] Epoch[23] Batch [120-140]	Speed: 78251.07 samples/sec	accuracy=nan
2023-03-21 16:37:40,731 Node[0] Epoch[23] Batch [140-160]	Speed: 78483.28 samples/sec	accuracy=nan
2023-03-21 16:37:41,560 Node[0] Epoch[23] Batch [160-180]	Speed: 78694.92 samples/sec	accuracy=nan
2023-03-21 16:37:42,391 Node[0] Epoch[23] Batch [180-200]	Speed: 78625.36 samples/sec	accuracy=nan
2023-03-21 16:37:43,221 Node[0] Epoch[23] Batch [200-220]	Speed: 78632.07 samples/sec	accuracy=nan
2023-03-21 16:37:44,052 Node[0] Epoch[23] Batch [220-240]	Speed: 78573.35 samples/sec	accuracy=nan
2023-03-21 16:37:44,882 Node[0] Epoch[23] Batch [240-260]	Speed: 78565.30 samples/sec	accuracy=nan
2023-03-21 16:37:45,714 Node[0] Epoch[23] Batch [260-280]	Speed: 78498.36 samples/sec	accuracy=nan
2023-03-21 16:37:46,546 Node[0] Epoch[23] Batch [280-300]	Speed: 78501.33 samples/sec	accuracy=nan
2023-03-21 16:37:47,376 Node[0] Epoch[23] Batch [300-320]	Speed: 78580.39 samples/sec	accuracy=nan
2023-03-21 16:37:48,216 Node[0] Epoch[23] Batch [320-340]	Speed: 77782.60 samples/sec	accuracy=nan
2023-03-21 16:37:49,048 Node[0] Epoch[23] Batch [340-360]	Speed: 78446.23 samples/sec	accuracy=nan
2023-03-21 16:37:49,878 Node[0] Epoch[23] Batch [360-380]	Speed: 78600.91 samples/sec	accuracy=nan
2023-03-21 16:37:50,377 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,377 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434670378, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 16:37:50,378 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:50,378 Node[0] Epoch[23] Time cost=16.319
2023-03-21 16:37:50,378 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434670378, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78508.86263359379}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679434670379, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 16:37:50,379 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:37:51,253 Node[0] Epoch[24] Batch [0-20]	Speed: 78357.64 samples/sec	accuracy=nan
2023-03-21 16:37:52,085 Node[0] Epoch[24] Batch [20-40]	Speed: 78480.70 samples/sec	accuracy=nan
2023-03-21 16:37:52,920 Node[0] Epoch[24] Batch [40-60]	Speed: 78165.24 samples/sec	accuracy=nan
2023-03-21 16:37:53,753 Node[0] Epoch[24] Batch [60-80]	Speed: 78384.54 samples/sec	accuracy=nan
2023-03-21 16:37:54,588 Node[0] Epoch[24] Batch [80-100]	Speed: 78123.78 samples/sec	accuracy=nan
2023-03-21 16:37:55,422 Node[0] Epoch[24] Batch [100-120]	Speed: 78301.13 samples/sec	accuracy=nan
2023-03-21 16:37:56,257 Node[0] Epoch[24] Batch [120-140]	Speed: 78131.07 samples/sec	accuracy=nan
2023-03-21 16:37:57,088 Node[0] Epoch[24] Batch [140-160]	Speed: 78640.26 samples/sec	accuracy=nan
2023-03-21 16:37:57,919 Node[0] Epoch[24] Batch [160-180]	Speed: 78556.44 samples/sec	accuracy=nan
2023-03-21 16:37:58,751 Node[0] Epoch[24] Batch [180-200]	Speed: 78435.89 samples/sec	accuracy=nan
2023-03-21 16:37:59,581 Node[0] Epoch[24] Batch [200-220]	Speed: 78605.18 samples/sec	accuracy=nan
2023-03-21 16:38:00,417 Node[0] Epoch[24] Batch [220-240]	Speed: 78105.69 samples/sec	accuracy=nan
2023-03-21 16:38:01,248 Node[0] Epoch[24] Batch [240-260]	Speed: 78593.38 samples/sec	accuracy=nan
2023-03-21 16:38:02,078 Node[0] Epoch[24] Batch [260-280]	Speed: 78619.92 samples/sec	accuracy=nan
2023-03-21 16:38:02,910 Node[0] Epoch[24] Batch [280-300]	Speed: 78443.10 samples/sec	accuracy=nan
2023-03-21 16:38:03,745 Node[0] Epoch[24] Batch [300-320]	Speed: 78177.20 samples/sec	accuracy=nan
2023-03-21 16:38:04,579 Node[0] Epoch[24] Batch [320-340]	Speed: 78330.16 samples/sec	accuracy=nan
2023-03-21 16:38:05,411 Node[0] Epoch[24] Batch [340-360]	Speed: 78463.25 samples/sec	accuracy=nan
2023-03-21 16:38:06,242 Node[0] Epoch[24] Batch [360-380]	Speed: 78527.79 samples/sec	accuracy=nan
2023-03-21 16:38:06,699 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,699 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:06,700 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434686701, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 16:38:06,701 Node[0] Epoch[24] Time cost=16.322
:::MLLOG {"namespace": "", "time_ms": 1679434686701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78491.72527945165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679434686701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 16:38:06,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:07,578 Node[0] Epoch[25] Batch [0-20]	Speed: 78304.24 samples/sec	accuracy=nan
2023-03-21 16:38:08,411 Node[0] Epoch[25] Batch [20-40]	Speed: 78338.58 samples/sec	accuracy=nan
2023-03-21 16:38:09,243 Node[0] Epoch[25] Batch [40-60]	Speed: 78480.88 samples/sec	accuracy=nan
2023-03-21 16:38:10,076 Node[0] Epoch[25] Batch [60-80]	Speed: 78317.12 samples/sec	accuracy=nan
2023-03-21 16:38:10,907 Node[0] Epoch[25] Batch [80-100]	Speed: 78529.63 samples/sec	accuracy=nan
2023-03-21 16:38:11,739 Node[0] Epoch[25] Batch [100-120]	Speed: 78504.55 samples/sec	accuracy=nan
2023-03-21 16:38:12,573 Node[0] Epoch[25] Batch [120-140]	Speed: 78246.22 samples/sec	accuracy=nan
2023-03-21 16:38:13,405 Node[0] Epoch[25] Batch [140-160]	Speed: 78479.71 samples/sec	accuracy=nan
2023-03-21 16:38:14,235 Node[0] Epoch[25] Batch [160-180]	Speed: 78610.19 samples/sec	accuracy=nan
2023-03-21 16:38:15,065 Node[0] Epoch[25] Batch [180-200]	Speed: 78675.67 samples/sec	accuracy=nan
2023-03-21 16:38:15,898 Node[0] Epoch[25] Batch [200-220]	Speed: 78361.77 samples/sec	accuracy=nan
2023-03-21 16:38:16,731 Node[0] Epoch[25] Batch [220-240]	Speed: 78390.51 samples/sec	accuracy=nan
2023-03-21 16:38:17,562 Node[0] Epoch[25] Batch [240-260]	Speed: 78577.86 samples/sec	accuracy=nan
2023-03-21 16:38:18,395 Node[0] Epoch[25] Batch [260-280]	Speed: 78368.81 samples/sec	accuracy=nan
2023-03-21 16:38:19,228 Node[0] Epoch[25] Batch [280-300]	Speed: 78306.01 samples/sec	accuracy=nan
2023-03-21 16:38:20,062 Node[0] Epoch[25] Batch [300-320]	Speed: 78293.27 samples/sec	accuracy=nan
2023-03-21 16:38:20,894 Node[0] Epoch[25] Batch [320-340]	Speed: 78501.80 samples/sec	accuracy=nan
2023-03-21 16:38:21,725 Node[0] Epoch[25] Batch [340-360]	Speed: 78561.63 samples/sec	accuracy=nan
2023-03-21 16:38:22,558 Node[0] Epoch[25] Batch [360-380]	Speed: 78321.33 samples/sec	accuracy=nan
2023-03-21 16:38:23,055 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,055 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,056 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434703056, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 16:38:23,057 Node[0] Epoch[25] Time cost=16.355
:::MLLOG {"namespace": "", "time_ms": 1679434703057, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78334.23244698773}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679434703057, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 16:38:23,057 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:23,938 Node[0] Epoch[26] Batch [0-20]	Speed: 77761.64 samples/sec	accuracy=nan
2023-03-21 16:38:24,768 Node[0] Epoch[26] Batch [20-40]	Speed: 78620.46 samples/sec	accuracy=nan
2023-03-21 16:38:25,601 Node[0] Epoch[26] Batch [40-60]	Speed: 78377.65 samples/sec	accuracy=nan
2023-03-21 16:38:26,435 Node[0] Epoch[26] Batch [60-80]	Speed: 78280.89 samples/sec	accuracy=nan
2023-03-21 16:38:27,268 Node[0] Epoch[26] Batch [80-100]	Speed: 78338.58 samples/sec	accuracy=nan
2023-03-21 16:38:28,103 Node[0] Epoch[26] Batch [100-120]	Speed: 78204.47 samples/sec	accuracy=nan
2023-03-21 16:38:28,938 Node[0] Epoch[26] Batch [120-140]	Speed: 78196.96 samples/sec	accuracy=nan
2023-03-21 16:38:29,770 Node[0] Epoch[26] Batch [140-160]	Speed: 78415.29 samples/sec	accuracy=nan
2023-03-21 16:38:30,599 Node[0] Epoch[26] Batch [160-180]	Speed: 78746.16 samples/sec	accuracy=nan
2023-03-21 16:38:31,430 Node[0] Epoch[26] Batch [180-200]	Speed: 78584.36 samples/sec	accuracy=nan
2023-03-21 16:38:32,263 Node[0] Epoch[26] Batch [200-220]	Speed: 78428.95 samples/sec	accuracy=nan
2023-03-21 16:38:33,094 Node[0] Epoch[26] Batch [220-240]	Speed: 78475.05 samples/sec	accuracy=nan
2023-03-21 16:38:33,924 Node[0] Epoch[26] Batch [240-260]	Speed: 78713.96 samples/sec	accuracy=nan
2023-03-21 16:38:34,755 Node[0] Epoch[26] Batch [260-280]	Speed: 78542.65 samples/sec	accuracy=nan
2023-03-21 16:38:35,589 Node[0] Epoch[26] Batch [280-300]	Speed: 78276.57 samples/sec	accuracy=nan
2023-03-21 16:38:36,422 Node[0] Epoch[26] Batch [300-320]	Speed: 78374.40 samples/sec	accuracy=nan
2023-03-21 16:38:37,253 Node[0] Epoch[26] Batch [320-340]	Speed: 78572.92 samples/sec	accuracy=nan
2023-03-21 16:38:38,084 Node[0] Epoch[26] Batch [340-360]	Speed: 78534.48 samples/sec	accuracy=nan
2023-03-21 16:38:38,915 Node[0] Epoch[26] Batch [360-380]	Speed: 78519.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434719413, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 16:38:39,413 Node[0] Epoch[26] Time cost=16.356
:::MLLOG {"namespace": "", "time_ms": 1679434719413, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78328.73560635086}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679434719451, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 16:38:39,640 Node[0] Epoch[26] Validation-accuracy=0.746479
2023-03-21 16:38:39,640 Node[0] Epoch[26] Validation-correct-count=1166.000000
2023-03-21 16:38:39,640 Node[0] Epoch[26] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434719663, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679434719663, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73312, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 16:38:39,663 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434719663, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 16:38:39,663 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434719663, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 16:38:39,663 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434719663, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 16:38:39,663 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:39,663 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:40,503 Node[0] Epoch[27] Batch [0-20]	Speed: 78220.44 samples/sec	accuracy=nan
2023-03-21 16:38:41,336 Node[0] Epoch[27] Batch [20-40]	Speed: 78344.05 samples/sec	accuracy=nan
2023-03-21 16:38:42,171 Node[0] Epoch[27] Batch [40-60]	Speed: 78171.80 samples/sec	accuracy=nan
2023-03-21 16:38:43,003 Node[0] Epoch[27] Batch [60-80]	Speed: 78473.57 samples/sec	accuracy=nan
2023-03-21 16:38:43,837 Node[0] Epoch[27] Batch [80-100]	Speed: 78310.26 samples/sec	accuracy=nan
2023-03-21 16:38:44,672 Node[0] Epoch[27] Batch [100-120]	Speed: 78162.59 samples/sec	accuracy=nan
2023-03-21 16:38:45,505 Node[0] Epoch[27] Batch [120-140]	Speed: 78386.76 samples/sec	accuracy=nan
2023-03-21 16:38:46,339 Node[0] Epoch[27] Batch [140-160]	Speed: 78268.54 samples/sec	accuracy=nan
2023-03-21 16:38:47,173 Node[0] Epoch[27] Batch [160-180]	Speed: 78272.99 samples/sec	accuracy=nan
2023-03-21 16:38:48,002 Node[0] Epoch[27] Batch [180-200]	Speed: 78710.30 samples/sec	accuracy=nan
2023-03-21 16:38:48,833 Node[0] Epoch[27] Batch [200-220]	Speed: 78561.72 samples/sec	accuracy=nan
2023-03-21 16:38:49,663 Node[0] Epoch[27] Batch [220-240]	Speed: 78711.52 samples/sec	accuracy=nan
2023-03-21 16:38:50,498 Node[0] Epoch[27] Batch [240-260]	Speed: 78106.55 samples/sec	accuracy=nan
2023-03-21 16:38:51,329 Node[0] Epoch[27] Batch [260-280]	Speed: 78561.13 samples/sec	accuracy=nan
2023-03-21 16:38:52,161 Node[0] Epoch[27] Batch [280-300]	Speed: 78537.49 samples/sec	accuracy=nan
2023-03-21 16:38:53,005 Node[0] Epoch[27] Batch [300-320]	Speed: 77270.24 samples/sec	accuracy=nan
2023-03-21 16:38:53,838 Node[0] Epoch[27] Batch [320-340]	Speed: 78424.10 samples/sec	accuracy=nan
2023-03-21 16:38:54,668 Node[0] Epoch[27] Batch [340-360]	Speed: 78589.86 samples/sec	accuracy=nan
2023-03-21 16:38:55,503 Node[0] Epoch[27] Batch [360-380]	Speed: 78184.44 samples/sec	accuracy=nan
2023-03-21 16:38:55,960 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,960 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,960 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434735961, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 16:38:55,961 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[0] Epoch[27] Time cost=16.298
2023-03-21 16:38:55,961 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434735962, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78608.72074841136}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-21 16:38:55,961 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,962 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,961 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434735962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 16:38:55,962 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,962 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,962 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:55,962 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:38:56,837 Node[0] Epoch[28] Batch [0-20]	Speed: 78302.96 samples/sec	accuracy=nan
2023-03-21 16:38:57,674 Node[0] Epoch[28] Batch [20-40]	Speed: 78014.93 samples/sec	accuracy=nan
2023-03-21 16:38:58,507 Node[0] Epoch[28] Batch [40-60]	Speed: 78336.19 samples/sec	accuracy=nan
2023-03-21 16:38:59,342 Node[0] Epoch[28] Batch [60-80]	Speed: 78131.74 samples/sec	accuracy=nan
2023-03-21 16:39:00,180 Node[0] Epoch[28] Batch [80-100]	Speed: 77983.89 samples/sec	accuracy=nan
2023-03-21 16:39:01,012 Node[0] Epoch[28] Batch [100-120]	Speed: 78443.64 samples/sec	accuracy=nan
2023-03-21 16:39:01,844 Node[0] Epoch[28] Batch [120-140]	Speed: 78452.77 samples/sec	accuracy=nan
2023-03-21 16:39:02,678 Node[0] Epoch[28] Batch [140-160]	Speed: 78265.65 samples/sec	accuracy=nan
2023-03-21 16:39:03,508 Node[0] Epoch[28] Batch [160-180]	Speed: 78647.15 samples/sec	accuracy=nan
2023-03-21 16:39:04,338 Node[0] Epoch[28] Batch [180-200]	Speed: 78639.61 samples/sec	accuracy=nan
2023-03-21 16:39:05,171 Node[0] Epoch[28] Batch [200-220]	Speed: 78355.74 samples/sec	accuracy=nan
2023-03-21 16:39:06,002 Node[0] Epoch[28] Batch [220-240]	Speed: 78544.52 samples/sec	accuracy=nan
2023-03-21 16:39:06,832 Node[0] Epoch[28] Batch [240-260]	Speed: 78636.65 samples/sec	accuracy=nan
2023-03-21 16:39:07,665 Node[0] Epoch[28] Batch [260-280]	Speed: 78410.37 samples/sec	accuracy=nan
2023-03-21 16:39:10,666 Node[0] Epoch[28] Batch [280-300]	Speed: 21756.55 samples/sec	accuracy=nan
2023-03-21 16:39:11,495 Node[0] Epoch[28] Batch [300-320]	Speed: 78719.28 samples/sec	accuracy=nan
2023-03-21 16:39:12,330 Node[0] Epoch[28] Batch [320-340]	Speed: 78124.34 samples/sec	accuracy=nan
2023-03-21 16:39:13,159 Node[0] Epoch[28] Batch [340-360]	Speed: 78743.44 samples/sec	accuracy=nan
2023-03-21 16:39:13,991 Node[0] Epoch[28] Batch [360-380]	Speed: 78450.25 samples/sec	accuracy=nan
2023-03-21 16:39:14,491 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,491 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434754491, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 16:39:14,492 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[0] Epoch[28] Time cost=18.530
2023-03-21 16:39:14,492 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434754492, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 69139.9697350474}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 16:39:14,492 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434754492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 16:39:14,492 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:14,492 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:15,365 Node[0] Epoch[29] Batch [0-20]	Speed: 78545.97 samples/sec	accuracy=nan
2023-03-21 16:39:16,195 Node[0] Epoch[29] Batch [20-40]	Speed: 78588.19 samples/sec	accuracy=nan
2023-03-21 16:39:17,029 Node[0] Epoch[29] Batch [40-60]	Speed: 78323.77 samples/sec	accuracy=nan
2023-03-21 16:39:17,865 Node[0] Epoch[29] Batch [60-80]	Speed: 78043.04 samples/sec	accuracy=nan
2023-03-21 16:39:18,698 Node[0] Epoch[29] Batch [80-100]	Speed: 78373.57 samples/sec	accuracy=nan
2023-03-21 16:39:19,535 Node[0] Epoch[29] Batch [100-120]	Speed: 78056.99 samples/sec	accuracy=nan
2023-03-21 16:39:20,367 Node[0] Epoch[29] Batch [120-140]	Speed: 78455.69 samples/sec	accuracy=nan
2023-03-21 16:39:21,197 Node[0] Epoch[29] Batch [140-160]	Speed: 78621.45 samples/sec	accuracy=nan
2023-03-21 16:39:22,027 Node[0] Epoch[29] Batch [160-180]	Speed: 78678.20 samples/sec	accuracy=nan
2023-03-21 16:39:22,857 Node[0] Epoch[29] Batch [180-200]	Speed: 78585.33 samples/sec	accuracy=nan
2023-03-21 16:39:23,690 Node[0] Epoch[29] Batch [200-220]	Speed: 78386.56 samples/sec	accuracy=nan
2023-03-21 16:39:24,522 Node[0] Epoch[29] Batch [220-240]	Speed: 78464.62 samples/sec	accuracy=nan
2023-03-21 16:39:25,353 Node[0] Epoch[29] Batch [240-260]	Speed: 78571.57 samples/sec	accuracy=nan
2023-03-21 16:39:26,183 Node[0] Epoch[29] Batch [260-280]	Speed: 78636.70 samples/sec	accuracy=nan
2023-03-21 16:39:27,017 Node[0] Epoch[29] Batch [280-300]	Speed: 78326.08 samples/sec	accuracy=nan
2023-03-21 16:39:27,850 Node[0] Epoch[29] Batch [300-320]	Speed: 78363.56 samples/sec	accuracy=nan
2023-03-21 16:39:28,679 Node[0] Epoch[29] Batch [320-340]	Speed: 78677.91 samples/sec	accuracy=nan
2023-03-21 16:39:29,511 Node[0] Epoch[29] Batch [340-360]	Speed: 78445.78 samples/sec	accuracy=nan
2023-03-21 16:39:30,345 Node[0] Epoch[29] Batch [360-380]	Speed: 78340.60 samples/sec	accuracy=nan
2023-03-21 16:39:30,802 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,802 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,802 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,802 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,803 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434770803, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 16:39:30,804 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:30,804 Node[0] Epoch[29] Time cost=16.312
2023-03-21 16:39:30,804 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434770804, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78543.57538861582}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679434770804, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 16:39:30,804 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:31,676 Node[0] Epoch[30] Batch [0-20]	Speed: 78760.61 samples/sec	accuracy=nan
2023-03-21 16:39:32,509 Node[0] Epoch[30] Batch [20-40]	Speed: 78313.36 samples/sec	accuracy=nan
2023-03-21 16:39:33,341 Node[0] Epoch[30] Batch [40-60]	Speed: 78505.59 samples/sec	accuracy=nan
2023-03-21 16:39:34,173 Node[0] Epoch[30] Batch [60-80]	Speed: 78491.29 samples/sec	accuracy=nan
2023-03-21 16:39:35,005 Node[0] Epoch[30] Batch [80-100]	Speed: 78364.46 samples/sec	accuracy=nan
2023-03-21 16:39:35,838 Node[0] Epoch[30] Batch [100-120]	Speed: 78438.86 samples/sec	accuracy=nan
2023-03-21 16:39:36,671 Node[0] Epoch[30] Batch [120-140]	Speed: 78354.37 samples/sec	accuracy=nan
2023-03-21 16:39:37,508 Node[0] Epoch[30] Batch [140-160]	Speed: 78011.82 samples/sec	accuracy=nan
2023-03-21 16:39:38,338 Node[0] Epoch[30] Batch [160-180]	Speed: 78578.52 samples/sec	accuracy=nan
2023-03-21 16:39:39,168 Node[0] Epoch[30] Batch [180-200]	Speed: 78689.78 samples/sec	accuracy=nan
2023-03-21 16:39:39,998 Node[0] Epoch[30] Batch [200-220]	Speed: 78669.61 samples/sec	accuracy=nan
2023-03-21 16:39:43,326 Node[0] Epoch[30] Batch [220-240]	Speed: 19612.59 samples/sec	accuracy=nan
2023-03-21 16:39:44,158 Node[0] Epoch[30] Batch [240-260]	Speed: 78511.55 samples/sec	accuracy=nan
2023-03-21 16:39:44,988 Node[0] Epoch[30] Batch [260-280]	Speed: 78600.28 samples/sec	accuracy=nan
2023-03-21 16:39:45,816 Node[0] Epoch[30] Batch [280-300]	Speed: 78860.51 samples/sec	accuracy=nan
2023-03-21 16:39:46,648 Node[0] Epoch[30] Batch [300-320]	Speed: 78440.09 samples/sec	accuracy=nan
2023-03-21 16:39:47,483 Node[0] Epoch[30] Batch [320-340]	Speed: 78214.19 samples/sec	accuracy=nan
2023-03-21 16:39:48,313 Node[0] Epoch[30] Batch [340-360]	Speed: 78604.66 samples/sec	accuracy=nan
2023-03-21 16:39:49,145 Node[0] Epoch[30] Batch [360-380]	Speed: 78536.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434789644, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 16:39:49,645 Node[0] Epoch[30] Time cost=18.840
:::MLLOG {"namespace": "", "time_ms": 1679434789645, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 68001.40468265313}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679434789683, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 16:39:49,873 Node[0] Epoch[30] Validation-accuracy=0.749040
2023-03-21 16:39:49,873 Node[0] Epoch[30] Validation-correct-count=1170.000000
2023-03-21 16:39:49,873 Node[0] Epoch[30] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434789893, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679434789893, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7487, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 16:39:49,893 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434789894, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679434789894, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 16:39:49,893 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434789894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 16:39:49,893 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,893 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:49,894 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:39:50,731 Node[0] Epoch[31] Batch [0-20]	Speed: 78493.16 samples/sec	accuracy=nan
2023-03-21 16:39:51,563 Node[0] Epoch[31] Batch [20-40]	Speed: 78440.09 samples/sec	accuracy=nan
2023-03-21 16:39:52,396 Node[0] Epoch[31] Batch [40-60]	Speed: 78375.81 samples/sec	accuracy=nan
2023-03-21 16:39:53,230 Node[0] Epoch[31] Batch [60-80]	Speed: 78203.13 samples/sec	accuracy=nan
2023-03-21 16:39:54,063 Node[0] Epoch[31] Batch [80-100]	Speed: 78373.45 samples/sec	accuracy=nan
2023-03-21 16:39:54,896 Node[0] Epoch[31] Batch [100-120]	Speed: 78390.73 samples/sec	accuracy=nan
2023-03-21 16:39:55,728 Node[0] Epoch[31] Batch [120-140]	Speed: 78471.21 samples/sec	accuracy=nan
2023-03-21 16:39:56,560 Node[0] Epoch[31] Batch [140-160]	Speed: 78457.92 samples/sec	accuracy=nan
2023-03-21 16:39:57,390 Node[0] Epoch[31] Batch [160-180]	Speed: 78648.15 samples/sec	accuracy=nan
2023-03-21 16:39:58,220 Node[0] Epoch[31] Batch [180-200]	Speed: 78647.38 samples/sec	accuracy=nan
2023-03-21 16:39:59,054 Node[0] Epoch[31] Batch [200-220]	Speed: 78275.38 samples/sec	accuracy=nan
2023-03-21 16:39:59,884 Node[0] Epoch[31] Batch [220-240]	Speed: 78629.99 samples/sec	accuracy=nan
2023-03-21 16:40:00,716 Node[0] Epoch[31] Batch [240-260]	Speed: 78477.77 samples/sec	accuracy=nan
2023-03-21 16:40:01,547 Node[0] Epoch[31] Batch [260-280]	Speed: 78614.73 samples/sec	accuracy=nan
2023-03-21 16:40:02,377 Node[0] Epoch[31] Batch [280-300]	Speed: 78633.13 samples/sec	accuracy=nan
2023-03-21 16:40:03,208 Node[0] Epoch[31] Batch [300-320]	Speed: 78500.32 samples/sec	accuracy=nan
2023-03-21 16:40:04,039 Node[0] Epoch[31] Batch [320-340]	Speed: 78603.80 samples/sec	accuracy=nan
2023-03-21 16:40:04,870 Node[0] Epoch[31] Batch [340-360]	Speed: 78497.75 samples/sec	accuracy=nan
2023-03-21 16:40:05,706 Node[0] Epoch[31] Batch [360-380]	Speed: 78137.34 samples/sec	accuracy=nan
2023-03-21 16:40:06,164 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,164 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434806165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 16:40:06,165 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[0] Epoch[31] Time cost=16.271
2023-03-21 16:40:06,165 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434806165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78738.42012282721}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-21 16:40:06,165 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434806165, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 16:40:06,165 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,165 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:06,166 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:07,039 Node[0] Epoch[32] Batch [0-20]	Speed: 78459.65 samples/sec	accuracy=nan
2023-03-21 16:40:07,870 Node[0] Epoch[32] Batch [20-40]	Speed: 78480.88 samples/sec	accuracy=nan
2023-03-21 16:40:08,702 Node[0] Epoch[32] Batch [40-60]	Speed: 78508.44 samples/sec	accuracy=nan
2023-03-21 16:40:09,537 Node[0] Epoch[32] Batch [60-80]	Speed: 78199.89 samples/sec	accuracy=nan
2023-03-21 16:40:10,370 Node[0] Epoch[32] Batch [80-100]	Speed: 78322.09 samples/sec	accuracy=nan
2023-03-21 16:40:11,205 Node[0] Epoch[32] Batch [100-120]	Speed: 78221.13 samples/sec	accuracy=nan
2023-03-21 16:40:12,037 Node[0] Epoch[32] Batch [120-140]	Speed: 78470.10 samples/sec	accuracy=nan
2023-03-21 16:40:12,872 Node[0] Epoch[32] Batch [140-160]	Speed: 78186.20 samples/sec	accuracy=nan
2023-03-21 16:40:13,702 Node[0] Epoch[32] Batch [160-180]	Speed: 78657.59 samples/sec	accuracy=nan
2023-03-21 16:40:14,534 Node[0] Epoch[32] Batch [180-200]	Speed: 78416.91 samples/sec	accuracy=nan
2023-03-21 16:40:15,366 Node[0] Epoch[32] Batch [200-220]	Speed: 78440.43 samples/sec	accuracy=nan
2023-03-21 16:40:16,198 Node[0] Epoch[32] Batch [220-240]	Speed: 78525.80 samples/sec	accuracy=nan
2023-03-21 16:40:17,028 Node[0] Epoch[32] Batch [240-260]	Speed: 78568.19 samples/sec	accuracy=nan
2023-03-21 16:40:17,859 Node[0] Epoch[32] Batch [260-280]	Speed: 78561.00 samples/sec	accuracy=nan
2023-03-21 16:40:18,690 Node[0] Epoch[32] Batch [280-300]	Speed: 78583.79 samples/sec	accuracy=nan
2023-03-21 16:40:19,522 Node[0] Epoch[32] Batch [300-320]	Speed: 78425.85 samples/sec	accuracy=nan
2023-03-21 16:40:20,353 Node[0] Epoch[32] Batch [320-340]	Speed: 78584.81 samples/sec	accuracy=nan
2023-03-21 16:40:21,184 Node[0] Epoch[32] Batch [340-360]	Speed: 78560.57 samples/sec	accuracy=nan
2023-03-21 16:40:22,019 Node[0] Epoch[32] Batch [360-380]	Speed: 78171.24 samples/sec	accuracy=nan
2023-03-21 16:40:22,516 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,516 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,516 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,516 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434822517, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 16:40:22,517 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[0] Epoch[32] Time cost=16.352
2023-03-21 16:40:22,517 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434822518, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78349.37844078492}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-21 16:40:22,517 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,517 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434822518, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 16:40:22,518 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,518 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:22,518 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:23,393 Node[0] Epoch[33] Batch [0-20]	Speed: 78322.41 samples/sec	accuracy=nan
2023-03-21 16:40:24,223 Node[0] Epoch[33] Batch [20-40]	Speed: 78581.65 samples/sec	accuracy=nan
2023-03-21 16:40:25,055 Node[0] Epoch[33] Batch [40-60]	Speed: 78452.84 samples/sec	accuracy=nan
2023-03-21 16:40:25,887 Node[0] Epoch[33] Batch [60-80]	Speed: 78472.47 samples/sec	accuracy=nan
2023-03-21 16:40:26,726 Node[0] Epoch[33] Batch [80-100]	Speed: 77807.14 samples/sec	accuracy=nan
2023-03-21 16:40:27,559 Node[0] Epoch[33] Batch [100-120]	Speed: 78348.00 samples/sec	accuracy=nan
2023-03-21 16:40:28,393 Node[0] Epoch[33] Batch [120-140]	Speed: 78328.79 samples/sec	accuracy=nan
2023-03-21 16:40:29,221 Node[0] Epoch[33] Batch [140-160]	Speed: 78805.22 samples/sec	accuracy=nan
2023-03-21 16:40:30,051 Node[0] Epoch[33] Batch [160-180]	Speed: 78701.25 samples/sec	accuracy=nan
2023-03-21 16:40:30,883 Node[0] Epoch[33] Batch [180-200]	Speed: 78423.85 samples/sec	accuracy=nan
2023-03-21 16:40:31,718 Node[0] Epoch[33] Batch [200-220]	Speed: 78208.20 samples/sec	accuracy=nan
2023-03-21 16:40:32,550 Node[0] Epoch[33] Batch [220-240]	Speed: 78464.50 samples/sec	accuracy=nan
2023-03-21 16:40:33,382 Node[0] Epoch[33] Batch [240-260]	Speed: 78404.13 samples/sec	accuracy=nan
2023-03-21 16:40:34,211 Node[0] Epoch[33] Batch [260-280]	Speed: 78747.90 samples/sec	accuracy=nan
2023-03-21 16:40:35,046 Node[0] Epoch[33] Batch [280-300]	Speed: 78250.24 samples/sec	accuracy=nan
2023-03-21 16:40:35,878 Node[0] Epoch[33] Batch [300-320]	Speed: 78416.68 samples/sec	accuracy=nan
2023-03-21 16:40:36,710 Node[0] Epoch[33] Batch [320-340]	Speed: 78516.77 samples/sec	accuracy=nan
2023-03-21 16:40:37,540 Node[0] Epoch[33] Batch [340-360]	Speed: 78576.71 samples/sec	accuracy=nan
2023-03-21 16:40:38,371 Node[0] Epoch[33] Batch [360-380]	Speed: 78622.49 samples/sec	accuracy=nan
2023-03-21 16:40:38,828 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,828 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:38,829 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434838829, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 16:40:38,830 Node[0] Epoch[33] Time cost=16.312
:::MLLOG {"namespace": "", "time_ms": 1679434838830, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78542.47328906675}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-21 16:40:38,830 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434838830, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 16:40:38,830 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:40:39,702 Node[0] Epoch[34] Batch [0-20]	Speed: 78600.15 samples/sec	accuracy=nan
2023-03-21 16:40:40,535 Node[0] Epoch[34] Batch [20-40]	Speed: 78448.50 samples/sec	accuracy=nan
2023-03-21 16:40:41,369 Node[0] Epoch[34] Batch [40-60]	Speed: 78242.08 samples/sec	accuracy=nan
2023-03-21 16:40:42,200 Node[0] Epoch[34] Batch [60-80]	Speed: 78539.59 samples/sec	accuracy=nan
2023-03-21 16:40:43,034 Node[0] Epoch[34] Batch [80-100]	Speed: 78271.74 samples/sec	accuracy=nan
2023-03-21 16:40:43,869 Node[0] Epoch[34] Batch [100-120]	Speed: 78158.37 samples/sec	accuracy=nan
2023-03-21 16:40:44,704 Node[0] Epoch[34] Batch [120-140]	Speed: 78227.55 samples/sec	accuracy=nan
2023-03-21 16:40:45,537 Node[0] Epoch[34] Batch [140-160]	Speed: 78365.65 samples/sec	accuracy=nan
2023-03-21 16:40:46,369 Node[0] Epoch[34] Batch [160-180]	Speed: 78454.30 samples/sec	accuracy=nan
2023-03-21 16:40:47,201 Node[0] Epoch[34] Batch [180-200]	Speed: 78503.09 samples/sec	accuracy=nan
2023-03-21 16:40:48,030 Node[0] Epoch[34] Batch [200-220]	Speed: 78737.60 samples/sec	accuracy=nan
2023-03-21 16:40:48,861 Node[0] Epoch[34] Batch [220-240]	Speed: 78473.05 samples/sec	accuracy=nan
2023-03-21 16:40:49,692 Node[0] Epoch[34] Batch [240-260]	Speed: 78622.54 samples/sec	accuracy=nan
2023-03-21 16:40:50,523 Node[0] Epoch[34] Batch [260-280]	Speed: 78511.42 samples/sec	accuracy=nan
2023-03-21 16:40:51,356 Node[0] Epoch[34] Batch [280-300]	Speed: 78413.54 samples/sec	accuracy=nan
2023-03-21 16:40:52,189 Node[0] Epoch[34] Batch [300-320]	Speed: 78326.19 samples/sec	accuracy=nan
2023-03-21 16:40:53,023 Node[0] Epoch[34] Batch [320-340]	Speed: 78290.76 samples/sec	accuracy=nan
2023-03-21 16:40:53,855 Node[0] Epoch[34] Batch [340-360]	Speed: 78440.72 samples/sec	accuracy=nan
2023-03-21 16:40:57,198 Node[0] Epoch[34] Batch [360-380]	Speed: 19529.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434857696, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 16:40:57,697 Node[0] Epoch[34] Time cost=18.867
:::MLLOG {"namespace": "", "time_ms": 1679434857697, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 67906.42654791594}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434857734, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 16:40:57,924 Node[0] Epoch[34] Validation-accuracy=0.759923
2023-03-21 16:40:57,924 Node[0] Epoch[34] Validation-correct-count=1187.000000
2023-03-21 16:40:57,924 Node[0] Epoch[34] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434857946, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434857946, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76022, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434857946, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679434857946, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434865
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:05 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:05 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:05 PM
+ result=684
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,684,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434866
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:06 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:06 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:06 PM
+ result=685
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,685,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434867
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:07 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:07 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:07 PM
+ result=686
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434867
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:07 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:07 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:07 PM
+ result=686
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434867
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:41:07 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:41:07 PM'
ENDING TIMING RUN AT 2023-03-21 04:41:07 PM
+ result=686
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,686,root,2023-03-21 04:29:41 PM'
+ export PROFILE=0
+ PROFILE=0
