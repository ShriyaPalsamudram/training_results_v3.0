+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node042 node043 node044 node045 node046 node047 '
+ echo 'hosts=node040 node041 node042 node043 node044 node045 node046 node047 '
hosts=node040 node041 node042 node043 node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433207640, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433207675, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433207677, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433207678, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433207680, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433222090, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433228254, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433228289, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433228290, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433228292, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433228293, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433239756, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433244751, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433244786, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433244788, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433244789, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433244790, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node042 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node042
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433252164, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433257172, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433257207, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433257208, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433257210, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433257211, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433270730, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433275727, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433275762, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433275763, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433275764, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433275766, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433289504, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433294529, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433294564, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433294565, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433294567, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433294568, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433308258, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433313241, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433313276, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433313278, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433313279, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433313280, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433326953, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433331972, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433332007, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433332008, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433332010, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433332011, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679433344819, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=21190
+ SEED=21190
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32 singularity exec --nv -B /mnt/data/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node042: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ date +%s
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ source ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ dirname ./config_8xR750xax4A100.sh
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679433346
+ start=1679433346
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ start=1679433346
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:15:46 PM'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ readonly global_rank=0
+ OPTIMIZER=sgdwfastlars
+ global_rank=0
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ LR=10.5
+ MOM=0.9
+ SLURM_NTASKS_PER_NODE=4
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ OPTIMIZER=sgdwfastlars
+ LARSETA=0.001
+ BATCHSIZE=102
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ LABELSMOOTHING=0.1
+ KVSTORE=horovod
+ SEED=21190
+ LR=10.5
+ EVAL_OFFSET=2
+ MOM=0.9
+ EVAL_PERIOD=4
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=3
+ WARMUP_EPOCHS=2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LARSETA=0.001
+ DALI_CACHE_SIZE=12288
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_ROI_DECODE=0
+++ sed 's/^config_//'
+ LABELSMOOTHING=0.1
+ SEED=21190
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREFETCH_QUEUE=3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_ROI_DECODE=0
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-fl
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ BN_GROUP=1
+ PROFILE=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ DALI_CROP_BUFFER_HINT=165581
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NUMEXAMPLES=
+ DALI_DONT_USE_MMAP=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ [[ 0 == 1 ]]
+ BN_GROUP=1
+ DATAROOT=/data
+ PROFILE=0
+ PROFILE_EXCEL=0
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ sed 's/\.sh$//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++++ readlink -f ./config_8xR750xax4A100.sh
+ [[ 0 == 1 ]]
+ [[ 0 -ge 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ seq 0 3
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
++ tr '\n' ,
+ DALI_ROI_DECODE=0
++ seq 0 3
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
++ tr '\n' ,
++ sed 's/,$//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DGXSYSTEM=8xR750xax4A100
+ [[ '' -ge 1 ]]
++ DGXSYSTEM=8xR750xax4A100
+ [[ '' -ge 1 ]]
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679433346
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ sed 's/^config_//'
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ date +%s
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date +%s
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start=1679433346
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ start=1679433346
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date +%s
++ date +%s
+ start=1679433346
+ start=1679433346
+ start=1679433346
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679433346
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:15:46 PM'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=5
+ global_rank=5
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date '+%Y-%m-%d %r'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ start_fmt='2023-03-21 04:15:46 PM'
+ readonly global_rank=6
+ global_rank=6
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
++ seq 0 3
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ seq 0 3
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ MOM=0.9
+ LRSCHED=pow2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
++ tr '\n' ,
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ tr '\n' ,
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
++ sed 's/,$//'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ start_fmt='2023-03-21 04:15:46 PM'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ BN_GROUP=1
+ PROFILE=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ export NGPUS=1
+ NGPUS=1
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ sed 's/,$//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
running benchmark
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ seq 0 3
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
+ start=1679433346
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679433346
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ start_fmt='2023-03-21 04:15:46 PM'
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ readonly global_rank=6
+ global_rank=6
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ KVSTORE=horovod
+ LR=10.5
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 -ge 1 ]]
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ source ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ source ./config_8xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ dirname ./config_8xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+++ sed 's/^config_//'
++ date +%s
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679433346
+ start=1679433346
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ start_fmt='2023-03-21 04:15:46 PM'
+ readonly global_rank=1
+ global_rank=1
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ date +%s
+ start=1679433346
++ date '+%Y-%m-%d %r'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start_fmt='2023-03-21 04:15:46 PM'
+ source ./config_8xR750xax4A100.sh
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ GPUS=0,1,2,3
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+++ dirname ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679433346
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ sed 's/\.sh$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++++ readlink -f ./config_8xR750xax4A100.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
+++ sed 's/\.sh$//'
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ date +%s
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ date +%s
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ source ./config_8xR750xax4A100.sh
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ source ./config_8xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ source ./config_8xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date +%s
+++ sed 's/^config_//'
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ dirname ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679433346
+ start=1679433346
+ start=1679433346
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ start_fmt='2023-03-21 04:15:46 PM'
+ start=1679433346
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ start=1679433346
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start_fmt='2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
++ date '+%Y-%m-%d %r'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ date '+%Y-%m-%d %r'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=4
+ global_rank=4
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=4
+ global_rank=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ date +%s
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ source ./config_8xR750xax4A100.sh
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ date +%s
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 -ge 1 ]]
running benchmark
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ [[ 0 -ge 1 ]]
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ seq 0 3
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ tr '\n' ,
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
++ tr '\n' ,
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ sed 's/,$//'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ start_fmt='2023-03-21 04:15:46 PM'
++ sed 's/,$//'
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ sed 's/,$//'
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ dirname ./config_8xR750xax4A100.sh
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=0
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
running benchmark
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
+ NODALI=0
+ NUMEXAMPLES=
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ PROFILE_ALL_LOCAL_RANKS=0
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ THR=0.759
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ [[ 0 == 1 ]]
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ DATAROOT=/data
+ echo 'running benchmark'
++ export DGXNNODES=8
++ DGXNNODES=8
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
++ seq 0 3
++ tr '\n' ,
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++ seq 0 3
++ sed 's/,$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ tr '\n' ,
++++ readlink -f ./config_8xR750xax4A100.sh
++ sed 's/,$//'
+ start=1679433346
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date '+%Y-%m-%d %r'
+ start=1679433346
++ date '+%Y-%m-%d %r'
++ date +%s
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ seq 0 3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ tr '\n' ,
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ [[ '' -ge 1 ]]
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
+ [[ '' -ge 1 ]]
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ [[ '' -ge 1 ]]
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ source ./config_8xR750xax4A100.sh
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
++ DGXNNODES=8
+++ dirname ./config_8xR750xax4A100.sh
+ start=1679433346
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+ GPUS=0,1,2,3
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+ GPUS=0,1,2,3
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ GPUS=0,1,2,3
+ [[ 0 -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ [[ '' -ge 1 ]]
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ DGXSYSTEM=8xR750xax4A100
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ sed 's/,$//'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ date +%s
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ [[ '' -ge 1 ]]
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ date +%s
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start=1679433346
+ start=1679433346
+ start=1679433346
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ date +%s
+ [[ '' -ge 1 ]]
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-21 04:15:46 PM'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=3
+ global_rank=3
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ sed 's/^config_//'
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+++ sed 's/\.sh$//'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++++ readlink -f ./config_8xR750xax4A100.sh
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
running benchmark
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679433346
+ start=1679433346
+ start=1679433346
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ start=1679433346
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
+ start_fmt='2023-03-21 04:15:46 PM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ GPUS=0,1,2,3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ start_fmt='2023-03-21 04:15:46 PM'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=2
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ [[ '' -ge 1 ]]
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ '' -ge 1 ]]
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ seq 0 3
+ LR=10.5
+ MOM=0.9
++ tr '\n' ,
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
++ tr '\n' ,
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ seq 0 3
+ DALI_CACHE_SIZE=12288
++ sed 's/,$//'
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ sed 's/,$//'
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ tr '\n' ,
+ [[ 0 == 1 ]]
++ sed 's/,$//'
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679433346
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start_fmt='2023-03-21 04:15:46 PM'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-21 04:15:46 PM'
STARTING TIMING RUN AT 2023-03-21 04:15:46 PM
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ readonly global_rank=2
+ global_rank=2
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21190
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21190 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node042:85450] MCW rank 11 is not bound (or bound to all available processors)
[node042:85443] MCW rank 8 is not bound (or bound to all available processors)
[node040:90547] MCW rank 1 is not bound (or bound to all available processors)
[node040:90546] MCW rank 3 is not bound (or bound to all available processors)
[node042:85457] MCW rank 9 is not bound (or bound to all available processors)
[node042:85444] MCW rank 10 is not bound (or bound to all available processors)
[node040:90545] MCW rank 2 is not bound (or bound to all available processors)
[node040:90553] MCW rank 0 is not bound (or bound to all available processors)
[node041:83242] MCW rank 7 is not bound (or bound to all available processors)
[node041:83243] MCW rank 4 is not bound (or bound to all available processors)
[node041:83244] MCW rank 6 is not bound (or bound to all available processors)
[node041:83241] MCW rank 5 is not bound (or bound to all available processors)
[node047:87028] MCW rank 30 is not bound (or bound to all available processors)
[node047:87027] MCW rank 29 is not bound (or bound to all available processors)
[node046:82262] MCW rank 27 is not bound (or bound to all available processors)
[node047:87025] MCW rank 31 is not bound (or bound to all available processors)
[node047:87026] MCW rank 28 is not bound (or bound to all available processors)
[node046:82261] MCW rank 26 is not bound (or bound to all available processors)
[node045:91422] MCW rank 20 is not bound (or bound to all available processors)
[node043:74624] MCW rank 13 is not bound (or bound to all available processors)
[node046:82260] MCW rank 25 is not bound (or bound to all available processors)
[node046:82263] MCW rank 24 is not bound (or bound to all available processors)
[node043:74623] MCW rank 14 is not bound (or bound to all available processors)
[node045:91424] MCW rank 21 is not bound (or bound to all available processors)
[node045:91429] MCW rank 22 is not bound (or bound to all available processors)
[node043:74622] MCW rank 15 is not bound (or bound to all available processors)
[node045:91423] MCW rank 23 is not bound (or bound to all available processors)
[node043:74625] MCW rank 12 is not bound (or bound to all available processors)
[node044:98856] MCW rank 16 is not bound (or bound to all available processors)
[node044:98855] MCW rank 19 is not bound (or bound to all available processors)
[node044:98853] MCW rank 17 is not bound (or bound to all available processors)
[node044:98849] MCW rank 18 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679433351428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679433359455, "event_type": "POINT_IN_TIME", "key": "seed", "value": 21190, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:15:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679433362444, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 102, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679433367237, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367238, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367239, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367240, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367241, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367242, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367243, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367244, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367245, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
[:::MLLOG {"namespace": "", "time_ms": 1679433367246, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679433367247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367247, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367248, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367249, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679433367252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679433367276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:16:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,183 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33182, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,183 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49581, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,183 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50996, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,184 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21128, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,184 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19930, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,184 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45587, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,184 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14232, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,185 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47619, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,186 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5392, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,186 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52978, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,186 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37575, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47342, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20785, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15394, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50567, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63770, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55504, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50331, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[25] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49985, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48950, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[27] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44307, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19165, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24733, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,187 Node[26] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43326, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[30] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42225, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52030, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[29] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20806, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59635, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[31] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3514, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[24] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41619, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62983, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 16:16:09,188 Node[28] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31186, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679433369187, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679433369189, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679433369189, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679433369190, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679433369191, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679433369191, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679433416178, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679433416179, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679433416179, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679433417375, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50016, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679433417605, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679433417605, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 16:16:59,987 Node[0] Epoch[0] Batch [0-20]	Speed: 27470.63 samples/sec	accuracy=nan
2023-03-21 16:17:01,935 Node[0] Epoch[0] Batch [20-40]	Speed: 33510.09 samples/sec	accuracy=nan
2023-03-21 16:17:03,931 Node[0] Epoch[0] Batch [40-60]	Speed: 32698.75 samples/sec	accuracy=nan
2023-03-21 16:17:05,904 Node[0] Epoch[0] Batch [60-80]	Speed: 33098.64 samples/sec	accuracy=nan
2023-03-21 16:17:07,867 Node[0] Epoch[0] Batch [80-100]	Speed: 33250.67 samples/sec	accuracy=nan
2023-03-21 16:17:09,789 Node[0] Epoch[0] Batch [100-120]	Speed: 33962.97 samples/sec	accuracy=nan
2023-03-21 16:17:11,759 Node[0] Epoch[0] Batch [120-140]	Speed: 33140.18 samples/sec	accuracy=nan
2023-03-21 16:17:13,642 Node[0] Epoch[0] Batch [140-160]	Speed: 34672.37 samples/sec	accuracy=nan
2023-03-21 16:17:15,719 Node[0] Epoch[0] Batch [160-180]	Speed: 31429.48 samples/sec	accuracy=nan
2023-03-21 16:17:17,571 Node[0] Epoch[0] Batch [180-200]	Speed: 35239.47 samples/sec	accuracy=nan
2023-03-21 16:17:19,553 Node[0] Epoch[0] Batch [200-220]	Speed: 32940.97 samples/sec	accuracy=nan
2023-03-21 16:17:21,542 Node[0] Epoch[0] Batch [220-240]	Speed: 32818.73 samples/sec	accuracy=nan
2023-03-21 16:17:23,593 Node[0] Epoch[0] Batch [240-260]	Speed: 31821.82 samples/sec	accuracy=nan
2023-03-21 16:17:25,502 Node[0] Epoch[0] Batch [260-280]	Speed: 34192.50 samples/sec	accuracy=nan
2023-03-21 16:17:27,535 Node[0] Epoch[0] Batch [280-300]	Speed: 32111.30 samples/sec	accuracy=nan
2023-03-21 16:17:29,553 Node[0] Epoch[0] Batch [300-320]	Speed: 32356.56 samples/sec	accuracy=nan
2023-03-21 16:17:31,536 Node[0] Epoch[0] Batch [320-340]	Speed: 32922.47 samples/sec	accuracy=nan
2023-03-21 16:17:33,524 Node[0] Epoch[0] Batch [340-360]	Speed: 32837.68 samples/sec	accuracy=nan
2023-03-21 16:17:35,382 Node[0] Epoch[0] Batch [360-380]	Speed: 35127.51 samples/sec	accuracy=nan
2023-03-21 16:17:36,045 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,045 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,045 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,046 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433456046, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 16:17:36,047 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,047 Node[0] Epoch[0] Time cost=38.442
2023-03-21 16:17:36,047 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,047 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,047 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433456047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 33327.288659430065}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679433456047, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 16:17:36,047 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:36,925 Node[0] Epoch[1] Batch [0-20]	Speed: 77995.86 samples/sec	accuracy=nan
2023-03-21 16:17:37,754 Node[0] Epoch[1] Batch [20-40]	Speed: 78811.62 samples/sec	accuracy=nan
2023-03-21 16:17:38,586 Node[0] Epoch[1] Batch [40-60]	Speed: 78484.52 samples/sec	accuracy=nan
2023-03-21 16:17:39,414 Node[0] Epoch[1] Batch [60-80]	Speed: 78770.10 samples/sec	accuracy=nan
2023-03-21 16:17:40,244 Node[0] Epoch[1] Batch [80-100]	Speed: 78713.60 samples/sec	accuracy=nan
2023-03-21 16:17:41,074 Node[0] Epoch[1] Batch [100-120]	Speed: 78643.83 samples/sec	accuracy=nan
2023-03-21 16:17:41,909 Node[0] Epoch[1] Batch [120-140]	Speed: 78177.96 samples/sec	accuracy=nan
2023-03-21 16:17:42,737 Node[0] Epoch[1] Batch [140-160]	Speed: 78829.52 samples/sec	accuracy=nan
2023-03-21 16:17:43,567 Node[0] Epoch[1] Batch [160-180]	Speed: 78672.91 samples/sec	accuracy=nan
2023-03-21 16:17:44,393 Node[0] Epoch[1] Batch [180-200]	Speed: 78955.00 samples/sec	accuracy=nan
2023-03-21 16:17:45,222 Node[0] Epoch[1] Batch [200-220]	Speed: 78770.01 samples/sec	accuracy=nan
2023-03-21 16:17:46,050 Node[0] Epoch[1] Batch [220-240]	Speed: 78823.46 samples/sec	accuracy=nan
2023-03-21 16:17:46,881 Node[0] Epoch[1] Batch [240-260]	Speed: 78540.60 samples/sec	accuracy=nan
2023-03-21 16:17:47,711 Node[0] Epoch[1] Batch [260-280]	Speed: 78741.83 samples/sec	accuracy=nan
2023-03-21 16:17:48,539 Node[0] Epoch[1] Batch [280-300]	Speed: 78807.03 samples/sec	accuracy=nan
2023-03-21 16:17:49,369 Node[0] Epoch[1] Batch [300-320]	Speed: 78609.87 samples/sec	accuracy=nan
2023-03-21 16:17:50,198 Node[0] Epoch[1] Batch [320-340]	Speed: 78807.51 samples/sec	accuracy=nan
2023-03-21 16:17:51,027 Node[0] Epoch[1] Batch [340-360]	Speed: 78721.61 samples/sec	accuracy=nan
2023-03-21 16:17:51,857 Node[0] Epoch[1] Batch [360-380]	Speed: 78660.35 samples/sec	accuracy=nan
2023-03-21 16:17:52,353 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,353 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,353 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,353 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,353 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,354 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433472354, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 16:17:52,354 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[0] Epoch[1] Time cost=16.307
:::MLLOG {"namespace": "", "time_ms": 1679433472355, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78563.11868291488}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679433472355, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 16:17:52,355 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:52,355 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:17:53,227 Node[0] Epoch[2] Batch [0-20]	Speed: 78633.17 samples/sec	accuracy=nan
2023-03-21 16:17:54,055 Node[0] Epoch[2] Batch [20-40]	Speed: 78883.30 samples/sec	accuracy=nan
2023-03-21 16:17:54,887 Node[0] Epoch[2] Batch [40-60]	Speed: 78467.70 samples/sec	accuracy=nan
2023-03-21 16:17:55,716 Node[0] Epoch[2] Batch [60-80]	Speed: 78680.94 samples/sec	accuracy=nan
2023-03-21 16:17:56,547 Node[0] Epoch[2] Batch [80-100]	Speed: 78563.93 samples/sec	accuracy=nan
2023-03-21 16:17:57,378 Node[0] Epoch[2] Batch [100-120]	Speed: 78614.91 samples/sec	accuracy=nan
2023-03-21 16:17:58,209 Node[0] Epoch[2] Batch [120-140]	Speed: 78533.51 samples/sec	accuracy=nan
2023-03-21 16:17:59,040 Node[0] Epoch[2] Batch [140-160]	Speed: 78546.10 samples/sec	accuracy=nan
2023-03-21 16:17:59,869 Node[0] Epoch[2] Batch [160-180]	Speed: 78738.14 samples/sec	accuracy=nan
2023-03-21 16:18:00,695 Node[0] Epoch[2] Batch [180-200]	Speed: 78994.50 samples/sec	accuracy=nan
2023-03-21 16:18:01,527 Node[0] Epoch[2] Batch [200-220]	Speed: 78517.99 samples/sec	accuracy=nan
2023-03-21 16:18:02,354 Node[0] Epoch[2] Batch [220-240]	Speed: 78894.14 samples/sec	accuracy=nan
2023-03-21 16:18:03,184 Node[0] Epoch[2] Batch [240-260]	Speed: 78704.82 samples/sec	accuracy=nan
2023-03-21 16:18:04,013 Node[0] Epoch[2] Batch [260-280]	Speed: 78724.65 samples/sec	accuracy=nan
2023-03-21 16:18:04,842 Node[0] Epoch[2] Batch [280-300]	Speed: 78713.29 samples/sec	accuracy=nan
2023-03-21 16:18:05,671 Node[0] Epoch[2] Batch [300-320]	Speed: 78730.22 samples/sec	accuracy=nan
2023-03-21 16:18:06,503 Node[0] Epoch[2] Batch [320-340]	Speed: 78535.67 samples/sec	accuracy=nan
2023-03-21 16:18:07,333 Node[0] Epoch[2] Batch [340-360]	Speed: 78602.40 samples/sec	accuracy=nan
2023-03-21 16:18:08,167 Node[0] Epoch[2] Batch [360-380]	Speed: 78315.35 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433488622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 16:18:08,623 Node[0] Epoch[2] Time cost=16.268
:::MLLOG {"namespace": "", "time_ms": 1679433488624, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78752.7406335256}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-21 16:18:08,660 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,660 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,660 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,660 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433488661, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 16:18:08,661 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,661 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:08,662 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,949 Node[0] Epoch[2] Validation-accuracy=0.316901
2023-03-21 16:18:09,949 Node[0] Epoch[2] Validation-correct-count=495.000000
2023-03-21 16:18:09,949 Node[0] Epoch[2] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433489966, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 16:18:09,967 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433489967, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32632, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 16:18:09,967 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433489967, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679433489967, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 16:18:09,966 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,966 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433489967, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 16:18:09,967 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:09,967 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:10,801 Node[0] Epoch[3] Batch [0-20]	Speed: 78774.68 samples/sec	accuracy=nan
2023-03-21 16:18:11,632 Node[0] Epoch[3] Batch [20-40]	Speed: 78500.77 samples/sec	accuracy=nan
2023-03-21 16:18:12,464 Node[0] Epoch[3] Batch [40-60]	Speed: 78521.23 samples/sec	accuracy=nan
2023-03-21 16:18:13,290 Node[0] Epoch[3] Batch [60-80]	Speed: 78999.81 samples/sec	accuracy=nan
2023-03-21 16:18:14,123 Node[0] Epoch[3] Batch [80-100]	Speed: 78397.60 samples/sec	accuracy=nan
2023-03-21 16:18:14,955 Node[0] Epoch[3] Batch [100-120]	Speed: 78408.82 samples/sec	accuracy=nan
2023-03-21 16:18:15,789 Node[0] Epoch[3] Batch [120-140]	Speed: 78331.68 samples/sec	accuracy=nan
2023-03-21 16:18:16,619 Node[0] Epoch[3] Batch [140-160]	Speed: 78636.74 samples/sec	accuracy=nan
2023-03-21 16:18:17,448 Node[0] Epoch[3] Batch [160-180]	Speed: 78771.85 samples/sec	accuracy=nan
2023-03-21 16:18:18,275 Node[0] Epoch[3] Batch [180-200]	Speed: 78851.83 samples/sec	accuracy=nan
2023-03-21 16:18:19,106 Node[0] Epoch[3] Batch [200-220]	Speed: 78593.56 samples/sec	accuracy=nan
2023-03-21 16:18:19,934 Node[0] Epoch[3] Batch [220-240]	Speed: 78812.61 samples/sec	accuracy=nan
2023-03-21 16:18:20,763 Node[0] Epoch[3] Batch [240-260]	Speed: 78776.74 samples/sec	accuracy=nan
2023-03-21 16:18:21,596 Node[0] Epoch[3] Batch [260-280]	Speed: 78400.50 samples/sec	accuracy=nan
2023-03-21 16:18:22,424 Node[0] Epoch[3] Batch [280-300]	Speed: 78786.06 samples/sec	accuracy=nan
2023-03-21 16:18:23,257 Node[0] Epoch[3] Batch [300-320]	Speed: 78393.07 samples/sec	accuracy=nan
2023-03-21 16:18:24,087 Node[0] Epoch[3] Batch [320-340]	Speed: 78663.78 samples/sec	accuracy=nan
2023-03-21 16:18:24,920 Node[0] Epoch[3] Batch [340-360]	Speed: 78389.68 samples/sec	accuracy=nan
2023-03-21 16:18:25,749 Node[0] Epoch[3] Batch [360-380]	Speed: 78701.45 samples/sec	accuracy=nan
2023-03-21 16:18:26,246 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,246 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,246 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,246 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433506247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 16:18:26,247 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,248 Node[0] Epoch[3] Time cost=16.281
2023-03-21 16:18:26,247 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433506248, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78693.0765997674}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-21 16:18:26,247 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,247 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,248 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,248 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433506248, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 16:18:26,248 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,248 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:26,248 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:27,123 Node[0] Epoch[4] Batch [0-20]	Speed: 78399.35 samples/sec	accuracy=nan
2023-03-21 16:18:27,955 Node[0] Epoch[4] Batch [20-40]	Speed: 78430.63 samples/sec	accuracy=nan
2023-03-21 16:18:28,789 Node[0] Epoch[4] Batch [40-60]	Speed: 78349.91 samples/sec	accuracy=nan
2023-03-21 16:18:29,621 Node[0] Epoch[4] Batch [60-80]	Speed: 78435.51 samples/sec	accuracy=nan
2023-03-21 16:18:30,453 Node[0] Epoch[4] Batch [80-100]	Speed: 78445.19 samples/sec	accuracy=nan
2023-03-21 16:18:31,288 Node[0] Epoch[4] Batch [100-120]	Speed: 78206.57 samples/sec	accuracy=nan
2023-03-21 16:18:32,124 Node[0] Epoch[4] Batch [120-140]	Speed: 78092.79 samples/sec	accuracy=nan
2023-03-21 16:18:32,955 Node[0] Epoch[4] Batch [140-160]	Speed: 78486.28 samples/sec	accuracy=nan
2023-03-21 16:18:33,782 Node[0] Epoch[4] Batch [160-180]	Speed: 78922.02 samples/sec	accuracy=nan
2023-03-21 16:18:34,610 Node[0] Epoch[4] Batch [180-200]	Speed: 78872.89 samples/sec	accuracy=nan
2023-03-21 16:18:35,441 Node[0] Epoch[4] Batch [200-220]	Speed: 78563.79 samples/sec	accuracy=nan
2023-03-21 16:18:36,269 Node[0] Epoch[4] Batch [220-240]	Speed: 78872.75 samples/sec	accuracy=nan
2023-03-21 16:18:37,101 Node[0] Epoch[4] Batch [240-260]	Speed: 78415.05 samples/sec	accuracy=nan
2023-03-21 16:18:37,929 Node[0] Epoch[4] Batch [260-280]	Speed: 78895.39 samples/sec	accuracy=nan
2023-03-21 16:18:38,760 Node[0] Epoch[4] Batch [280-300]	Speed: 78636.85 samples/sec	accuracy=nan
2023-03-21 16:18:39,591 Node[0] Epoch[4] Batch [300-320]	Speed: 78479.48 samples/sec	accuracy=nan
2023-03-21 16:18:40,418 Node[0] Epoch[4] Batch [320-340]	Speed: 78897.91 samples/sec	accuracy=nan
2023-03-21 16:18:41,250 Node[0] Epoch[4] Batch [340-360]	Speed: 78466.80 samples/sec	accuracy=nan
2023-03-21 16:18:42,081 Node[0] Epoch[4] Batch [360-380]	Speed: 78556.87 samples/sec	accuracy=nan
2023-03-21 16:18:42,537 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,537 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433522538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 16:18:42,538 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[0] Epoch[4] Time cost=16.290
2023-03-21 16:18:42,538 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433522538, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78646.39133201946}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 16:18:42,538 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433522538, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 16:18:42,538 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,539 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:42,538 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:43,412 Node[0] Epoch[5] Batch [0-20]	Speed: 78613.71 samples/sec	accuracy=nan
2023-03-21 16:18:44,244 Node[0] Epoch[5] Batch [20-40]	Speed: 78463.16 samples/sec	accuracy=nan
2023-03-21 16:18:45,073 Node[0] Epoch[5] Batch [40-60]	Speed: 78737.89 samples/sec	accuracy=nan
2023-03-21 16:18:45,904 Node[0] Epoch[5] Batch [60-80]	Speed: 78549.03 samples/sec	accuracy=nan
2023-03-21 16:18:46,738 Node[0] Epoch[5] Batch [80-100]	Speed: 78295.80 samples/sec	accuracy=nan
2023-03-21 16:18:47,572 Node[0] Epoch[5] Batch [100-120]	Speed: 78261.07 samples/sec	accuracy=nan
2023-03-21 16:18:48,403 Node[0] Epoch[5] Batch [120-140]	Speed: 78547.36 samples/sec	accuracy=nan
2023-03-21 16:18:49,236 Node[0] Epoch[5] Batch [140-160]	Speed: 78385.12 samples/sec	accuracy=nan
2023-03-21 16:18:50,066 Node[0] Epoch[5] Batch [160-180]	Speed: 78688.56 samples/sec	accuracy=nan
2023-03-21 16:18:50,896 Node[0] Epoch[5] Batch [180-200]	Speed: 78640.92 samples/sec	accuracy=nan
2023-03-21 16:18:51,726 Node[0] Epoch[5] Batch [200-220]	Speed: 78630.17 samples/sec	accuracy=nan
2023-03-21 16:18:52,555 Node[0] Epoch[5] Batch [220-240]	Speed: 78689.76 samples/sec	accuracy=nan
2023-03-21 16:18:53,386 Node[0] Epoch[5] Batch [240-260]	Speed: 78558.40 samples/sec	accuracy=nan
2023-03-21 16:18:54,215 Node[0] Epoch[5] Batch [260-280]	Speed: 78797.24 samples/sec	accuracy=nan
2023-03-21 16:18:55,045 Node[0] Epoch[5] Batch [280-300]	Speed: 78613.19 samples/sec	accuracy=nan
2023-03-21 16:18:55,877 Node[0] Epoch[5] Batch [300-320]	Speed: 78461.42 samples/sec	accuracy=nan
2023-03-21 16:18:56,707 Node[0] Epoch[5] Batch [320-340]	Speed: 78631.39 samples/sec	accuracy=nan
2023-03-21 16:18:57,538 Node[0] Epoch[5] Batch [340-360]	Speed: 78635.18 samples/sec	accuracy=nan
2023-03-21 16:18:58,367 Node[0] Epoch[5] Batch [360-380]	Speed: 78707.06 samples/sec	accuracy=nan
2023-03-21 16:18:58,863 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,863 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433538863, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 16:18:58,864 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[0] Epoch[5] Time cost=16.326
2023-03-21 16:18:58,864 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,864 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433538864, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78474.77647706543}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679433538865, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 16:18:58,865 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:58,865 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:18:59,737 Node[0] Epoch[6] Batch [0-20]	Speed: 78558.50 samples/sec	accuracy=nan
2023-03-21 16:19:00,570 Node[0] Epoch[6] Batch [20-40]	Speed: 78334.93 samples/sec	accuracy=nan
2023-03-21 16:19:01,400 Node[0] Epoch[6] Batch [40-60]	Speed: 78610.71 samples/sec	accuracy=nan
2023-03-21 16:19:02,235 Node[0] Epoch[6] Batch [60-80]	Speed: 78237.90 samples/sec	accuracy=nan
2023-03-21 16:19:03,064 Node[0] Epoch[6] Batch [80-100]	Speed: 78734.34 samples/sec	accuracy=nan
2023-03-21 16:19:03,897 Node[0] Epoch[6] Batch [100-120]	Speed: 78398.90 samples/sec	accuracy=nan
2023-03-21 16:19:04,727 Node[0] Epoch[6] Batch [120-140]	Speed: 78612.60 samples/sec	accuracy=nan
2023-03-21 16:19:05,557 Node[0] Epoch[6] Batch [140-160]	Speed: 78646.59 samples/sec	accuracy=nan
2023-03-21 16:19:06,386 Node[0] Epoch[6] Batch [160-180]	Speed: 78736.78 samples/sec	accuracy=nan
2023-03-21 16:19:07,217 Node[0] Epoch[6] Batch [180-200]	Speed: 78576.94 samples/sec	accuracy=nan
2023-03-21 16:19:08,048 Node[0] Epoch[6] Batch [200-220]	Speed: 78573.87 samples/sec	accuracy=nan
2023-03-21 16:19:08,878 Node[0] Epoch[6] Batch [220-240]	Speed: 78659.96 samples/sec	accuracy=nan
2023-03-21 16:19:09,709 Node[0] Epoch[6] Batch [240-260]	Speed: 78533.30 samples/sec	accuracy=nan
2023-03-21 16:19:10,540 Node[0] Epoch[6] Batch [260-280]	Speed: 78590.33 samples/sec	accuracy=nan
2023-03-21 16:19:11,372 Node[0] Epoch[6] Batch [280-300]	Speed: 78391.18 samples/sec	accuracy=nan
2023-03-21 16:19:12,204 Node[0] Epoch[6] Batch [300-320]	Speed: 78468.24 samples/sec	accuracy=nan
2023-03-21 16:19:13,035 Node[0] Epoch[6] Batch [320-340]	Speed: 78611.97 samples/sec	accuracy=nan
2023-03-21 16:19:13,863 Node[0] Epoch[6] Batch [340-360]	Speed: 78754.17 samples/sec	accuracy=nan
2023-03-21 16:19:14,694 Node[0] Epoch[6] Batch [360-380]	Speed: 78605.61 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433555150, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 16:19:15,151 Node[0] Epoch[6] Time cost=16.286
:::MLLOG {"namespace": "", "time_ms": 1679433555151, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78667.92405207094}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679433555188, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 16:19:15,380 Node[0] Epoch[6] Validation-accuracy=0.411652
2023-03-21 16:19:15,381 Node[0] Epoch[6] Validation-correct-count=643.000000
2023-03-21 16:19:15,381 Node[0] Epoch[6] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433555398, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679433555399, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.41942, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 16:19:15,399 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433555399, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679433555399, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 16:19:15,399 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433555399, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 16:19:15,398 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,398 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:15,399 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:16,241 Node[0] Epoch[7] Batch [0-20]	Speed: 78048.33 samples/sec	accuracy=nan
2023-03-21 16:19:17,073 Node[0] Epoch[7] Batch [20-40]	Speed: 78401.66 samples/sec	accuracy=nan
2023-03-21 16:19:17,904 Node[0] Epoch[7] Batch [40-60]	Speed: 78542.70 samples/sec	accuracy=nan
2023-03-21 16:19:18,739 Node[0] Epoch[7] Batch [60-80]	Speed: 78181.29 samples/sec	accuracy=nan
2023-03-21 16:19:19,571 Node[0] Epoch[7] Batch [80-100]	Speed: 78457.69 samples/sec	accuracy=nan
2023-03-21 16:19:20,406 Node[0] Epoch[7] Batch [100-120]	Speed: 78229.85 samples/sec	accuracy=nan
2023-03-21 16:19:21,237 Node[0] Epoch[7] Batch [120-140]	Speed: 78556.42 samples/sec	accuracy=nan
2023-03-21 16:19:22,066 Node[0] Epoch[7] Batch [140-160]	Speed: 78736.96 samples/sec	accuracy=nan
2023-03-21 16:19:22,899 Node[0] Epoch[7] Batch [160-180]	Speed: 78400.56 samples/sec	accuracy=nan
2023-03-21 16:19:23,728 Node[0] Epoch[7] Batch [180-200]	Speed: 78715.07 samples/sec	accuracy=nan
2023-03-21 16:19:24,557 Node[0] Epoch[7] Batch [200-220]	Speed: 78780.57 samples/sec	accuracy=nan
2023-03-21 16:19:25,386 Node[0] Epoch[7] Batch [220-240]	Speed: 78667.65 samples/sec	accuracy=nan
2023-03-21 16:19:26,217 Node[0] Epoch[7] Batch [240-260]	Speed: 78582.37 samples/sec	accuracy=nan
2023-03-21 16:19:27,046 Node[0] Epoch[7] Batch [260-280]	Speed: 78731.46 samples/sec	accuracy=nan
2023-03-21 16:19:27,877 Node[0] Epoch[7] Batch [280-300]	Speed: 78591.98 samples/sec	accuracy=nan
2023-03-21 16:19:28,708 Node[0] Epoch[7] Batch [300-320]	Speed: 78544.48 samples/sec	accuracy=nan
2023-03-21 16:19:29,538 Node[0] Epoch[7] Batch [320-340]	Speed: 78689.19 samples/sec	accuracy=nan
2023-03-21 16:19:30,368 Node[0] Epoch[7] Batch [340-360]	Speed: 78611.61 samples/sec	accuracy=nan
2023-03-21 16:19:31,200 Node[0] Epoch[7] Batch [360-380]	Speed: 78423.09 samples/sec	accuracy=nan
2023-03-21 16:19:31,700 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433571700, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 16:19:31,700 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[0] Epoch[7] Time cost=16.302
2023-03-21 16:19:31,700 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,700 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433571701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78590.84092341013}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-21 16:19:31,701 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:31,701 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433571701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 16:19:31,701 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:32,575 Node[0] Epoch[8] Batch [0-20]	Speed: 78439.04 samples/sec	accuracy=nan
2023-03-21 16:19:33,407 Node[0] Epoch[8] Batch [20-40]	Speed: 78456.61 samples/sec	accuracy=nan
2023-03-21 16:19:34,237 Node[0] Epoch[8] Batch [40-60]	Speed: 78643.13 samples/sec	accuracy=nan
2023-03-21 16:19:35,071 Node[0] Epoch[8] Batch [60-80]	Speed: 78290.81 samples/sec	accuracy=nan
2023-03-21 16:19:35,906 Node[0] Epoch[8] Batch [80-100]	Speed: 78153.42 samples/sec	accuracy=nan
2023-03-21 16:19:36,738 Node[0] Epoch[8] Batch [100-120]	Speed: 78464.37 samples/sec	accuracy=nan
2023-03-21 16:19:37,572 Node[0] Epoch[8] Batch [120-140]	Speed: 78325.00 samples/sec	accuracy=nan
2023-03-21 16:19:38,404 Node[0] Epoch[8] Batch [140-160]	Speed: 78384.16 samples/sec	accuracy=nan
2023-03-21 16:19:39,232 Node[0] Epoch[8] Batch [160-180]	Speed: 78848.61 samples/sec	accuracy=nan
2023-03-21 16:19:40,061 Node[0] Epoch[8] Batch [180-200]	Speed: 78768.06 samples/sec	accuracy=nan
2023-03-21 16:19:40,892 Node[0] Epoch[8] Batch [200-220]	Speed: 78565.73 samples/sec	accuracy=nan
2023-03-21 16:19:41,723 Node[0] Epoch[8] Batch [220-240]	Speed: 78526.88 samples/sec	accuracy=nan
2023-03-21 16:19:42,555 Node[0] Epoch[8] Batch [240-260]	Speed: 78475.52 samples/sec	accuracy=nan
2023-03-21 16:19:43,383 Node[0] Epoch[8] Batch [260-280]	Speed: 78868.12 samples/sec	accuracy=nan
2023-03-21 16:19:44,213 Node[0] Epoch[8] Batch [280-300]	Speed: 78675.18 samples/sec	accuracy=nan
2023-03-21 16:19:45,046 Node[0] Epoch[8] Batch [300-320]	Speed: 78373.30 samples/sec	accuracy=nan
2023-03-21 16:19:45,878 Node[0] Epoch[8] Batch [320-340]	Speed: 78440.09 samples/sec	accuracy=nan
2023-03-21 16:19:46,707 Node[0] Epoch[8] Batch [340-360]	Speed: 78725.87 samples/sec	accuracy=nan
2023-03-21 16:19:47,541 Node[0] Epoch[8] Batch [360-380]	Speed: 78240.27 samples/sec	accuracy=nan
2023-03-21 16:19:47,996 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,996 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433587997, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 16:19:47,997 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[0] Epoch[8] Time cost=16.296
2023-03-21 16:19:47,997 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433587997, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78618.66095100713}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-21 16:19:47,997 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433587997, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 16:19:47,997 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:47,997 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:19:48,874 Node[0] Epoch[9] Batch [0-20]	Speed: 78442.70 samples/sec	accuracy=nan
2023-03-21 16:19:49,708 Node[0] Epoch[9] Batch [20-40]	Speed: 78355.26 samples/sec	accuracy=nan
2023-03-21 16:19:50,541 Node[0] Epoch[9] Batch [40-60]	Speed: 78328.16 samples/sec	accuracy=nan
2023-03-21 16:19:51,373 Node[0] Epoch[9] Batch [60-80]	Speed: 78488.23 samples/sec	accuracy=nan
2023-03-21 16:19:52,204 Node[0] Epoch[9] Batch [80-100]	Speed: 78554.96 samples/sec	accuracy=nan
2023-03-21 16:19:53,044 Node[0] Epoch[9] Batch [100-120]	Speed: 77712.95 samples/sec	accuracy=nan
2023-03-21 16:19:53,875 Node[0] Epoch[9] Batch [120-140]	Speed: 78535.51 samples/sec	accuracy=nan
2023-03-21 16:19:54,708 Node[0] Epoch[9] Batch [140-160]	Speed: 78354.68 samples/sec	accuracy=nan
2023-03-21 16:19:55,539 Node[0] Epoch[9] Batch [160-180]	Speed: 78606.49 samples/sec	accuracy=nan
2023-03-21 16:19:56,368 Node[0] Epoch[9] Batch [180-200]	Speed: 78718.69 samples/sec	accuracy=nan
2023-03-21 16:19:57,199 Node[0] Epoch[9] Batch [200-220]	Speed: 78508.35 samples/sec	accuracy=nan
2023-03-21 16:19:58,028 Node[0] Epoch[9] Batch [220-240]	Speed: 78751.73 samples/sec	accuracy=nan
2023-03-21 16:19:58,859 Node[0] Epoch[9] Batch [240-260]	Speed: 78590.79 samples/sec	accuracy=nan
2023-03-21 16:19:59,689 Node[0] Epoch[9] Batch [260-280]	Speed: 78683.09 samples/sec	accuracy=nan
2023-03-21 16:20:00,520 Node[0] Epoch[9] Batch [280-300]	Speed: 78464.06 samples/sec	accuracy=nan
2023-03-21 16:20:01,354 Node[0] Epoch[9] Batch [300-320]	Speed: 78320.21 samples/sec	accuracy=nan
2023-03-21 16:20:02,184 Node[0] Epoch[9] Batch [320-340]	Speed: 78691.75 samples/sec	accuracy=nan
2023-03-21 16:20:03,015 Node[0] Epoch[9] Batch [340-360]	Speed: 78498.25 samples/sec	accuracy=nan
2023-03-21 16:20:03,847 Node[0] Epoch[9] Batch [360-380]	Speed: 78478.90 samples/sec	accuracy=nan
2023-03-21 16:20:04,344 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,344 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:04,345 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433604345, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 16:20:04,346 Node[0] Epoch[9] Time cost=16.348
:::MLLOG {"namespace": "", "time_ms": 1679433604346, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78367.67199891963}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679433604346, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 16:20:04,346 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:05,219 Node[0] Epoch[10] Batch [0-20]	Speed: 78488.10 samples/sec	accuracy=nan
2023-03-21 16:20:06,050 Node[0] Epoch[10] Batch [20-40]	Speed: 78603.04 samples/sec	accuracy=nan
2023-03-21 16:20:06,880 Node[0] Epoch[10] Batch [40-60]	Speed: 78615.34 samples/sec	accuracy=nan
2023-03-21 16:20:07,710 Node[0] Epoch[10] Batch [60-80]	Speed: 78650.65 samples/sec	accuracy=nan
2023-03-21 16:20:08,542 Node[0] Epoch[10] Batch [80-100]	Speed: 78466.01 samples/sec	accuracy=nan
2023-03-21 16:20:09,375 Node[0] Epoch[10] Batch [100-120]	Speed: 78391.92 samples/sec	accuracy=nan
2023-03-21 16:20:10,206 Node[0] Epoch[10] Batch [120-140]	Speed: 78582.28 samples/sec	accuracy=nan
2023-03-21 16:20:11,036 Node[0] Epoch[10] Batch [140-160]	Speed: 78656.24 samples/sec	accuracy=nan
2023-03-21 16:20:11,866 Node[0] Epoch[10] Batch [160-180]	Speed: 78580.88 samples/sec	accuracy=nan
2023-03-21 16:20:12,696 Node[0] Epoch[10] Batch [180-200]	Speed: 78635.72 samples/sec	accuracy=nan
2023-03-21 16:20:13,527 Node[0] Epoch[10] Batch [200-220]	Speed: 78565.26 samples/sec	accuracy=nan
2023-03-21 16:20:14,360 Node[0] Epoch[10] Batch [220-240]	Speed: 78421.11 samples/sec	accuracy=nan
2023-03-21 16:20:15,191 Node[0] Epoch[10] Batch [240-260]	Speed: 78498.97 samples/sec	accuracy=nan
2023-03-21 16:20:16,023 Node[0] Epoch[10] Batch [260-280]	Speed: 78510.20 samples/sec	accuracy=nan
2023-03-21 16:20:16,853 Node[0] Epoch[10] Batch [280-300]	Speed: 78608.59 samples/sec	accuracy=nan
2023-03-21 16:20:17,688 Node[0] Epoch[10] Batch [300-320]	Speed: 78259.48 samples/sec	accuracy=nan
2023-03-21 16:20:18,519 Node[0] Epoch[10] Batch [320-340]	Speed: 78481.08 samples/sec	accuracy=nan
2023-03-21 16:20:19,348 Node[0] Epoch[10] Batch [340-360]	Speed: 78759.18 samples/sec	accuracy=nan
2023-03-21 16:20:20,179 Node[0] Epoch[10] Batch [360-380]	Speed: 78571.25 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433620636, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 16:20:20,637 Node[0] Epoch[10] Time cost=16.291
:::MLLOG {"namespace": "", "time_ms": 1679433620637, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78644.625670058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679433620674, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 16:20:20,865 Node[0] Epoch[10] Validation-accuracy=0.535211
2023-03-21 16:20:20,865 Node[0] Epoch[10] Validation-correct-count=836.000000
2023-03-21 16:20:20,865 Node[0] Epoch[10] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433620887, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679433620887, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52586, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 16:20:20,887 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433620887, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679433620887, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 16:20:20,887 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433620887, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 16:20:20,887 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:20,887 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:21,723 Node[0] Epoch[11] Batch [0-20]	Speed: 78584.11 samples/sec	accuracy=nan
2023-03-21 16:20:22,558 Node[0] Epoch[11] Batch [20-40]	Speed: 78219.53 samples/sec	accuracy=nan
2023-03-21 16:20:23,390 Node[0] Epoch[11] Batch [40-60]	Speed: 78384.99 samples/sec	accuracy=nan
2023-03-21 16:20:24,222 Node[0] Epoch[11] Batch [60-80]	Speed: 78496.34 samples/sec	accuracy=nan
2023-03-21 16:20:25,054 Node[0] Epoch[11] Batch [80-100]	Speed: 78507.57 samples/sec	accuracy=nan
2023-03-21 16:20:25,887 Node[0] Epoch[11] Batch [100-120]	Speed: 78276.77 samples/sec	accuracy=nan
2023-03-21 16:20:26,718 Node[0] Epoch[11] Batch [120-140]	Speed: 78634.62 samples/sec	accuracy=nan
2023-03-21 16:20:27,552 Node[0] Epoch[11] Batch [140-160]	Speed: 78268.43 samples/sec	accuracy=nan
2023-03-21 16:20:28,382 Node[0] Epoch[11] Batch [160-180]	Speed: 78659.65 samples/sec	accuracy=nan
2023-03-21 16:20:29,211 Node[0] Epoch[11] Batch [180-200]	Speed: 78685.51 samples/sec	accuracy=nan
2023-03-21 16:20:30,042 Node[0] Epoch[11] Batch [200-220]	Speed: 78616.49 samples/sec	accuracy=nan
2023-03-21 16:20:30,872 Node[0] Epoch[11] Batch [220-240]	Speed: 78565.12 samples/sec	accuracy=nan
2023-03-21 16:20:31,702 Node[0] Epoch[11] Batch [240-260]	Speed: 78673.34 samples/sec	accuracy=nan
2023-03-21 16:20:32,531 Node[0] Epoch[11] Batch [260-280]	Speed: 78737.14 samples/sec	accuracy=nan
2023-03-21 16:20:33,362 Node[0] Epoch[11] Batch [280-300]	Speed: 78615.56 samples/sec	accuracy=nan
2023-03-21 16:20:34,197 Node[0] Epoch[11] Batch [300-320]	Speed: 78109.99 samples/sec	accuracy=nan
2023-03-21 16:20:35,030 Node[0] Epoch[11] Batch [320-340]	Speed: 78374.53 samples/sec	accuracy=nan
2023-03-21 16:20:35,862 Node[0] Epoch[11] Batch [340-360]	Speed: 78524.88 samples/sec	accuracy=nan
2023-03-21 16:20:36,693 Node[0] Epoch[11] Batch [360-380]	Speed: 78492.26 samples/sec	accuracy=nan
2023-03-21 16:20:37,190 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,190 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433637190, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 16:20:37,191 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[0] Epoch[11] Time cost=16.304
2023-03-21 16:20:37,191 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433637191, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78581.93968457336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 16:20:37,191 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433637191, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 16:20:37,191 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:37,191 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:38,065 Node[0] Epoch[12] Batch [0-20]	Speed: 78389.16 samples/sec	accuracy=nan
2023-03-21 16:20:38,898 Node[0] Epoch[12] Batch [20-40]	Speed: 78406.98 samples/sec	accuracy=nan
2023-03-21 16:20:39,728 Node[0] Epoch[12] Batch [40-60]	Speed: 78624.84 samples/sec	accuracy=nan
2023-03-21 16:20:40,561 Node[0] Epoch[12] Batch [60-80]	Speed: 78352.06 samples/sec	accuracy=nan
2023-03-21 16:20:41,399 Node[0] Epoch[12] Batch [80-100]	Speed: 77980.71 samples/sec	accuracy=nan
2023-03-21 16:20:42,230 Node[0] Epoch[12] Batch [100-120]	Speed: 78557.50 samples/sec	accuracy=nan
2023-03-21 16:20:43,066 Node[0] Epoch[12] Batch [120-140]	Speed: 78041.66 samples/sec	accuracy=nan
2023-03-21 16:20:43,898 Node[0] Epoch[12] Batch [140-160]	Speed: 78453.80 samples/sec	accuracy=nan
2023-03-21 16:20:44,728 Node[0] Epoch[12] Batch [160-180]	Speed: 78695.48 samples/sec	accuracy=nan
2023-03-21 16:20:45,560 Node[0] Epoch[12] Batch [180-200]	Speed: 78385.08 samples/sec	accuracy=nan
2023-03-21 16:20:46,390 Node[0] Epoch[12] Batch [200-220]	Speed: 78657.64 samples/sec	accuracy=nan
2023-03-21 16:20:47,221 Node[0] Epoch[12] Batch [220-240]	Speed: 78595.16 samples/sec	accuracy=nan
2023-03-21 16:20:48,053 Node[0] Epoch[12] Batch [240-260]	Speed: 78479.10 samples/sec	accuracy=nan
2023-03-21 16:20:48,885 Node[0] Epoch[12] Batch [260-280]	Speed: 78460.19 samples/sec	accuracy=nan
2023-03-21 16:20:49,714 Node[0] Epoch[12] Batch [280-300]	Speed: 78683.41 samples/sec	accuracy=nan
2023-03-21 16:20:50,547 Node[0] Epoch[12] Batch [300-320]	Speed: 78398.32 samples/sec	accuracy=nan
2023-03-21 16:20:51,378 Node[0] Epoch[12] Batch [320-340]	Speed: 78579.33 samples/sec	accuracy=nan
2023-03-21 16:20:52,208 Node[0] Epoch[12] Batch [340-360]	Speed: 78620.03 samples/sec	accuracy=nan
2023-03-21 16:20:53,039 Node[0] Epoch[12] Batch [360-380]	Speed: 78608.25 samples/sec	accuracy=nan
2023-03-21 16:20:53,498 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,498 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,498 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,498 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,498 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,498 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433653499, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 16:20:53,499 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,500 Node[0] Epoch[12] Time cost=16.308
2023-03-21 16:20:53,499 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:53,499 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433653500, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78559.29400496355}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 16:20:53,499 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433653500, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 16:20:53,500 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:20:54,373 Node[0] Epoch[13] Batch [0-20]	Speed: 78671.74 samples/sec	accuracy=nan
2023-03-21 16:20:55,205 Node[0] Epoch[13] Batch [20-40]	Speed: 78457.40 samples/sec	accuracy=nan
2023-03-21 16:20:56,036 Node[0] Epoch[13] Batch [40-60]	Speed: 78532.27 samples/sec	accuracy=nan
2023-03-21 16:20:56,869 Node[0] Epoch[13] Batch [60-80]	Speed: 78379.69 samples/sec	accuracy=nan
2023-03-21 16:20:57,702 Node[0] Epoch[13] Batch [80-100]	Speed: 78370.83 samples/sec	accuracy=nan
2023-03-21 16:20:58,534 Node[0] Epoch[13] Batch [100-120]	Speed: 78453.22 samples/sec	accuracy=nan
2023-03-21 16:20:59,370 Node[0] Epoch[13] Batch [120-140]	Speed: 78108.87 samples/sec	accuracy=nan
2023-03-21 16:21:00,200 Node[0] Epoch[13] Batch [140-160]	Speed: 78667.29 samples/sec	accuracy=nan
2023-03-21 16:21:01,031 Node[0] Epoch[13] Batch [160-180]	Speed: 78544.09 samples/sec	accuracy=nan
2023-03-21 16:21:01,859 Node[0] Epoch[13] Batch [180-200]	Speed: 78830.40 samples/sec	accuracy=nan
2023-03-21 16:21:02,690 Node[0] Epoch[13] Batch [200-220]	Speed: 78547.81 samples/sec	accuracy=nan
2023-03-21 16:21:03,520 Node[0] Epoch[13] Batch [220-240]	Speed: 78684.76 samples/sec	accuracy=nan
2023-03-21 16:21:04,350 Node[0] Epoch[13] Batch [240-260]	Speed: 78572.74 samples/sec	accuracy=nan
2023-03-21 16:21:05,181 Node[0] Epoch[13] Batch [260-280]	Speed: 78596.11 samples/sec	accuracy=nan
2023-03-21 16:21:06,011 Node[0] Epoch[13] Batch [280-300]	Speed: 78670.68 samples/sec	accuracy=nan
2023-03-21 16:21:06,845 Node[0] Epoch[13] Batch [300-320]	Speed: 78297.34 samples/sec	accuracy=nan
2023-03-21 16:21:07,679 Node[0] Epoch[13] Batch [320-340]	Speed: 78205.63 samples/sec	accuracy=nan
2023-03-21 16:21:08,509 Node[0] Epoch[13] Batch [340-360]	Speed: 78647.79 samples/sec	accuracy=nan
2023-03-21 16:21:09,341 Node[0] Epoch[13] Batch [360-380]	Speed: 78500.72 samples/sec	accuracy=nan
2023-03-21 16:21:09,837 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,838 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:09,839 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433669838, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 16:21:09,839 Node[0] Epoch[13] Time cost=16.339
:::MLLOG {"namespace": "", "time_ms": 1679433669839, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78410.72353667712}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679433669839, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 16:21:09,839 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:10,720 Node[0] Epoch[14] Batch [0-20]	Speed: 77811.27 samples/sec	accuracy=nan
2023-03-21 16:21:11,551 Node[0] Epoch[14] Batch [20-40]	Speed: 78517.07 samples/sec	accuracy=nan
2023-03-21 16:21:12,383 Node[0] Epoch[14] Batch [40-60]	Speed: 78429.82 samples/sec	accuracy=nan
2023-03-21 16:21:13,216 Node[0] Epoch[14] Batch [60-80]	Speed: 78372.02 samples/sec	accuracy=nan
2023-03-21 16:21:14,052 Node[0] Epoch[14] Batch [80-100]	Speed: 78104.28 samples/sec	accuracy=nan
2023-03-21 16:21:14,890 Node[0] Epoch[14] Batch [100-120]	Speed: 77959.33 samples/sec	accuracy=nan
2023-03-21 16:21:15,724 Node[0] Epoch[14] Batch [120-140]	Speed: 78272.79 samples/sec	accuracy=nan
2023-03-21 16:21:16,556 Node[0] Epoch[14] Batch [140-160]	Speed: 78411.68 samples/sec	accuracy=nan
2023-03-21 16:21:17,390 Node[0] Epoch[14] Batch [160-180]	Speed: 78269.57 samples/sec	accuracy=nan
2023-03-21 16:21:18,223 Node[0] Epoch[14] Batch [180-200]	Speed: 78414.37 samples/sec	accuracy=nan
2023-03-21 16:21:19,053 Node[0] Epoch[14] Batch [200-220]	Speed: 78605.61 samples/sec	accuracy=nan
2023-03-21 16:21:19,883 Node[0] Epoch[14] Batch [220-240]	Speed: 78655.15 samples/sec	accuracy=nan
2023-03-21 16:21:20,713 Node[0] Epoch[14] Batch [240-260]	Speed: 78672.82 samples/sec	accuracy=nan
2023-03-21 16:21:21,543 Node[0] Epoch[14] Batch [260-280]	Speed: 78642.64 samples/sec	accuracy=nan
2023-03-21 16:21:22,372 Node[0] Epoch[14] Batch [280-300]	Speed: 78713.13 samples/sec	accuracy=nan
2023-03-21 16:21:23,204 Node[0] Epoch[14] Batch [300-320]	Speed: 78496.79 samples/sec	accuracy=nan
2023-03-21 16:21:24,037 Node[0] Epoch[14] Batch [320-340]	Speed: 78374.15 samples/sec	accuracy=nan
2023-03-21 16:21:24,866 Node[0] Epoch[14] Batch [340-360]	Speed: 78706.32 samples/sec	accuracy=nan
2023-03-21 16:21:25,700 Node[0] Epoch[14] Batch [360-380]	Speed: 78316.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433686156, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 16:21:26,157 Node[0] Epoch[14] Time cost=16.317
:::MLLOG {"namespace": "", "time_ms": 1679433686157, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78516.33619286928}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679433686194, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 16:21:26,385 Node[0] Epoch[14] Validation-accuracy=0.603073
2023-03-21 16:21:26,385 Node[0] Epoch[14] Validation-correct-count=942.000000
2023-03-21 16:21:26,385 Node[0] Epoch[14] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433686407, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679433686407, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-21 16:21:26,407 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433686407, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679433686407, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 16:21:26,407 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433686407, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 16:21:26,407 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:26,407 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:27,245 Node[0] Epoch[15] Batch [0-20]	Speed: 78457.44 samples/sec	accuracy=nan
2023-03-21 16:21:28,077 Node[0] Epoch[15] Batch [20-40]	Speed: 78369.19 samples/sec	accuracy=nan
2023-03-21 16:21:28,911 Node[0] Epoch[15] Batch [40-60]	Speed: 78361.03 samples/sec	accuracy=nan
2023-03-21 16:21:29,745 Node[0] Epoch[15] Batch [60-80]	Speed: 78262.83 samples/sec	accuracy=nan
2023-03-21 16:21:30,578 Node[0] Epoch[15] Batch [80-100]	Speed: 78368.09 samples/sec	accuracy=nan
2023-03-21 16:21:31,411 Node[0] Epoch[15] Batch [100-120]	Speed: 78342.26 samples/sec	accuracy=nan
2023-03-21 16:21:32,241 Node[0] Epoch[15] Batch [120-140]	Speed: 78621.43 samples/sec	accuracy=nan
2023-03-21 16:21:33,074 Node[0] Epoch[15] Batch [140-160]	Speed: 78432.48 samples/sec	accuracy=nan
2023-03-21 16:21:33,903 Node[0] Epoch[15] Batch [160-180]	Speed: 78659.08 samples/sec	accuracy=nan
2023-03-21 16:21:34,732 Node[0] Epoch[15] Batch [180-200]	Speed: 78748.72 samples/sec	accuracy=nan
2023-03-21 16:21:35,565 Node[0] Epoch[15] Batch [200-220]	Speed: 78415.47 samples/sec	accuracy=nan
2023-03-21 16:21:36,395 Node[0] Epoch[15] Batch [220-240]	Speed: 78650.77 samples/sec	accuracy=nan
2023-03-21 16:21:37,228 Node[0] Epoch[15] Batch [240-260]	Speed: 78361.88 samples/sec	accuracy=nan
2023-03-21 16:21:38,058 Node[0] Epoch[15] Batch [260-280]	Speed: 78654.36 samples/sec	accuracy=nan
2023-03-21 16:21:38,889 Node[0] Epoch[15] Batch [280-300]	Speed: 78538.24 samples/sec	accuracy=nan
2023-03-21 16:21:39,721 Node[0] Epoch[15] Batch [300-320]	Speed: 78512.52 samples/sec	accuracy=nan
2023-03-21 16:21:40,551 Node[0] Epoch[15] Batch [320-340]	Speed: 78624.61 samples/sec	accuracy=nan
2023-03-21 16:21:41,380 Node[0] Epoch[15] Batch [340-360]	Speed: 78685.21 samples/sec	accuracy=nan
2023-03-21 16:21:42,212 Node[0] Epoch[15] Batch [360-380]	Speed: 78500.99 samples/sec	accuracy=nan
2023-03-21 16:21:42,712 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,712 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433702713, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 16:21:42,713 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[0] Epoch[15] Time cost=16.306
2023-03-21 16:21:42,713 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433702713, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78571.62274728721}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 16:21:42,713 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:42,713 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433702713, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 16:21:42,713 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:43,587 Node[0] Epoch[16] Batch [0-20]	Speed: 78420.91 samples/sec	accuracy=nan
2023-03-21 16:21:44,419 Node[0] Epoch[16] Batch [20-40]	Speed: 78449.64 samples/sec	accuracy=nan
2023-03-21 16:21:45,250 Node[0] Epoch[16] Batch [40-60]	Speed: 78555.50 samples/sec	accuracy=nan
2023-03-21 16:21:46,083 Node[0] Epoch[16] Batch [60-80]	Speed: 78379.58 samples/sec	accuracy=nan
2023-03-21 16:21:46,920 Node[0] Epoch[16] Batch [80-100]	Speed: 78001.88 samples/sec	accuracy=nan
2023-03-21 16:21:47,752 Node[0] Epoch[16] Batch [100-120]	Speed: 78388.37 samples/sec	accuracy=nan
2023-03-21 16:21:48,594 Node[0] Epoch[16] Batch [120-140]	Speed: 77555.21 samples/sec	accuracy=nan
2023-03-21 16:21:49,425 Node[0] Epoch[16] Batch [140-160]	Speed: 78604.80 samples/sec	accuracy=nan
2023-03-21 16:21:50,256 Node[0] Epoch[16] Batch [160-180]	Speed: 78474.69 samples/sec	accuracy=nan
2023-03-21 16:21:51,085 Node[0] Epoch[16] Batch [180-200]	Speed: 78810.03 samples/sec	accuracy=nan
2023-03-21 16:21:51,917 Node[0] Epoch[16] Batch [200-220]	Speed: 78439.40 samples/sec	accuracy=nan
2023-03-21 16:21:52,747 Node[0] Epoch[16] Batch [220-240]	Speed: 78688.83 samples/sec	accuracy=nan
2023-03-21 16:21:53,579 Node[0] Epoch[16] Batch [240-260]	Speed: 78403.95 samples/sec	accuracy=nan
2023-03-21 16:21:54,408 Node[0] Epoch[16] Batch [260-280]	Speed: 78763.10 samples/sec	accuracy=nan
2023-03-21 16:21:55,239 Node[0] Epoch[16] Batch [280-300]	Speed: 78516.95 samples/sec	accuracy=nan
2023-03-21 16:21:56,072 Node[0] Epoch[16] Batch [300-320]	Speed: 78408.11 samples/sec	accuracy=nan
2023-03-21 16:21:56,905 Node[0] Epoch[16] Batch [320-340]	Speed: 78348.25 samples/sec	accuracy=nan
2023-03-21 16:21:57,736 Node[0] Epoch[16] Batch [340-360]	Speed: 78614.79 samples/sec	accuracy=nan
2023-03-21 16:21:58,568 Node[0] Epoch[16] Batch [360-380]	Speed: 78445.06 samples/sec	accuracy=nan
2023-03-21 16:21:59,025 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,025 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433719026, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 16:21:59,026 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,026 Node[0] Epoch[16] Time cost=16.313
:::MLLOG {"namespace": "", "time_ms": 1679433719026, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78536.13911245838}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679433719027, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 16:21:59,027 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:21:59,901 Node[0] Epoch[17] Batch [0-20]	Speed: 78536.14 samples/sec	accuracy=nan
2023-03-21 16:22:00,733 Node[0] Epoch[17] Batch [20-40]	Speed: 78445.82 samples/sec	accuracy=nan
2023-03-21 16:22:01,566 Node[0] Epoch[17] Batch [40-60]	Speed: 78364.91 samples/sec	accuracy=nan
2023-03-21 16:22:02,398 Node[0] Epoch[17] Batch [60-80]	Speed: 78484.23 samples/sec	accuracy=nan
2023-03-21 16:22:03,234 Node[0] Epoch[17] Batch [80-100]	Speed: 78039.77 samples/sec	accuracy=nan
2023-03-21 16:22:04,069 Node[0] Epoch[17] Batch [100-120]	Speed: 78222.05 samples/sec	accuracy=nan
2023-03-21 16:22:04,905 Node[0] Epoch[17] Batch [120-140]	Speed: 78026.02 samples/sec	accuracy=nan
2023-03-21 16:22:05,736 Node[0] Epoch[17] Batch [140-160]	Speed: 78560.39 samples/sec	accuracy=nan
2023-03-21 16:22:06,568 Node[0] Epoch[17] Batch [160-180]	Speed: 78454.90 samples/sec	accuracy=nan
2023-03-21 16:22:07,398 Node[0] Epoch[17] Batch [180-200]	Speed: 78718.02 samples/sec	accuracy=nan
2023-03-21 16:22:08,227 Node[0] Epoch[17] Batch [200-220]	Speed: 78660.14 samples/sec	accuracy=nan
2023-03-21 16:22:09,061 Node[0] Epoch[17] Batch [220-240]	Speed: 78309.48 samples/sec	accuracy=nan
2023-03-21 16:22:09,893 Node[0] Epoch[17] Batch [240-260]	Speed: 78462.82 samples/sec	accuracy=nan
2023-03-21 16:22:10,723 Node[0] Epoch[17] Batch [260-280]	Speed: 78631.32 samples/sec	accuracy=nan
2023-03-21 16:22:11,553 Node[0] Epoch[17] Batch [280-300]	Speed: 78630.46 samples/sec	accuracy=nan
2023-03-21 16:22:12,389 Node[0] Epoch[17] Batch [300-320]	Speed: 78146.95 samples/sec	accuracy=nan
2023-03-21 16:22:13,218 Node[0] Epoch[17] Batch [320-340]	Speed: 78706.09 samples/sec	accuracy=nan
2023-03-21 16:22:14,048 Node[0] Epoch[17] Batch [340-360]	Speed: 78695.68 samples/sec	accuracy=nan
2023-03-21 16:22:14,880 Node[0] Epoch[17] Batch [360-380]	Speed: 78392.21 samples/sec	accuracy=nan
2023-03-21 16:22:15,378 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,378 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,379 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,380 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433735379, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 16:22:15,379 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:15,380 Node[0] Epoch[17] Time cost=16.353
2023-03-21 16:22:15,380 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433735380, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78344.04509462258}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679433735380, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 16:22:15,380 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:16,253 Node[0] Epoch[18] Batch [0-20]	Speed: 78477.89 samples/sec	accuracy=nan
2023-03-21 16:22:17,084 Node[0] Epoch[18] Batch [20-40]	Speed: 78579.37 samples/sec	accuracy=nan
2023-03-21 16:22:17,918 Node[0] Epoch[18] Batch [40-60]	Speed: 78300.48 samples/sec	accuracy=nan
2023-03-21 16:22:18,750 Node[0] Epoch[18] Batch [60-80]	Speed: 78456.34 samples/sec	accuracy=nan
2023-03-21 16:22:19,580 Node[0] Epoch[18] Batch [80-100]	Speed: 78576.73 samples/sec	accuracy=nan
2023-03-21 16:22:20,414 Node[0] Epoch[18] Batch [100-120]	Speed: 78297.16 samples/sec	accuracy=nan
2023-03-21 16:22:21,247 Node[0] Epoch[18] Batch [120-140]	Speed: 78366.48 samples/sec	accuracy=nan
2023-03-21 16:22:22,079 Node[0] Epoch[18] Batch [140-160]	Speed: 78448.14 samples/sec	accuracy=nan
2023-03-21 16:22:22,911 Node[0] Epoch[18] Batch [160-180]	Speed: 78503.38 samples/sec	accuracy=nan
2023-03-21 16:22:23,743 Node[0] Epoch[18] Batch [180-200]	Speed: 78480.86 samples/sec	accuracy=nan
2023-03-21 16:22:24,574 Node[0] Epoch[18] Batch [200-220]	Speed: 78482.92 samples/sec	accuracy=nan
2023-03-21 16:22:25,406 Node[0] Epoch[18] Batch [220-240]	Speed: 78530.76 samples/sec	accuracy=nan
2023-03-21 16:22:26,237 Node[0] Epoch[18] Batch [240-260]	Speed: 78485.17 samples/sec	accuracy=nan
2023-03-21 16:22:27,067 Node[0] Epoch[18] Batch [260-280]	Speed: 78697.61 samples/sec	accuracy=nan
2023-03-21 16:22:27,898 Node[0] Epoch[18] Batch [280-300]	Speed: 78570.29 samples/sec	accuracy=nan
2023-03-21 16:22:28,729 Node[0] Epoch[18] Batch [300-320]	Speed: 78504.32 samples/sec	accuracy=nan
2023-03-21 16:22:29,562 Node[0] Epoch[18] Batch [320-340]	Speed: 78372.35 samples/sec	accuracy=nan
2023-03-21 16:22:30,393 Node[0] Epoch[18] Batch [340-360]	Speed: 78620.17 samples/sec	accuracy=nan
2023-03-21 16:22:31,229 Node[0] Epoch[18] Batch [360-380]	Speed: 78017.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433751686, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 16:22:31,687 Node[0] Epoch[18] Time cost=16.306
:::MLLOG {"namespace": "", "time_ms": 1679433751687, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78568.62204863265}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679433751724, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 16:22:31,916 Node[0] Epoch[18] Validation-accuracy=0.654930
2023-03-21 16:22:31,916 Node[0] Epoch[18] Validation-correct-count=1023.000000
2023-03-21 16:22:31,916 Node[0] Epoch[18] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433751939, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 16:22:31,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433751939, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64746, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 16:22:31,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433751939, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679433751939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 16:22:31,939 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433751940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 16:22:31,939 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,939 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:31,940 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:32,776 Node[0] Epoch[19] Batch [0-20]	Speed: 78527.36 samples/sec	accuracy=nan
2023-03-21 16:22:33,610 Node[0] Epoch[19] Batch [20-40]	Speed: 78302.16 samples/sec	accuracy=nan
2023-03-21 16:22:34,442 Node[0] Epoch[19] Batch [40-60]	Speed: 78474.15 samples/sec	accuracy=nan
2023-03-21 16:22:35,273 Node[0] Epoch[19] Batch [60-80]	Speed: 78500.16 samples/sec	accuracy=nan
2023-03-21 16:22:36,105 Node[0] Epoch[19] Batch [80-100]	Speed: 78494.58 samples/sec	accuracy=nan
2023-03-21 16:22:36,938 Node[0] Epoch[19] Batch [100-120]	Speed: 78314.83 samples/sec	accuracy=nan
2023-03-21 16:22:37,772 Node[0] Epoch[19] Batch [120-140]	Speed: 78360.38 samples/sec	accuracy=nan
2023-03-21 16:22:38,604 Node[0] Epoch[19] Batch [140-160]	Speed: 78460.48 samples/sec	accuracy=nan
2023-03-21 16:22:39,433 Node[0] Epoch[19] Batch [160-180]	Speed: 78721.37 samples/sec	accuracy=nan
2023-03-21 16:22:40,263 Node[0] Epoch[19] Batch [180-200]	Speed: 78595.07 samples/sec	accuracy=nan
2023-03-21 16:22:41,092 Node[0] Epoch[19] Batch [200-220]	Speed: 78790.03 samples/sec	accuracy=nan
2023-03-21 16:22:41,922 Node[0] Epoch[19] Batch [220-240]	Speed: 78695.05 samples/sec	accuracy=nan
2023-03-21 16:22:42,751 Node[0] Epoch[19] Batch [240-260]	Speed: 78656.55 samples/sec	accuracy=nan
2023-03-21 16:22:43,584 Node[0] Epoch[19] Batch [260-280]	Speed: 78387.84 samples/sec	accuracy=nan
2023-03-21 16:22:44,416 Node[0] Epoch[19] Batch [280-300]	Speed: 78474.85 samples/sec	accuracy=nan
2023-03-21 16:22:45,250 Node[0] Epoch[19] Batch [300-320]	Speed: 78318.82 samples/sec	accuracy=nan
2023-03-21 16:22:46,081 Node[0] Epoch[19] Batch [320-340]	Speed: 78473.64 samples/sec	accuracy=nan
2023-03-21 16:22:46,913 Node[0] Epoch[19] Batch [340-360]	Speed: 78467.90 samples/sec	accuracy=nan
2023-03-21 16:22:47,746 Node[0] Epoch[19] Batch [360-380]	Speed: 78438.43 samples/sec	accuracy=nan
2023-03-21 16:22:48,246 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,246 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433768247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 16:22:48,247 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[0] Epoch[19] Time cost=16.308
2023-03-21 16:22:48,247 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433768247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78562.29513971589}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-21 16:22:48,247 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,247 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433768248, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 16:22:48,248 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:48,248 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:22:49,126 Node[0] Epoch[20] Batch [0-20]	Speed: 77999.62 samples/sec	accuracy=nan
2023-03-21 16:22:49,957 Node[0] Epoch[20] Batch [20-40]	Speed: 78583.16 samples/sec	accuracy=nan
2023-03-21 16:22:50,793 Node[0] Epoch[20] Batch [40-60]	Speed: 78050.89 samples/sec	accuracy=nan
2023-03-21 16:22:51,628 Node[0] Epoch[20] Batch [60-80]	Speed: 78224.40 samples/sec	accuracy=nan
2023-03-21 16:22:52,457 Node[0] Epoch[20] Batch [80-100]	Speed: 78696.05 samples/sec	accuracy=nan
2023-03-21 16:22:53,291 Node[0] Epoch[20] Batch [100-120]	Speed: 78296.29 samples/sec	accuracy=nan
2023-03-21 16:22:54,127 Node[0] Epoch[20] Batch [120-140]	Speed: 78124.63 samples/sec	accuracy=nan
2023-03-21 16:22:54,959 Node[0] Epoch[20] Batch [140-160]	Speed: 78389.45 samples/sec	accuracy=nan
2023-03-21 16:22:55,790 Node[0] Epoch[20] Batch [160-180]	Speed: 78605.02 samples/sec	accuracy=nan
2023-03-21 16:22:56,619 Node[0] Epoch[20] Batch [180-200]	Speed: 78770.24 samples/sec	accuracy=nan
2023-03-21 16:22:57,450 Node[0] Epoch[20] Batch [200-220]	Speed: 78495.10 samples/sec	accuracy=nan
2023-03-21 16:22:58,280 Node[0] Epoch[20] Batch [220-240]	Speed: 78630.69 samples/sec	accuracy=nan
2023-03-21 16:22:59,110 Node[0] Epoch[20] Batch [240-260]	Speed: 78683.04 samples/sec	accuracy=nan
2023-03-21 16:22:59,942 Node[0] Epoch[20] Batch [260-280]	Speed: 78423.60 samples/sec	accuracy=nan
2023-03-21 16:23:00,777 Node[0] Epoch[20] Batch [280-300]	Speed: 78222.54 samples/sec	accuracy=nan
2023-03-21 16:23:01,610 Node[0] Epoch[20] Batch [300-320]	Speed: 78370.83 samples/sec	accuracy=nan
2023-03-21 16:23:02,443 Node[0] Epoch[20] Batch [320-340]	Speed: 78381.08 samples/sec	accuracy=nan
2023-03-21 16:23:03,273 Node[0] Epoch[20] Batch [340-360]	Speed: 78608.32 samples/sec	accuracy=nan
2023-03-21 16:23:04,106 Node[0] Epoch[20] Batch [360-380]	Speed: 78396.25 samples/sec	accuracy=nan
2023-03-21 16:23:04,562 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,562 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433784563, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 16:23:04,563 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[0] Epoch[20] Time cost=16.315
2023-03-21 16:23:04,563 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433784563, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78525.74010073839}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 16:23:04,563 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433784563, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 16:23:04,563 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:04,563 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:05,439 Node[0] Epoch[21] Batch [0-20]	Speed: 78444.00 samples/sec	accuracy=nan
2023-03-21 16:23:06,273 Node[0] Epoch[21] Batch [20-40]	Speed: 78248.90 samples/sec	accuracy=nan
2023-03-21 16:23:07,103 Node[0] Epoch[21] Batch [40-60]	Speed: 78617.21 samples/sec	accuracy=nan
2023-03-21 16:23:07,936 Node[0] Epoch[21] Batch [60-80]	Speed: 78398.52 samples/sec	accuracy=nan
2023-03-21 16:23:08,770 Node[0] Epoch[21] Batch [80-100]	Speed: 78294.84 samples/sec	accuracy=nan
2023-03-21 16:23:09,605 Node[0] Epoch[21] Batch [100-120]	Speed: 78193.01 samples/sec	accuracy=nan
2023-03-21 16:23:10,440 Node[0] Epoch[21] Batch [120-140]	Speed: 78178.70 samples/sec	accuracy=nan
2023-03-21 16:23:11,273 Node[0] Epoch[21] Batch [140-160]	Speed: 78305.85 samples/sec	accuracy=nan
2023-03-21 16:23:12,103 Node[0] Epoch[21] Batch [160-180]	Speed: 78631.18 samples/sec	accuracy=nan
2023-03-21 16:23:12,932 Node[0] Epoch[21] Batch [180-200]	Speed: 78794.22 samples/sec	accuracy=nan
2023-03-21 16:23:13,760 Node[0] Epoch[21] Batch [200-220]	Speed: 78822.14 samples/sec	accuracy=nan
2023-03-21 16:23:14,591 Node[0] Epoch[21] Batch [220-240]	Speed: 78607.78 samples/sec	accuracy=nan
2023-03-21 16:23:15,423 Node[0] Epoch[21] Batch [240-260]	Speed: 78391.70 samples/sec	accuracy=nan
2023-03-21 16:23:16,254 Node[0] Epoch[21] Batch [260-280]	Speed: 78618.45 samples/sec	accuracy=nan
2023-03-21 16:23:17,087 Node[0] Epoch[21] Batch [280-300]	Speed: 78360.92 samples/sec	accuracy=nan
2023-03-21 16:23:17,932 Node[0] Epoch[21] Batch [300-320]	Speed: 77184.49 samples/sec	accuracy=nan
2023-03-21 16:23:18,764 Node[0] Epoch[21] Batch [320-340]	Speed: 78538.39 samples/sec	accuracy=nan
2023-03-21 16:23:19,595 Node[0] Epoch[21] Batch [340-360]	Speed: 78526.01 samples/sec	accuracy=nan
2023-03-21 16:23:20,427 Node[0] Epoch[21] Batch [360-380]	Speed: 78440.52 samples/sec	accuracy=nan
2023-03-21 16:23:20,924 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,924 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:20,925 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433800925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 16:23:20,926 Node[0] Epoch[21] Time cost=16.362
:::MLLOG {"namespace": "", "time_ms": 1679433800926, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78300.35363314487}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679433800926, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 16:23:20,926 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:21,801 Node[0] Epoch[22] Batch [0-20]	Speed: 78270.57 samples/sec	accuracy=nan
2023-03-21 16:23:22,634 Node[0] Epoch[22] Batch [20-40]	Speed: 78389.21 samples/sec	accuracy=nan
2023-03-21 16:23:23,464 Node[0] Epoch[22] Batch [40-60]	Speed: 78653.77 samples/sec	accuracy=nan
2023-03-21 16:23:24,297 Node[0] Epoch[22] Batch [60-80]	Speed: 78355.24 samples/sec	accuracy=nan
2023-03-21 16:23:25,129 Node[0] Epoch[22] Batch [80-100]	Speed: 78422.70 samples/sec	accuracy=nan
2023-03-21 16:23:25,963 Node[0] Epoch[22] Batch [100-120]	Speed: 78299.38 samples/sec	accuracy=nan
2023-03-21 16:23:26,795 Node[0] Epoch[22] Batch [120-140]	Speed: 78419.81 samples/sec	accuracy=nan
2023-03-21 16:23:27,628 Node[0] Epoch[22] Batch [140-160]	Speed: 78403.44 samples/sec	accuracy=nan
2023-03-21 16:23:28,458 Node[0] Epoch[22] Batch [160-180]	Speed: 78644.10 samples/sec	accuracy=nan
2023-03-21 16:23:29,288 Node[0] Epoch[22] Batch [180-200]	Speed: 78662.02 samples/sec	accuracy=nan
2023-03-21 16:23:30,119 Node[0] Epoch[22] Batch [200-220]	Speed: 78589.45 samples/sec	accuracy=nan
2023-03-21 16:23:30,949 Node[0] Epoch[22] Batch [220-240]	Speed: 78664.91 samples/sec	accuracy=nan
2023-03-21 16:23:31,781 Node[0] Epoch[22] Batch [240-260]	Speed: 78451.94 samples/sec	accuracy=nan
2023-03-21 16:23:32,611 Node[0] Epoch[22] Batch [260-280]	Speed: 78596.18 samples/sec	accuracy=nan
2023-03-21 16:23:33,442 Node[0] Epoch[22] Batch [280-300]	Speed: 78590.90 samples/sec	accuracy=nan
2023-03-21 16:23:34,276 Node[0] Epoch[22] Batch [300-320]	Speed: 78250.24 samples/sec	accuracy=nan
2023-03-21 16:23:35,106 Node[0] Epoch[22] Batch [320-340]	Speed: 78695.41 samples/sec	accuracy=nan
2023-03-21 16:23:35,935 Node[0] Epoch[22] Batch [340-360]	Speed: 78710.37 samples/sec	accuracy=nan
2023-03-21 16:23:36,765 Node[0] Epoch[22] Batch [360-380]	Speed: 78617.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433817222, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 16:23:37,223 Node[0] Epoch[22] Time cost=16.297
:::MLLOG {"namespace": "", "time_ms": 1679433817223, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78612.65604578303}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679433817261, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 16:23:37,452 Node[0] Epoch[22] Validation-accuracy=0.685659
2023-03-21 16:23:37,452 Node[0] Epoch[22] Validation-correct-count=1071.000000
2023-03-21 16:23:37,452 Node[0] Epoch[22] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433817472, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679433817473, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68962, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 16:23:37,472 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433817473, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679433817473, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 16:23:37,472 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433817473, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 16:23:37,473 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,472 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:37,473 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:38,310 Node[0] Epoch[23] Batch [0-20]	Speed: 78464.01 samples/sec	accuracy=nan
2023-03-21 16:23:39,143 Node[0] Epoch[23] Batch [20-40]	Speed: 78424.59 samples/sec	accuracy=nan
2023-03-21 16:23:39,974 Node[0] Epoch[23] Batch [40-60]	Speed: 78500.97 samples/sec	accuracy=nan
2023-03-21 16:23:40,811 Node[0] Epoch[23] Batch [60-80]	Speed: 77992.15 samples/sec	accuracy=nan
2023-03-21 16:23:41,645 Node[0] Epoch[23] Batch [80-100]	Speed: 78254.80 samples/sec	accuracy=nan
2023-03-21 16:23:42,477 Node[0] Epoch[23] Batch [100-120]	Speed: 78508.98 samples/sec	accuracy=nan
2023-03-21 16:23:43,311 Node[0] Epoch[23] Batch [120-140]	Speed: 78226.43 samples/sec	accuracy=nan
2023-03-21 16:23:44,140 Node[0] Epoch[23] Batch [140-160]	Speed: 78777.58 samples/sec	accuracy=nan
2023-03-21 16:23:44,971 Node[0] Epoch[23] Batch [160-180]	Speed: 78548.67 samples/sec	accuracy=nan
2023-03-21 16:23:45,805 Node[0] Epoch[23] Batch [180-200]	Speed: 78302.22 samples/sec	accuracy=nan
2023-03-21 16:23:46,635 Node[0] Epoch[23] Batch [200-220]	Speed: 78589.54 samples/sec	accuracy=nan
2023-03-21 16:23:47,468 Node[0] Epoch[23] Batch [220-240]	Speed: 78462.50 samples/sec	accuracy=nan
2023-03-21 16:23:48,302 Node[0] Epoch[23] Batch [240-260]	Speed: 78253.06 samples/sec	accuracy=nan
2023-03-21 16:23:49,131 Node[0] Epoch[23] Batch [260-280]	Speed: 78693.85 samples/sec	accuracy=nan
2023-03-21 16:23:49,964 Node[0] Epoch[23] Batch [280-300]	Speed: 78351.43 samples/sec	accuracy=nan
2023-03-21 16:23:50,800 Node[0] Epoch[23] Batch [300-320]	Speed: 78110.36 samples/sec	accuracy=nan
2023-03-21 16:23:51,630 Node[0] Epoch[23] Batch [320-340]	Speed: 78625.34 samples/sec	accuracy=nan
2023-03-21 16:23:52,460 Node[0] Epoch[23] Batch [340-360]	Speed: 78646.81 samples/sec	accuracy=nan
2023-03-21 16:23:53,293 Node[0] Epoch[23] Batch [360-380]	Speed: 78413.07 samples/sec	accuracy=nan
2023-03-21 16:23:53,789 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,790 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,791 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,791 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,791 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,791 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433833790, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 16:23:53,791 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:53,791 Node[0] Epoch[23] Time cost=16.318
2023-03-21 16:23:53,791 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433833791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78513.05292836118}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679433833791, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 16:23:53,791 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:23:54,668 Node[0] Epoch[24] Batch [0-20]	Speed: 78222.39 samples/sec	accuracy=nan
2023-03-21 16:23:55,498 Node[0] Epoch[24] Batch [20-40]	Speed: 78629.40 samples/sec	accuracy=nan
2023-03-21 16:23:56,329 Node[0] Epoch[24] Batch [40-60]	Speed: 78530.06 samples/sec	accuracy=nan
2023-03-21 16:23:57,162 Node[0] Epoch[24] Batch [60-80]	Speed: 78409.03 samples/sec	accuracy=nan
2023-03-21 16:23:57,994 Node[0] Epoch[24] Batch [80-100]	Speed: 78432.23 samples/sec	accuracy=nan
2023-03-21 16:23:58,827 Node[0] Epoch[24] Batch [100-120]	Speed: 78321.89 samples/sec	accuracy=nan
2023-03-21 16:23:59,661 Node[0] Epoch[24] Batch [120-140]	Speed: 78271.11 samples/sec	accuracy=nan
2023-03-21 16:24:00,499 Node[0] Epoch[24] Batch [140-160]	Speed: 77962.31 samples/sec	accuracy=nan
2023-03-21 16:24:01,330 Node[0] Epoch[24] Batch [160-180]	Speed: 78510.47 samples/sec	accuracy=nan
2023-03-21 16:24:02,160 Node[0] Epoch[24] Batch [180-200]	Speed: 78714.94 samples/sec	accuracy=nan
2023-03-21 16:24:02,991 Node[0] Epoch[24] Batch [200-220]	Speed: 78493.27 samples/sec	accuracy=nan
2023-03-21 16:24:03,824 Node[0] Epoch[24] Batch [220-240]	Speed: 78367.13 samples/sec	accuracy=nan
2023-03-21 16:24:04,655 Node[0] Epoch[24] Batch [240-260]	Speed: 78586.32 samples/sec	accuracy=nan
2023-03-21 16:24:05,484 Node[0] Epoch[24] Batch [260-280]	Speed: 78744.28 samples/sec	accuracy=nan
2023-03-21 16:24:06,316 Node[0] Epoch[24] Batch [280-300]	Speed: 78436.41 samples/sec	accuracy=nan
2023-03-21 16:24:07,150 Node[0] Epoch[24] Batch [300-320]	Speed: 78326.39 samples/sec	accuracy=nan
2023-03-21 16:24:07,984 Node[0] Epoch[24] Batch [320-340]	Speed: 78286.91 samples/sec	accuracy=nan
2023-03-21 16:24:08,814 Node[0] Epoch[24] Batch [340-360]	Speed: 78579.21 samples/sec	accuracy=nan
2023-03-21 16:24:09,651 Node[0] Epoch[24] Batch [360-380]	Speed: 78010.73 samples/sec	accuracy=nan
2023-03-21 16:24:10,106 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,106 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433850107, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 16:24:10,107 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,107 Node[0] Epoch[24] Time cost=16.316
2023-03-21 16:24:10,107 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433850107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78522.46752391933}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679433850107, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 16:24:10,107 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:10,981 Node[0] Epoch[25] Batch [0-20]	Speed: 78588.24 samples/sec	accuracy=nan
2023-03-21 16:24:11,813 Node[0] Epoch[25] Batch [20-40]	Speed: 78436.50 samples/sec	accuracy=nan
2023-03-21 16:24:12,647 Node[0] Epoch[25] Batch [40-60]	Speed: 78257.69 samples/sec	accuracy=nan
2023-03-21 16:24:13,480 Node[0] Epoch[25] Batch [60-80]	Speed: 78422.14 samples/sec	accuracy=nan
2023-03-21 16:24:14,318 Node[0] Epoch[25] Batch [80-100]	Speed: 77868.72 samples/sec	accuracy=nan
2023-03-21 16:24:15,155 Node[0] Epoch[25] Batch [100-120]	Speed: 77971.94 samples/sec	accuracy=nan
2023-03-21 16:24:15,989 Node[0] Epoch[25] Batch [120-140]	Speed: 78308.29 samples/sec	accuracy=nan
2023-03-21 16:24:16,820 Node[0] Epoch[25] Batch [140-160]	Speed: 78531.12 samples/sec	accuracy=nan
2023-03-21 16:24:17,652 Node[0] Epoch[25] Batch [160-180]	Speed: 78441.26 samples/sec	accuracy=nan
2023-03-21 16:24:18,482 Node[0] Epoch[25] Batch [180-200]	Speed: 78702.31 samples/sec	accuracy=nan
2023-03-21 16:24:19,314 Node[0] Epoch[25] Batch [200-220]	Speed: 78405.34 samples/sec	accuracy=nan
2023-03-21 16:24:20,146 Node[0] Epoch[25] Batch [220-240]	Speed: 78527.02 samples/sec	accuracy=nan
2023-03-21 16:24:20,981 Node[0] Epoch[25] Batch [240-260]	Speed: 78165.58 samples/sec	accuracy=nan
2023-03-21 16:24:21,813 Node[0] Epoch[25] Batch [260-280]	Speed: 78424.50 samples/sec	accuracy=nan
2023-03-21 16:24:22,650 Node[0] Epoch[25] Batch [280-300]	Speed: 78005.68 samples/sec	accuracy=nan
2023-03-21 16:24:23,483 Node[0] Epoch[25] Batch [300-320]	Speed: 78343.96 samples/sec	accuracy=nan
2023-03-21 16:24:24,320 Node[0] Epoch[25] Batch [320-340]	Speed: 78048.98 samples/sec	accuracy=nan
2023-03-21 16:24:25,150 Node[0] Epoch[25] Batch [340-360]	Speed: 78659.17 samples/sec	accuracy=nan
2023-03-21 16:24:25,984 Node[0] Epoch[25] Batch [360-380]	Speed: 78209.83 samples/sec	accuracy=nan
2023-03-21 16:24:26,481 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,481 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:26,482 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433866482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 16:24:26,483 Node[0] Epoch[25] Time cost=16.375
:::MLLOG {"namespace": "", "time_ms": 1679433866483, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78238.30276655105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679433866483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 16:24:26,483 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:27,357 Node[0] Epoch[26] Batch [0-20]	Speed: 78293.69 samples/sec	accuracy=nan
2023-03-21 16:24:28,189 Node[0] Epoch[26] Batch [20-40]	Speed: 78528.87 samples/sec	accuracy=nan
2023-03-21 16:24:29,020 Node[0] Epoch[26] Batch [40-60]	Speed: 78524.68 samples/sec	accuracy=nan
2023-03-21 16:24:29,854 Node[0] Epoch[26] Batch [60-80]	Speed: 78287.96 samples/sec	accuracy=nan
2023-03-21 16:24:30,688 Node[0] Epoch[26] Batch [80-100]	Speed: 78278.03 samples/sec	accuracy=nan
2023-03-21 16:24:31,520 Node[0] Epoch[26] Batch [100-120]	Speed: 78419.78 samples/sec	accuracy=nan
2023-03-21 16:24:32,352 Node[0] Epoch[26] Batch [120-140]	Speed: 78469.97 samples/sec	accuracy=nan
2023-03-21 16:24:33,186 Node[0] Epoch[26] Batch [140-160]	Speed: 78277.15 samples/sec	accuracy=nan
2023-03-21 16:24:34,018 Node[0] Epoch[26] Batch [160-180]	Speed: 78489.67 samples/sec	accuracy=nan
2023-03-21 16:24:34,849 Node[0] Epoch[26] Batch [180-200]	Speed: 78529.90 samples/sec	accuracy=nan
2023-03-21 16:24:35,685 Node[0] Epoch[26] Batch [200-220]	Speed: 78049.42 samples/sec	accuracy=nan
2023-03-21 16:24:36,514 Node[0] Epoch[26] Batch [220-240]	Speed: 78831.88 samples/sec	accuracy=nan
2023-03-21 16:24:37,344 Node[0] Epoch[26] Batch [240-260]	Speed: 78626.56 samples/sec	accuracy=nan
2023-03-21 16:24:38,178 Node[0] Epoch[26] Batch [260-280]	Speed: 78245.68 samples/sec	accuracy=nan
2023-03-21 16:24:39,009 Node[0] Epoch[26] Batch [280-300]	Speed: 78536.89 samples/sec	accuracy=nan
2023-03-21 16:24:39,841 Node[0] Epoch[26] Batch [300-320]	Speed: 78465.04 samples/sec	accuracy=nan
2023-03-21 16:24:40,692 Node[0] Epoch[26] Batch [320-340]	Speed: 76770.14 samples/sec	accuracy=nan
2023-03-21 16:24:41,521 Node[0] Epoch[26] Batch [340-360]	Speed: 78746.50 samples/sec	accuracy=nan
2023-03-21 16:24:42,353 Node[0] Epoch[26] Batch [360-380]	Speed: 78469.74 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433882850, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 16:24:42,851 Node[0] Epoch[26] Time cost=16.368
:::MLLOG {"namespace": "", "time_ms": 1679433882851, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78273.60893134213}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679433882889, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 16:24:43,079 Node[0] Epoch[26] Validation-accuracy=0.731114
2023-03-21 16:24:43,080 Node[0] Epoch[26] Validation-correct-count=1142.000000
2023-03-21 16:24:43,080 Node[0] Epoch[26] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433883104, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679433883104, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73024, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 16:24:43,104 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433883104, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679433883104, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 16:24:43,104 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433883104, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 16:24:43,104 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,105 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,104 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:43,948 Node[0] Epoch[27] Batch [0-20]	Speed: 77894.17 samples/sec	accuracy=nan
2023-03-21 16:24:44,787 Node[0] Epoch[27] Batch [20-40]	Speed: 77735.72 samples/sec	accuracy=nan
2023-03-21 16:24:45,623 Node[0] Epoch[27] Batch [40-60]	Speed: 78165.84 samples/sec	accuracy=nan
2023-03-21 16:24:46,455 Node[0] Epoch[27] Batch [60-80]	Speed: 78422.84 samples/sec	accuracy=nan
2023-03-21 16:24:47,288 Node[0] Epoch[27] Batch [80-100]	Speed: 78321.26 samples/sec	accuracy=nan
2023-03-21 16:24:48,120 Node[0] Epoch[27] Batch [100-120]	Speed: 78497.60 samples/sec	accuracy=nan
2023-03-21 16:24:48,953 Node[0] Epoch[27] Batch [120-140]	Speed: 78380.30 samples/sec	accuracy=nan
2023-03-21 16:24:49,786 Node[0] Epoch[27] Batch [140-160]	Speed: 78366.25 samples/sec	accuracy=nan
2023-03-21 16:24:50,617 Node[0] Epoch[27] Batch [160-180]	Speed: 78571.75 samples/sec	accuracy=nan
2023-03-21 16:24:51,448 Node[0] Epoch[27] Batch [180-200]	Speed: 78576.58 samples/sec	accuracy=nan
2023-03-21 16:24:52,278 Node[0] Epoch[27] Batch [200-220]	Speed: 78606.04 samples/sec	accuracy=nan
2023-03-21 16:24:53,109 Node[0] Epoch[27] Batch [220-240]	Speed: 78570.44 samples/sec	accuracy=nan
2023-03-21 16:24:53,941 Node[0] Epoch[27] Batch [240-260]	Speed: 78434.61 samples/sec	accuracy=nan
2023-03-21 16:24:54,773 Node[0] Epoch[27] Batch [260-280]	Speed: 78513.33 samples/sec	accuracy=nan
2023-03-21 16:24:55,606 Node[0] Epoch[27] Batch [280-300]	Speed: 78337.37 samples/sec	accuracy=nan
2023-03-21 16:24:56,436 Node[0] Epoch[27] Batch [300-320]	Speed: 78606.58 samples/sec	accuracy=nan
2023-03-21 16:24:57,266 Node[0] Epoch[27] Batch [320-340]	Speed: 78688.74 samples/sec	accuracy=nan
2023-03-21 16:24:58,099 Node[0] Epoch[27] Batch [340-360]	Speed: 78384.49 samples/sec	accuracy=nan
2023-03-21 16:24:58,930 Node[0] Epoch[27] Batch [360-380]	Speed: 78544.52 samples/sec	accuracy=nan
2023-03-21 16:24:59,389 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433899389, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 16:24:59,389 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[0] Epoch[27] Time cost=16.285
2023-03-21 16:24:59,389 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,389 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433899390, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78671.2225859916}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-21 16:24:59,390 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433899390, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 16:24:59,390 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:24:59,390 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:00,265 Node[0] Epoch[28] Batch [0-20]	Speed: 78285.95 samples/sec	accuracy=nan
2023-03-21 16:25:01,098 Node[0] Epoch[28] Batch [20-40]	Speed: 78382.54 samples/sec	accuracy=nan
2023-03-21 16:25:01,931 Node[0] Epoch[28] Batch [40-60]	Speed: 78342.57 samples/sec	accuracy=nan
2023-03-21 16:25:02,764 Node[0] Epoch[28] Batch [60-80]	Speed: 78432.88 samples/sec	accuracy=nan
2023-03-21 16:25:03,597 Node[0] Epoch[28] Batch [80-100]	Speed: 78355.82 samples/sec	accuracy=nan
2023-03-21 16:25:04,430 Node[0] Epoch[28] Batch [100-120]	Speed: 78371.28 samples/sec	accuracy=nan
2023-03-21 16:25:05,263 Node[0] Epoch[28] Batch [120-140]	Speed: 78319.38 samples/sec	accuracy=nan
2023-03-21 16:25:06,095 Node[0] Epoch[28] Batch [140-160]	Speed: 78486.03 samples/sec	accuracy=nan
2023-03-21 16:25:06,926 Node[0] Epoch[28] Batch [160-180]	Speed: 78539.97 samples/sec	accuracy=nan
2023-03-21 16:25:07,755 Node[0] Epoch[28] Batch [180-200]	Speed: 78760.90 samples/sec	accuracy=nan
2023-03-21 16:25:08,586 Node[0] Epoch[28] Batch [200-220]	Speed: 78580.12 samples/sec	accuracy=nan
2023-03-21 16:25:09,416 Node[0] Epoch[28] Batch [220-240]	Speed: 78666.90 samples/sec	accuracy=nan
2023-03-21 16:25:10,248 Node[0] Epoch[28] Batch [240-260]	Speed: 78461.09 samples/sec	accuracy=nan
2023-03-21 16:25:11,079 Node[0] Epoch[28] Batch [260-280]	Speed: 78505.38 samples/sec	accuracy=nan
2023-03-21 16:25:11,913 Node[0] Epoch[28] Batch [280-300]	Speed: 78331.64 samples/sec	accuracy=nan
2023-03-21 16:25:12,747 Node[0] Epoch[28] Batch [300-320]	Speed: 78254.96 samples/sec	accuracy=nan
2023-03-21 16:25:13,580 Node[0] Epoch[28] Batch [320-340]	Speed: 78371.32 samples/sec	accuracy=nan
2023-03-21 16:25:14,412 Node[0] Epoch[28] Batch [340-360]	Speed: 78436.57 samples/sec	accuracy=nan
2023-03-21 16:25:15,247 Node[0] Epoch[28] Batch [360-380]	Speed: 78208.42 samples/sec	accuracy=nan
2023-03-21 16:25:15,744 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,745 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433915745, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 16:25:15,746 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[0] Epoch[28] Time cost=16.356
2023-03-21 16:25:15,746 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433915746, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78330.83650961274}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679433915746, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 16:25:15,746 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:15,746 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:16,620 Node[0] Epoch[29] Batch [0-20]	Speed: 78529.97 samples/sec	accuracy=nan
2023-03-21 16:25:17,451 Node[0] Epoch[29] Batch [20-40]	Speed: 78531.34 samples/sec	accuracy=nan
2023-03-21 16:25:18,285 Node[0] Epoch[29] Batch [40-60]	Speed: 78271.85 samples/sec	accuracy=nan
2023-03-21 16:25:19,117 Node[0] Epoch[29] Batch [60-80]	Speed: 78524.88 samples/sec	accuracy=nan
2023-03-21 16:25:19,951 Node[0] Epoch[29] Batch [80-100]	Speed: 78241.61 samples/sec	accuracy=nan
2023-03-21 16:25:20,783 Node[0] Epoch[29] Batch [100-120]	Speed: 78426.81 samples/sec	accuracy=nan
2023-03-21 16:25:21,615 Node[0] Epoch[29] Batch [120-140]	Speed: 78477.89 samples/sec	accuracy=nan
2023-03-21 16:25:22,448 Node[0] Epoch[29] Batch [140-160]	Speed: 78413.20 samples/sec	accuracy=nan
2023-03-21 16:25:23,279 Node[0] Epoch[29] Batch [160-180]	Speed: 78562.01 samples/sec	accuracy=nan
2023-03-21 16:25:24,110 Node[0] Epoch[29] Batch [180-200]	Speed: 78533.64 samples/sec	accuracy=nan
2023-03-21 16:25:24,939 Node[0] Epoch[29] Batch [200-220]	Speed: 78724.04 samples/sec	accuracy=nan
2023-03-21 16:25:28,255 Node[0] Epoch[29] Batch [220-240]	Speed: 19684.40 samples/sec	accuracy=nan
2023-03-21 16:25:29,085 Node[0] Epoch[29] Batch [240-260]	Speed: 78673.48 samples/sec	accuracy=nan
2023-03-21 16:25:29,916 Node[0] Epoch[29] Batch [260-280]	Speed: 78541.30 samples/sec	accuracy=nan
2023-03-21 16:25:35,403 Node[0] Epoch[29] Batch [280-300]	Speed: 11897.49 samples/sec	accuracy=nan
2023-03-21 16:25:36,233 Node[0] Epoch[29] Batch [300-320]	Speed: 78656.48 samples/sec	accuracy=nan
2023-03-21 16:25:37,064 Node[0] Epoch[29] Batch [320-340]	Speed: 78555.32 samples/sec	accuracy=nan
2023-03-21 16:25:37,893 Node[0] Epoch[29] Batch [340-360]	Speed: 78755.81 samples/sec	accuracy=nan
2023-03-21 16:25:38,722 Node[0] Epoch[29] Batch [360-380]	Speed: 78754.06 samples/sec	accuracy=nan
2023-03-21 16:25:39,178 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,178 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:39,179 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433939179, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 16:25:39,180 Node[0] Epoch[29] Time cost=23.433
:::MLLOG {"namespace": "", "time_ms": 1679433939180, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 54672.72687504853}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679433939180, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 16:25:39,180 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:40,055 Node[0] Epoch[30] Batch [0-20]	Speed: 78523.12 samples/sec	accuracy=nan
2023-03-21 16:25:40,885 Node[0] Epoch[30] Batch [20-40]	Speed: 78619.42 samples/sec	accuracy=nan
2023-03-21 16:25:41,720 Node[0] Epoch[30] Batch [40-60]	Speed: 78182.23 samples/sec	accuracy=nan
2023-03-21 16:25:42,551 Node[0] Epoch[30] Batch [60-80]	Speed: 78579.69 samples/sec	accuracy=nan
2023-03-21 16:25:43,383 Node[0] Epoch[30] Batch [80-100]	Speed: 78409.61 samples/sec	accuracy=nan
2023-03-21 16:25:44,217 Node[0] Epoch[30] Batch [100-120]	Speed: 78239.75 samples/sec	accuracy=nan
2023-03-21 16:25:45,046 Node[0] Epoch[30] Batch [120-140]	Speed: 78783.22 samples/sec	accuracy=nan
2023-03-21 16:25:45,875 Node[0] Epoch[30] Batch [140-160]	Speed: 78727.86 samples/sec	accuracy=nan
2023-03-21 16:25:46,705 Node[0] Epoch[30] Batch [160-180]	Speed: 78696.88 samples/sec	accuracy=nan
2023-03-21 16:25:47,533 Node[0] Epoch[30] Batch [180-200]	Speed: 78789.07 samples/sec	accuracy=nan
2023-03-21 16:25:48,366 Node[0] Epoch[30] Batch [200-220]	Speed: 78423.89 samples/sec	accuracy=nan
2023-03-21 16:25:49,197 Node[0] Epoch[30] Batch [220-240]	Speed: 78523.98 samples/sec	accuracy=nan
2023-03-21 16:25:50,026 Node[0] Epoch[30] Batch [240-260]	Speed: 78745.30 samples/sec	accuracy=nan
2023-03-21 16:25:50,856 Node[0] Epoch[30] Batch [260-280]	Speed: 78670.90 samples/sec	accuracy=nan
2023-03-21 16:25:53,937 Node[0] Epoch[30] Batch [280-300]	Speed: 21184.61 samples/sec	accuracy=nan
2023-03-21 16:25:54,770 Node[0] Epoch[30] Batch [300-320]	Speed: 78444.12 samples/sec	accuracy=nan
2023-03-21 16:25:55,601 Node[0] Epoch[30] Batch [320-340]	Speed: 78502.64 samples/sec	accuracy=nan
2023-03-21 16:25:56,430 Node[0] Epoch[30] Batch [340-360]	Speed: 78722.45 samples/sec	accuracy=nan
2023-03-21 16:25:57,260 Node[0] Epoch[30] Batch [360-380]	Speed: 78643.43 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679433957761, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 16:25:57,762 Node[0] Epoch[30] Time cost=18.582
:::MLLOG {"namespace": "", "time_ms": 1679433957762, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 68946.24855961773}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679433957800, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 16:25:57,990 Node[0] Epoch[30] Validation-accuracy=0.745839
2023-03-21 16:25:57,990 Node[0] Epoch[30] Validation-correct-count=1165.000000
2023-03-21 16:25:57,990 Node[0] Epoch[30] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679433958012, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679433958012, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74848, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 16:25:58,012 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433958012, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 16:25:58,012 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433958012, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 16:25:58,012 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433958012, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 16:25:58,012 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,012 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:25:58,852 Node[0] Epoch[31] Batch [0-20]	Speed: 78267.13 samples/sec	accuracy=nan
2023-03-21 16:25:59,683 Node[0] Epoch[31] Batch [20-40]	Speed: 78523.06 samples/sec	accuracy=nan
2023-03-21 16:26:00,513 Node[0] Epoch[31] Batch [40-60]	Speed: 78598.91 samples/sec	accuracy=nan
2023-03-21 16:26:01,344 Node[0] Epoch[31] Batch [60-80]	Speed: 78633.58 samples/sec	accuracy=nan
2023-03-21 16:26:02,177 Node[0] Epoch[31] Batch [80-100]	Speed: 78319.25 samples/sec	accuracy=nan
2023-03-21 16:26:03,010 Node[0] Epoch[31] Batch [100-120]	Speed: 78358.65 samples/sec	accuracy=nan
2023-03-21 16:26:03,843 Node[0] Epoch[31] Batch [120-140]	Speed: 78353.56 samples/sec	accuracy=nan
2023-03-21 16:26:04,675 Node[0] Epoch[31] Batch [140-160]	Speed: 78480.47 samples/sec	accuracy=nan
2023-03-21 16:26:05,504 Node[0] Epoch[31] Batch [160-180]	Speed: 78760.61 samples/sec	accuracy=nan
2023-03-21 16:26:06,333 Node[0] Epoch[31] Batch [180-200]	Speed: 78785.27 samples/sec	accuracy=nan
2023-03-21 16:26:07,168 Node[0] Epoch[31] Batch [200-220]	Speed: 78167.63 samples/sec	accuracy=nan
2023-03-21 16:26:07,998 Node[0] Epoch[31] Batch [220-240]	Speed: 78624.68 samples/sec	accuracy=nan
2023-03-21 16:26:08,828 Node[0] Epoch[31] Batch [240-260]	Speed: 78612.72 samples/sec	accuracy=nan
2023-03-21 16:26:09,658 Node[0] Epoch[31] Batch [260-280]	Speed: 78712.45 samples/sec	accuracy=nan
2023-03-21 16:26:10,488 Node[0] Epoch[31] Batch [280-300]	Speed: 78593.02 samples/sec	accuracy=nan
2023-03-21 16:26:11,319 Node[0] Epoch[31] Batch [300-320]	Speed: 78568.08 samples/sec	accuracy=nan
2023-03-21 16:26:12,152 Node[0] Epoch[31] Batch [320-340]	Speed: 78394.86 samples/sec	accuracy=nan
2023-03-21 16:26:12,981 Node[0] Epoch[31] Batch [340-360]	Speed: 78703.65 samples/sec	accuracy=nan
2023-03-21 16:26:13,816 Node[0] Epoch[31] Batch [360-380]	Speed: 78240.96 samples/sec	accuracy=nan
2023-03-21 16:26:14,270 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,270 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433974271, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 16:26:14,271 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[0] Epoch[31] Time cost=16.259
2023-03-21 16:26:14,271 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433974271, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78799.77761350904}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-21 16:26:14,271 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433974271, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 16:26:14,271 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:14,271 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:15,144 Node[0] Epoch[32] Batch [0-20]	Speed: 78526.68 samples/sec	accuracy=nan
2023-03-21 16:26:15,974 Node[0] Epoch[32] Batch [20-40]	Speed: 78634.44 samples/sec	accuracy=nan
2023-03-21 16:26:16,807 Node[0] Epoch[32] Batch [40-60]	Speed: 78385.01 samples/sec	accuracy=nan
2023-03-21 16:26:17,640 Node[0] Epoch[32] Batch [60-80]	Speed: 78356.54 samples/sec	accuracy=nan
2023-03-21 16:26:18,473 Node[0] Epoch[32] Batch [80-100]	Speed: 78356.00 samples/sec	accuracy=nan
2023-03-21 16:26:19,307 Node[0] Epoch[32] Batch [100-120]	Speed: 78298.44 samples/sec	accuracy=nan
2023-03-21 16:26:20,139 Node[0] Epoch[32] Batch [120-140]	Speed: 78474.71 samples/sec	accuracy=nan
2023-03-21 16:26:20,971 Node[0] Epoch[32] Batch [140-160]	Speed: 78417.45 samples/sec	accuracy=nan
2023-03-21 16:26:21,802 Node[0] Epoch[32] Batch [160-180]	Speed: 78639.18 samples/sec	accuracy=nan
2023-03-21 16:26:22,631 Node[0] Epoch[32] Batch [180-200]	Speed: 78706.77 samples/sec	accuracy=nan
2023-03-21 16:26:23,462 Node[0] Epoch[32] Batch [200-220]	Speed: 78576.35 samples/sec	accuracy=nan
2023-03-21 16:26:24,294 Node[0] Epoch[32] Batch [220-240]	Speed: 78423.11 samples/sec	accuracy=nan
2023-03-21 16:26:25,127 Node[0] Epoch[32] Batch [240-260]	Speed: 78404.18 samples/sec	accuracy=nan
2023-03-21 16:26:25,956 Node[0] Epoch[32] Batch [260-280]	Speed: 78733.79 samples/sec	accuracy=nan
2023-03-21 16:26:26,786 Node[0] Epoch[32] Batch [280-300]	Speed: 78638.61 samples/sec	accuracy=nan
2023-03-21 16:26:27,619 Node[0] Epoch[32] Batch [300-320]	Speed: 78362.31 samples/sec	accuracy=nan
2023-03-21 16:26:28,450 Node[0] Epoch[32] Batch [320-340]	Speed: 78584.22 samples/sec	accuracy=nan
2023-03-21 16:26:29,280 Node[0] Epoch[32] Batch [340-360]	Speed: 78654.36 samples/sec	accuracy=nan
2023-03-21 16:26:32,556 Node[0] Epoch[32] Batch [360-380]	Speed: 19922.40 samples/sec	accuracy=nan
2023-03-21 16:26:33,053 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,053 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433993054, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 16:26:33,054 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[0] Epoch[32] Time cost=18.783
2023-03-21 16:26:33,054 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,054 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433993054, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 68208.83918908259}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-21 16:26:33,054 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679433993055, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 16:26:33,055 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:33,927 Node[0] Epoch[33] Batch [0-20]	Speed: 78555.99 samples/sec	accuracy=nan
2023-03-21 16:26:34,760 Node[0] Epoch[33] Batch [20-40]	Speed: 78355.71 samples/sec	accuracy=nan
2023-03-21 16:26:35,592 Node[0] Epoch[33] Batch [40-60]	Speed: 78468.06 samples/sec	accuracy=nan
2023-03-21 16:26:36,428 Node[0] Epoch[33] Batch [60-80]	Speed: 78141.97 samples/sec	accuracy=nan
2023-03-21 16:26:37,259 Node[0] Epoch[33] Batch [80-100]	Speed: 78493.07 samples/sec	accuracy=nan
2023-03-21 16:26:38,092 Node[0] Epoch[33] Batch [100-120]	Speed: 78363.52 samples/sec	accuracy=nan
2023-03-21 16:26:38,924 Node[0] Epoch[33] Batch [120-140]	Speed: 78452.77 samples/sec	accuracy=nan
2023-03-21 16:26:39,754 Node[0] Epoch[33] Batch [140-160]	Speed: 78638.95 samples/sec	accuracy=nan
2023-03-21 16:26:40,585 Node[0] Epoch[33] Batch [160-180]	Speed: 78628.36 samples/sec	accuracy=nan
2023-03-21 16:26:41,414 Node[0] Epoch[33] Batch [180-200]	Speed: 78706.50 samples/sec	accuracy=nan
2023-03-21 16:26:42,243 Node[0] Epoch[33] Batch [200-220]	Speed: 78745.39 samples/sec	accuracy=nan
2023-03-21 16:26:43,072 Node[0] Epoch[33] Batch [220-240]	Speed: 78747.13 samples/sec	accuracy=nan
2023-03-21 16:26:43,904 Node[0] Epoch[33] Batch [240-260]	Speed: 78496.38 samples/sec	accuracy=nan
2023-03-21 16:26:44,735 Node[0] Epoch[33] Batch [260-280]	Speed: 78565.37 samples/sec	accuracy=nan
2023-03-21 16:26:45,565 Node[0] Epoch[33] Batch [280-300]	Speed: 78606.04 samples/sec	accuracy=nan
2023-03-21 16:26:46,397 Node[0] Epoch[33] Batch [300-320]	Speed: 78466.66 samples/sec	accuracy=nan
2023-03-21 16:26:47,228 Node[0] Epoch[33] Batch [320-340]	Speed: 78551.85 samples/sec	accuracy=nan
2023-03-21 16:26:48,059 Node[0] Epoch[33] Batch [340-360]	Speed: 78549.84 samples/sec	accuracy=nan
2023-03-21 16:26:48,894 Node[0] Epoch[33] Batch [360-380]	Speed: 78229.67 samples/sec	accuracy=nan
2023-03-21 16:26:49,348 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,348 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:49,349 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434009349, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 16:26:49,350 Node[0] Epoch[33] Time cost=16.295
2023-03-21 16:26:49,350 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679434009350, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78623.05163367964}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679434009350, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 16:26:49,350 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 16:26:50,223 Node[0] Epoch[34] Batch [0-20]	Speed: 78570.13 samples/sec	accuracy=nan
2023-03-21 16:26:51,056 Node[0] Epoch[34] Batch [20-40]	Speed: 78354.14 samples/sec	accuracy=nan
2023-03-21 16:26:51,888 Node[0] Epoch[34] Batch [40-60]	Speed: 78475.55 samples/sec	accuracy=nan
2023-03-21 16:26:52,719 Node[0] Epoch[34] Batch [60-80]	Speed: 78537.97 samples/sec	accuracy=nan
2023-03-21 16:26:53,552 Node[0] Epoch[34] Batch [80-100]	Speed: 78365.54 samples/sec	accuracy=nan
2023-03-21 16:26:54,384 Node[0] Epoch[34] Batch [100-120]	Speed: 78456.03 samples/sec	accuracy=nan
2023-03-21 16:26:55,216 Node[0] Epoch[34] Batch [120-140]	Speed: 78475.57 samples/sec	accuracy=nan
2023-03-21 16:26:56,046 Node[0] Epoch[34] Batch [140-160]	Speed: 78648.98 samples/sec	accuracy=nan
2023-03-21 16:26:56,876 Node[0] Epoch[34] Batch [160-180]	Speed: 78625.63 samples/sec	accuracy=nan
2023-03-21 16:26:57,704 Node[0] Epoch[34] Batch [180-200]	Speed: 78859.49 samples/sec	accuracy=nan
2023-03-21 16:26:58,536 Node[0] Epoch[34] Batch [200-220]	Speed: 78433.67 samples/sec	accuracy=nan
2023-03-21 16:26:59,367 Node[0] Epoch[34] Batch [220-240]	Speed: 78570.08 samples/sec	accuracy=nan
2023-03-21 16:27:00,203 Node[0] Epoch[34] Batch [240-260]	Speed: 78085.15 samples/sec	accuracy=nan
2023-03-21 16:27:01,036 Node[0] Epoch[34] Batch [260-280]	Speed: 78356.74 samples/sec	accuracy=nan
2023-03-21 16:27:01,872 Node[0] Epoch[34] Batch [280-300]	Speed: 78154.62 samples/sec	accuracy=nan
2023-03-21 16:27:02,703 Node[0] Epoch[34] Batch [300-320]	Speed: 78542.83 samples/sec	accuracy=nan
2023-03-21 16:27:03,536 Node[0] Epoch[34] Batch [320-340]	Speed: 78375.20 samples/sec	accuracy=nan
2023-03-21 16:27:04,368 Node[0] Epoch[34] Batch [340-360]	Speed: 78468.28 samples/sec	accuracy=nan
2023-03-21 16:27:05,202 Node[0] Epoch[34] Batch [360-380]	Speed: 78243.55 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679434025702, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 16:27:05,702 Node[0] Epoch[34] Time cost=16.352
:::MLLOG {"namespace": "", "time_ms": 1679434025702, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 78348.36860180601}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434025740, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 16:27:05,931 Node[0] Epoch[34] Validation-accuracy=0.762484
2023-03-21 16:27:05,931 Node[0] Epoch[34] Validation-correct-count=1191.000000
2023-03-21 16:27:05,931 Node[0] Epoch[34] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679434025951, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434025951, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7602, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679434025951, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679434025951, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:13 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:13 PM
+ result=687
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,687,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:14 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:14 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:14 PM
+ result=688
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,688,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434035
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:15 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:15 PM
+ result=689
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434035
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:15 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:15 PM
+ result=689
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679434035
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 04:27:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 04:27:15 PM'
ENDING TIMING RUN AT 2023-03-21 04:27:15 PM
+ result=689
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,689,root,2023-03-21 04:15:46 PM'
+ export PROFILE=0
+ PROFILE=0
