+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node042 node043 node044 node045 node046 node047 '
+ echo 'hosts=node040 node041 node042 node043 node044 node045 node046 node047 '
hosts=node040 node041 node042 node043 node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537789813, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537789847, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537789848, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537789850, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537789851, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537803523, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537808659, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537808694, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537808695, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537808696, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537808698, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537820314, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537825262, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537825297, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537825298, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537825300, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537825301, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node042 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node042
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537837349, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537842315, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537842349, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537842351, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537842352, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537842353, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537854118, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537859094, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537859129, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537859130, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537859132, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537859133, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537872014, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537877987, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537878022, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537878023, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537878025, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537878026, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537889818, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537895779, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537895813, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537895815, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537895816, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537895817, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537907581, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537912559, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537912593, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537912595, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537912596, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537912598, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679537924521, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=578
+ SEED=578
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node042: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679537925
+ start=1679537925
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ date '+%Y-%m-%d %r'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ start_fmt='2023-03-22 09:18:45 PM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ SLURM_NTASKS_PER_NODE=4
+ WARMUP_EPOCHS=2
+ OPTIMIZER=sgdwfastlars
+ LARSETA=0.001
+ BATCHSIZE=102
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ LABELSMOOTHING=0.1
+ SEED=578
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=3
+ WARMUP_EPOCHS=2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ DALI_CACHE_SIZE=12288
+ WD=5.0e-05
+ DALI_ROI_DECODE=0
+ LABELSMOOTHING=0.1
+ SEED=578
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREFETCH_QUEUE=3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CACHE_SIZE=12288
+ DALI_DONT_USE_MMAP=0
+ DALI_ROI_DECODE=0
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-fl
+ DALI_PREALLOCATE_HEIGHT=6430
+ BN_GROUP=1
+ PROFILE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEXAMPLES=
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ NETWORK=resnet-v1b-fl
+ DATAROOT=/data
+ BN_GROUP=1
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679537925
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679537925
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ start=1679537925
+ start=1679537925
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-22 09:18:45 PM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly global_rank=2
+ global_rank=2
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ readonly local_rank=0
+ local_rank=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ 0 -ge 1 ]]
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679537925
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=2
+ global_rank=2
++ date +%s
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679537925
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ tr '\n' ,
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ source ./config_8xR750xax4A100.sh
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ date +%s
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ dirname ./config_8xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ dirname ./config_8xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ start=1679537925
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ date '+%Y-%m-%d %r'
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+++ dirname ./config_8xR750xax4A100.sh
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ dirname ./config_8xR750xax4A100.sh
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ dirname ./config_8xR750xax4A100.sh
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ source ./config_8xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ date +%s
+ start=1679537925
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ date +%s
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ date +%s
++ DGXNNODES=8
++ date '+%Y-%m-%d %r'
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ start_fmt='2023-03-22 09:18:45 PM'
++++ readlink -f ./config_8xR750xax4A100.sh
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ [[ 0 -ge 1 ]]
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ source ./config_8xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ start_fmt='2023-03-22 09:18:45 PM'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
+ readonly global_rank=4
+ global_rank=4
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ readonly local_rank=0
+ local_rank=0
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
+ SLURM_NTASKS_PER_NODE=1
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ KVSTORE=horovod
+ LR=10.5
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DGXSYSTEM=8xR750xax4A100
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DGXSYSTEM=8xR750xax4A100
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ date +%s
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ date +%s
++ seq 0 3
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
running benchmark
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ [[ 0 -ge 1 ]]
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ tr '\n' ,
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ sed 's/,$//'
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++ date +%s
++ tr '\n' ,
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ sed 's/,$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ source ./config_8xR750xax4A100.sh
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ start=1679537925
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start=1679537925
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
+ start=1679537925
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ sed 's/\.sh$//'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ start_fmt='2023-03-22 09:18:45 PM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
++ DGXNNODES=8
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly global_rank=3
+ global_rank=3
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ start_fmt='2023-03-22 09:18:45 PM'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly global_rank=3
+ global_rank=3
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ sed 's/^config_//'
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
++ date +%s
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+++ sed 's/^config_//'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ sed 's/^config_//'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ sed 's/\.sh$//'
++ export DGXNNODES=8
++ DGXNNODES=8
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+++ sed 's/\.sh$//'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
++++ readlink -f ./config_8xR750xax4A100.sh
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++++ readlink -f ./config_8xR750xax4A100.sh
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++++ readlink -f ./config_8xR750xax4A100.sh
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
+ start=1679537925
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ start=1679537925
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ export DGXHT=1
+++ DGXHT=1
+ start=1679537925
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ seq 0 3
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ seq 0 3
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ seq 0 3
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ tr '\n' ,
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
++ tr '\n' ,
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ tr '\n' ,
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ date '+%Y-%m-%d %r'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
+++ sed 's/\.sh$//'
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ sed 's/,$//'
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ sed 's/,$//'
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ sed 's/,$//'
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ GPUS=0,1,2,3
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ sed 's/^config_//'
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ start_fmt='2023-03-22 09:18:45 PM'
+ [[ '' -ge 1 ]]
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXNNODES=8
++ DGXNNODES=8
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++++ readlink -f ./config_8xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly global_rank=1
+ global_rank=1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly global_rank=1
+ global_rank=1
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ [[ '' -ge 1 ]]
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+++ sed 's/^config_//'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ date +%s
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ sed 's/\.sh$//'
+ [[ 0 -ge 1 ]]
++ seq 0 3
++++ readlink -f ./config_8xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679537925
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ readonly global_rank=4
+ global_rank=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ date +%s
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ seq 0 3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ tr '\n' ,
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DGXSYSTEM=8xR750xax4A100
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
++ DGXSYSTEM=8xR750xax4A100
+ start=1679537925
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date +%s
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start_fmt='2023-03-22 09:18:45 PM'
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ GPUS=0,1,2,3
++ date +%s
+ DALI_PREALLOCATE_WIDTH=5980
+ GPUS=0,1,2,3
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ GPUS=0,1,2,3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ date +%s
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679537925
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ start=1679537925
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 09:18:45 PM'
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ BATCHSIZE=102
++ date +%s
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ LR=10.5
+ MOM=0.9
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LARSETA=0.001
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=578
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_ROI_DECODE=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_TMP_BUFFER_HINT=355568328
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
running benchmark
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
++ export DGXSYSTEM=8xR750xax4A100
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ DGXSYSTEM=8xR750xax4A100
running benchmark
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ GPUS=0,1,2,3
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
+ start=1679537925
++ seq 0 3
++ sed 's/,$//'
+ start=1679537925
++ tr '\n' ,
++ date +%s
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679537925
+ start=1679537925
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679537925
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679537925
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ start_fmt='2023-03-22 09:18:45 PM'
+ readonly global_rank=6
+ global_rank=6
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly global_rank=6
+ global_rank=6
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ readonly local_rank=0
+ local_rank=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ start_fmt='2023-03-22 09:18:45 PM'
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ start_fmt='2023-03-22 09:18:45 PM'
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ readonly global_rank=5
+ global_rank=5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly global_rank=5
+ global_rank=5
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ GPUS=0,1,2,3
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ readonly local_rank=0
+ local_rank=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ KVSTORE=horovod
+ LR=10.5
+ export NGPUS=1
+ NGPUS=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679537925
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ start_fmt='2023-03-22 09:18:45 PM'
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ readonly global_rank=5
+ global_rank=5
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ seq 0 3
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ '' -ge 1 ]]
++ tr '\n' ,
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ sed 's/,$//'
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ sed 's/,$//'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
++ seq 0 3
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ seq 0 3
+ start=1679537925
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ tr '\n' ,
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
++ tr '\n' ,
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
++ seq 0 3
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
++ tr '\n' ,
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ sed 's/,$//'
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 09:18:45 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:45 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:45 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ [[ '' -ge 1 ]]
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ seq 0 3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679537926
+ start=1679537926
+ start=1679537926
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:18:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:46 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:46 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-22 09:18:46 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:46 PM
+ start_fmt='2023-03-22 09:18:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:46 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:46 PM'
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
STARTING TIMING RUN AT 2023-03-22 09:18:46 PM
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679537926
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:18:46 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:18:46 PM'
STARTING TIMING RUN AT 2023-03-22 09:18:46 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=578
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 578 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node042:31740] MCW rank 10 is not bound (or bound to all available processors)
[node040:40528] MCW rank 2 is not bound (or bound to all available processors)
[node042:31745] MCW rank 8 is not bound (or bound to all available processors)
[node042:31738] MCW rank 9 is not bound (or bound to all available processors)
[node040:40534] MCW rank 0 is not bound (or bound to all available processors)
[node042:31739] MCW rank 11 is not bound (or bound to all available processors)
[node040:40533] MCW rank 1 is not bound (or bound to all available processors)
[node040:40527] MCW rank 3 is not bound (or bound to all available processors)
[node041:30207] MCW rank 5 is not bound (or bound to all available processors)
[node041:30206] MCW rank 4 is not bound (or bound to all available processors)
[node041:30205] MCW rank 6 is not bound (or bound to all available processors)
[node041:30208] MCW rank 7 is not bound (or bound to all available processors)
[node043:33290] MCW rank 15 is not bound (or bound to all available processors)
[node043:33289] MCW rank 12 is not bound (or bound to all available processors)
[node043:33276] MCW rank 14 is not bound (or bound to all available processors)
[node043:33277] MCW rank 13 is not bound (or bound to all available processors)
[node045:24604] MCW rank 21 is not bound (or bound to all available processors)
[node045:24615] MCW rank 20 is not bound (or bound to all available processors)
[node044:28377] MCW rank 19 is not bound (or bound to all available processors)
[node046:18991] MCW rank 25 is not bound (or bound to all available processors)
[node045:24602] MCW rank 22 is not bound (or bound to all available processors)
[node045:24616] MCW rank 23 is not bound (or bound to all available processors)
[node046:18990] MCW rank 26 is not bound (or bound to all available processors)
[node046:18988] MCW rank 24 is not bound (or bound to all available processors)
[node046:18989] MCW rank 27 is not bound (or bound to all available processors)
[node044:28378] MCW rank 17 is not bound (or bound to all available processors)
[node044:28383] MCW rank 16 is not bound (or bound to all available processors)
[node044:28376] MCW rank 18 is not bound (or bound to all available processors)
[node047:26508] MCW rank 30 is not bound (or bound to all available processors)
[node047:26506] MCW rank 31 is not bound (or bound to all available processors)
[node047:26507] MCW rank 28 is not bound (or bound to all available processors)
[node047:26509] MCW rank 29 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679537931084, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[21:18:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:57] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:58] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679537939047, "event_type": "POINT_IN_TIME", "key": "seed", "value": 578, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:18:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679537941136, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 102, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[21:19:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679537945883, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945884, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945885, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945886, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945887, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945888, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945889, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945890, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679537945923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:19:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,865 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60485, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,865 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31299, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,866 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29822, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,866 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31409, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,866 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61678, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,866 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13275, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,866 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36669, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64429, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3254, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23727, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13530, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2386, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39653, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,869 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48569, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,868 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56375, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,869 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36244, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44762, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,869 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25782, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947868, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24422, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[27] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58507, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947870, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679537947870, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679537947870, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[24] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54466, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[31] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38165, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947870, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55398, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[29] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20762, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[28] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28406, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[30] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55433, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[26] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4744, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46175, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,870 Node[25] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26831, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,871 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44746, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,871 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19155, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:19:07,871 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5808, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679537947871, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679537995909, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679537995910, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679537995910, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679537996447, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50016, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679537996467, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679537996468, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 21:19:57,347 Node[0] Epoch[0] Batch [0-20]	Speed: 74863.08 samples/sec	accuracy=nan
2023-03-22 21:19:58,202 Node[0] Epoch[0] Batch [20-40]	Speed: 76287.10 samples/sec	accuracy=nan
2023-03-22 21:19:59,058 Node[0] Epoch[0] Batch [40-60]	Speed: 76279.13 samples/sec	accuracy=nan
2023-03-22 21:19:59,913 Node[0] Epoch[0] Batch [60-80]	Speed: 76312.85 samples/sec	accuracy=nan
2023-03-22 21:20:00,769 Node[0] Epoch[0] Batch [80-100]	Speed: 76307.32 samples/sec	accuracy=nan
2023-03-22 21:20:01,622 Node[0] Epoch[0] Batch [100-120]	Speed: 76521.65 samples/sec	accuracy=nan
2023-03-22 21:20:02,477 Node[0] Epoch[0] Batch [120-140]	Speed: 76380.25 samples/sec	accuracy=nan
2023-03-22 21:20:03,333 Node[0] Epoch[0] Batch [140-160]	Speed: 76203.49 samples/sec	accuracy=nan
2023-03-22 21:20:04,187 Node[0] Epoch[0] Batch [160-180]	Speed: 76457.52 samples/sec	accuracy=nan
2023-03-22 21:20:05,042 Node[0] Epoch[0] Batch [180-200]	Speed: 76350.94 samples/sec	accuracy=nan
2023-03-22 21:20:05,892 Node[0] Epoch[0] Batch [200-220]	Speed: 76826.56 samples/sec	accuracy=nan
2023-03-22 21:20:06,744 Node[0] Epoch[0] Batch [220-240]	Speed: 76609.88 samples/sec	accuracy=nan
2023-03-22 21:20:07,593 Node[0] Epoch[0] Batch [240-260]	Speed: 76855.41 samples/sec	accuracy=nan
2023-03-22 21:20:08,448 Node[0] Epoch[0] Batch [260-280]	Speed: 76416.87 samples/sec	accuracy=nan
2023-03-22 21:20:09,300 Node[0] Epoch[0] Batch [280-300]	Speed: 76606.51 samples/sec	accuracy=nan
2023-03-22 21:20:10,154 Node[0] Epoch[0] Batch [300-320]	Speed: 76433.06 samples/sec	accuracy=nan
2023-03-22 21:20:11,005 Node[0] Epoch[0] Batch [320-340]	Speed: 76687.88 samples/sec	accuracy=nan
2023-03-22 21:20:11,857 Node[0] Epoch[0] Batch [340-360]	Speed: 76593.12 samples/sec	accuracy=nan
2023-03-22 21:20:12,710 Node[0] Epoch[0] Batch [360-380]	Speed: 76531.42 samples/sec	accuracy=nan
2023-03-22 21:20:13,220 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,220 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,220 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,221 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,222 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538013221, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 21:20:13,221 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,222 Node[0] Epoch[0] Time cost=16.754
2023-03-22 21:20:13,222 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:13,222 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538013222, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76468.81716087891}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 21:20:13,222 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538013222, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 21:20:13,222 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:14,115 Node[0] Epoch[1] Batch [0-20]	Speed: 76732.19 samples/sec	accuracy=nan
2023-03-22 21:20:14,966 Node[0] Epoch[1] Batch [20-40]	Speed: 76681.93 samples/sec	accuracy=nan
2023-03-22 21:20:15,821 Node[0] Epoch[1] Batch [40-60]	Speed: 76399.56 samples/sec	accuracy=nan
2023-03-22 21:20:16,673 Node[0] Epoch[1] Batch [60-80]	Speed: 76574.95 samples/sec	accuracy=nan
2023-03-22 21:20:17,528 Node[0] Epoch[1] Batch [80-100]	Speed: 76401.37 samples/sec	accuracy=nan
2023-03-22 21:20:18,379 Node[0] Epoch[1] Batch [100-120]	Speed: 76650.69 samples/sec	accuracy=nan
2023-03-22 21:20:19,233 Node[0] Epoch[1] Batch [120-140]	Speed: 76491.25 samples/sec	accuracy=nan
2023-03-22 21:20:20,086 Node[0] Epoch[1] Batch [140-160]	Speed: 76474.50 samples/sec	accuracy=nan
2023-03-22 21:20:20,935 Node[0] Epoch[1] Batch [160-180]	Speed: 76929.78 samples/sec	accuracy=nan
2023-03-22 21:20:21,786 Node[0] Epoch[1] Batch [180-200]	Speed: 76664.60 samples/sec	accuracy=nan
2023-03-22 21:20:22,640 Node[0] Epoch[1] Batch [200-220]	Speed: 76506.12 samples/sec	accuracy=nan
2023-03-22 21:20:23,492 Node[0] Epoch[1] Batch [220-240]	Speed: 76543.91 samples/sec	accuracy=nan
2023-03-22 21:20:24,347 Node[0] Epoch[1] Batch [240-260]	Speed: 76357.60 samples/sec	accuracy=nan
2023-03-22 21:20:25,201 Node[0] Epoch[1] Batch [260-280]	Speed: 76426.60 samples/sec	accuracy=nan
2023-03-22 21:20:26,055 Node[0] Epoch[1] Batch [280-300]	Speed: 76457.37 samples/sec	accuracy=nan
2023-03-22 21:20:26,910 Node[0] Epoch[1] Batch [300-320]	Speed: 76378.56 samples/sec	accuracy=nan
2023-03-22 21:20:27,765 Node[0] Epoch[1] Batch [320-340]	Speed: 76370.04 samples/sec	accuracy=nan
2023-03-22 21:20:28,618 Node[0] Epoch[1] Batch [340-360]	Speed: 76518.82 samples/sec	accuracy=nan
2023-03-22 21:20:29,469 Node[0] Epoch[1] Batch [360-380]	Speed: 76667.52 samples/sec	accuracy=nan
2023-03-22 21:20:29,981 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538029981, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 21:20:29,981 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[0] Epoch[1] Time cost=16.760
2023-03-22 21:20:29,981 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,981 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538029982, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76444.17769189907}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-22 21:20:29,982 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538029982, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 21:20:29,982 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:29,982 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:30,880 Node[0] Epoch[2] Batch [0-20]	Speed: 76354.75 samples/sec	accuracy=nan
2023-03-22 21:20:31,734 Node[0] Epoch[2] Batch [20-40]	Speed: 76439.36 samples/sec	accuracy=nan
2023-03-22 21:20:32,589 Node[0] Epoch[2] Batch [40-60]	Speed: 76343.21 samples/sec	accuracy=nan
2023-03-22 21:20:33,442 Node[0] Epoch[2] Batch [60-80]	Speed: 76533.58 samples/sec	accuracy=nan
2023-03-22 21:20:34,297 Node[0] Epoch[2] Batch [80-100]	Speed: 76278.09 samples/sec	accuracy=nan
2023-03-22 21:20:35,152 Node[0] Epoch[2] Batch [100-120]	Speed: 76428.17 samples/sec	accuracy=nan
2023-03-22 21:20:36,007 Node[0] Epoch[2] Batch [120-140]	Speed: 76287.57 samples/sec	accuracy=nan
2023-03-22 21:20:36,861 Node[0] Epoch[2] Batch [140-160]	Speed: 76495.84 samples/sec	accuracy=nan
2023-03-22 21:20:37,712 Node[0] Epoch[2] Batch [160-180]	Speed: 76680.01 samples/sec	accuracy=nan
2023-03-22 21:20:38,565 Node[0] Epoch[2] Batch [180-200]	Speed: 76533.99 samples/sec	accuracy=nan
2023-03-22 21:20:39,420 Node[0] Epoch[2] Batch [200-220]	Speed: 76391.26 samples/sec	accuracy=nan
2023-03-22 21:20:40,275 Node[0] Epoch[2] Batch [220-240]	Speed: 76309.02 samples/sec	accuracy=nan
2023-03-22 21:20:41,132 Node[0] Epoch[2] Batch [240-260]	Speed: 76194.73 samples/sec	accuracy=nan
2023-03-22 21:20:41,987 Node[0] Epoch[2] Batch [260-280]	Speed: 76337.08 samples/sec	accuracy=nan
2023-03-22 21:20:42,841 Node[0] Epoch[2] Batch [280-300]	Speed: 76464.76 samples/sec	accuracy=nan
2023-03-22 21:20:43,698 Node[0] Epoch[2] Batch [300-320]	Speed: 76129.27 samples/sec	accuracy=nan
2023-03-22 21:20:44,563 Node[0] Epoch[2] Batch [320-340]	Speed: 75511.27 samples/sec	accuracy=nan
2023-03-22 21:20:45,418 Node[0] Epoch[2] Batch [340-360]	Speed: 76337.23 samples/sec	accuracy=nan
2023-03-22 21:20:46,278 Node[0] Epoch[2] Batch [360-380]	Speed: 75895.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538046748, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 21:20:46,748 Node[0] Epoch[2] Time cost=16.766
:::MLLOG {"namespace": "", "time_ms": 1679538046748, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76413.40882533566}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679538046787, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 21:20:46,787 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,787 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,787 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,788 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,789 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,789 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,789 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:46,979 Node[0] Epoch[2] Validation-accuracy=0.308579
2023-03-22 21:20:46,979 Node[0] Epoch[2] Validation-correct-count=482.000000
2023-03-22 21:20:46,979 Node[0] Epoch[2] Validation-total-count=1562.000000
2023-03-22 21:20:47,001 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538047001, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679538047001, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32068, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 21:20:47,001 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538047001, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679538047001, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 21:20:47,001 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,001 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538047001, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 21:20:47,002 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:20:47,864 Node[0] Epoch[3] Batch [0-20]	Speed: 76152.64 samples/sec	accuracy=nan
2023-03-22 21:20:48,721 Node[0] Epoch[3] Batch [20-40]	Speed: 76172.85 samples/sec	accuracy=nan
2023-03-22 21:20:49,577 Node[0] Epoch[3] Batch [40-60]	Speed: 76283.53 samples/sec	accuracy=nan
2023-03-22 21:20:50,431 Node[0] Epoch[3] Batch [60-80]	Speed: 76421.50 samples/sec	accuracy=nan
2023-03-22 21:20:51,285 Node[0] Epoch[3] Batch [80-100]	Speed: 76379.44 samples/sec	accuracy=nan
2023-03-22 21:20:52,144 Node[0] Epoch[3] Batch [100-120]	Speed: 76072.67 samples/sec	accuracy=nan
2023-03-22 21:20:52,999 Node[0] Epoch[3] Batch [120-140]	Speed: 76320.87 samples/sec	accuracy=nan
2023-03-22 21:20:53,857 Node[0] Epoch[3] Batch [140-160]	Speed: 76112.49 samples/sec	accuracy=nan
2023-03-22 21:20:54,710 Node[0] Epoch[3] Batch [160-180]	Speed: 76488.13 samples/sec	accuracy=nan
2023-03-22 21:20:55,565 Node[0] Epoch[3] Batch [180-200]	Speed: 76365.80 samples/sec	accuracy=nan
2023-03-22 21:20:56,420 Node[0] Epoch[3] Batch [200-220]	Speed: 76370.04 samples/sec	accuracy=nan
2023-03-22 21:20:57,276 Node[0] Epoch[3] Batch [220-240]	Speed: 76278.75 samples/sec	accuracy=nan
2023-03-22 21:20:58,131 Node[0] Epoch[3] Batch [240-260]	Speed: 76324.85 samples/sec	accuracy=nan
2023-03-22 21:20:58,984 Node[0] Epoch[3] Batch [260-280]	Speed: 76511.74 samples/sec	accuracy=nan
2023-03-22 21:20:59,840 Node[0] Epoch[3] Batch [280-300]	Speed: 76218.61 samples/sec	accuracy=nan
2023-03-22 21:21:00,698 Node[0] Epoch[3] Batch [300-320]	Speed: 76147.54 samples/sec	accuracy=nan
2023-03-22 21:21:01,554 Node[0] Epoch[3] Batch [320-340]	Speed: 76255.91 samples/sec	accuracy=nan
2023-03-22 21:21:02,408 Node[0] Epoch[3] Batch [340-360]	Speed: 76436.22 samples/sec	accuracy=nan
2023-03-22 21:21:03,262 Node[0] Epoch[3] Batch [360-380]	Speed: 76441.19 samples/sec	accuracy=nan
2023-03-22 21:21:03,773 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,773 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,773 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,773 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,773 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538063773, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 21:21:03,774 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[0] Epoch[3] Time cost=16.773
2023-03-22 21:21:03,774 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538063774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76384.25643894682}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-22 21:21:03,774 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538063775, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 21:21:03,774 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,775 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,774 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,775 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:03,775 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:04,675 Node[0] Epoch[4] Batch [0-20]	Speed: 76116.97 samples/sec	accuracy=nan
2023-03-22 21:21:05,531 Node[0] Epoch[4] Batch [20-40]	Speed: 76301.02 samples/sec	accuracy=nan
2023-03-22 21:21:06,387 Node[0] Epoch[4] Batch [40-60]	Speed: 76228.76 samples/sec	accuracy=nan
2023-03-22 21:21:07,241 Node[0] Epoch[4] Batch [60-80]	Speed: 76424.55 samples/sec	accuracy=nan
2023-03-22 21:21:08,099 Node[0] Epoch[4] Batch [80-100]	Speed: 76097.51 samples/sec	accuracy=nan
2023-03-22 21:21:08,955 Node[0] Epoch[4] Batch [100-120]	Speed: 76306.55 samples/sec	accuracy=nan
2023-03-22 21:21:09,810 Node[0] Epoch[4] Batch [120-140]	Speed: 76354.52 samples/sec	accuracy=nan
2023-03-22 21:21:10,665 Node[0] Epoch[4] Batch [140-160]	Speed: 76345.60 samples/sec	accuracy=nan
2023-03-22 21:21:11,521 Node[0] Epoch[4] Batch [160-180]	Speed: 76207.39 samples/sec	accuracy=nan
2023-03-22 21:21:12,375 Node[0] Epoch[4] Batch [180-200]	Speed: 76491.78 samples/sec	accuracy=nan
2023-03-22 21:21:13,230 Node[0] Epoch[4] Batch [200-220]	Speed: 76316.15 samples/sec	accuracy=nan
2023-03-22 21:21:14,086 Node[0] Epoch[4] Batch [220-240]	Speed: 76256.57 samples/sec	accuracy=nan
2023-03-22 21:21:14,943 Node[0] Epoch[4] Batch [240-260]	Speed: 76228.42 samples/sec	accuracy=nan
2023-03-22 21:21:15,797 Node[0] Epoch[4] Batch [260-280]	Speed: 76407.51 samples/sec	accuracy=nan
2023-03-22 21:21:16,654 Node[0] Epoch[4] Batch [280-300]	Speed: 76165.14 samples/sec	accuracy=nan
2023-03-22 21:21:17,511 Node[0] Epoch[4] Batch [300-320]	Speed: 76196.45 samples/sec	accuracy=nan
2023-03-22 21:21:18,364 Node[0] Epoch[4] Batch [320-340]	Speed: 76482.21 samples/sec	accuracy=nan
2023-03-22 21:21:19,221 Node[0] Epoch[4] Batch [340-360]	Speed: 76221.63 samples/sec	accuracy=nan
2023-03-22 21:21:20,078 Node[0] Epoch[4] Batch [360-380]	Speed: 76150.40 samples/sec	accuracy=nan
2023-03-22 21:21:20,548 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,548 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,548 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,548 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538080549, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 21:21:20,549 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[0] Epoch[4] Time cost=16.775
2023-03-22 21:21:20,549 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538080549, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76374.83953944311}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-22 21:21:20,549 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,549 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538080550, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 21:21:20,549 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,550 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:20,550 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:21,454 Node[0] Epoch[5] Batch [0-20]	Speed: 75912.54 samples/sec	accuracy=nan
2023-03-22 21:21:22,314 Node[0] Epoch[5] Batch [20-40]	Speed: 75875.31 samples/sec	accuracy=nan
2023-03-22 21:21:23,171 Node[0] Epoch[5] Batch [40-60]	Speed: 76197.81 samples/sec	accuracy=nan
2023-03-22 21:21:24,029 Node[0] Epoch[5] Batch [60-80]	Speed: 76091.86 samples/sec	accuracy=nan
2023-03-22 21:21:24,884 Node[0] Epoch[5] Batch [80-100]	Speed: 76296.58 samples/sec	accuracy=nan
2023-03-22 21:21:25,743 Node[0] Epoch[5] Batch [100-120]	Speed: 76008.38 samples/sec	accuracy=nan
2023-03-22 21:21:26,599 Node[0] Epoch[5] Batch [120-140]	Speed: 76288.31 samples/sec	accuracy=nan
2023-03-22 21:21:27,456 Node[0] Epoch[5] Batch [140-160]	Speed: 76143.69 samples/sec	accuracy=nan
2023-03-22 21:21:28,311 Node[0] Epoch[5] Batch [160-180]	Speed: 76385.72 samples/sec	accuracy=nan
2023-03-22 21:21:29,164 Node[0] Epoch[5] Batch [180-200]	Speed: 76519.57 samples/sec	accuracy=nan
2023-03-22 21:21:30,018 Node[0] Epoch[5] Batch [200-220]	Speed: 76384.32 samples/sec	accuracy=nan
2023-03-22 21:21:30,874 Node[0] Epoch[5] Batch [220-240]	Speed: 76337.42 samples/sec	accuracy=nan
2023-03-22 21:21:31,731 Node[0] Epoch[5] Batch [240-260]	Speed: 76111.94 samples/sec	accuracy=nan
2023-03-22 21:21:32,587 Node[0] Epoch[5] Batch [260-280]	Speed: 76272.69 samples/sec	accuracy=nan
2023-03-22 21:21:33,442 Node[0] Epoch[5] Batch [280-300]	Speed: 76346.94 samples/sec	accuracy=nan
2023-03-22 21:21:34,301 Node[0] Epoch[5] Batch [300-320]	Speed: 75968.63 samples/sec	accuracy=nan
2023-03-22 21:21:35,156 Node[0] Epoch[5] Batch [320-340]	Speed: 76404.46 samples/sec	accuracy=nan
2023-03-22 21:21:36,014 Node[0] Epoch[5] Batch [340-360]	Speed: 76104.19 samples/sec	accuracy=nan
2023-03-22 21:21:36,869 Node[0] Epoch[5] Batch [360-380]	Speed: 76313.46 samples/sec	accuracy=nan
2023-03-22 21:21:37,381 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,381 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,381 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,381 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,381 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538097382, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 21:21:37,382 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,383 Node[0] Epoch[5] Time cost=16.833
2023-03-22 21:21:37,382 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538097383, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76111.66810985442}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-22 21:21:37,382 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,382 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538097383, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 21:21:37,383 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,383 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,383 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:37,383 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:38,285 Node[0] Epoch[6] Batch [0-20]	Speed: 75980.14 samples/sec	accuracy=nan
2023-03-22 21:21:39,144 Node[0] Epoch[6] Batch [20-40]	Speed: 76012.73 samples/sec	accuracy=nan
2023-03-22 21:21:40,000 Node[0] Epoch[6] Batch [40-60]	Speed: 76245.12 samples/sec	accuracy=nan
2023-03-22 21:21:40,857 Node[0] Epoch[6] Batch [60-80]	Speed: 76172.83 samples/sec	accuracy=nan
2023-03-22 21:21:41,715 Node[0] Epoch[6] Batch [80-100]	Speed: 76080.64 samples/sec	accuracy=nan
2023-03-22 21:21:42,574 Node[0] Epoch[6] Batch [100-120]	Speed: 76015.22 samples/sec	accuracy=nan
2023-03-22 21:21:43,430 Node[0] Epoch[6] Batch [120-140]	Speed: 76266.49 samples/sec	accuracy=nan
2023-03-22 21:21:44,286 Node[0] Epoch[6] Batch [140-160]	Speed: 76287.04 samples/sec	accuracy=nan
2023-03-22 21:21:45,140 Node[0] Epoch[6] Batch [160-180]	Speed: 76436.99 samples/sec	accuracy=nan
2023-03-22 21:21:45,997 Node[0] Epoch[6] Batch [180-200]	Speed: 76146.40 samples/sec	accuracy=nan
2023-03-22 21:21:46,855 Node[0] Epoch[6] Batch [200-220]	Speed: 76051.62 samples/sec	accuracy=nan
2023-03-22 21:21:47,712 Node[0] Epoch[6] Batch [220-240]	Speed: 76169.17 samples/sec	accuracy=nan
2023-03-22 21:21:48,567 Node[0] Epoch[6] Batch [240-260]	Speed: 76368.42 samples/sec	accuracy=nan
2023-03-22 21:21:49,424 Node[0] Epoch[6] Batch [260-280]	Speed: 76142.63 samples/sec	accuracy=nan
2023-03-22 21:21:50,280 Node[0] Epoch[6] Batch [280-300]	Speed: 76321.55 samples/sec	accuracy=nan
2023-03-22 21:21:51,137 Node[0] Epoch[6] Batch [300-320]	Speed: 76118.39 samples/sec	accuracy=nan
2023-03-22 21:21:51,993 Node[0] Epoch[6] Batch [320-340]	Speed: 76260.69 samples/sec	accuracy=nan
2023-03-22 21:21:52,848 Node[0] Epoch[6] Batch [340-360]	Speed: 76386.30 samples/sec	accuracy=nan
2023-03-22 21:21:53,702 Node[0] Epoch[6] Batch [360-380]	Speed: 76439.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538114172, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 21:21:54,173 Node[0] Epoch[6] Time cost=16.790
:::MLLOG {"namespace": "", "time_ms": 1679538114173, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76306.63802047637}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679538114212, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 21:21:54,400 Node[0] Epoch[6] Validation-accuracy=0.476312
2023-03-22 21:21:54,401 Node[0] Epoch[6] Validation-correct-count=744.000000
2023-03-22 21:21:54,401 Node[0] Epoch[6] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538114422, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679538114423, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.46422, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-22 21:21:54,423 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538114423, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679538114423, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 21:21:54,422 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538114423, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 21:21:54,422 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,423 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:54,422 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:21:55,287 Node[0] Epoch[7] Batch [0-20]	Speed: 76051.09 samples/sec	accuracy=nan
2023-03-22 21:21:56,142 Node[0] Epoch[7] Batch [20-40]	Speed: 76291.41 samples/sec	accuracy=nan
2023-03-22 21:21:56,996 Node[0] Epoch[7] Batch [40-60]	Speed: 76419.36 samples/sec	accuracy=nan
2023-03-22 21:21:57,853 Node[0] Epoch[7] Batch [60-80]	Speed: 76190.34 samples/sec	accuracy=nan
2023-03-22 21:21:58,707 Node[0] Epoch[7] Batch [80-100]	Speed: 76433.96 samples/sec	accuracy=nan
2023-03-22 21:21:59,563 Node[0] Epoch[7] Batch [100-120]	Speed: 76316.93 samples/sec	accuracy=nan
2023-03-22 21:22:00,423 Node[0] Epoch[7] Batch [120-140]	Speed: 75896.11 samples/sec	accuracy=nan
2023-03-22 21:22:01,279 Node[0] Epoch[7] Batch [140-160]	Speed: 76257.48 samples/sec	accuracy=nan
2023-03-22 21:22:02,134 Node[0] Epoch[7] Batch [160-180]	Speed: 76351.90 samples/sec	accuracy=nan
2023-03-22 21:22:02,989 Node[0] Epoch[7] Batch [180-200]	Speed: 76345.89 samples/sec	accuracy=nan
2023-03-22 21:22:03,847 Node[0] Epoch[7] Batch [200-220]	Speed: 76050.44 samples/sec	accuracy=nan
2023-03-22 21:22:04,701 Node[0] Epoch[7] Batch [220-240]	Speed: 76465.19 samples/sec	accuracy=nan
2023-03-22 21:22:05,558 Node[0] Epoch[7] Batch [240-260]	Speed: 76193.03 samples/sec	accuracy=nan
2023-03-22 21:22:06,412 Node[0] Epoch[7] Batch [260-280]	Speed: 76394.84 samples/sec	accuracy=nan
2023-03-22 21:22:07,268 Node[0] Epoch[7] Batch [280-300]	Speed: 76268.72 samples/sec	accuracy=nan
2023-03-22 21:22:08,125 Node[0] Epoch[7] Batch [300-320]	Speed: 76175.74 samples/sec	accuracy=nan
2023-03-22 21:22:08,981 Node[0] Epoch[7] Batch [320-340]	Speed: 76273.33 samples/sec	accuracy=nan
2023-03-22 21:22:09,836 Node[0] Epoch[7] Batch [340-360]	Speed: 76371.77 samples/sec	accuracy=nan
2023-03-22 21:22:10,691 Node[0] Epoch[7] Batch [360-380]	Speed: 76313.95 samples/sec	accuracy=nan
2023-03-22 21:22:11,203 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,204 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,205 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:11,205 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538131204, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 21:22:11,205 Node[0] Epoch[7] Time cost=16.782
:::MLLOG {"namespace": "", "time_ms": 1679538131205, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76340.93882989213}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679538131205, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 21:22:11,206 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:12,104 Node[0] Epoch[8] Batch [0-20]	Speed: 76223.94 samples/sec	accuracy=nan
2023-03-22 21:22:12,963 Node[0] Epoch[8] Batch [20-40]	Speed: 76018.07 samples/sec	accuracy=nan
2023-03-22 21:22:13,822 Node[0] Epoch[8] Batch [40-60]	Speed: 75962.79 samples/sec	accuracy=nan
2023-03-22 21:22:14,676 Node[0] Epoch[8] Batch [60-80]	Speed: 76424.68 samples/sec	accuracy=nan
2023-03-22 21:22:15,529 Node[0] Epoch[8] Batch [80-100]	Speed: 76538.61 samples/sec	accuracy=nan
2023-03-22 21:22:16,387 Node[0] Epoch[8] Batch [100-120]	Speed: 76123.66 samples/sec	accuracy=nan
2023-03-22 21:22:17,245 Node[0] Epoch[8] Batch [120-140]	Speed: 76073.39 samples/sec	accuracy=nan
2023-03-22 21:22:18,098 Node[0] Epoch[8] Batch [140-160]	Speed: 76476.48 samples/sec	accuracy=nan
2023-03-22 21:22:18,954 Node[0] Epoch[8] Batch [160-180]	Speed: 76280.28 samples/sec	accuracy=nan
2023-03-22 21:22:19,810 Node[0] Epoch[8] Batch [180-200]	Speed: 76312.83 samples/sec	accuracy=nan
2023-03-22 21:22:20,672 Node[0] Epoch[8] Batch [200-220]	Speed: 75718.69 samples/sec	accuracy=nan
2023-03-22 21:22:21,529 Node[0] Epoch[8] Batch [220-240]	Speed: 76132.89 samples/sec	accuracy=nan
2023-03-22 21:22:22,383 Node[0] Epoch[8] Batch [240-260]	Speed: 76483.47 samples/sec	accuracy=nan
2023-03-22 21:22:23,241 Node[0] Epoch[8] Batch [260-280]	Speed: 76026.51 samples/sec	accuracy=nan
2023-03-22 21:22:24,098 Node[0] Epoch[8] Batch [280-300]	Speed: 76246.33 samples/sec	accuracy=nan
2023-03-22 21:22:24,955 Node[0] Epoch[8] Batch [300-320]	Speed: 76087.42 samples/sec	accuracy=nan
2023-03-22 21:22:25,811 Node[0] Epoch[8] Batch [320-340]	Speed: 76336.44 samples/sec	accuracy=nan
2023-03-22 21:22:26,665 Node[0] Epoch[8] Batch [340-360]	Speed: 76434.21 samples/sec	accuracy=nan
2023-03-22 21:22:27,522 Node[0] Epoch[8] Batch [360-380]	Speed: 76110.33 samples/sec	accuracy=nan
2023-03-22 21:22:27,991 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538147991, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 21:22:27,991 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[0] Epoch[8] Time cost=16.786
2023-03-22 21:22:27,991 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,991 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538147992, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76322.95039474827}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-22 21:22:27,992 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538147992, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 21:22:27,992 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:27,992 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:28,892 Node[0] Epoch[9] Batch [0-20]	Speed: 76354.35 samples/sec	accuracy=nan
2023-03-22 21:22:29,749 Node[0] Epoch[9] Batch [20-40]	Speed: 76123.53 samples/sec	accuracy=nan
2023-03-22 21:22:30,607 Node[0] Epoch[9] Batch [40-60]	Speed: 76153.02 samples/sec	accuracy=nan
2023-03-22 21:22:31,463 Node[0] Epoch[9] Batch [60-80]	Speed: 76205.76 samples/sec	accuracy=nan
2023-03-22 21:22:32,320 Node[0] Epoch[9] Batch [80-100]	Speed: 76187.52 samples/sec	accuracy=nan
2023-03-22 21:22:33,175 Node[0] Epoch[9] Batch [100-120]	Speed: 76368.96 samples/sec	accuracy=nan
2023-03-22 21:22:34,030 Node[0] Epoch[9] Batch [120-140]	Speed: 76367.00 samples/sec	accuracy=nan
2023-03-22 21:22:34,882 Node[0] Epoch[9] Batch [140-160]	Speed: 76587.72 samples/sec	accuracy=nan
2023-03-22 21:22:35,735 Node[0] Epoch[9] Batch [160-180]	Speed: 76569.17 samples/sec	accuracy=nan
2023-03-22 21:22:36,590 Node[0] Epoch[9] Batch [180-200]	Speed: 76311.34 samples/sec	accuracy=nan
2023-03-22 21:22:37,445 Node[0] Epoch[9] Batch [200-220]	Speed: 76317.51 samples/sec	accuracy=nan
2023-03-22 21:22:38,309 Node[0] Epoch[9] Batch [220-240]	Speed: 75622.45 samples/sec	accuracy=nan
2023-03-22 21:22:39,161 Node[0] Epoch[9] Batch [240-260]	Speed: 76591.96 samples/sec	accuracy=nan
2023-03-22 21:22:40,015 Node[0] Epoch[9] Batch [260-280]	Speed: 76478.43 samples/sec	accuracy=nan
2023-03-22 21:22:40,872 Node[0] Epoch[9] Batch [280-300]	Speed: 76170.63 samples/sec	accuracy=nan
2023-03-22 21:22:41,729 Node[0] Epoch[9] Batch [300-320]	Speed: 76136.95 samples/sec	accuracy=nan
2023-03-22 21:22:42,583 Node[0] Epoch[9] Batch [320-340]	Speed: 76449.75 samples/sec	accuracy=nan
2023-03-22 21:22:43,438 Node[0] Epoch[9] Batch [340-360]	Speed: 76335.76 samples/sec	accuracy=nan
2023-03-22 21:22:44,298 Node[0] Epoch[9] Batch [360-380]	Speed: 75930.82 samples/sec	accuracy=nan
2023-03-22 21:22:44,810 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,809 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,809 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538164809, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 21:22:44,810 Node[0] Epoch[9] Time cost=16.818
2023-03-22 21:22:44,810 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538164810, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76177.72977327926}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-22 21:22:44,810 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,810 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538164811, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 21:22:44,811 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:44,811 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:22:45,711 Node[0] Epoch[10] Batch [0-20]	Speed: 76157.96 samples/sec	accuracy=nan
2023-03-22 21:22:46,567 Node[0] Epoch[10] Batch [20-40]	Speed: 76200.71 samples/sec	accuracy=nan
2023-03-22 21:22:47,429 Node[0] Epoch[10] Batch [40-60]	Speed: 75735.38 samples/sec	accuracy=nan
2023-03-22 21:22:48,287 Node[0] Epoch[10] Batch [60-80]	Speed: 76105.25 samples/sec	accuracy=nan
2023-03-22 21:22:49,144 Node[0] Epoch[10] Batch [80-100]	Speed: 76169.63 samples/sec	accuracy=nan
2023-03-22 21:22:50,002 Node[0] Epoch[10] Batch [100-120]	Speed: 76116.21 samples/sec	accuracy=nan
2023-03-22 21:22:50,856 Node[0] Epoch[10] Batch [120-140]	Speed: 76369.45 samples/sec	accuracy=nan
2023-03-22 21:22:51,713 Node[0] Epoch[10] Batch [140-160]	Speed: 76175.29 samples/sec	accuracy=nan
2023-03-22 21:22:52,567 Node[0] Epoch[10] Batch [160-180]	Speed: 76510.55 samples/sec	accuracy=nan
2023-03-22 21:22:53,421 Node[0] Epoch[10] Batch [180-200]	Speed: 76390.71 samples/sec	accuracy=nan
2023-03-22 21:22:54,277 Node[0] Epoch[10] Batch [200-220]	Speed: 76317.06 samples/sec	accuracy=nan
2023-03-22 21:22:55,133 Node[0] Epoch[10] Batch [220-240]	Speed: 76186.76 samples/sec	accuracy=nan
2023-03-22 21:22:55,990 Node[0] Epoch[10] Batch [240-260]	Speed: 76218.95 samples/sec	accuracy=nan
2023-03-22 21:22:56,845 Node[0] Epoch[10] Batch [260-280]	Speed: 76306.87 samples/sec	accuracy=nan
2023-03-22 21:22:57,705 Node[0] Epoch[10] Batch [280-300]	Speed: 75940.99 samples/sec	accuracy=nan
2023-03-22 21:22:58,561 Node[0] Epoch[10] Batch [300-320]	Speed: 76225.93 samples/sec	accuracy=nan
2023-03-22 21:22:59,416 Node[0] Epoch[10] Batch [320-340]	Speed: 76366.91 samples/sec	accuracy=nan
2023-03-22 21:23:00,270 Node[0] Epoch[10] Batch [340-360]	Speed: 76470.72 samples/sec	accuracy=nan
2023-03-22 21:23:01,126 Node[0] Epoch[10] Batch [360-380]	Speed: 76277.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538181595, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 21:23:01,596 Node[0] Epoch[10] Time cost=16.785
:::MLLOG {"namespace": "", "time_ms": 1679538181596, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76328.6040735917}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679538181635, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 21:23:01,824 Node[0] Epoch[10] Validation-accuracy=0.517286
2023-03-22 21:23:01,824 Node[0] Epoch[10] Validation-correct-count=808.000000
2023-03-22 21:23:01,824 Node[0] Epoch[10] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538181845, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679538181846, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.51708, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 21:23:01,845 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538181846, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 21:23:01,845 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538181846, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 21:23:01,845 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538181846, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 21:23:01,845 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,846 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:01,845 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:02,707 Node[0] Epoch[11] Batch [0-20]	Speed: 76297.11 samples/sec	accuracy=nan
2023-03-22 21:23:03,561 Node[0] Epoch[11] Batch [20-40]	Speed: 76384.85 samples/sec	accuracy=nan
2023-03-22 21:23:04,419 Node[0] Epoch[11] Batch [40-60]	Speed: 76085.79 samples/sec	accuracy=nan
2023-03-22 21:23:05,280 Node[0] Epoch[11] Batch [60-80]	Speed: 75855.51 samples/sec	accuracy=nan
2023-03-22 21:23:06,134 Node[0] Epoch[11] Batch [80-100]	Speed: 76387.00 samples/sec	accuracy=nan
2023-03-22 21:23:06,989 Node[0] Epoch[11] Batch [100-120]	Speed: 76349.60 samples/sec	accuracy=nan
2023-03-22 21:23:07,845 Node[0] Epoch[11] Batch [120-140]	Speed: 76259.33 samples/sec	accuracy=nan
2023-03-22 21:23:08,702 Node[0] Epoch[11] Batch [140-160]	Speed: 76214.60 samples/sec	accuracy=nan
2023-03-22 21:23:09,555 Node[0] Epoch[11] Batch [160-180]	Speed: 76550.72 samples/sec	accuracy=nan
2023-03-22 21:23:10,408 Node[0] Epoch[11] Batch [180-200]	Speed: 76481.97 samples/sec	accuracy=nan
2023-03-22 21:23:11,266 Node[0] Epoch[11] Batch [200-220]	Speed: 76096.41 samples/sec	accuracy=nan
2023-03-22 21:23:12,123 Node[0] Epoch[11] Batch [220-240]	Speed: 76209.49 samples/sec	accuracy=nan
2023-03-22 21:23:12,977 Node[0] Epoch[11] Batch [240-260]	Speed: 76400.13 samples/sec	accuracy=nan
2023-03-22 21:23:13,833 Node[0] Epoch[11] Batch [260-280]	Speed: 76275.73 samples/sec	accuracy=nan
2023-03-22 21:23:14,689 Node[0] Epoch[11] Batch [280-300]	Speed: 76250.22 samples/sec	accuracy=nan
2023-03-22 21:23:15,545 Node[0] Epoch[11] Batch [300-320]	Speed: 76281.66 samples/sec	accuracy=nan
2023-03-22 21:23:16,400 Node[0] Epoch[11] Batch [320-340]	Speed: 76327.19 samples/sec	accuracy=nan
2023-03-22 21:23:17,255 Node[0] Epoch[11] Batch [340-360]	Speed: 76365.02 samples/sec	accuracy=nan
2023-03-22 21:23:18,113 Node[0] Epoch[11] Batch [360-380]	Speed: 76084.08 samples/sec	accuracy=nan
2023-03-22 21:23:18,624 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,625 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,626 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538198625, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 21:23:18,626 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:18,626 Node[0] Epoch[11] Time cost=16.780
:::MLLOG {"namespace": "", "time_ms": 1679538198626, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76350.34411647607}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679538198626, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 21:23:18,626 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:19,521 Node[0] Epoch[12] Batch [0-20]	Speed: 76515.53 samples/sec	accuracy=nan
2023-03-22 21:23:20,378 Node[0] Epoch[12] Batch [20-40]	Speed: 76175.04 samples/sec	accuracy=nan
2023-03-22 21:23:21,234 Node[0] Epoch[12] Batch [40-60]	Speed: 76329.36 samples/sec	accuracy=nan
2023-03-22 21:23:22,089 Node[0] Epoch[12] Batch [60-80]	Speed: 76288.50 samples/sec	accuracy=nan
2023-03-22 21:23:22,949 Node[0] Epoch[12] Batch [80-100]	Speed: 75921.15 samples/sec	accuracy=nan
2023-03-22 21:23:23,806 Node[0] Epoch[12] Batch [100-120]	Speed: 76181.21 samples/sec	accuracy=nan
2023-03-22 21:23:24,660 Node[0] Epoch[12] Batch [120-140]	Speed: 76491.72 samples/sec	accuracy=nan
2023-03-22 21:23:25,515 Node[0] Epoch[12] Batch [140-160]	Speed: 76283.87 samples/sec	accuracy=nan
2023-03-22 21:23:26,370 Node[0] Epoch[12] Batch [160-180]	Speed: 76365.59 samples/sec	accuracy=nan
2023-03-22 21:23:27,224 Node[0] Epoch[12] Batch [180-200]	Speed: 76434.40 samples/sec	accuracy=nan
2023-03-22 21:23:28,079 Node[0] Epoch[12] Batch [200-220]	Speed: 76372.60 samples/sec	accuracy=nan
2023-03-22 21:23:28,936 Node[0] Epoch[12] Batch [220-240]	Speed: 76197.74 samples/sec	accuracy=nan
2023-03-22 21:23:29,793 Node[0] Epoch[12] Batch [240-260]	Speed: 76158.02 samples/sec	accuracy=nan
2023-03-22 21:23:30,647 Node[0] Epoch[12] Batch [260-280]	Speed: 76382.74 samples/sec	accuracy=nan
2023-03-22 21:23:31,503 Node[0] Epoch[12] Batch [280-300]	Speed: 76350.77 samples/sec	accuracy=nan
2023-03-22 21:23:32,359 Node[0] Epoch[12] Batch [300-320]	Speed: 76226.38 samples/sec	accuracy=nan
2023-03-22 21:23:33,215 Node[0] Epoch[12] Batch [320-340]	Speed: 76277.20 samples/sec	accuracy=nan
2023-03-22 21:23:34,076 Node[0] Epoch[12] Batch [340-360]	Speed: 75840.50 samples/sec	accuracy=nan
2023-03-22 21:23:34,928 Node[0] Epoch[12] Batch [360-380]	Speed: 76540.49 samples/sec	accuracy=nan
2023-03-22 21:23:35,396 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,396 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,396 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,396 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,396 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538215397, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 21:23:35,397 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[0] Epoch[12] Time cost=16.771
2023-03-22 21:23:35,397 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538215397, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76393.53230280045}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 21:23:35,397 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538215397, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 21:23:35,397 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:35,397 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:36,307 Node[0] Epoch[13] Batch [0-20]	Speed: 75455.67 samples/sec	accuracy=nan
2023-03-22 21:23:37,161 Node[0] Epoch[13] Batch [20-40]	Speed: 76414.61 samples/sec	accuracy=nan
2023-03-22 21:23:38,018 Node[0] Epoch[13] Batch [40-60]	Speed: 76186.12 samples/sec	accuracy=nan
2023-03-22 21:23:38,873 Node[0] Epoch[13] Batch [60-80]	Speed: 76305.94 samples/sec	accuracy=nan
2023-03-22 21:23:39,727 Node[0] Epoch[13] Batch [80-100]	Speed: 76490.18 samples/sec	accuracy=nan
2023-03-22 21:23:40,583 Node[0] Epoch[13] Batch [100-120]	Speed: 76250.86 samples/sec	accuracy=nan
2023-03-22 21:23:41,442 Node[0] Epoch[13] Batch [120-140]	Speed: 75966.61 samples/sec	accuracy=nan
2023-03-22 21:23:42,297 Node[0] Epoch[13] Batch [140-160]	Speed: 76377.28 samples/sec	accuracy=nan
2023-03-22 21:23:43,149 Node[0] Epoch[13] Batch [160-180]	Speed: 76621.26 samples/sec	accuracy=nan
2023-03-22 21:23:44,002 Node[0] Epoch[13] Batch [180-200]	Speed: 76506.87 samples/sec	accuracy=nan
2023-03-22 21:23:44,858 Node[0] Epoch[13] Batch [200-220]	Speed: 76283.83 samples/sec	accuracy=nan
2023-03-22 21:23:45,712 Node[0] Epoch[13] Batch [220-240]	Speed: 76445.27 samples/sec	accuracy=nan
2023-03-22 21:23:46,569 Node[0] Epoch[13] Batch [240-260]	Speed: 76203.47 samples/sec	accuracy=nan
2023-03-22 21:23:47,421 Node[0] Epoch[13] Batch [260-280]	Speed: 76620.32 samples/sec	accuracy=nan
2023-03-22 21:23:48,275 Node[0] Epoch[13] Batch [280-300]	Speed: 76369.79 samples/sec	accuracy=nan
2023-03-22 21:23:49,134 Node[0] Epoch[13] Batch [300-320]	Speed: 76065.88 samples/sec	accuracy=nan
2023-03-22 21:23:49,987 Node[0] Epoch[13] Batch [320-340]	Speed: 76468.88 samples/sec	accuracy=nan
2023-03-22 21:23:50,844 Node[0] Epoch[13] Batch [340-360]	Speed: 76211.34 samples/sec	accuracy=nan
2023-03-22 21:23:51,699 Node[0] Epoch[13] Batch [360-380]	Speed: 76349.47 samples/sec	accuracy=nan
2023-03-22 21:23:52,210 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538232210, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 21:23:52,210 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,210 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[0] Epoch[13] Time cost=16.813
2023-03-22 21:23:52,211 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538232211, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76199.71782993694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-22 21:23:52,211 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538232211, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 21:23:52,211 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:52,211 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:23:53,109 Node[0] Epoch[14] Batch [0-20]	Speed: 76314.89 samples/sec	accuracy=nan
2023-03-22 21:23:53,965 Node[0] Epoch[14] Batch [20-40]	Speed: 76300.58 samples/sec	accuracy=nan
2023-03-22 21:23:54,819 Node[0] Epoch[14] Batch [40-60]	Speed: 76427.62 samples/sec	accuracy=nan
2023-03-22 21:23:55,679 Node[0] Epoch[14] Batch [60-80]	Speed: 75880.02 samples/sec	accuracy=nan
2023-03-22 21:23:56,531 Node[0] Epoch[14] Batch [80-100]	Speed: 76631.98 samples/sec	accuracy=nan
2023-03-22 21:23:57,387 Node[0] Epoch[14] Batch [100-120]	Speed: 76223.54 samples/sec	accuracy=nan
2023-03-22 21:23:58,244 Node[0] Epoch[14] Batch [120-140]	Speed: 76219.61 samples/sec	accuracy=nan
2023-03-22 21:23:59,098 Node[0] Epoch[14] Batch [140-160]	Speed: 76431.35 samples/sec	accuracy=nan
2023-03-22 21:23:59,949 Node[0] Epoch[14] Batch [160-180]	Speed: 76686.93 samples/sec	accuracy=nan
2023-03-22 21:24:00,802 Node[0] Epoch[14] Batch [180-200]	Speed: 76526.24 samples/sec	accuracy=nan
2023-03-22 21:24:01,659 Node[0] Epoch[14] Batch [200-220]	Speed: 76206.59 samples/sec	accuracy=nan
2023-03-22 21:24:02,513 Node[0] Epoch[14] Batch [220-240]	Speed: 76393.08 samples/sec	accuracy=nan
2023-03-22 21:24:03,371 Node[0] Epoch[14] Batch [240-260]	Speed: 76116.44 samples/sec	accuracy=nan
2023-03-22 21:24:04,227 Node[0] Epoch[14] Batch [260-280]	Speed: 76275.26 samples/sec	accuracy=nan
2023-03-22 21:24:05,085 Node[0] Epoch[14] Batch [280-300]	Speed: 76098.76 samples/sec	accuracy=nan
2023-03-22 21:24:05,944 Node[0] Epoch[14] Batch [300-320]	Speed: 76021.59 samples/sec	accuracy=nan
2023-03-22 21:24:06,798 Node[0] Epoch[14] Batch [320-340]	Speed: 76396.76 samples/sec	accuracy=nan
2023-03-22 21:24:07,652 Node[0] Epoch[14] Batch [340-360]	Speed: 76408.25 samples/sec	accuracy=nan
2023-03-22 21:24:08,506 Node[0] Epoch[14] Batch [360-380]	Speed: 76511.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538248975, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 21:24:08,975 Node[0] Epoch[14] Time cost=16.764
:::MLLOG {"namespace": "", "time_ms": 1679538248976, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76422.3831004827}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679538249015, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 21:24:09,205 Node[0] Epoch[14] Validation-accuracy=0.569142
2023-03-22 21:24:09,205 Node[0] Epoch[14] Validation-correct-count=889.000000
2023-03-22 21:24:09,205 Node[0] Epoch[14] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538249227, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679538249227, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.58024, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-22 21:24:09,227 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538249227, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 21:24:09,227 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538249227, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-22 21:24:09,227 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538249227, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 21:24:09,227 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:09,227 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:10,088 Node[0] Epoch[15] Batch [0-20]	Speed: 76288.78 samples/sec	accuracy=nan
2023-03-22 21:24:10,944 Node[0] Epoch[15] Batch [20-40]	Speed: 76260.88 samples/sec	accuracy=nan
2023-03-22 21:24:11,799 Node[0] Epoch[15] Batch [40-60]	Speed: 76350.30 samples/sec	accuracy=nan
2023-03-22 21:24:12,658 Node[0] Epoch[15] Batch [60-80]	Speed: 76030.69 samples/sec	accuracy=nan
2023-03-22 21:24:13,514 Node[0] Epoch[15] Batch [80-100]	Speed: 76228.42 samples/sec	accuracy=nan
2023-03-22 21:24:14,371 Node[0] Epoch[15] Batch [100-120]	Speed: 76213.97 samples/sec	accuracy=nan
2023-03-22 21:24:15,229 Node[0] Epoch[15] Batch [120-140]	Speed: 76078.94 samples/sec	accuracy=nan
2023-03-22 21:24:16,082 Node[0] Epoch[15] Batch [140-160]	Speed: 76505.89 samples/sec	accuracy=nan
2023-03-22 21:24:16,935 Node[0] Epoch[15] Batch [160-180]	Speed: 76551.88 samples/sec	accuracy=nan
2023-03-22 21:24:17,788 Node[0] Epoch[15] Batch [180-200]	Speed: 76523.85 samples/sec	accuracy=nan
2023-03-22 21:24:18,645 Node[0] Epoch[15] Batch [200-220]	Speed: 76208.05 samples/sec	accuracy=nan
2023-03-22 21:24:19,498 Node[0] Epoch[15] Batch [220-240]	Speed: 76505.89 samples/sec	accuracy=nan
2023-03-22 21:24:20,352 Node[0] Epoch[15] Batch [240-260]	Speed: 76429.73 samples/sec	accuracy=nan
2023-03-22 21:24:21,208 Node[0] Epoch[15] Batch [260-280]	Speed: 76246.04 samples/sec	accuracy=nan
2023-03-22 21:24:22,067 Node[0] Epoch[15] Batch [280-300]	Speed: 76036.50 samples/sec	accuracy=nan
2023-03-22 21:24:22,923 Node[0] Epoch[15] Batch [300-320]	Speed: 76267.89 samples/sec	accuracy=nan
2023-03-22 21:24:23,777 Node[0] Epoch[15] Batch [320-340]	Speed: 76359.09 samples/sec	accuracy=nan
2023-03-22 21:24:24,633 Node[0] Epoch[15] Batch [340-360]	Speed: 76336.85 samples/sec	accuracy=nan
2023-03-22 21:24:25,489 Node[0] Epoch[15] Batch [360-380]	Speed: 76241.62 samples/sec	accuracy=nan
2023-03-22 21:24:26,000 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,000 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538266000, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 21:24:26,001 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[0] Epoch[15] Time cost=16.774
2023-03-22 21:24:26,001 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,001 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538266001, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76379.96133257294}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-22 21:24:26,001 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538266001, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 21:24:26,001 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:26,902 Node[0] Epoch[16] Batch [0-20]	Speed: 76032.11 samples/sec	accuracy=nan
2023-03-22 21:24:27,756 Node[0] Epoch[16] Batch [20-40]	Speed: 76412.54 samples/sec	accuracy=nan
2023-03-22 21:24:28,612 Node[0] Epoch[16] Batch [40-60]	Speed: 76308.96 samples/sec	accuracy=nan
2023-03-22 21:24:29,467 Node[0] Epoch[16] Batch [60-80]	Speed: 76297.73 samples/sec	accuracy=nan
2023-03-22 21:24:30,326 Node[0] Epoch[16] Batch [80-100]	Speed: 76050.40 samples/sec	accuracy=nan
2023-03-22 21:24:31,180 Node[0] Epoch[16] Batch [100-120]	Speed: 76387.32 samples/sec	accuracy=nan
2023-03-22 21:24:32,039 Node[0] Epoch[16] Batch [120-140]	Speed: 75987.10 samples/sec	accuracy=nan
2023-03-22 21:24:32,893 Node[0] Epoch[16] Batch [140-160]	Speed: 76443.84 samples/sec	accuracy=nan
2023-03-22 21:24:33,746 Node[0] Epoch[16] Batch [160-180]	Speed: 76563.54 samples/sec	accuracy=nan
2023-03-22 21:24:34,603 Node[0] Epoch[16] Batch [180-200]	Speed: 76200.73 samples/sec	accuracy=nan
2023-03-22 21:24:35,460 Node[0] Epoch[16] Batch [200-220]	Speed: 76166.65 samples/sec	accuracy=nan
2023-03-22 21:24:36,316 Node[0] Epoch[16] Batch [220-240]	Speed: 76200.29 samples/sec	accuracy=nan
2023-03-22 21:24:37,174 Node[0] Epoch[16] Batch [240-260]	Speed: 76146.80 samples/sec	accuracy=nan
2023-03-22 21:24:38,028 Node[0] Epoch[16] Batch [260-280]	Speed: 76388.81 samples/sec	accuracy=nan
2023-03-22 21:24:38,883 Node[0] Epoch[16] Batch [280-300]	Speed: 76332.70 samples/sec	accuracy=nan
2023-03-22 21:24:39,738 Node[0] Epoch[16] Batch [300-320]	Speed: 76432.95 samples/sec	accuracy=nan
2023-03-22 21:24:40,595 Node[0] Epoch[16] Batch [320-340]	Speed: 76105.84 samples/sec	accuracy=nan
2023-03-22 21:24:41,448 Node[0] Epoch[16] Batch [340-360]	Speed: 76536.36 samples/sec	accuracy=nan
2023-03-22 21:24:42,305 Node[0] Epoch[16] Batch [360-380]	Speed: 76152.24 samples/sec	accuracy=nan
2023-03-22 21:24:42,775 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,775 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,775 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538282776, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 21:24:42,776 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[0] Epoch[16] Time cost=16.775
2023-03-22 21:24:42,776 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538282776, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76373.78226455265}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-22 21:24:42,776 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538282777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 21:24:42,776 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,777 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,776 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:42,777 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:43,674 Node[0] Epoch[17] Batch [0-20]	Speed: 76526.44 samples/sec	accuracy=nan
2023-03-22 21:24:44,531 Node[0] Epoch[17] Batch [20-40]	Speed: 76167.77 samples/sec	accuracy=nan
2023-03-22 21:24:45,387 Node[0] Epoch[17] Batch [40-60]	Speed: 76279.70 samples/sec	accuracy=nan
2023-03-22 21:24:46,243 Node[0] Epoch[17] Batch [60-80]	Speed: 76272.78 samples/sec	accuracy=nan
2023-03-22 21:24:47,098 Node[0] Epoch[17] Batch [80-100]	Speed: 76302.51 samples/sec	accuracy=nan
2023-03-22 21:24:47,956 Node[0] Epoch[17] Batch [100-120]	Speed: 76164.17 samples/sec	accuracy=nan
2023-03-22 21:24:48,811 Node[0] Epoch[17] Batch [120-140]	Speed: 76357.67 samples/sec	accuracy=nan
2023-03-22 21:24:49,665 Node[0] Epoch[17] Batch [140-160]	Speed: 76436.94 samples/sec	accuracy=nan
2023-03-22 21:24:50,526 Node[0] Epoch[17] Batch [160-180]	Speed: 75813.46 samples/sec	accuracy=nan
2023-03-22 21:24:51,381 Node[0] Epoch[17] Batch [180-200]	Speed: 76283.81 samples/sec	accuracy=nan
2023-03-22 21:24:52,236 Node[0] Epoch[17] Batch [200-220]	Speed: 76352.64 samples/sec	accuracy=nan
2023-03-22 21:24:53,092 Node[0] Epoch[17] Batch [220-240]	Speed: 76265.70 samples/sec	accuracy=nan
2023-03-22 21:24:53,949 Node[0] Epoch[17] Batch [240-260]	Speed: 76200.99 samples/sec	accuracy=nan
2023-03-22 21:24:54,803 Node[0] Epoch[17] Batch [260-280]	Speed: 76473.58 samples/sec	accuracy=nan
2023-03-22 21:24:55,657 Node[0] Epoch[17] Batch [280-300]	Speed: 76413.56 samples/sec	accuracy=nan
2023-03-22 21:24:56,519 Node[0] Epoch[17] Batch [300-320]	Speed: 75737.44 samples/sec	accuracy=nan
2023-03-22 21:24:57,378 Node[0] Epoch[17] Batch [320-340]	Speed: 76012.48 samples/sec	accuracy=nan
2023-03-22 21:24:58,232 Node[0] Epoch[17] Batch [340-360]	Speed: 76443.20 samples/sec	accuracy=nan
2023-03-22 21:24:59,087 Node[0] Epoch[17] Batch [360-380]	Speed: 76328.04 samples/sec	accuracy=nan
2023-03-22 21:24:59,597 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538299597, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 21:24:59,597 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[0] Epoch[17] Time cost=16.821
2023-03-22 21:24:59,597 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,597 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538299598, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76164.36490505753}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-22 21:24:59,597 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538299598, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 21:24:59,598 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:24:59,598 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:00,502 Node[0] Epoch[18] Batch [0-20]	Speed: 75795.14 samples/sec	accuracy=nan
2023-03-22 21:25:01,358 Node[0] Epoch[18] Batch [20-40]	Speed: 76207.18 samples/sec	accuracy=nan
2023-03-22 21:25:02,216 Node[0] Epoch[18] Batch [40-60]	Speed: 76133.82 samples/sec	accuracy=nan
2023-03-22 21:25:03,073 Node[0] Epoch[18] Batch [60-80]	Speed: 76109.88 samples/sec	accuracy=nan
2023-03-22 21:25:03,927 Node[0] Epoch[18] Batch [80-100]	Speed: 76459.53 samples/sec	accuracy=nan
2023-03-22 21:25:04,785 Node[0] Epoch[18] Batch [100-120]	Speed: 76120.55 samples/sec	accuracy=nan
2023-03-22 21:25:05,641 Node[0] Epoch[18] Batch [120-140]	Speed: 76198.36 samples/sec	accuracy=nan
2023-03-22 21:25:06,495 Node[0] Epoch[18] Batch [140-160]	Speed: 76465.40 samples/sec	accuracy=nan
2023-03-22 21:25:07,349 Node[0] Epoch[18] Batch [160-180]	Speed: 76455.24 samples/sec	accuracy=nan
2023-03-22 21:25:08,203 Node[0] Epoch[18] Batch [180-200]	Speed: 76426.36 samples/sec	accuracy=nan
2023-03-22 21:25:09,059 Node[0] Epoch[18] Batch [200-220]	Speed: 76259.27 samples/sec	accuracy=nan
2023-03-22 21:25:09,915 Node[0] Epoch[18] Batch [220-240]	Speed: 76249.62 samples/sec	accuracy=nan
2023-03-22 21:25:10,769 Node[0] Epoch[18] Batch [240-260]	Speed: 76432.08 samples/sec	accuracy=nan
2023-03-22 21:25:11,625 Node[0] Epoch[18] Batch [260-280]	Speed: 76283.27 samples/sec	accuracy=nan
2023-03-22 21:25:12,482 Node[0] Epoch[18] Batch [280-300]	Speed: 76216.47 samples/sec	accuracy=nan
2023-03-22 21:25:13,336 Node[0] Epoch[18] Batch [300-320]	Speed: 76393.78 samples/sec	accuracy=nan
2023-03-22 21:25:14,191 Node[0] Epoch[18] Batch [320-340]	Speed: 76381.12 samples/sec	accuracy=nan
2023-03-22 21:25:15,044 Node[0] Epoch[18] Batch [340-360]	Speed: 76502.55 samples/sec	accuracy=nan
2023-03-22 21:25:15,900 Node[0] Epoch[18] Batch [360-380]	Speed: 76251.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538316370, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 21:25:16,370 Node[0] Epoch[18] Time cost=16.772
:::MLLOG {"namespace": "", "time_ms": 1679538316370, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76388.10246733848}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679538316409, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 21:25:16,598 Node[0] Epoch[18] Validation-accuracy=0.656210
2023-03-22 21:25:16,598 Node[0] Epoch[18] Validation-correct-count=1025.000000
2023-03-22 21:25:16,598 Node[0] Epoch[18] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538316620, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679538316620, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64744, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 21:25:16,620 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538316620, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679538316621, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 21:25:16,620 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538316621, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 21:25:16,620 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,621 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:16,620 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:17,480 Node[0] Epoch[19] Batch [0-20]	Speed: 76374.71 samples/sec	accuracy=nan
2023-03-22 21:25:18,340 Node[0] Epoch[19] Batch [20-40]	Speed: 75971.56 samples/sec	accuracy=nan
2023-03-22 21:25:19,195 Node[0] Epoch[19] Batch [40-60]	Speed: 76308.89 samples/sec	accuracy=nan
2023-03-22 21:25:20,052 Node[0] Epoch[19] Batch [60-80]	Speed: 76230.71 samples/sec	accuracy=nan
2023-03-22 21:25:20,906 Node[0] Epoch[19] Batch [80-100]	Speed: 76411.20 samples/sec	accuracy=nan
2023-03-22 21:25:21,762 Node[0] Epoch[19] Batch [100-120]	Speed: 76233.34 samples/sec	accuracy=nan
2023-03-22 21:25:22,619 Node[0] Epoch[19] Batch [120-140]	Speed: 76204.29 samples/sec	accuracy=nan
2023-03-22 21:25:23,475 Node[0] Epoch[19] Batch [140-160]	Speed: 76205.50 samples/sec	accuracy=nan
2023-03-22 21:25:24,329 Node[0] Epoch[19] Batch [160-180]	Speed: 76516.58 samples/sec	accuracy=nan
2023-03-22 21:25:25,183 Node[0] Epoch[19] Batch [180-200]	Speed: 76433.49 samples/sec	accuracy=nan
2023-03-22 21:25:26,038 Node[0] Epoch[19] Batch [200-220]	Speed: 76331.51 samples/sec	accuracy=nan
2023-03-22 21:25:26,891 Node[0] Epoch[19] Batch [220-240]	Speed: 76493.28 samples/sec	accuracy=nan
2023-03-22 21:25:27,749 Node[0] Epoch[19] Batch [240-260]	Speed: 76109.95 samples/sec	accuracy=nan
2023-03-22 21:25:28,604 Node[0] Epoch[19] Batch [260-280]	Speed: 76358.65 samples/sec	accuracy=nan
2023-03-22 21:25:29,459 Node[0] Epoch[19] Batch [280-300]	Speed: 76338.19 samples/sec	accuracy=nan
2023-03-22 21:25:30,318 Node[0] Epoch[19] Batch [300-320]	Speed: 76040.05 samples/sec	accuracy=nan
2023-03-22 21:25:31,175 Node[0] Epoch[19] Batch [320-340]	Speed: 76145.44 samples/sec	accuracy=nan
2023-03-22 21:25:32,032 Node[0] Epoch[19] Batch [340-360]	Speed: 76134.41 samples/sec	accuracy=nan
2023-03-22 21:25:32,887 Node[0] Epoch[19] Batch [360-380]	Speed: 76392.80 samples/sec	accuracy=nan
2023-03-22 21:25:33,400 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,400 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538333400, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 21:25:33,401 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[0] Epoch[19] Time cost=16.781
2023-03-22 21:25:33,401 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,401 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538333402, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76347.60505265744}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679538333402, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 21:25:33,402 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:33,402 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:34,303 Node[0] Epoch[20] Batch [0-20]	Speed: 75957.67 samples/sec	accuracy=nan
2023-03-22 21:25:35,157 Node[0] Epoch[20] Batch [20-40]	Speed: 76417.13 samples/sec	accuracy=nan
2023-03-22 21:25:36,012 Node[0] Epoch[20] Batch [40-60]	Speed: 76409.94 samples/sec	accuracy=nan
2023-03-22 21:25:36,866 Node[0] Epoch[20] Batch [60-80]	Speed: 76419.17 samples/sec	accuracy=nan
2023-03-22 21:25:37,724 Node[0] Epoch[20] Batch [80-100]	Speed: 76049.68 samples/sec	accuracy=nan
2023-03-22 21:25:38,578 Node[0] Epoch[20] Batch [100-120]	Speed: 76459.06 samples/sec	accuracy=nan
2023-03-22 21:25:39,434 Node[0] Epoch[20] Batch [120-140]	Speed: 76271.01 samples/sec	accuracy=nan
2023-03-22 21:25:40,289 Node[0] Epoch[20] Batch [140-160]	Speed: 76377.35 samples/sec	accuracy=nan
2023-03-22 21:25:41,142 Node[0] Epoch[20] Batch [160-180]	Speed: 76499.09 samples/sec	accuracy=nan
2023-03-22 21:25:41,995 Node[0] Epoch[20] Batch [180-200]	Speed: 76501.14 samples/sec	accuracy=nan
2023-03-22 21:25:42,853 Node[0] Epoch[20] Batch [200-220]	Speed: 76154.49 samples/sec	accuracy=nan
2023-03-22 21:25:43,707 Node[0] Epoch[20] Batch [220-240]	Speed: 76416.10 samples/sec	accuracy=nan
2023-03-22 21:25:44,563 Node[0] Epoch[20] Batch [240-260]	Speed: 76271.31 samples/sec	accuracy=nan
2023-03-22 21:25:45,417 Node[0] Epoch[20] Batch [260-280]	Speed: 76392.12 samples/sec	accuracy=nan
2023-03-22 21:25:46,272 Node[0] Epoch[20] Batch [280-300]	Speed: 76361.82 samples/sec	accuracy=nan
2023-03-22 21:25:47,136 Node[0] Epoch[20] Batch [300-320]	Speed: 75590.47 samples/sec	accuracy=nan
2023-03-22 21:25:47,991 Node[0] Epoch[20] Batch [320-340]	Speed: 76362.54 samples/sec	accuracy=nan
2023-03-22 21:25:48,844 Node[0] Epoch[20] Batch [340-360]	Speed: 76543.87 samples/sec	accuracy=nan
2023-03-22 21:25:49,701 Node[0] Epoch[20] Batch [360-380]	Speed: 76157.37 samples/sec	accuracy=nan
2023-03-22 21:25:50,170 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,170 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538350170, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 21:25:50,170 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[0] Epoch[20] Time cost=16.769
2023-03-22 21:25:50,170 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538350171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76401.84470409242}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 21:25:50,171 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538350171, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 21:25:50,171 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:50,171 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:25:51,071 Node[0] Epoch[21] Batch [0-20]	Speed: 76248.05 samples/sec	accuracy=nan
2023-03-22 21:25:51,928 Node[0] Epoch[21] Batch [20-40]	Speed: 76203.11 samples/sec	accuracy=nan
2023-03-22 21:25:52,782 Node[0] Epoch[21] Batch [40-60]	Speed: 76376.90 samples/sec	accuracy=nan
2023-03-22 21:25:53,642 Node[0] Epoch[21] Batch [60-80]	Speed: 75924.88 samples/sec	accuracy=nan
2023-03-22 21:25:54,497 Node[0] Epoch[21] Batch [80-100]	Speed: 76325.76 samples/sec	accuracy=nan
2023-03-22 21:25:55,352 Node[0] Epoch[21] Batch [100-120]	Speed: 76379.27 samples/sec	accuracy=nan
2023-03-22 21:25:56,209 Node[0] Epoch[21] Batch [120-140]	Speed: 76184.11 samples/sec	accuracy=nan
2023-03-22 21:25:57,063 Node[0] Epoch[21] Batch [140-160]	Speed: 76440.32 samples/sec	accuracy=nan
2023-03-22 21:25:57,917 Node[0] Epoch[21] Batch [160-180]	Speed: 76391.39 samples/sec	accuracy=nan
2023-03-22 21:25:58,773 Node[0] Epoch[21] Batch [180-200]	Speed: 76340.96 samples/sec	accuracy=nan
2023-03-22 21:25:59,631 Node[0] Epoch[21] Batch [200-220]	Speed: 76077.46 samples/sec	accuracy=nan
2023-03-22 21:26:00,485 Node[0] Epoch[21] Batch [220-240]	Speed: 76367.19 samples/sec	accuracy=nan
2023-03-22 21:26:01,342 Node[0] Epoch[21] Batch [240-260]	Speed: 76244.85 samples/sec	accuracy=nan
2023-03-22 21:26:02,197 Node[0] Epoch[21] Batch [260-280]	Speed: 76287.10 samples/sec	accuracy=nan
2023-03-22 21:26:03,051 Node[0] Epoch[21] Batch [280-300]	Speed: 76465.42 samples/sec	accuracy=nan
2023-03-22 21:26:03,908 Node[0] Epoch[21] Batch [300-320]	Speed: 76182.82 samples/sec	accuracy=nan
2023-03-22 21:26:04,765 Node[0] Epoch[21] Batch [320-340]	Speed: 76148.79 samples/sec	accuracy=nan
2023-03-22 21:26:05,620 Node[0] Epoch[21] Batch [340-360]	Speed: 76344.08 samples/sec	accuracy=nan
2023-03-22 21:26:06,477 Node[0] Epoch[21] Batch [360-380]	Speed: 76209.24 samples/sec	accuracy=nan
2023-03-22 21:26:06,989 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,989 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,990 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538366990, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 21:26:06,991 Node[0] Epoch[21] Time cost=16.819
:::MLLOG {"namespace": "", "time_ms": 1679538366991, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76171.57150414718}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679538366991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 21:26:06,991 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:06,991 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:07,889 Node[0] Epoch[22] Batch [0-20]	Speed: 76352.13 samples/sec	accuracy=nan
2023-03-22 21:26:08,745 Node[0] Epoch[22] Batch [20-40]	Speed: 76310.00 samples/sec	accuracy=nan
2023-03-22 21:26:09,601 Node[0] Epoch[22] Batch [40-60]	Speed: 76232.03 samples/sec	accuracy=nan
2023-03-22 21:26:10,456 Node[0] Epoch[22] Batch [60-80]	Speed: 76340.08 samples/sec	accuracy=nan
2023-03-22 21:26:11,311 Node[0] Epoch[22] Batch [80-100]	Speed: 76379.76 samples/sec	accuracy=nan
2023-03-22 21:26:12,167 Node[0] Epoch[22] Batch [100-120]	Speed: 76281.00 samples/sec	accuracy=nan
2023-03-22 21:26:13,022 Node[0] Epoch[22] Batch [120-140]	Speed: 76362.40 samples/sec	accuracy=nan
2023-03-22 21:26:13,877 Node[0] Epoch[22] Batch [140-160]	Speed: 76342.13 samples/sec	accuracy=nan
2023-03-22 21:26:14,733 Node[0] Epoch[22] Batch [160-180]	Speed: 76239.92 samples/sec	accuracy=nan
2023-03-22 21:26:15,591 Node[0] Epoch[22] Batch [180-200]	Speed: 76110.58 samples/sec	accuracy=nan
2023-03-22 21:26:16,445 Node[0] Epoch[22] Batch [200-220]	Speed: 76375.03 samples/sec	accuracy=nan
2023-03-22 21:26:17,299 Node[0] Epoch[22] Batch [220-240]	Speed: 76467.13 samples/sec	accuracy=nan
2023-03-22 21:26:18,154 Node[0] Epoch[22] Batch [240-260]	Speed: 76351.09 samples/sec	accuracy=nan
2023-03-22 21:26:19,008 Node[0] Epoch[22] Batch [260-280]	Speed: 76406.76 samples/sec	accuracy=nan
2023-03-22 21:26:19,862 Node[0] Epoch[22] Batch [280-300]	Speed: 76491.29 samples/sec	accuracy=nan
2023-03-22 21:26:20,719 Node[0] Epoch[22] Batch [300-320]	Speed: 76111.77 samples/sec	accuracy=nan
2023-03-22 21:26:21,575 Node[0] Epoch[22] Batch [320-340]	Speed: 76272.10 samples/sec	accuracy=nan
2023-03-22 21:26:22,430 Node[0] Epoch[22] Batch [340-360]	Speed: 76347.00 samples/sec	accuracy=nan
2023-03-22 21:26:23,286 Node[0] Epoch[22] Batch [360-380]	Speed: 76305.81 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538383755, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 21:26:23,756 Node[0] Epoch[22] Time cost=16.765
:::MLLOG {"namespace": "", "time_ms": 1679538383756, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76419.8127517976}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679538383795, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 21:26:23,986 Node[0] Epoch[22] Validation-accuracy=0.706786
2023-03-22 21:26:23,986 Node[0] Epoch[22] Validation-correct-count=1104.000000
2023-03-22 21:26:23,986 Node[0] Epoch[22] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538384007, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679538384007, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69756, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-22 21:26:24,007 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538384007, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679538384008, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 21:26:24,007 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538384008, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 21:26:24,007 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,008 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,007 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:24,870 Node[0] Epoch[23] Batch [0-20]	Speed: 76208.20 samples/sec	accuracy=nan
2023-03-22 21:26:25,727 Node[0] Epoch[23] Batch [20-40]	Speed: 76118.79 samples/sec	accuracy=nan
2023-03-22 21:26:26,584 Node[0] Epoch[23] Batch [40-60]	Speed: 76224.28 samples/sec	accuracy=nan
2023-03-22 21:26:27,441 Node[0] Epoch[23] Batch [60-80]	Speed: 76146.14 samples/sec	accuracy=nan
2023-03-22 21:26:28,299 Node[0] Epoch[23] Batch [80-100]	Speed: 76114.67 samples/sec	accuracy=nan
2023-03-22 21:26:29,155 Node[0] Epoch[23] Batch [100-120]	Speed: 76261.75 samples/sec	accuracy=nan
2023-03-22 21:26:30,013 Node[0] Epoch[23] Batch [120-140]	Speed: 76024.19 samples/sec	accuracy=nan
2023-03-22 21:26:30,867 Node[0] Epoch[23] Batch [140-160]	Speed: 76442.71 samples/sec	accuracy=nan
2023-03-22 21:26:31,719 Node[0] Epoch[23] Batch [160-180]	Speed: 76623.11 samples/sec	accuracy=nan
2023-03-22 21:26:32,572 Node[0] Epoch[23] Batch [180-200]	Speed: 76501.06 samples/sec	accuracy=nan
2023-03-22 21:26:33,430 Node[0] Epoch[23] Batch [200-220]	Speed: 76160.48 samples/sec	accuracy=nan
2023-03-22 21:26:34,284 Node[0] Epoch[23] Batch [220-240]	Speed: 76407.70 samples/sec	accuracy=nan
2023-03-22 21:26:35,140 Node[0] Epoch[23] Batch [240-260]	Speed: 76258.97 samples/sec	accuracy=nan
2023-03-22 21:26:35,996 Node[0] Epoch[23] Batch [260-280]	Speed: 76245.99 samples/sec	accuracy=nan
2023-03-22 21:26:36,851 Node[0] Epoch[23] Batch [280-300]	Speed: 76392.63 samples/sec	accuracy=nan
2023-03-22 21:26:37,705 Node[0] Epoch[23] Batch [300-320]	Speed: 76405.16 samples/sec	accuracy=nan
2023-03-22 21:26:38,559 Node[0] Epoch[23] Batch [320-340]	Speed: 76460.25 samples/sec	accuracy=nan
2023-03-22 21:26:39,414 Node[0] Epoch[23] Batch [340-360]	Speed: 76381.38 samples/sec	accuracy=nan
2023-03-22 21:26:40,269 Node[0] Epoch[23] Batch [360-380]	Speed: 76344.34 samples/sec	accuracy=nan
2023-03-22 21:26:40,783 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:40,783 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538400783, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 21:26:40,784 Node[0] Epoch[23] Time cost=16.776
:::MLLOG {"namespace": "", "time_ms": 1679538400784, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76368.885965529}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-22 21:26:40,784 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538400784, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 21:26:40,784 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:41,681 Node[0] Epoch[24] Batch [0-20]	Speed: 76366.57 samples/sec	accuracy=nan
2023-03-22 21:26:42,538 Node[0] Epoch[24] Batch [20-40]	Speed: 76196.58 samples/sec	accuracy=nan
2023-03-22 21:26:43,395 Node[0] Epoch[24] Batch [40-60]	Speed: 76168.98 samples/sec	accuracy=nan
2023-03-22 21:26:44,249 Node[0] Epoch[24] Batch [60-80]	Speed: 76432.70 samples/sec	accuracy=nan
2023-03-22 21:26:45,106 Node[0] Epoch[24] Batch [80-100]	Speed: 76108.76 samples/sec	accuracy=nan
2023-03-22 21:26:45,965 Node[0] Epoch[24] Batch [100-120]	Speed: 76072.79 samples/sec	accuracy=nan
2023-03-22 21:26:46,820 Node[0] Epoch[24] Batch [120-140]	Speed: 76301.47 samples/sec	accuracy=nan
2023-03-22 21:26:47,675 Node[0] Epoch[24] Batch [140-160]	Speed: 76386.17 samples/sec	accuracy=nan
2023-03-22 21:26:48,529 Node[0] Epoch[24] Batch [160-180]	Speed: 76431.69 samples/sec	accuracy=nan
2023-03-22 21:26:49,382 Node[0] Epoch[24] Batch [180-200]	Speed: 76473.88 samples/sec	accuracy=nan
2023-03-22 21:26:50,237 Node[0] Epoch[24] Batch [200-220]	Speed: 76429.58 samples/sec	accuracy=nan
2023-03-22 21:26:51,095 Node[0] Epoch[24] Batch [220-240]	Speed: 76043.24 samples/sec	accuracy=nan
2023-03-22 21:26:51,950 Node[0] Epoch[24] Batch [240-260]	Speed: 76382.04 samples/sec	accuracy=nan
2023-03-22 21:26:52,804 Node[0] Epoch[24] Batch [260-280]	Speed: 76373.49 samples/sec	accuracy=nan
2023-03-22 21:26:53,662 Node[0] Epoch[24] Batch [280-300]	Speed: 76138.79 samples/sec	accuracy=nan
2023-03-22 21:26:54,518 Node[0] Epoch[24] Batch [300-320]	Speed: 76219.04 samples/sec	accuracy=nan
2023-03-22 21:26:55,373 Node[0] Epoch[24] Batch [320-340]	Speed: 76341.36 samples/sec	accuracy=nan
2023-03-22 21:26:56,226 Node[0] Epoch[24] Batch [340-360]	Speed: 76527.91 samples/sec	accuracy=nan
2023-03-22 21:26:57,080 Node[0] Epoch[24] Batch [360-380]	Speed: 76512.81 samples/sec	accuracy=nan
2023-03-22 21:26:57,547 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,547 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538417548, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 21:26:57,548 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[0] Epoch[24] Time cost=16.764
2023-03-22 21:26:57,548 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538417548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76424.44059084913}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-22 21:26:57,548 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538417548, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 21:26:57,548 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,548 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:57,549 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:26:58,449 Node[0] Epoch[25] Batch [0-20]	Speed: 76214.99 samples/sec	accuracy=nan
2023-03-22 21:26:59,309 Node[0] Epoch[25] Batch [20-40]	Speed: 75959.02 samples/sec	accuracy=nan
2023-03-22 21:27:00,164 Node[0] Epoch[25] Batch [40-60]	Speed: 76292.69 samples/sec	accuracy=nan
2023-03-22 21:27:01,020 Node[0] Epoch[25] Batch [60-80]	Speed: 76239.24 samples/sec	accuracy=nan
2023-03-22 21:27:01,878 Node[0] Epoch[25] Batch [80-100]	Speed: 76138.67 samples/sec	accuracy=nan
2023-03-22 21:27:02,733 Node[0] Epoch[25] Batch [100-120]	Speed: 76322.55 samples/sec	accuracy=nan
2023-03-22 21:27:03,589 Node[0] Epoch[25] Batch [120-140]	Speed: 76284.10 samples/sec	accuracy=nan
2023-03-22 21:27:04,443 Node[0] Epoch[25] Batch [140-160]	Speed: 76388.58 samples/sec	accuracy=nan
2023-03-22 21:27:05,298 Node[0] Epoch[25] Batch [160-180]	Speed: 76368.02 samples/sec	accuracy=nan
2023-03-22 21:27:06,154 Node[0] Epoch[25] Batch [180-200]	Speed: 76288.48 samples/sec	accuracy=nan
2023-03-22 21:27:09,634 Node[0] Epoch[25] Batch [200-220]	Speed: 18757.23 samples/sec	accuracy=nan
2023-03-22 21:27:10,487 Node[0] Epoch[25] Batch [220-240]	Speed: 76537.60 samples/sec	accuracy=nan
2023-03-22 21:27:11,341 Node[0] Epoch[25] Batch [240-260]	Speed: 76458.03 samples/sec	accuracy=nan
2023-03-22 21:27:12,194 Node[0] Epoch[25] Batch [260-280]	Speed: 76566.18 samples/sec	accuracy=nan
2023-03-22 21:27:13,049 Node[0] Epoch[25] Batch [280-300]	Speed: 76307.53 samples/sec	accuracy=nan
2023-03-22 21:27:13,903 Node[0] Epoch[25] Batch [300-320]	Speed: 76438.59 samples/sec	accuracy=nan
2023-03-22 21:27:14,757 Node[0] Epoch[25] Batch [320-340]	Speed: 76454.27 samples/sec	accuracy=nan
2023-03-22 21:27:15,612 Node[0] Epoch[25] Batch [340-360]	Speed: 76355.37 samples/sec	accuracy=nan
2023-03-22 21:27:16,469 Node[0] Epoch[25] Batch [360-380]	Speed: 76182.88 samples/sec	accuracy=nan
2023-03-22 21:27:16,979 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,979 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538436979, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 21:27:16,980 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[0] Epoch[25] Time cost=19.432
2023-03-22 21:27:16,980 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538436980, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 65931.30144889255}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-22 21:27:16,980 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:16,980 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538436981, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 21:27:16,981 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:17,883 Node[0] Epoch[26] Batch [0-20]	Speed: 76248.48 samples/sec	accuracy=nan
2023-03-22 21:27:18,738 Node[0] Epoch[26] Batch [20-40]	Speed: 76289.27 samples/sec	accuracy=nan
2023-03-22 21:27:19,595 Node[0] Epoch[26] Batch [40-60]	Speed: 76245.76 samples/sec	accuracy=nan
2023-03-22 21:27:20,450 Node[0] Epoch[26] Batch [60-80]	Speed: 76304.77 samples/sec	accuracy=nan
2023-03-22 21:27:21,309 Node[0] Epoch[26] Batch [80-100]	Speed: 76002.35 samples/sec	accuracy=nan
2023-03-22 21:27:22,163 Node[0] Epoch[26] Batch [100-120]	Speed: 76448.87 samples/sec	accuracy=nan
2023-03-22 21:27:23,020 Node[0] Epoch[26] Batch [120-140]	Speed: 76138.82 samples/sec	accuracy=nan
2023-03-22 21:27:23,874 Node[0] Epoch[26] Batch [140-160]	Speed: 76495.48 samples/sec	accuracy=nan
2023-03-22 21:27:24,726 Node[0] Epoch[26] Batch [160-180]	Speed: 76612.49 samples/sec	accuracy=nan
2023-03-22 21:27:25,580 Node[0] Epoch[26] Batch [180-200]	Speed: 76419.77 samples/sec	accuracy=nan
2023-03-22 21:27:26,434 Node[0] Epoch[26] Batch [200-220]	Speed: 76455.88 samples/sec	accuracy=nan
2023-03-22 21:27:27,289 Node[0] Epoch[26] Batch [220-240]	Speed: 76302.92 samples/sec	accuracy=nan
2023-03-22 21:27:28,145 Node[0] Epoch[26] Batch [240-260]	Speed: 76325.12 samples/sec	accuracy=nan
2023-03-22 21:27:28,998 Node[0] Epoch[26] Batch [260-280]	Speed: 76534.76 samples/sec	accuracy=nan
2023-03-22 21:27:29,853 Node[0] Epoch[26] Batch [280-300]	Speed: 76301.15 samples/sec	accuracy=nan
2023-03-22 21:27:30,710 Node[0] Epoch[26] Batch [300-320]	Speed: 76183.52 samples/sec	accuracy=nan
2023-03-22 21:27:31,566 Node[0] Epoch[26] Batch [320-340]	Speed: 76283.38 samples/sec	accuracy=nan
2023-03-22 21:27:32,422 Node[0] Epoch[26] Batch [340-360]	Speed: 76250.86 samples/sec	accuracy=nan
2023-03-22 21:27:33,276 Node[0] Epoch[26] Batch [360-380]	Speed: 76403.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538453788, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 21:27:33,788 Node[0] Epoch[26] Time cost=16.808
:::MLLOG {"namespace": "", "time_ms": 1679538453789, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76224.80867734335}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679538453828, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 21:27:34,017 Node[0] Epoch[26] Validation-accuracy=0.733035
2023-03-22 21:27:34,017 Node[0] Epoch[26] Validation-correct-count=1145.000000
2023-03-22 21:27:34,017 Node[0] Epoch[26] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538454039, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679538454039, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73278, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-22 21:27:34,039 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538454039, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679538454039, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 21:27:34,039 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538454040, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 21:27:34,039 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,039 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,040 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:34,903 Node[0] Epoch[27] Batch [0-20]	Speed: 76076.47 samples/sec	accuracy=nan
2023-03-22 21:27:35,762 Node[0] Epoch[27] Batch [20-40]	Speed: 75964.46 samples/sec	accuracy=nan
2023-03-22 21:27:36,618 Node[0] Epoch[27] Batch [40-60]	Speed: 76301.87 samples/sec	accuracy=nan
2023-03-22 21:27:37,473 Node[0] Epoch[27] Batch [60-80]	Speed: 76309.00 samples/sec	accuracy=nan
2023-03-22 21:27:38,330 Node[0] Epoch[27] Batch [80-100]	Speed: 76176.22 samples/sec	accuracy=nan
2023-03-22 21:27:39,189 Node[0] Epoch[27] Batch [100-120]	Speed: 76015.79 samples/sec	accuracy=nan
2023-03-22 21:27:40,045 Node[0] Epoch[27] Batch [120-140]	Speed: 76239.94 samples/sec	accuracy=nan
2023-03-22 21:27:40,899 Node[0] Epoch[27] Batch [140-160]	Speed: 76449.94 samples/sec	accuracy=nan
2023-03-22 21:27:41,752 Node[0] Epoch[27] Batch [160-180]	Speed: 76562.99 samples/sec	accuracy=nan
2023-03-22 21:27:42,605 Node[0] Epoch[27] Batch [180-200]	Speed: 76527.48 samples/sec	accuracy=nan
2023-03-22 21:27:43,459 Node[0] Epoch[27] Batch [200-220]	Speed: 76422.27 samples/sec	accuracy=nan
2023-03-22 21:27:44,314 Node[0] Epoch[27] Batch [220-240]	Speed: 76319.29 samples/sec	accuracy=nan
2023-03-22 21:27:45,170 Node[0] Epoch[27] Batch [240-260]	Speed: 76282.00 samples/sec	accuracy=nan
2023-03-22 21:27:46,026 Node[0] Epoch[27] Batch [260-280]	Speed: 76304.11 samples/sec	accuracy=nan
2023-03-22 21:27:46,880 Node[0] Epoch[27] Batch [280-300]	Speed: 76423.50 samples/sec	accuracy=nan
2023-03-22 21:27:47,737 Node[0] Epoch[27] Batch [300-320]	Speed: 76162.60 samples/sec	accuracy=nan
2023-03-22 21:27:48,592 Node[0] Epoch[27] Batch [320-340]	Speed: 76304.11 samples/sec	accuracy=nan
2023-03-22 21:27:49,447 Node[0] Epoch[27] Batch [340-360]	Speed: 76399.90 samples/sec	accuracy=nan
2023-03-22 21:27:50,301 Node[0] Epoch[27] Batch [360-380]	Speed: 76386.45 samples/sec	accuracy=nan
2023-03-22 21:27:50,771 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,771 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,771 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538470772, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 21:27:50,772 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:50,772 Node[0] Epoch[27] Time cost=16.733
:::MLLOG {"namespace": "", "time_ms": 1679538470773, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76566.34599998481}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679538470773, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 21:27:50,773 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:27:51,669 Node[0] Epoch[28] Batch [0-20]	Speed: 76369.06 samples/sec	accuracy=nan
2023-03-22 21:27:52,529 Node[0] Epoch[28] Batch [20-40]	Speed: 75975.31 samples/sec	accuracy=nan
2023-03-22 21:27:53,386 Node[0] Epoch[28] Batch [40-60]	Speed: 76096.05 samples/sec	accuracy=nan
2023-03-22 21:27:54,241 Node[0] Epoch[28] Batch [60-80]	Speed: 76354.24 samples/sec	accuracy=nan
2023-03-22 21:27:55,104 Node[0] Epoch[28] Batch [80-100]	Speed: 75669.62 samples/sec	accuracy=nan
2023-03-22 21:27:55,959 Node[0] Epoch[28] Batch [100-120]	Speed: 76331.34 samples/sec	accuracy=nan
2023-03-22 21:27:56,817 Node[0] Epoch[28] Batch [120-140]	Speed: 76120.12 samples/sec	accuracy=nan
2023-03-22 21:27:57,671 Node[0] Epoch[28] Batch [140-160]	Speed: 76433.57 samples/sec	accuracy=nan
2023-03-22 21:27:58,525 Node[0] Epoch[28] Batch [160-180]	Speed: 76468.45 samples/sec	accuracy=nan
2023-03-22 21:27:59,380 Node[0] Epoch[28] Batch [180-200]	Speed: 76346.49 samples/sec	accuracy=nan
2023-03-22 21:28:00,236 Node[0] Epoch[28] Batch [200-220]	Speed: 76239.75 samples/sec	accuracy=nan
2023-03-22 21:28:01,091 Node[0] Epoch[28] Batch [220-240]	Speed: 76314.04 samples/sec	accuracy=nan
2023-03-22 21:28:01,947 Node[0] Epoch[28] Batch [240-260]	Speed: 76325.40 samples/sec	accuracy=nan
2023-03-22 21:28:02,802 Node[0] Epoch[28] Batch [260-280]	Speed: 76338.38 samples/sec	accuracy=nan
2023-03-22 21:28:03,655 Node[0] Epoch[28] Batch [280-300]	Speed: 76473.79 samples/sec	accuracy=nan
2023-03-22 21:28:04,522 Node[0] Epoch[28] Batch [300-320]	Speed: 75319.67 samples/sec	accuracy=nan
2023-03-22 21:28:05,377 Node[0] Epoch[28] Batch [320-340]	Speed: 76371.64 samples/sec	accuracy=nan
2023-03-22 21:28:06,234 Node[0] Epoch[28] Batch [340-360]	Speed: 76174.40 samples/sec	accuracy=nan
2023-03-22 21:28:07,089 Node[0] Epoch[28] Batch [360-380]	Speed: 76297.94 samples/sec	accuracy=nan
2023-03-22 21:28:07,600 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538487600, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 21:28:07,600 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[0] Epoch[28] Time cost=16.828
2023-03-22 21:28:07,600 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,600 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538487601, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76133.92006916087}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 21:28:07,601 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538487601, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 21:28:07,601 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:07,601 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:08,501 Node[0] Epoch[29] Batch [0-20]	Speed: 76150.99 samples/sec	accuracy=nan
2023-03-22 21:28:09,355 Node[0] Epoch[29] Batch [20-40]	Speed: 76460.70 samples/sec	accuracy=nan
2023-03-22 21:28:10,212 Node[0] Epoch[29] Batch [40-60]	Speed: 76221.63 samples/sec	accuracy=nan
2023-03-22 21:28:11,069 Node[0] Epoch[29] Batch [60-80]	Speed: 76133.37 samples/sec	accuracy=nan
2023-03-22 21:28:11,928 Node[0] Epoch[29] Batch [80-100]	Speed: 75996.51 samples/sec	accuracy=nan
2023-03-22 21:28:12,783 Node[0] Epoch[29] Batch [100-120]	Speed: 76346.13 samples/sec	accuracy=nan
2023-03-22 21:28:13,640 Node[0] Epoch[29] Batch [120-140]	Speed: 76204.49 samples/sec	accuracy=nan
2023-03-22 21:28:14,493 Node[0] Epoch[29] Batch [140-160]	Speed: 76494.07 samples/sec	accuracy=nan
2023-03-22 21:28:15,347 Node[0] Epoch[29] Batch [160-180]	Speed: 76457.78 samples/sec	accuracy=nan
2023-03-22 21:28:16,200 Node[0] Epoch[29] Batch [180-200]	Speed: 76527.57 samples/sec	accuracy=nan
2023-03-22 21:28:17,061 Node[0] Epoch[29] Batch [200-220]	Speed: 75788.86 samples/sec	accuracy=nan
2023-03-22 21:28:17,918 Node[0] Epoch[29] Batch [220-240]	Speed: 76205.57 samples/sec	accuracy=nan
2023-03-22 21:28:18,771 Node[0] Epoch[29] Batch [240-260]	Speed: 76498.02 samples/sec	accuracy=nan
2023-03-22 21:28:19,629 Node[0] Epoch[29] Batch [260-280]	Speed: 76107.22 samples/sec	accuracy=nan
2023-03-22 21:28:20,484 Node[0] Epoch[29] Batch [280-300]	Speed: 76339.32 samples/sec	accuracy=nan
2023-03-22 21:28:21,341 Node[0] Epoch[29] Batch [300-320]	Speed: 76151.27 samples/sec	accuracy=nan
2023-03-22 21:28:22,196 Node[0] Epoch[29] Batch [320-340]	Speed: 76413.20 samples/sec	accuracy=nan
2023-03-22 21:28:23,058 Node[0] Epoch[29] Batch [340-360]	Speed: 75710.97 samples/sec	accuracy=nan
2023-03-22 21:28:23,913 Node[0] Epoch[29] Batch [360-380]	Speed: 76379.84 samples/sec	accuracy=nan
2023-03-22 21:28:24,381 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,381 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538504381, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 21:28:24,382 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[0] Epoch[29] Time cost=16.781
2023-03-22 21:28:24,382 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538504382, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76346.02895966917}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-22 21:28:24,382 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538504383, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 21:28:24,382 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,383 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:24,382 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:25,283 Node[0] Epoch[30] Batch [0-20]	Speed: 76196.79 samples/sec	accuracy=nan
2023-03-22 21:28:26,136 Node[0] Epoch[30] Batch [20-40]	Speed: 76501.16 samples/sec	accuracy=nan
2023-03-22 21:28:26,993 Node[0] Epoch[30] Batch [40-60]	Speed: 76238.58 samples/sec	accuracy=nan
2023-03-22 21:28:27,848 Node[0] Epoch[30] Batch [60-80]	Speed: 76296.05 samples/sec	accuracy=nan
2023-03-22 21:28:28,705 Node[0] Epoch[30] Batch [80-100]	Speed: 76231.58 samples/sec	accuracy=nan
2023-03-22 21:28:29,563 Node[0] Epoch[30] Batch [100-120]	Speed: 76086.01 samples/sec	accuracy=nan
2023-03-22 21:28:30,419 Node[0] Epoch[30] Batch [120-140]	Speed: 76269.42 samples/sec	accuracy=nan
2023-03-22 21:28:31,274 Node[0] Epoch[30] Batch [140-160]	Speed: 76278.92 samples/sec	accuracy=nan
2023-03-22 21:28:32,128 Node[0] Epoch[30] Batch [160-180]	Speed: 76434.75 samples/sec	accuracy=nan
2023-03-22 21:28:32,982 Node[0] Epoch[30] Batch [180-200]	Speed: 76453.38 samples/sec	accuracy=nan
2023-03-22 21:28:33,840 Node[0] Epoch[30] Batch [200-220]	Speed: 76110.67 samples/sec	accuracy=nan
2023-03-22 21:28:34,696 Node[0] Epoch[30] Batch [220-240]	Speed: 76245.93 samples/sec	accuracy=nan
2023-03-22 21:28:35,553 Node[0] Epoch[30] Batch [240-260]	Speed: 76217.66 samples/sec	accuracy=nan
2023-03-22 21:28:36,408 Node[0] Epoch[30] Batch [260-280]	Speed: 76312.87 samples/sec	accuracy=nan
2023-03-22 21:28:37,263 Node[0] Epoch[30] Batch [280-300]	Speed: 76370.45 samples/sec	accuracy=nan
2023-03-22 21:28:38,121 Node[0] Epoch[30] Batch [300-320]	Speed: 76027.51 samples/sec	accuracy=nan
2023-03-22 21:28:38,979 Node[0] Epoch[30] Batch [320-340]	Speed: 76101.53 samples/sec	accuracy=nan
2023-03-22 21:28:39,834 Node[0] Epoch[30] Batch [340-360]	Speed: 76359.50 samples/sec	accuracy=nan
2023-03-22 21:28:40,687 Node[0] Epoch[30] Batch [360-380]	Speed: 76552.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538521198, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 21:28:41,199 Node[0] Epoch[30] Time cost=16.816
:::MLLOG {"namespace": "", "time_ms": 1679538521199, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76186.5580383467}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679538521238, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 21:28:41,427 Node[0] Epoch[30] Validation-accuracy=0.758003
2023-03-22 21:28:41,427 Node[0] Epoch[30] Validation-correct-count=1184.000000
2023-03-22 21:28:41,427 Node[0] Epoch[30] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538521449, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679538521450, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7521, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-22 21:28:41,450 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538521450, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679538521450, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 21:28:41,450 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538521450, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 21:28:41,450 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:41,450 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:28:42,311 Node[0] Epoch[31] Batch [0-20]	Speed: 76224.77 samples/sec	accuracy=nan
2023-03-22 21:28:43,168 Node[0] Epoch[31] Batch [20-40]	Speed: 76168.98 samples/sec	accuracy=nan
2023-03-22 21:28:44,025 Node[0] Epoch[31] Batch [40-60]	Speed: 76226.23 samples/sec	accuracy=nan
2023-03-22 21:28:44,881 Node[0] Epoch[31] Batch [60-80]	Speed: 76291.97 samples/sec	accuracy=nan
2023-03-22 21:28:45,740 Node[0] Epoch[31] Batch [80-100]	Speed: 75923.09 samples/sec	accuracy=nan
2023-03-22 21:28:46,597 Node[0] Epoch[31] Batch [100-120]	Speed: 76236.95 samples/sec	accuracy=nan
2023-03-22 21:28:47,454 Node[0] Epoch[31] Batch [120-140]	Speed: 76100.43 samples/sec	accuracy=nan
2023-03-22 21:28:48,309 Node[0] Epoch[31] Batch [140-160]	Speed: 76424.57 samples/sec	accuracy=nan
2023-03-22 21:28:49,164 Node[0] Epoch[31] Batch [160-180]	Speed: 76297.52 samples/sec	accuracy=nan
2023-03-22 21:28:50,018 Node[0] Epoch[31] Batch [180-200]	Speed: 76491.05 samples/sec	accuracy=nan
2023-03-22 21:28:50,874 Node[0] Epoch[31] Batch [200-220]	Speed: 76270.06 samples/sec	accuracy=nan
2023-03-22 21:28:51,732 Node[0] Epoch[31] Batch [220-240]	Speed: 76031.69 samples/sec	accuracy=nan
2023-03-22 21:28:52,589 Node[0] Epoch[31] Batch [240-260]	Speed: 76221.16 samples/sec	accuracy=nan
2023-03-22 21:28:53,444 Node[0] Epoch[31] Batch [260-280]	Speed: 76355.37 samples/sec	accuracy=nan
2023-03-22 21:28:54,300 Node[0] Epoch[31] Batch [280-300]	Speed: 76220.69 samples/sec	accuracy=nan
2023-03-22 21:28:57,385 Node[0] Epoch[31] Batch [300-320]	Speed: 21162.07 samples/sec	accuracy=nan
2023-03-22 21:28:58,238 Node[0] Epoch[31] Batch [320-340]	Speed: 76500.18 samples/sec	accuracy=nan
2023-03-22 21:28:59,094 Node[0] Epoch[31] Batch [340-360]	Speed: 76311.95 samples/sec	accuracy=nan
2023-03-22 21:28:59,948 Node[0] Epoch[31] Batch [360-380]	Speed: 76371.62 samples/sec	accuracy=nan
2023-03-22 21:29:00,417 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,417 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,417 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:00,418 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538540418, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 21:29:00,419 Node[0] Epoch[31] Time cost=18.969
:::MLLOG {"namespace": "", "time_ms": 1679538540419, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 67540.80861291998}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679538540419, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 21:29:00,419 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:01,318 Node[0] Epoch[32] Batch [0-20]	Speed: 76191.47 samples/sec	accuracy=nan
2023-03-22 21:29:02,173 Node[0] Epoch[32] Batch [20-40]	Speed: 76321.87 samples/sec	accuracy=nan
2023-03-22 21:29:03,030 Node[0] Epoch[32] Batch [40-60]	Speed: 76204.55 samples/sec	accuracy=nan
2023-03-22 21:29:03,885 Node[0] Epoch[32] Batch [60-80]	Speed: 76325.17 samples/sec	accuracy=nan
2023-03-22 21:29:04,743 Node[0] Epoch[32] Batch [80-100]	Speed: 76078.25 samples/sec	accuracy=nan
2023-03-22 21:29:05,601 Node[0] Epoch[32] Batch [100-120]	Speed: 76153.85 samples/sec	accuracy=nan
2023-03-22 21:29:06,456 Node[0] Epoch[32] Batch [120-140]	Speed: 76361.50 samples/sec	accuracy=nan
2023-03-22 21:29:07,312 Node[0] Epoch[32] Batch [140-160]	Speed: 76199.88 samples/sec	accuracy=nan
2023-03-22 21:29:08,167 Node[0] Epoch[32] Batch [160-180]	Speed: 76389.71 samples/sec	accuracy=nan
2023-03-22 21:29:09,020 Node[0] Epoch[32] Batch [180-200]	Speed: 76485.99 samples/sec	accuracy=nan
2023-03-22 21:29:09,875 Node[0] Epoch[32] Batch [200-220]	Speed: 76352.47 samples/sec	accuracy=nan
2023-03-22 21:29:10,732 Node[0] Epoch[32] Batch [220-240]	Speed: 76237.03 samples/sec	accuracy=nan
2023-03-22 21:29:11,586 Node[0] Epoch[32] Batch [240-260]	Speed: 76400.92 samples/sec	accuracy=nan
2023-03-22 21:29:12,441 Node[0] Epoch[32] Batch [260-280]	Speed: 76364.82 samples/sec	accuracy=nan
2023-03-22 21:29:13,295 Node[0] Epoch[32] Batch [280-300]	Speed: 76396.55 samples/sec	accuracy=nan
2023-03-22 21:29:14,153 Node[0] Epoch[32] Batch [300-320]	Speed: 76072.94 samples/sec	accuracy=nan
2023-03-22 21:29:15,009 Node[0] Epoch[32] Batch [320-340]	Speed: 76288.54 samples/sec	accuracy=nan
2023-03-22 21:29:15,862 Node[0] Epoch[32] Batch [340-360]	Speed: 76548.86 samples/sec	accuracy=nan
2023-03-22 21:29:16,717 Node[0] Epoch[32] Batch [360-380]	Speed: 76362.63 samples/sec	accuracy=nan
2023-03-22 21:29:17,233 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,233 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,234 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:17,234 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538557234, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 21:29:17,234 Node[0] Epoch[32] Time cost=16.815
:::MLLOG {"namespace": "", "time_ms": 1679538557234, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76191.99923002692}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679538557235, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 21:29:17,235 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:18,132 Node[0] Epoch[33] Batch [0-20]	Speed: 76276.05 samples/sec	accuracy=nan
2023-03-22 21:29:18,988 Node[0] Epoch[33] Batch [20-40]	Speed: 76237.48 samples/sec	accuracy=nan
2023-03-22 21:29:19,843 Node[0] Epoch[33] Batch [40-60]	Speed: 76418.38 samples/sec	accuracy=nan
2023-03-22 21:29:20,698 Node[0] Epoch[33] Batch [60-80]	Speed: 76311.08 samples/sec	accuracy=nan
2023-03-22 21:29:21,554 Node[0] Epoch[33] Batch [80-100]	Speed: 76310.93 samples/sec	accuracy=nan
2023-03-22 21:29:22,410 Node[0] Epoch[33] Batch [100-120]	Speed: 76242.21 samples/sec	accuracy=nan
2023-03-22 21:29:23,270 Node[0] Epoch[33] Batch [120-140]	Speed: 75901.49 samples/sec	accuracy=nan
2023-03-22 21:29:24,124 Node[0] Epoch[33] Batch [140-160]	Speed: 76420.79 samples/sec	accuracy=nan
2023-03-22 21:29:24,977 Node[0] Epoch[33] Batch [160-180]	Speed: 76505.46 samples/sec	accuracy=nan
2023-03-22 21:29:25,832 Node[0] Epoch[33] Batch [180-200]	Speed: 76368.79 samples/sec	accuracy=nan
2023-03-22 21:29:26,688 Node[0] Epoch[33] Batch [200-220]	Speed: 76255.40 samples/sec	accuracy=nan
2023-03-22 21:29:27,542 Node[0] Epoch[33] Batch [220-240]	Speed: 76447.64 samples/sec	accuracy=nan
2023-03-22 21:29:28,399 Node[0] Epoch[33] Batch [240-260]	Speed: 76231.03 samples/sec	accuracy=nan
2023-03-22 21:29:29,253 Node[0] Epoch[33] Batch [260-280]	Speed: 76401.94 samples/sec	accuracy=nan
2023-03-22 21:29:30,108 Node[0] Epoch[33] Batch [280-300]	Speed: 76338.19 samples/sec	accuracy=nan
2023-03-22 21:29:33,469 Node[0] Epoch[33] Batch [300-320]	Speed: 19424.09 samples/sec	accuracy=nan
2023-03-22 21:29:34,321 Node[0] Epoch[33] Batch [320-340]	Speed: 76650.16 samples/sec	accuracy=nan
2023-03-22 21:29:35,172 Node[0] Epoch[33] Batch [340-360]	Speed: 76698.06 samples/sec	accuracy=nan
2023-03-22 21:29:36,026 Node[0] Epoch[33] Batch [360-380]	Speed: 76368.30 samples/sec	accuracy=nan
2023-03-22 21:29:36,495 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538576495, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 21:29:36,495 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,495 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[0] Epoch[33] Time cost=19.261
2023-03-22 21:29:36,496 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538576496, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 66515.66233487483}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-22 21:29:36,496 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679538576496, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 21:29:36,496 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:36,496 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:29:37,392 Node[0] Epoch[34] Batch [0-20]	Speed: 76567.95 samples/sec	accuracy=nan
2023-03-22 21:29:38,248 Node[0] Epoch[34] Batch [20-40]	Speed: 76320.19 samples/sec	accuracy=nan
2023-03-22 21:29:39,102 Node[0] Epoch[34] Batch [40-60]	Speed: 76453.29 samples/sec	accuracy=nan
2023-03-22 21:29:39,956 Node[0] Epoch[34] Batch [60-80]	Speed: 76375.18 samples/sec	accuracy=nan
2023-03-22 21:29:40,813 Node[0] Epoch[34] Batch [80-100]	Speed: 76216.51 samples/sec	accuracy=nan
2023-03-22 21:29:41,667 Node[0] Epoch[34] Batch [100-120]	Speed: 76451.14 samples/sec	accuracy=nan
2023-03-22 21:29:42,522 Node[0] Epoch[34] Batch [120-140]	Speed: 76357.86 samples/sec	accuracy=nan
2023-03-22 21:29:43,377 Node[0] Epoch[34] Batch [140-160]	Speed: 76328.42 samples/sec	accuracy=nan
2023-03-22 21:29:44,231 Node[0] Epoch[34] Batch [160-180]	Speed: 76469.26 samples/sec	accuracy=nan
2023-03-22 21:29:45,085 Node[0] Epoch[34] Batch [180-200]	Speed: 76404.52 samples/sec	accuracy=nan
2023-03-22 21:29:45,940 Node[0] Epoch[34] Batch [200-220]	Speed: 76384.32 samples/sec	accuracy=nan
2023-03-22 21:29:46,795 Node[0] Epoch[34] Batch [220-240]	Speed: 76324.10 samples/sec	accuracy=nan
2023-03-22 21:29:47,648 Node[0] Epoch[34] Batch [240-260]	Speed: 76491.46 samples/sec	accuracy=nan
2023-03-22 21:29:48,503 Node[0] Epoch[34] Batch [260-280]	Speed: 76377.97 samples/sec	accuracy=nan
2023-03-22 21:29:49,357 Node[0] Epoch[34] Batch [280-300]	Speed: 76410.32 samples/sec	accuracy=nan
2023-03-22 21:29:50,217 Node[0] Epoch[34] Batch [300-320]	Speed: 75930.16 samples/sec	accuracy=nan
2023-03-22 21:29:51,074 Node[0] Epoch[34] Batch [320-340]	Speed: 76197.38 samples/sec	accuracy=nan
2023-03-22 21:29:51,930 Node[0] Epoch[34] Batch [340-360]	Speed: 76250.92 samples/sec	accuracy=nan
2023-03-22 21:29:52,784 Node[0] Epoch[34] Batch [360-380]	Speed: 76466.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679538593298, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 21:29:53,298 Node[0] Epoch[34] Time cost=16.802
:::MLLOG {"namespace": "", "time_ms": 1679538593298, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76251.4210964951}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679538593338, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 21:29:53,527 Node[0] Epoch[34] Validation-accuracy=0.766325
2023-03-22 21:29:53,527 Node[0] Epoch[34] Validation-correct-count=1197.000000
2023-03-22 21:29:53,527 Node[0] Epoch[34] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679538593549, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679538593549, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7605, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679538593549, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679538593549, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ ret_code=0
+ sleep 3
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=673
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM'
RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
+ end=1679538599
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
+ result=673
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ echo 'RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=673
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM'
RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM
+ export PROFILE=0
+ PROFILE=0
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
+ end=1679538599
++ date +%s
++ date '+%Y-%m-%d %r'
+ end=1679538599
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
++ date '+%Y-%m-%d %r'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=673
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM'
RESULT,IMAGE_CLASSIFICATION,,673,root,2023-03-22 09:18:46 PM
+ export PROFILE=0
+ PROFILE=0
++ date '+%Y-%m-%d %r'
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538599
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:29:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:29:59 PM'
ENDING TIMING RUN AT 2023-03-22 09:29:59 PM
+ result=674
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,674,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538600
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:30:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:30:00 PM'
ENDING TIMING RUN AT 2023-03-22 09:30:00 PM
+ result=675
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538600
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:30:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:30:00 PM'
ENDING TIMING RUN AT 2023-03-22 09:30:00 PM
+ result=675
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679538600
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:30:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:30:00 PM'
ENDING TIMING RUN AT 2023-03-22 09:30:00 PM
+ result=675
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM'
RESULT,IMAGE_CLASSIFICATION,,675,root,2023-03-22 09:18:45 PM
+ export PROFILE=0
+ PROFILE=0
