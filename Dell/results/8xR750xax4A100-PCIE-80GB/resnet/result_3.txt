+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node042 node043 node044 node045 node046 node047 '
+ echo 'hosts=node040 node041 node042 node043 node044 node045 node046 node047 '
hosts=node040 node041 node042 node043 node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539422803, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539422838, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539422839, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539422840, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539422842, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539436520, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539442673, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539442707, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539442709, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539442710, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539442712, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539454331, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539459272, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539459306, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539459308, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539459309, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539459310, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node042 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node042
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539470373, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539476346, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539476380, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539476382, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539476383, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539476384, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539488131, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539493099, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539493134, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539493135, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539493137, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539493138, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539505031, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539510000, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539510035, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539510037, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539510038, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539510039, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539521819, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539526772, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539526807, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539526808, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539526810, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539526811, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539539544, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539544509, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539544544, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539544545, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539544547, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539544548, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679539556432, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=26366
+ SEED=26366
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node042: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ source ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=0
+ global_rank=0
+++ dirname ./config_8xR750xax4A100.sh
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ DALI_PREFETCH_QUEUE=3
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start=1679539558
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ [[ 0 -lt 1 ]]
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ PARAMS+=(--use-dali)
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+ source ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ dirname ./config_8xR750xax4A100.sh
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ source ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start=1679539558
+ start=1679539558
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ date '+%Y-%m-%d %r'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ date +%s
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ sed 's/^config_//'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+++ sed 's/\.sh$//'
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++++ readlink -f ./config_8xR750xax4A100.sh
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ DGXNNODES=8
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DATAROOT=/data
+ echo 'running benchmark'
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
+++ sed 's/^config_//'
++ seq 0 3
++ tr '\n' ,
+++ sed 's/\.sh$//'
++ tr '\n' ,
++++ readlink -f ./config_8xR750xax4A100.sh
++ sed 's/,$//'
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ source ./config_8xR750xax4A100.sh
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ dirname ./config_8xR750xax4A100.sh
+ start=1679539558
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ source ./config_8xR750xax4A100.sh
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+++ dirname ./config_8xR750xax4A100.sh
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DGXSYSTEM=8xR750xax4A100
+ [[ 0 -ge 1 ]]
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ GPUS=0,1,2,3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ sed 's/,$//'
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
+ [[ '' -ge 1 ]]
++ LRSCHED=pow2
++ export NUMEPOCHS=37
+++ dirname ./config_8xR750xax4A100.sh
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ sed 's/^config_//'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+++ sed 's/\.sh$//'
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++++ readlink -f ./config_8xR750xax4A100.sh
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ date +%s
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ source ./config_8xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start=1679539558
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ dirname ./config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ date '+%Y-%m-%d %r'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+++ sed 's/^config_//'
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ sed 's/\.sh$//'
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++++ readlink -f ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ sed 's/\.sh$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ start_fmt='2023-03-22 09:45:58 PM'
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ start=1679539558
+ [[ '' -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679539558
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ source ./config_8xR750xax4A100.sh
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ start_fmt='2023-03-22 09:45:58 PM'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ readonly global_rank=5
+ global_rank=5
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ readonly local_rank=0
+ local_rank=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ KVSTORE=horovod
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ LR=10.5
+ MOM=0.9
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ SEED=26366
+ EVAL_OFFSET=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
++ export DGXNNODES=8
++ DGXNNODES=8
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+++ dirname ./config_8xR750xax4A100.sh
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+++ dirname ./config_8xR750xax4A100.sh
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ sed 's/^config_//'
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ sed 's/\.sh$//'
+ [[ 0 == 1 ]]
+++ dirname ./config_8xR750xax4A100.sh
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++++ readlink -f ./config_8xR750xax4A100.sh
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679539558
++ date +%s
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=4
+ global_rank=4
+ GPUS=0,1,2,3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ [[ '' -ge 1 ]]
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export DGXHT=1
+++ DGXHT=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ date +%s
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ seq 0 3
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ tr '\n' ,
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ sed 's/,$//'
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ start=1679539558
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ date +%s
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ date '+%Y-%m-%d %r'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ sed 's/\.sh$//'
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++++ readlink -f ./config_8xR750xax4A100.sh
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ sed 's/^config_//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ sed 's/^config_//'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/\.sh$//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/\.sh$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ [[ '' -ge 1 ]]
++++ readlink -f ./config_8xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ SLURM_NTASKS_PER_NODE=1
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++++ readlink -f ./config_8xR750xax4A100.sh
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679539558
++ seq 0 3
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ start=1679539558
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date +%s
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ [[ '' -ge 1 ]]
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ source ./config_8xR750xax4A100.sh
+ NETWORK=resnet-v1b-fl
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+++ dirname ./config_8xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ tr '\n' ,
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679539558
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ date +%s
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=4
+ global_rank=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+ BATCHSIZE=102
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ DALI_PREFETCH_QUEUE=3
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ DALI_PREALLOCATE_WIDTH=5980
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ NODALI=0
+ NUMEXAMPLES=
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+++ sed 's/^config_//'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ [[ 0 -ge 1 ]]
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ source ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ date +%s
+ GPUS=0,1,2,3
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ date +%s
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ seq 0 3
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ tr '\n' ,
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ DGXNNODES=8
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export DGXHT=1
+++ DGXHT=1
+++ dirname ./config_8xR750xax4A100.sh
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ sed 's/,$//'
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ [[ '' -ge 1 ]]
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ sed 's/^config_//'
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ sed 's/^config_//'
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+ GPUS=0,1,2,3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
+++ sed 's/\.sh$//'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
+++ sed 's/\.sh$//'
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ start=1679539558
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ start=1679539558
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ DALI_DECODER_BUFFER_HINT=1315942
+ start=1679539558
+ DALI_CROP_BUFFER_HINT=165581
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
running benchmark
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ export NGPUS=1
+ NGPUS=1
+++ export DGXHT=1
+++ DGXHT=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ [[ 0 -ge 1 ]]
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ date '+%Y-%m-%d %r'
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ date '+%Y-%m-%d %r'
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ start_fmt='2023-03-22 09:45:58 PM'
+ readonly global_rank=3
+ global_rank=3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ readonly local_rank=0
+ local_rank=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ SLURM_NTASKS_PER_NODE=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ [[ '' -ge 1 ]]
+ readonly global_rank=3
+ global_rank=3
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ readonly local_rank=0
+ local_rank=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ GPUS=0,1,2,3
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ date +%s
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 09:45:58 PM'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ start=1679539558
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ [[ '' -ge 1 ]]
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ date +%s
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679539558
+ start=1679539558
+ start=1679539558
++ seq 0 3
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ start_fmt='2023-03-22 09:45:58 PM'
+ readonly global_rank=6
+ global_rank=6
+ start_fmt='2023-03-22 09:45:58 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ readonly global_rank=6
+ global_rank=6
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=6
+ global_rank=6
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
running benchmark
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ GPUS=0,1,2,3
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ seq 0 3
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ tr '\n' ,
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
++ seq 0 3
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ sed 's/,$//'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ tr '\n' ,
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ source ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ date +%s
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ date +%s
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ source ./config_8xR750xax4A100.sh
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ start=1679539558
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
+ start=1679539558
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=1
+ global_rank=1
+ start_fmt='2023-03-22 09:45:58 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=1
+ global_rank=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date +%s
+ start=1679539558
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ date '+%Y-%m-%d %r'
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679539558
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:58 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:58 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ date +%s
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ date +%s
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679539559
+ start=1679539559
+ start=1679539559
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 09:45:59 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:59 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:59 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-22 09:45:59 PM'
+ start_fmt='2023-03-22 09:45:59 PM'
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:59 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:59 PM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:59 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
STARTING TIMING RUN AT 2023-03-22 09:45:59 PM
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
running benchmark
++ date +%s
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679539559
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 09:45:59 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 09:45:59 PM'
STARTING TIMING RUN AT 2023-03-22 09:45:59 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=26366
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 26366 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:46498] MCW rank 1 is not bound (or bound to all available processors)
[node040:46475] MCW rank 0 is not bound (or bound to all available processors)
[node042:35497] MCW rank 11 is not bound (or bound to all available processors)
[node040:46486] MCW rank 3 is not bound (or bound to all available processors)
[node040:46477] MCW rank 2 is not bound (or bound to all available processors)
[node042:35490] MCW rank 9 is not bound (or bound to all available processors)
[node042:35489] MCW rank 8 is not bound (or bound to all available processors)
[node042:35498] MCW rank 10 is not bound (or bound to all available processors)
[node043:36535] MCW rank 12 is not bound (or bound to all available processors)
[node045:27825] MCW rank 23 is not bound (or bound to all available processors)
[node043:36527] MCW rank 14 is not bound (or bound to all available processors)
[node043:36528] MCW rank 13 is not bound (or bound to all available processors)
[node043:36534] MCW rank 15 is not bound (or bound to all available processors)
[node045:27836] MCW rank 20 is not bound (or bound to all available processors)
[node041:33530] MCW rank 7 is not bound (or bound to all available processors)
[node046:22196] MCW rank 27 is not bound (or bound to all available processors)
[node046:22194] MCW rank 24 is not bound (or bound to all available processors)
[node045:27835] MCW rank 22 is not bound (or bound to all available processors)
[node045:27822] MCW rank 21 is not bound (or bound to all available processors)
[node046:22207] MCW rank 25 is not bound (or bound to all available processors)
[node046:22206] MCW rank 26 is not bound (or bound to all available processors)
[node041:33527] MCW rank 4 is not bound (or bound to all available processors)
[node041:33529] MCW rank 6 is not bound (or bound to all available processors)
[node041:33528] MCW rank 5 is not bound (or bound to all available processors)
[node044:31969] MCW rank 16 is not bound (or bound to all available processors)
[node044:31964] MCW rank 19 is not bound (or bound to all available processors)
[node044:31963] MCW rank 18 is not bound (or bound to all available processors)
[node044:31970] MCW rank 17 is not bound (or bound to all available processors)
[node047:30085] MCW rank 30 is not bound (or bound to all available processors)
[node047:30086] MCW rank 29 is not bound (or bound to all available processors)
[node047:30084] MCW rank 28 is not bound (or bound to all available processors)
[node047:30083] MCW rank 31 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679539563935, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:12] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:12] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679539572243, "event_type": "POINT_IN_TIME", "key": "seed", "value": 26366, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[21:46:12] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:46:12] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679539574447, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 102, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:46:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679539579369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579380, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579380, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579380, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579380, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579381, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579381, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579381, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579381, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579381, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579382, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579382, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579382, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579382, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579383, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579383, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579383, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579383, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579384, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579384, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579384, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579384, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579385, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579385, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579385, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579385, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579386, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579386, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579386, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579386, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679539579409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,976 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19206, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,976 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1802, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,976 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63676, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,977 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34457, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,977 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37152, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,977 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58568, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,978 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32811, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,979 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14260, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,979 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7819, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,979 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63851, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,979 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48994, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,979 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64612, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30575, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15408, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24827, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9409, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[31] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59989, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52237, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17658, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,980 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29196, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[28] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45249, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580979, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[29] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1515, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580981, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679539580981, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679539580981, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54913, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580981, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[24] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51215, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[25] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22122, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[26] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7801, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[27] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12928, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53049, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26246, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,981 Node[30] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46459, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,982 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45897, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 21:46:20,982 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41670, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679539580982, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679539627927, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679539627928, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679539627928, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679539628462, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50016, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679539628482, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539628483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 21:47:09,356 Node[0] Epoch[0] Batch [0-20]	Speed: 75402.47 samples/sec	accuracy=nan
2023-03-22 21:47:10,210 Node[0] Epoch[0] Batch [20-40]	Speed: 76456.22 samples/sec	accuracy=nan
2023-03-22 21:47:11,063 Node[0] Epoch[0] Batch [40-60]	Speed: 76467.19 samples/sec	accuracy=nan
2023-03-22 21:47:11,919 Node[0] Epoch[0] Batch [60-80]	Speed: 76255.82 samples/sec	accuracy=nan
2023-03-22 21:47:12,772 Node[0] Epoch[0] Batch [80-100]	Speed: 76530.07 samples/sec	accuracy=nan
2023-03-22 21:47:13,626 Node[0] Epoch[0] Batch [100-120]	Speed: 76492.25 samples/sec	accuracy=nan
2023-03-22 21:47:14,483 Node[0] Epoch[0] Batch [120-140]	Speed: 76177.05 samples/sec	accuracy=nan
2023-03-22 21:47:15,341 Node[0] Epoch[0] Batch [140-160]	Speed: 76079.58 samples/sec	accuracy=nan
2023-03-22 21:47:16,196 Node[0] Epoch[0] Batch [160-180]	Speed: 76365.50 samples/sec	accuracy=nan
2023-03-22 21:47:17,051 Node[0] Epoch[0] Batch [180-200]	Speed: 76311.27 samples/sec	accuracy=nan
2023-03-22 21:47:17,902 Node[0] Epoch[0] Batch [200-220]	Speed: 76701.41 samples/sec	accuracy=nan
2023-03-22 21:47:18,754 Node[0] Epoch[0] Batch [220-240]	Speed: 76649.51 samples/sec	accuracy=nan
2023-03-22 21:47:19,608 Node[0] Epoch[0] Batch [240-260]	Speed: 76431.23 samples/sec	accuracy=nan
2023-03-22 21:47:20,462 Node[0] Epoch[0] Batch [260-280]	Speed: 76397.32 samples/sec	accuracy=nan
2023-03-22 21:47:21,315 Node[0] Epoch[0] Batch [280-300]	Speed: 76555.81 samples/sec	accuracy=nan
2023-03-22 21:47:22,168 Node[0] Epoch[0] Batch [300-320]	Speed: 76502.34 samples/sec	accuracy=nan
2023-03-22 21:47:23,018 Node[0] Epoch[0] Batch [320-340]	Speed: 76865.44 samples/sec	accuracy=nan
2023-03-22 21:47:23,869 Node[0] Epoch[0] Batch [340-360]	Speed: 76651.29 samples/sec	accuracy=nan
2023-03-22 21:47:24,723 Node[0] Epoch[0] Batch [360-380]	Speed: 76446.78 samples/sec	accuracy=nan
2023-03-22 21:47:25,233 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,233 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539645233, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 21:47:25,234 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[0] Epoch[0] Time cost=16.751
2023-03-22 21:47:25,234 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539645234, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76481.07645198655}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 21:47:25,234 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539645234, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 21:47:25,234 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,235 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:25,234 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:26,129 Node[0] Epoch[1] Batch [0-20]	Speed: 76574.46 samples/sec	accuracy=nan
2023-03-22 21:47:26,980 Node[0] Epoch[1] Batch [20-40]	Speed: 76732.02 samples/sec	accuracy=nan
2023-03-22 21:47:27,833 Node[0] Epoch[1] Batch [40-60]	Speed: 76514.42 samples/sec	accuracy=nan
2023-03-22 21:47:28,689 Node[0] Epoch[1] Batch [60-80]	Speed: 76282.06 samples/sec	accuracy=nan
2023-03-22 21:47:29,542 Node[0] Epoch[1] Batch [80-100]	Speed: 76463.33 samples/sec	accuracy=nan
2023-03-22 21:47:30,395 Node[0] Epoch[1] Batch [100-120]	Speed: 76590.89 samples/sec	accuracy=nan
2023-03-22 21:47:31,247 Node[0] Epoch[1] Batch [120-140]	Speed: 76560.89 samples/sec	accuracy=nan
2023-03-22 21:47:32,101 Node[0] Epoch[1] Batch [140-160]	Speed: 76432.66 samples/sec	accuracy=nan
2023-03-22 21:47:32,952 Node[0] Epoch[1] Batch [160-180]	Speed: 76734.47 samples/sec	accuracy=nan
2023-03-22 21:47:33,804 Node[0] Epoch[1] Batch [180-200]	Speed: 76649.40 samples/sec	accuracy=nan
2023-03-22 21:47:34,656 Node[0] Epoch[1] Batch [200-220]	Speed: 76589.99 samples/sec	accuracy=nan
2023-03-22 21:47:35,509 Node[0] Epoch[1] Batch [220-240]	Speed: 76534.16 samples/sec	accuracy=nan
2023-03-22 21:47:36,361 Node[0] Epoch[1] Batch [240-260]	Speed: 76653.91 samples/sec	accuracy=nan
2023-03-22 21:47:37,214 Node[0] Epoch[1] Batch [260-280]	Speed: 76480.09 samples/sec	accuracy=nan
2023-03-22 21:47:38,074 Node[0] Epoch[1] Batch [280-300]	Speed: 75925.42 samples/sec	accuracy=nan
2023-03-22 21:47:38,930 Node[0] Epoch[1] Batch [300-320]	Speed: 76287.40 samples/sec	accuracy=nan
2023-03-22 21:47:39,782 Node[0] Epoch[1] Batch [320-340]	Speed: 76570.18 samples/sec	accuracy=nan
2023-03-22 21:47:40,636 Node[0] Epoch[1] Batch [340-360]	Speed: 76455.17 samples/sec	accuracy=nan
2023-03-22 21:47:41,490 Node[0] Epoch[1] Batch [360-380]	Speed: 76445.82 samples/sec	accuracy=nan
2023-03-22 21:47:42,000 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,000 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,000 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,000 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539662000, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 21:47:42,001 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[0] Epoch[1] Time cost=16.766
2023-03-22 21:47:42,001 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539662001, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76413.53704547249}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-22 21:47:42,001 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539662001, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 21:47:42,001 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,001 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:42,901 Node[0] Epoch[2] Batch [0-20]	Speed: 76140.26 samples/sec	accuracy=nan
2023-03-22 21:47:43,754 Node[0] Epoch[2] Batch [20-40]	Speed: 76499.24 samples/sec	accuracy=nan
2023-03-22 21:47:44,608 Node[0] Epoch[2] Batch [40-60]	Speed: 76431.23 samples/sec	accuracy=nan
2023-03-22 21:47:45,464 Node[0] Epoch[2] Batch [60-80]	Speed: 76284.27 samples/sec	accuracy=nan
2023-03-22 21:47:46,324 Node[0] Epoch[2] Batch [80-100]	Speed: 75854.83 samples/sec	accuracy=nan
2023-03-22 21:47:47,182 Node[0] Epoch[2] Batch [100-120]	Speed: 76166.67 samples/sec	accuracy=nan
2023-03-22 21:47:48,036 Node[0] Epoch[2] Batch [120-140]	Speed: 76423.55 samples/sec	accuracy=nan
2023-03-22 21:47:48,891 Node[0] Epoch[2] Batch [140-160]	Speed: 76352.45 samples/sec	accuracy=nan
2023-03-22 21:47:49,745 Node[0] Epoch[2] Batch [160-180]	Speed: 76449.47 samples/sec	accuracy=nan
2023-03-22 21:47:50,598 Node[0] Epoch[2] Batch [180-200]	Speed: 76536.51 samples/sec	accuracy=nan
2023-03-22 21:47:51,451 Node[0] Epoch[2] Batch [200-220]	Speed: 76469.97 samples/sec	accuracy=nan
2023-03-22 21:47:52,308 Node[0] Epoch[2] Batch [220-240]	Speed: 76170.08 samples/sec	accuracy=nan
2023-03-22 21:47:53,162 Node[0] Epoch[2] Batch [240-260]	Speed: 76442.64 samples/sec	accuracy=nan
2023-03-22 21:47:54,017 Node[0] Epoch[2] Batch [260-280]	Speed: 76393.69 samples/sec	accuracy=nan
2023-03-22 21:47:54,875 Node[0] Epoch[2] Batch [280-300]	Speed: 76102.65 samples/sec	accuracy=nan
2023-03-22 21:47:55,741 Node[0] Epoch[2] Batch [300-320]	Speed: 75334.30 samples/sec	accuracy=nan
2023-03-22 21:47:56,594 Node[0] Epoch[2] Batch [320-340]	Speed: 76548.28 samples/sec	accuracy=nan
2023-03-22 21:47:57,448 Node[0] Epoch[2] Batch [340-360]	Speed: 76426.49 samples/sec	accuracy=nan
2023-03-22 21:47:58,302 Node[0] Epoch[2] Batch [360-380]	Speed: 76472.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679539678773, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 21:47:58,774 Node[0] Epoch[2] Time cost=16.772
:::MLLOG {"namespace": "", "time_ms": 1679539678774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76385.19890810298}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539678813, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 21:47:58,813 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,813 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,814 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,814 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,814 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:58,814 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,005 Node[0] Epoch[2] Validation-accuracy=0.326504
2023-03-22 21:47:59,005 Node[0] Epoch[2] Validation-correct-count=510.000000
2023-03-22 21:47:59,005 Node[0] Epoch[2] Validation-total-count=1562.000000
2023-03-22 21:47:59,029 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539679029, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679539679029, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32378, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 21:47:59,029 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539679030, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 21:47:59,029 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539679030, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 21:47:59,029 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,029 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539679030, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 21:47:59,030 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:47:59,894 Node[0] Epoch[3] Batch [0-20]	Speed: 75958.33 samples/sec	accuracy=nan
2023-03-22 21:48:00,754 Node[0] Epoch[3] Batch [20-40]	Speed: 75896.36 samples/sec	accuracy=nan
2023-03-22 21:48:01,609 Node[0] Epoch[3] Batch [40-60]	Speed: 76411.47 samples/sec	accuracy=nan
2023-03-22 21:48:02,468 Node[0] Epoch[3] Batch [60-80]	Speed: 75991.87 samples/sec	accuracy=nan
2023-03-22 21:48:03,331 Node[0] Epoch[3] Batch [80-100]	Speed: 75633.71 samples/sec	accuracy=nan
2023-03-22 21:48:04,186 Node[0] Epoch[3] Batch [100-120]	Speed: 76303.07 samples/sec	accuracy=nan
2023-03-22 21:48:05,044 Node[0] Epoch[3] Batch [120-140]	Speed: 76130.37 samples/sec	accuracy=nan
2023-03-22 21:48:05,899 Node[0] Epoch[3] Batch [140-160]	Speed: 76311.57 samples/sec	accuracy=nan
2023-03-22 21:48:06,752 Node[0] Epoch[3] Batch [160-180]	Speed: 76541.43 samples/sec	accuracy=nan
2023-03-22 21:48:07,606 Node[0] Epoch[3] Batch [180-200]	Speed: 76481.85 samples/sec	accuracy=nan
2023-03-22 21:48:08,459 Node[0] Epoch[3] Batch [200-220]	Speed: 76497.04 samples/sec	accuracy=nan
2023-03-22 21:48:09,313 Node[0] Epoch[3] Batch [220-240]	Speed: 76434.75 samples/sec	accuracy=nan
2023-03-22 21:48:10,171 Node[0] Epoch[3] Batch [240-260]	Speed: 76075.94 samples/sec	accuracy=nan
2023-03-22 21:48:11,025 Node[0] Epoch[3] Batch [260-280]	Speed: 76447.59 samples/sec	accuracy=nan
2023-03-22 21:48:11,879 Node[0] Epoch[3] Batch [280-300]	Speed: 76411.58 samples/sec	accuracy=nan
2023-03-22 21:48:12,737 Node[0] Epoch[3] Batch [300-320]	Speed: 76121.14 samples/sec	accuracy=nan
2023-03-22 21:48:13,594 Node[0] Epoch[3] Batch [320-340]	Speed: 76210.09 samples/sec	accuracy=nan
2023-03-22 21:48:14,450 Node[0] Epoch[3] Batch [340-360]	Speed: 76257.16 samples/sec	accuracy=nan
2023-03-22 21:48:15,307 Node[0] Epoch[3] Batch [360-380]	Speed: 76155.76 samples/sec	accuracy=nan
2023-03-22 21:48:15,817 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,817 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539695817, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 21:48:15,818 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[0] Epoch[3] Time cost=16.788
2023-03-22 21:48:15,818 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539695818, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76312.2329285798}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-22 21:48:15,818 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539695819, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 21:48:15,819 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:15,818 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:16,715 Node[0] Epoch[4] Batch [0-20]	Speed: 76508.52 samples/sec	accuracy=nan
2023-03-22 21:48:17,568 Node[0] Epoch[4] Batch [20-40]	Speed: 76457.99 samples/sec	accuracy=nan
2023-03-22 21:48:18,425 Node[0] Epoch[4] Batch [40-60]	Speed: 76214.84 samples/sec	accuracy=nan
2023-03-22 21:48:19,281 Node[0] Epoch[4] Batch [60-80]	Speed: 76244.19 samples/sec	accuracy=nan
2023-03-22 21:48:20,139 Node[0] Epoch[4] Batch [80-100]	Speed: 76120.78 samples/sec	accuracy=nan
2023-03-22 21:48:20,995 Node[0] Epoch[4] Batch [100-120]	Speed: 76229.71 samples/sec	accuracy=nan
2023-03-22 21:48:21,851 Node[0] Epoch[4] Batch [120-140]	Speed: 76272.42 samples/sec	accuracy=nan
2023-03-22 21:48:22,709 Node[0] Epoch[4] Batch [140-160]	Speed: 76068.63 samples/sec	accuracy=nan
2023-03-22 21:48:23,564 Node[0] Epoch[4] Batch [160-180]	Speed: 76379.05 samples/sec	accuracy=nan
2023-03-22 21:48:24,420 Node[0] Epoch[4] Batch [180-200]	Speed: 76257.78 samples/sec	accuracy=nan
2023-03-22 21:48:25,274 Node[0] Epoch[4] Batch [200-220]	Speed: 76403.27 samples/sec	accuracy=nan
2023-03-22 21:48:26,136 Node[0] Epoch[4] Batch [220-240]	Speed: 75797.42 samples/sec	accuracy=nan
2023-03-22 21:48:26,992 Node[0] Epoch[4] Batch [240-260]	Speed: 76262.32 samples/sec	accuracy=nan
2023-03-22 21:48:27,844 Node[0] Epoch[4] Batch [260-280]	Speed: 76543.10 samples/sec	accuracy=nan
2023-03-22 21:48:28,701 Node[0] Epoch[4] Batch [280-300]	Speed: 76164.70 samples/sec	accuracy=nan
2023-03-22 21:48:29,558 Node[0] Epoch[4] Batch [300-320]	Speed: 76233.72 samples/sec	accuracy=nan
2023-03-22 21:48:30,413 Node[0] Epoch[4] Batch [320-340]	Speed: 76290.05 samples/sec	accuracy=nan
2023-03-22 21:48:31,270 Node[0] Epoch[4] Batch [340-360]	Speed: 76203.96 samples/sec	accuracy=nan
2023-03-22 21:48:32,128 Node[0] Epoch[4] Batch [360-380]	Speed: 76111.36 samples/sec	accuracy=nan
2023-03-22 21:48:32,597 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539712597, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 21:48:32,597 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,598 Node[0] Epoch[4] Time cost=16.779
2023-03-22 21:48:32,597 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539712598, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76355.40512168544}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-22 21:48:32,597 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,598 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,598 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,597 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,598 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:32,598 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539712598, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 21:48:32,598 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:33,501 Node[0] Epoch[5] Batch [0-20]	Speed: 75954.20 samples/sec	accuracy=nan
2023-03-22 21:48:34,363 Node[0] Epoch[5] Batch [20-40]	Speed: 75700.14 samples/sec	accuracy=nan
2023-03-22 21:48:35,218 Node[0] Epoch[5] Batch [40-60]	Speed: 76403.65 samples/sec	accuracy=nan
2023-03-22 21:48:36,077 Node[0] Epoch[5] Batch [60-80]	Speed: 75996.82 samples/sec	accuracy=nan
2023-03-22 21:48:36,934 Node[0] Epoch[5] Batch [80-100]	Speed: 76176.69 samples/sec	accuracy=nan
2023-03-22 21:48:37,791 Node[0] Epoch[5] Batch [100-120]	Speed: 76201.07 samples/sec	accuracy=nan
2023-03-22 21:48:38,646 Node[0] Epoch[5] Batch [120-140]	Speed: 76300.73 samples/sec	accuracy=nan
2023-03-22 21:48:39,504 Node[0] Epoch[5] Batch [140-160]	Speed: 76052.55 samples/sec	accuracy=nan
2023-03-22 21:48:40,360 Node[0] Epoch[5] Batch [160-180]	Speed: 76342.76 samples/sec	accuracy=nan
2023-03-22 21:48:41,218 Node[0] Epoch[5] Batch [180-200]	Speed: 76068.06 samples/sec	accuracy=nan
2023-03-22 21:48:42,072 Node[0] Epoch[5] Batch [200-220]	Speed: 76428.32 samples/sec	accuracy=nan
2023-03-22 21:48:42,931 Node[0] Epoch[5] Batch [220-240]	Speed: 75950.78 samples/sec	accuracy=nan
2023-03-22 21:48:43,787 Node[0] Epoch[5] Batch [240-260]	Speed: 76258.03 samples/sec	accuracy=nan
2023-03-22 21:48:44,642 Node[0] Epoch[5] Batch [260-280]	Speed: 76369.57 samples/sec	accuracy=nan
2023-03-22 21:48:45,502 Node[0] Epoch[5] Batch [280-300]	Speed: 75961.38 samples/sec	accuracy=nan
2023-03-22 21:48:46,366 Node[0] Epoch[5] Batch [300-320]	Speed: 75485.68 samples/sec	accuracy=nan
2023-03-22 21:48:47,223 Node[0] Epoch[5] Batch [320-340]	Speed: 76229.88 samples/sec	accuracy=nan
2023-03-22 21:48:48,078 Node[0] Epoch[5] Batch [340-360]	Speed: 76370.15 samples/sec	accuracy=nan
2023-03-22 21:48:48,933 Node[0] Epoch[5] Batch [360-380]	Speed: 76334.36 samples/sec	accuracy=nan
2023-03-22 21:48:49,443 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,443 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539729444, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 21:48:49,444 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,444 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:49,445 Node[0] Epoch[5] Time cost=16.847
:::MLLOG {"namespace": "", "time_ms": 1679539729445, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76049.0055607328}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679539729445, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 21:48:49,445 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:48:50,344 Node[0] Epoch[6] Batch [0-20]	Speed: 76192.19 samples/sec	accuracy=nan
2023-03-22 21:48:51,201 Node[0] Epoch[6] Batch [20-40]	Speed: 76194.33 samples/sec	accuracy=nan
2023-03-22 21:48:52,059 Node[0] Epoch[6] Batch [40-60]	Speed: 76116.02 samples/sec	accuracy=nan
2023-03-22 21:48:52,914 Node[0] Epoch[6] Batch [60-80]	Speed: 76332.97 samples/sec	accuracy=nan
2023-03-22 21:48:53,772 Node[0] Epoch[6] Batch [80-100]	Speed: 76113.61 samples/sec	accuracy=nan
2023-03-22 21:48:54,634 Node[0] Epoch[6] Batch [100-120]	Speed: 75707.13 samples/sec	accuracy=nan
2023-03-22 21:48:55,490 Node[0] Epoch[6] Batch [120-140]	Speed: 76202.39 samples/sec	accuracy=nan
2023-03-22 21:48:56,343 Node[0] Epoch[6] Batch [140-160]	Speed: 76561.79 samples/sec	accuracy=nan
2023-03-22 21:48:57,196 Node[0] Epoch[6] Batch [160-180]	Speed: 76532.00 samples/sec	accuracy=nan
2023-03-22 21:48:58,051 Node[0] Epoch[6] Batch [180-200]	Speed: 76354.45 samples/sec	accuracy=nan
2023-03-22 21:48:58,910 Node[0] Epoch[6] Batch [200-220]	Speed: 76027.00 samples/sec	accuracy=nan
2023-03-22 21:48:59,766 Node[0] Epoch[6] Batch [220-240]	Speed: 76255.36 samples/sec	accuracy=nan
2023-03-22 21:49:00,623 Node[0] Epoch[6] Batch [240-260]	Speed: 76187.08 samples/sec	accuracy=nan
2023-03-22 21:49:01,476 Node[0] Epoch[6] Batch [260-280]	Speed: 76489.67 samples/sec	accuracy=nan
2023-03-22 21:49:02,333 Node[0] Epoch[6] Batch [280-300]	Speed: 76188.09 samples/sec	accuracy=nan
2023-03-22 21:49:03,191 Node[0] Epoch[6] Batch [300-320]	Speed: 76073.53 samples/sec	accuracy=nan
2023-03-22 21:49:04,046 Node[0] Epoch[6] Batch [320-340]	Speed: 76319.80 samples/sec	accuracy=nan
2023-03-22 21:49:04,901 Node[0] Epoch[6] Batch [340-360]	Speed: 76350.71 samples/sec	accuracy=nan
2023-03-22 21:49:05,757 Node[0] Epoch[6] Batch [360-380]	Speed: 76280.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679539746227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 21:49:06,227 Node[0] Epoch[6] Time cost=16.782
:::MLLOG {"namespace": "", "time_ms": 1679539746227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76341.34336896794}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679539746266, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 21:49:06,455 Node[0] Epoch[6] Validation-accuracy=0.469270
2023-03-22 21:49:06,455 Node[0] Epoch[6] Validation-correct-count=733.000000
2023-03-22 21:49:06,455 Node[0] Epoch[6] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679539746478, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679539746479, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4604, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-22 21:49:06,478 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539746479, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-22 21:49:06,478 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539746479, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 21:49:06,478 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539746479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 21:49:06,478 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,479 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:06,478 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:07,339 Node[0] Epoch[7] Batch [0-20]	Speed: 76388.17 samples/sec	accuracy=nan
2023-03-22 21:49:08,194 Node[0] Epoch[7] Batch [20-40]	Speed: 76336.32 samples/sec	accuracy=nan
2023-03-22 21:49:09,048 Node[0] Epoch[7] Batch [40-60]	Speed: 76453.42 samples/sec	accuracy=nan
2023-03-22 21:49:09,905 Node[0] Epoch[7] Batch [60-80]	Speed: 76189.83 samples/sec	accuracy=nan
2023-03-22 21:49:10,761 Node[0] Epoch[7] Batch [80-100]	Speed: 76183.92 samples/sec	accuracy=nan
2023-03-22 21:49:11,621 Node[0] Epoch[7] Batch [100-120]	Speed: 75922.77 samples/sec	accuracy=nan
2023-03-22 21:49:12,476 Node[0] Epoch[7] Batch [120-140]	Speed: 76355.11 samples/sec	accuracy=nan
2023-03-22 21:49:13,334 Node[0] Epoch[7] Batch [140-160]	Speed: 76065.59 samples/sec	accuracy=nan
2023-03-22 21:49:14,188 Node[0] Epoch[7] Batch [160-180]	Speed: 76477.10 samples/sec	accuracy=nan
2023-03-22 21:49:15,042 Node[0] Epoch[7] Batch [180-200]	Speed: 76467.98 samples/sec	accuracy=nan
2023-03-22 21:49:15,898 Node[0] Epoch[7] Batch [200-220]	Speed: 76270.99 samples/sec	accuracy=nan
2023-03-22 21:49:16,755 Node[0] Epoch[7] Batch [220-240]	Speed: 76165.69 samples/sec	accuracy=nan
2023-03-22 21:49:17,609 Node[0] Epoch[7] Batch [240-260]	Speed: 76431.12 samples/sec	accuracy=nan
2023-03-22 21:49:18,462 Node[0] Epoch[7] Batch [260-280]	Speed: 76468.30 samples/sec	accuracy=nan
2023-03-22 21:49:19,325 Node[0] Epoch[7] Batch [280-300]	Speed: 75711.28 samples/sec	accuracy=nan
2023-03-22 21:49:20,181 Node[0] Epoch[7] Batch [300-320]	Speed: 76264.41 samples/sec	accuracy=nan
2023-03-22 21:49:21,037 Node[0] Epoch[7] Batch [320-340]	Speed: 76228.52 samples/sec	accuracy=nan
2023-03-22 21:49:21,891 Node[0] Epoch[7] Batch [340-360]	Speed: 76398.85 samples/sec	accuracy=nan
2023-03-22 21:49:22,747 Node[0] Epoch[7] Batch [360-380]	Speed: 76304.66 samples/sec	accuracy=nan
2023-03-22 21:49:23,259 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539763259, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 21:49:23,259 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,259 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[0] Epoch[7] Time cost=16.781
2023-03-22 21:49:23,259 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539763260, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76346.7524574555}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-22 21:49:23,260 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539763260, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 21:49:23,260 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:23,260 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:24,160 Node[0] Epoch[8] Batch [0-20]	Speed: 76091.27 samples/sec	accuracy=nan
2023-03-22 21:49:25,022 Node[0] Epoch[8] Batch [20-40]	Speed: 75735.47 samples/sec	accuracy=nan
2023-03-22 21:49:25,877 Node[0] Epoch[8] Batch [40-60]	Speed: 76411.90 samples/sec	accuracy=nan
2023-03-22 21:49:26,733 Node[0] Epoch[8] Batch [60-80]	Speed: 76238.44 samples/sec	accuracy=nan
2023-03-22 21:49:27,592 Node[0] Epoch[8] Batch [80-100]	Speed: 75965.36 samples/sec	accuracy=nan
2023-03-22 21:49:28,446 Node[0] Epoch[8] Batch [100-120]	Speed: 76412.37 samples/sec	accuracy=nan
2023-03-22 21:49:29,300 Node[0] Epoch[8] Batch [120-140]	Speed: 76479.67 samples/sec	accuracy=nan
2023-03-22 21:49:30,157 Node[0] Epoch[8] Batch [140-160]	Speed: 76214.94 samples/sec	accuracy=nan
2023-03-22 21:49:31,014 Node[0] Epoch[8] Batch [160-180]	Speed: 76169.44 samples/sec	accuracy=nan
2023-03-22 21:49:31,867 Node[0] Epoch[8] Batch [180-200]	Speed: 76450.28 samples/sec	accuracy=nan
2023-03-22 21:49:32,724 Node[0] Epoch[8] Batch [200-220]	Speed: 76220.20 samples/sec	accuracy=nan
2023-03-22 21:49:33,582 Node[0] Epoch[8] Batch [220-240]	Speed: 76107.81 samples/sec	accuracy=nan
2023-03-22 21:49:34,437 Node[0] Epoch[8] Batch [240-260]	Speed: 76279.94 samples/sec	accuracy=nan
2023-03-22 21:49:35,294 Node[0] Epoch[8] Batch [260-280]	Speed: 76225.21 samples/sec	accuracy=nan
2023-03-22 21:49:36,150 Node[0] Epoch[8] Batch [280-300]	Speed: 76223.32 samples/sec	accuracy=nan
2023-03-22 21:49:37,008 Node[0] Epoch[8] Batch [300-320]	Speed: 76131.64 samples/sec	accuracy=nan
2023-03-22 21:49:37,862 Node[0] Epoch[8] Batch [320-340]	Speed: 76419.64 samples/sec	accuracy=nan
2023-03-22 21:49:38,716 Node[0] Epoch[8] Batch [340-360]	Speed: 76432.01 samples/sec	accuracy=nan
2023-03-22 21:49:39,572 Node[0] Epoch[8] Batch [360-380]	Speed: 76236.27 samples/sec	accuracy=nan
2023-03-22 21:49:40,043 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539780043, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 21:49:40,044 Node[0] Epoch[8] Time cost=16.783
2023-03-22 21:49:40,043 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539780044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76335.34513389942}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-22 21:49:40,043 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,043 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539780044, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 21:49:40,044 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,044 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:40,943 Node[0] Epoch[9] Batch [0-20]	Speed: 76283.38 samples/sec	accuracy=nan
2023-03-22 21:49:41,799 Node[0] Epoch[9] Batch [20-40]	Speed: 76277.07 samples/sec	accuracy=nan
2023-03-22 21:49:42,655 Node[0] Epoch[9] Batch [40-60]	Speed: 76290.86 samples/sec	accuracy=nan
2023-03-22 21:49:43,514 Node[0] Epoch[9] Batch [60-80]	Speed: 75998.17 samples/sec	accuracy=nan
2023-03-22 21:49:44,374 Node[0] Epoch[9] Batch [80-100]	Speed: 75857.12 samples/sec	accuracy=nan
2023-03-22 21:49:45,229 Node[0] Epoch[9] Batch [100-120]	Speed: 76393.22 samples/sec	accuracy=nan
2023-03-22 21:49:46,085 Node[0] Epoch[9] Batch [120-140]	Speed: 76260.52 samples/sec	accuracy=nan
2023-03-22 21:49:46,941 Node[0] Epoch[9] Batch [140-160]	Speed: 76255.19 samples/sec	accuracy=nan
2023-03-22 21:49:47,797 Node[0] Epoch[9] Batch [160-180]	Speed: 76217.74 samples/sec	accuracy=nan
2023-03-22 21:49:48,651 Node[0] Epoch[9] Batch [180-200]	Speed: 76446.93 samples/sec	accuracy=nan
2023-03-22 21:49:49,507 Node[0] Epoch[9] Batch [200-220]	Speed: 76285.87 samples/sec	accuracy=nan
2023-03-22 21:49:50,362 Node[0] Epoch[9] Batch [220-240]	Speed: 76404.65 samples/sec	accuracy=nan
2023-03-22 21:49:51,217 Node[0] Epoch[9] Batch [240-260]	Speed: 76294.11 samples/sec	accuracy=nan
2023-03-22 21:49:52,071 Node[0] Epoch[9] Batch [260-280]	Speed: 76440.93 samples/sec	accuracy=nan
2023-03-22 21:49:52,928 Node[0] Epoch[9] Batch [280-300]	Speed: 76209.53 samples/sec	accuracy=nan
2023-03-22 21:49:53,785 Node[0] Epoch[9] Batch [300-320]	Speed: 76162.30 samples/sec	accuracy=nan
2023-03-22 21:49:54,641 Node[0] Epoch[9] Batch [320-340]	Speed: 76280.91 samples/sec	accuracy=nan
2023-03-22 21:49:55,495 Node[0] Epoch[9] Batch [340-360]	Speed: 76386.83 samples/sec	accuracy=nan
2023-03-22 21:49:56,353 Node[0] Epoch[9] Batch [360-380]	Speed: 76072.84 samples/sec	accuracy=nan
2023-03-22 21:49:56,864 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539796864, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 21:49:56,864 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[0] Epoch[9] Time cost=16.821
2023-03-22 21:49:56,864 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,864 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539796865, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76165.7402615192}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-22 21:49:56,865 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539796865, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 21:49:56,865 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:56,865 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:49:57,764 Node[0] Epoch[10] Batch [0-20]	Speed: 76320.72 samples/sec	accuracy=nan
2023-03-22 21:49:58,619 Node[0] Epoch[10] Batch [20-40]	Speed: 76303.98 samples/sec	accuracy=nan
2023-03-22 21:49:59,477 Node[0] Epoch[10] Batch [40-60]	Speed: 76088.54 samples/sec	accuracy=nan
2023-03-22 21:50:00,332 Node[0] Epoch[10] Batch [60-80]	Speed: 76338.81 samples/sec	accuracy=nan
2023-03-22 21:50:01,187 Node[0] Epoch[10] Batch [80-100]	Speed: 76370.68 samples/sec	accuracy=nan
2023-03-22 21:50:02,045 Node[0] Epoch[10] Batch [100-120]	Speed: 76062.44 samples/sec	accuracy=nan
2023-03-22 21:50:02,902 Node[0] Epoch[10] Batch [120-140]	Speed: 76171.96 samples/sec	accuracy=nan
2023-03-22 21:50:03,757 Node[0] Epoch[10] Batch [140-160]	Speed: 76387.04 samples/sec	accuracy=nan
2023-03-22 21:50:04,612 Node[0] Epoch[10] Batch [160-180]	Speed: 76348.73 samples/sec	accuracy=nan
2023-03-22 21:50:05,468 Node[0] Epoch[10] Batch [180-200]	Speed: 76246.82 samples/sec	accuracy=nan
2023-03-22 21:50:06,323 Node[0] Epoch[10] Batch [200-220]	Speed: 76361.50 samples/sec	accuracy=nan
2023-03-22 21:50:07,181 Node[0] Epoch[10] Batch [220-240]	Speed: 76128.04 samples/sec	accuracy=nan
2023-03-22 21:50:08,037 Node[0] Epoch[10] Batch [240-260]	Speed: 76253.04 samples/sec	accuracy=nan
2023-03-22 21:50:08,891 Node[0] Epoch[10] Batch [260-280]	Speed: 76389.09 samples/sec	accuracy=nan
2023-03-22 21:50:09,747 Node[0] Epoch[10] Batch [280-300]	Speed: 76292.31 samples/sec	accuracy=nan
2023-03-22 21:50:10,606 Node[0] Epoch[10] Batch [300-320]	Speed: 76017.58 samples/sec	accuracy=nan
2023-03-22 21:50:11,460 Node[0] Epoch[10] Batch [320-340]	Speed: 76386.89 samples/sec	accuracy=nan
2023-03-22 21:50:12,319 Node[0] Epoch[10] Batch [340-360]	Speed: 76046.97 samples/sec	accuracy=nan
2023-03-22 21:50:13,173 Node[0] Epoch[10] Batch [360-380]	Speed: 76447.83 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679539813641, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 21:50:13,641 Node[0] Epoch[10] Time cost=16.776
:::MLLOG {"namespace": "", "time_ms": 1679539813641, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76370.29368216768}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679539813680, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 21:50:13,871 Node[0] Epoch[10] Validation-accuracy=0.514725
2023-03-22 21:50:13,871 Node[0] Epoch[10] Validation-correct-count=804.000000
2023-03-22 21:50:13,871 Node[0] Epoch[10] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679539813893, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679539813893, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5263, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 21:50:13,893 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539813893, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 21:50:13,893 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539813894, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 21:50:13,893 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539813894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 21:50:13,893 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,894 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:13,893 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:14,758 Node[0] Epoch[11] Batch [0-20]	Speed: 76004.69 samples/sec	accuracy=nan
2023-03-22 21:50:15,612 Node[0] Epoch[11] Batch [20-40]	Speed: 76419.81 samples/sec	accuracy=nan
2023-03-22 21:50:16,473 Node[0] Epoch[11] Batch [40-60]	Speed: 75846.45 samples/sec	accuracy=nan
2023-03-22 21:50:17,331 Node[0] Epoch[11] Batch [60-80]	Speed: 76033.78 samples/sec	accuracy=nan
2023-03-22 21:50:18,189 Node[0] Epoch[11] Batch [80-100]	Speed: 76065.04 samples/sec	accuracy=nan
2023-03-22 21:50:19,044 Node[0] Epoch[11] Batch [100-120]	Speed: 76387.66 samples/sec	accuracy=nan
2023-03-22 21:50:19,898 Node[0] Epoch[11] Batch [120-140]	Speed: 76419.88 samples/sec	accuracy=nan
2023-03-22 21:50:20,753 Node[0] Epoch[11] Batch [140-160]	Speed: 76394.31 samples/sec	accuracy=nan
2023-03-22 21:50:21,606 Node[0] Epoch[11] Batch [160-180]	Speed: 76520.13 samples/sec	accuracy=nan
2023-03-22 21:50:22,461 Node[0] Epoch[11] Batch [180-200]	Speed: 76350.85 samples/sec	accuracy=nan
2023-03-22 21:50:23,316 Node[0] Epoch[11] Batch [200-220]	Speed: 76300.49 samples/sec	accuracy=nan
2023-03-22 21:50:24,171 Node[0] Epoch[11] Batch [220-240]	Speed: 76374.41 samples/sec	accuracy=nan
2023-03-22 21:50:25,027 Node[0] Epoch[11] Batch [240-260]	Speed: 76293.46 samples/sec	accuracy=nan
2023-03-22 21:50:25,882 Node[0] Epoch[11] Batch [260-280]	Speed: 76375.18 samples/sec	accuracy=nan
2023-03-22 21:50:26,736 Node[0] Epoch[11] Batch [280-300]	Speed: 76358.58 samples/sec	accuracy=nan
2023-03-22 21:50:27,594 Node[0] Epoch[11] Batch [300-320]	Speed: 76165.38 samples/sec	accuracy=nan
2023-03-22 21:50:28,453 Node[0] Epoch[11] Batch [320-340]	Speed: 75973.37 samples/sec	accuracy=nan
2023-03-22 21:50:29,308 Node[0] Epoch[11] Batch [340-360]	Speed: 76306.64 samples/sec	accuracy=nan
2023-03-22 21:50:30,162 Node[0] Epoch[11] Batch [360-380]	Speed: 76488.15 samples/sec	accuracy=nan
2023-03-22 21:50:30,673 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,674 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539830674, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 21:50:30,674 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[0] Epoch[11] Time cost=16.781
2023-03-22 21:50:30,675 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539830675, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76345.6211168858}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-22 21:50:30,675 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539830675, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 21:50:30,675 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:30,675 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:31,572 Node[0] Epoch[12] Batch [0-20]	Speed: 76403.82 samples/sec	accuracy=nan
2023-03-22 21:50:32,428 Node[0] Epoch[12] Batch [20-40]	Speed: 76293.63 samples/sec	accuracy=nan
2023-03-22 21:50:33,282 Node[0] Epoch[12] Batch [40-60]	Speed: 76420.07 samples/sec	accuracy=nan
2023-03-22 21:50:34,137 Node[0] Epoch[12] Batch [60-80]	Speed: 76363.65 samples/sec	accuracy=nan
2023-03-22 21:50:34,995 Node[0] Epoch[12] Batch [80-100]	Speed: 76036.29 samples/sec	accuracy=nan
2023-03-22 21:50:35,852 Node[0] Epoch[12] Batch [100-120]	Speed: 76204.85 samples/sec	accuracy=nan
2023-03-22 21:50:36,706 Node[0] Epoch[12] Batch [120-140]	Speed: 76460.32 samples/sec	accuracy=nan
2023-03-22 21:50:37,563 Node[0] Epoch[12] Batch [140-160]	Speed: 76171.18 samples/sec	accuracy=nan
2023-03-22 21:50:38,416 Node[0] Epoch[12] Batch [160-180]	Speed: 76533.02 samples/sec	accuracy=nan
2023-03-22 21:50:39,268 Node[0] Epoch[12] Batch [180-200]	Speed: 76568.70 samples/sec	accuracy=nan
2023-03-22 21:50:40,124 Node[0] Epoch[12] Batch [200-220]	Speed: 76298.03 samples/sec	accuracy=nan
2023-03-22 21:50:40,980 Node[0] Epoch[12] Batch [220-240]	Speed: 76236.08 samples/sec	accuracy=nan
2023-03-22 21:50:41,835 Node[0] Epoch[12] Batch [240-260]	Speed: 76341.59 samples/sec	accuracy=nan
2023-03-22 21:50:42,689 Node[0] Epoch[12] Batch [260-280]	Speed: 76428.67 samples/sec	accuracy=nan
2023-03-22 21:50:43,545 Node[0] Epoch[12] Batch [280-300]	Speed: 76267.42 samples/sec	accuracy=nan
2023-03-22 21:50:44,402 Node[0] Epoch[12] Batch [300-320]	Speed: 76195.85 samples/sec	accuracy=nan
2023-03-22 21:50:45,259 Node[0] Epoch[12] Batch [320-340]	Speed: 76145.95 samples/sec	accuracy=nan
2023-03-22 21:50:46,114 Node[0] Epoch[12] Batch [340-360]	Speed: 76417.77 samples/sec	accuracy=nan
2023-03-22 21:50:46,969 Node[0] Epoch[12] Batch [360-380]	Speed: 76319.38 samples/sec	accuracy=nan
2023-03-22 21:50:47,440 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,440 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539847441, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 21:50:47,441 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[0] Epoch[12] Time cost=16.766
2023-03-22 21:50:47,441 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539847441, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76416.14717941842}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 21:50:47,441 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539847441, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 21:50:47,441 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:47,441 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:50:48,345 Node[0] Epoch[13] Batch [0-20]	Speed: 75940.21 samples/sec	accuracy=nan
2023-03-22 21:50:49,200 Node[0] Epoch[13] Batch [20-40]	Speed: 76383.74 samples/sec	accuracy=nan
2023-03-22 21:50:50,057 Node[0] Epoch[13] Batch [40-60]	Speed: 76160.97 samples/sec	accuracy=nan
2023-03-22 21:50:50,913 Node[0] Epoch[13] Batch [60-80]	Speed: 76273.29 samples/sec	accuracy=nan
2023-03-22 21:50:51,768 Node[0] Epoch[13] Batch [80-100]	Speed: 76375.75 samples/sec	accuracy=nan
2023-03-22 21:50:52,625 Node[0] Epoch[13] Batch [100-120]	Speed: 76156.75 samples/sec	accuracy=nan
2023-03-22 21:50:53,481 Node[0] Epoch[13] Batch [120-140]	Speed: 76261.11 samples/sec	accuracy=nan
2023-03-22 21:50:54,336 Node[0] Epoch[13] Batch [140-160]	Speed: 76349.73 samples/sec	accuracy=nan
2023-03-22 21:50:55,191 Node[0] Epoch[13] Batch [160-180]	Speed: 76325.19 samples/sec	accuracy=nan
2023-03-22 21:50:56,046 Node[0] Epoch[13] Batch [180-200]	Speed: 76393.14 samples/sec	accuracy=nan
2023-03-22 21:50:56,901 Node[0] Epoch[13] Batch [200-220]	Speed: 76360.01 samples/sec	accuracy=nan
2023-03-22 21:50:57,758 Node[0] Epoch[13] Batch [220-240]	Speed: 76158.85 samples/sec	accuracy=nan
2023-03-22 21:50:58,614 Node[0] Epoch[13] Batch [240-260]	Speed: 76204.15 samples/sec	accuracy=nan
2023-03-22 21:50:59,471 Node[0] Epoch[13] Batch [260-280]	Speed: 76212.72 samples/sec	accuracy=nan
2023-03-22 21:51:00,325 Node[0] Epoch[13] Batch [280-300]	Speed: 76448.11 samples/sec	accuracy=nan
2023-03-22 21:51:01,181 Node[0] Epoch[13] Batch [300-320]	Speed: 76281.28 samples/sec	accuracy=nan
2023-03-22 21:51:02,036 Node[0] Epoch[13] Batch [320-340]	Speed: 76338.61 samples/sec	accuracy=nan
2023-03-22 21:51:02,890 Node[0] Epoch[13] Batch [340-360]	Speed: 76424.42 samples/sec	accuracy=nan
2023-03-22 21:51:03,746 Node[0] Epoch[13] Batch [360-380]	Speed: 76269.57 samples/sec	accuracy=nan
2023-03-22 21:51:04,258 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,258 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539864258, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 21:51:04,258 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[0] Epoch[13] Time cost=16.818
2023-03-22 21:51:04,259 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539864259, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76180.58194102727}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-22 21:51:04,259 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539864259, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 21:51:04,259 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:04,259 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:05,159 Node[0] Epoch[14] Batch [0-20]	Speed: 76179.32 samples/sec	accuracy=nan
2023-03-22 21:51:06,012 Node[0] Epoch[14] Batch [20-40]	Speed: 76497.83 samples/sec	accuracy=nan
2023-03-22 21:51:06,868 Node[0] Epoch[14] Batch [40-60]	Speed: 76253.62 samples/sec	accuracy=nan
2023-03-22 21:51:07,726 Node[0] Epoch[14] Batch [60-80]	Speed: 76055.76 samples/sec	accuracy=nan
2023-03-22 21:51:08,580 Node[0] Epoch[14] Batch [80-100]	Speed: 76461.81 samples/sec	accuracy=nan
2023-03-22 21:51:09,442 Node[0] Epoch[14] Batch [100-120]	Speed: 75766.44 samples/sec	accuracy=nan
2023-03-22 21:51:10,298 Node[0] Epoch[14] Batch [120-140]	Speed: 76215.11 samples/sec	accuracy=nan
2023-03-22 21:51:11,154 Node[0] Epoch[14] Batch [140-160]	Speed: 76260.39 samples/sec	accuracy=nan
2023-03-22 21:51:12,009 Node[0] Epoch[14] Batch [160-180]	Speed: 76402.20 samples/sec	accuracy=nan
2023-03-22 21:51:12,861 Node[0] Epoch[14] Batch [180-200]	Speed: 76581.85 samples/sec	accuracy=nan
2023-03-22 21:51:13,718 Node[0] Epoch[14] Batch [200-220]	Speed: 76202.94 samples/sec	accuracy=nan
2023-03-22 21:51:14,572 Node[0] Epoch[14] Batch [220-240]	Speed: 76424.12 samples/sec	accuracy=nan
2023-03-22 21:51:15,426 Node[0] Epoch[14] Batch [240-260]	Speed: 76433.40 samples/sec	accuracy=nan
2023-03-22 21:51:16,280 Node[0] Epoch[14] Batch [260-280]	Speed: 76430.27 samples/sec	accuracy=nan
2023-03-22 21:51:17,136 Node[0] Epoch[14] Batch [280-300]	Speed: 76258.82 samples/sec	accuracy=nan
2023-03-22 21:51:17,993 Node[0] Epoch[14] Batch [300-320]	Speed: 76206.71 samples/sec	accuracy=nan
2023-03-22 21:51:18,850 Node[0] Epoch[14] Batch [320-340]	Speed: 76166.73 samples/sec	accuracy=nan
2023-03-22 21:51:19,705 Node[0] Epoch[14] Batch [340-360]	Speed: 76302.98 samples/sec	accuracy=nan
2023-03-22 21:51:20,561 Node[0] Epoch[14] Batch [360-380]	Speed: 76263.47 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679539881029, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 21:51:21,030 Node[0] Epoch[14] Time cost=16.770
:::MLLOG {"namespace": "", "time_ms": 1679539881030, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76394.77475766969}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679539881069, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 21:51:21,258 Node[0] Epoch[14] Validation-accuracy=0.619078
2023-03-22 21:51:21,259 Node[0] Epoch[14] Validation-correct-count=967.000000
2023-03-22 21:51:21,259 Node[0] Epoch[14] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679539881282, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679539881282, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60892, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-22 21:51:21,282 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539881282, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 21:51:21,282 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539881282, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-22 21:51:21,282 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539881282, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 21:51:21,282 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,283 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:21,282 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:22,141 Node[0] Epoch[15] Batch [0-20]	Speed: 76464.74 samples/sec	accuracy=nan
2023-03-22 21:51:22,998 Node[0] Epoch[15] Batch [20-40]	Speed: 76173.75 samples/sec	accuracy=nan
2023-03-22 21:51:23,853 Node[0] Epoch[15] Batch [40-60]	Speed: 76361.12 samples/sec	accuracy=nan
2023-03-22 21:51:24,709 Node[0] Epoch[15] Batch [60-80]	Speed: 76293.63 samples/sec	accuracy=nan
2023-03-22 21:51:25,567 Node[0] Epoch[15] Batch [80-100]	Speed: 76112.61 samples/sec	accuracy=nan
2023-03-22 21:51:26,424 Node[0] Epoch[15] Batch [100-120]	Speed: 76107.30 samples/sec	accuracy=nan
2023-03-22 21:51:27,279 Node[0] Epoch[15] Batch [120-140]	Speed: 76409.73 samples/sec	accuracy=nan
2023-03-22 21:51:28,134 Node[0] Epoch[15] Batch [140-160]	Speed: 76350.17 samples/sec	accuracy=nan
2023-03-22 21:51:28,986 Node[0] Epoch[15] Batch [160-180]	Speed: 76581.02 samples/sec	accuracy=nan
2023-03-22 21:51:29,841 Node[0] Epoch[15] Batch [180-200]	Speed: 76346.21 samples/sec	accuracy=nan
2023-03-22 21:51:30,697 Node[0] Epoch[15] Batch [200-220]	Speed: 76256.42 samples/sec	accuracy=nan
2023-03-22 21:51:31,551 Node[0] Epoch[15] Batch [220-240]	Speed: 76456.24 samples/sec	accuracy=nan
2023-03-22 21:51:32,406 Node[0] Epoch[15] Batch [240-260]	Speed: 76325.06 samples/sec	accuracy=nan
2023-03-22 21:51:33,262 Node[0] Epoch[15] Batch [260-280]	Speed: 76270.93 samples/sec	accuracy=nan
2023-03-22 21:51:34,120 Node[0] Epoch[15] Batch [280-300]	Speed: 76119.66 samples/sec	accuracy=nan
2023-03-22 21:51:34,977 Node[0] Epoch[15] Batch [300-320]	Speed: 76158.83 samples/sec	accuracy=nan
2023-03-22 21:51:35,834 Node[0] Epoch[15] Batch [320-340]	Speed: 76154.06 samples/sec	accuracy=nan
2023-03-22 21:51:36,690 Node[0] Epoch[15] Batch [340-360]	Speed: 76249.09 samples/sec	accuracy=nan
2023-03-22 21:51:37,547 Node[0] Epoch[15] Batch [360-380]	Speed: 76206.14 samples/sec	accuracy=nan
2023-03-22 21:51:38,057 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,057 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539898058, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 21:51:38,058 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,059 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,058 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,059 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,059 Node[0] Epoch[15] Time cost=16.776
2023-03-22 21:51:38,059 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539898059, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76367.7105564669}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679539898059, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 21:51:38,059 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:38,959 Node[0] Epoch[16] Batch [0-20]	Speed: 76146.54 samples/sec	accuracy=nan
2023-03-22 21:51:39,816 Node[0] Epoch[16] Batch [20-40]	Speed: 76220.06 samples/sec	accuracy=nan
2023-03-22 21:51:40,672 Node[0] Epoch[16] Batch [40-60]	Speed: 76261.94 samples/sec	accuracy=nan
2023-03-22 21:51:41,525 Node[0] Epoch[16] Batch [60-80]	Speed: 76481.42 samples/sec	accuracy=nan
2023-03-22 21:51:42,381 Node[0] Epoch[16] Batch [80-100]	Speed: 76288.37 samples/sec	accuracy=nan
2023-03-22 21:51:43,238 Node[0] Epoch[16] Batch [100-120]	Speed: 76196.91 samples/sec	accuracy=nan
2023-03-22 21:51:44,094 Node[0] Epoch[16] Batch [120-140]	Speed: 76233.47 samples/sec	accuracy=nan
2023-03-22 21:51:44,949 Node[0] Epoch[16] Batch [140-160]	Speed: 76332.29 samples/sec	accuracy=nan
2023-03-22 21:51:45,804 Node[0] Epoch[16] Batch [160-180]	Speed: 76345.77 samples/sec	accuracy=nan
2023-03-22 21:51:46,659 Node[0] Epoch[16] Batch [180-200]	Speed: 76408.15 samples/sec	accuracy=nan
2023-03-22 21:51:47,515 Node[0] Epoch[16] Batch [200-220]	Speed: 76193.93 samples/sec	accuracy=nan
2023-03-22 21:51:48,372 Node[0] Epoch[16] Batch [220-240]	Speed: 76199.48 samples/sec	accuracy=nan
2023-03-22 21:51:49,225 Node[0] Epoch[16] Batch [240-260]	Speed: 76514.91 samples/sec	accuracy=nan
2023-03-22 21:51:50,080 Node[0] Epoch[16] Batch [260-280]	Speed: 76420.58 samples/sec	accuracy=nan
2023-03-22 21:51:50,935 Node[0] Epoch[16] Batch [280-300]	Speed: 76320.02 samples/sec	accuracy=nan
2023-03-22 21:51:51,796 Node[0] Epoch[16] Batch [300-320]	Speed: 75808.33 samples/sec	accuracy=nan
2023-03-22 21:51:52,650 Node[0] Epoch[16] Batch [320-340]	Speed: 76481.20 samples/sec	accuracy=nan
2023-03-22 21:51:53,505 Node[0] Epoch[16] Batch [340-360]	Speed: 76314.85 samples/sec	accuracy=nan
2023-03-22 21:51:54,360 Node[0] Epoch[16] Batch [360-380]	Speed: 76363.80 samples/sec	accuracy=nan
2023-03-22 21:51:54,832 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,831 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539914832, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 21:51:54,832 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[0] Epoch[16] Time cost=16.773
2023-03-22 21:51:54,832 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539914832, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76383.35090869342}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-22 21:51:54,832 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539914832, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 21:51:54,832 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,832 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:54,833 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:51:55,732 Node[0] Epoch[17] Batch [0-20]	Speed: 76249.22 samples/sec	accuracy=nan
2023-03-22 21:51:56,588 Node[0] Epoch[17] Batch [20-40]	Speed: 76311.44 samples/sec	accuracy=nan
2023-03-22 21:51:57,444 Node[0] Epoch[17] Batch [40-60]	Speed: 76210.00 samples/sec	accuracy=nan
2023-03-22 21:51:58,301 Node[0] Epoch[17] Batch [60-80]	Speed: 76216.22 samples/sec	accuracy=nan
2023-03-22 21:51:59,155 Node[0] Epoch[17] Batch [80-100]	Speed: 76437.03 samples/sec	accuracy=nan
2023-03-22 21:52:00,012 Node[0] Epoch[17] Batch [100-120]	Speed: 76201.09 samples/sec	accuracy=nan
2023-03-22 21:52:00,869 Node[0] Epoch[17] Batch [120-140]	Speed: 76147.22 samples/sec	accuracy=nan
2023-03-22 21:52:01,723 Node[0] Epoch[17] Batch [140-160]	Speed: 76400.26 samples/sec	accuracy=nan
2023-03-22 21:52:02,578 Node[0] Epoch[17] Batch [160-180]	Speed: 76363.25 samples/sec	accuracy=nan
2023-03-22 21:52:03,433 Node[0] Epoch[17] Batch [180-200]	Speed: 76377.46 samples/sec	accuracy=nan
2023-03-22 21:52:04,291 Node[0] Epoch[17] Batch [200-220]	Speed: 76058.19 samples/sec	accuracy=nan
2023-03-22 21:52:05,145 Node[0] Epoch[17] Batch [220-240]	Speed: 76457.14 samples/sec	accuracy=nan
2023-03-22 21:52:06,003 Node[0] Epoch[17] Batch [240-260]	Speed: 76123.15 samples/sec	accuracy=nan
2023-03-22 21:52:06,856 Node[0] Epoch[17] Batch [260-280]	Speed: 76453.61 samples/sec	accuracy=nan
2023-03-22 21:52:07,712 Node[0] Epoch[17] Batch [280-300]	Speed: 76296.52 samples/sec	accuracy=nan
2023-03-22 21:52:08,570 Node[0] Epoch[17] Batch [300-320]	Speed: 76048.71 samples/sec	accuracy=nan
2023-03-22 21:52:09,427 Node[0] Epoch[17] Batch [320-340]	Speed: 76234.23 samples/sec	accuracy=nan
2023-03-22 21:52:10,284 Node[0] Epoch[17] Batch [340-360]	Speed: 76171.27 samples/sec	accuracy=nan
2023-03-22 21:52:11,141 Node[0] Epoch[17] Batch [360-380]	Speed: 76173.36 samples/sec	accuracy=nan
2023-03-22 21:52:11,652 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,652 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,652 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,652 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539931653, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 21:52:11,654 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[0] Epoch[17] Time cost=16.821
2023-03-22 21:52:11,654 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,653 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539931654, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76163.3264034999}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-22 21:52:11,654 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:11,654 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539931654, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 21:52:11,654 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:12,553 Node[0] Epoch[18] Batch [0-20]	Speed: 76289.20 samples/sec	accuracy=nan
2023-03-22 21:52:13,409 Node[0] Epoch[18] Batch [20-40]	Speed: 76243.51 samples/sec	accuracy=nan
2023-03-22 21:52:14,267 Node[0] Epoch[18] Batch [40-60]	Speed: 76156.88 samples/sec	accuracy=nan
2023-03-22 21:52:15,119 Node[0] Epoch[18] Batch [60-80]	Speed: 76547.25 samples/sec	accuracy=nan
2023-03-22 21:52:15,977 Node[0] Epoch[18] Batch [80-100]	Speed: 76092.10 samples/sec	accuracy=nan
2023-03-22 21:52:16,835 Node[0] Epoch[18] Batch [100-120]	Speed: 76084.99 samples/sec	accuracy=nan
2023-03-22 21:52:17,692 Node[0] Epoch[18] Batch [120-140]	Speed: 76201.94 samples/sec	accuracy=nan
2023-03-22 21:52:18,546 Node[0] Epoch[18] Batch [140-160]	Speed: 76415.04 samples/sec	accuracy=nan
2023-03-22 21:52:19,399 Node[0] Epoch[18] Batch [160-180]	Speed: 76514.25 samples/sec	accuracy=nan
2023-03-22 21:52:20,256 Node[0] Epoch[18] Batch [180-200]	Speed: 76241.90 samples/sec	accuracy=nan
2023-03-22 21:52:21,112 Node[0] Epoch[18] Batch [200-220]	Speed: 76200.75 samples/sec	accuracy=nan
2023-03-22 21:52:21,965 Node[0] Epoch[18] Batch [220-240]	Speed: 76529.49 samples/sec	accuracy=nan
2023-03-22 21:52:22,820 Node[0] Epoch[18] Batch [240-260]	Speed: 76344.77 samples/sec	accuracy=nan
2023-03-22 21:52:23,676 Node[0] Epoch[18] Batch [260-280]	Speed: 76334.19 samples/sec	accuracy=nan
2023-03-22 21:52:24,530 Node[0] Epoch[18] Batch [280-300]	Speed: 76415.70 samples/sec	accuracy=nan
2023-03-22 21:52:25,386 Node[0] Epoch[18] Batch [300-320]	Speed: 76254.59 samples/sec	accuracy=nan
2023-03-22 21:52:26,243 Node[0] Epoch[18] Batch [320-340]	Speed: 76136.93 samples/sec	accuracy=nan
2023-03-22 21:52:27,100 Node[0] Epoch[18] Batch [340-360]	Speed: 76233.26 samples/sec	accuracy=nan
2023-03-22 21:52:27,954 Node[0] Epoch[18] Batch [360-380]	Speed: 76402.48 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679539948425, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 21:52:28,425 Node[0] Epoch[18] Time cost=16.771
:::MLLOG {"namespace": "", "time_ms": 1679539948425, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76392.40717749194}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679539948464, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 21:52:28,655 Node[0] Epoch[18] Validation-accuracy=0.665813
2023-03-22 21:52:28,655 Node[0] Epoch[18] Validation-correct-count=1040.000000
2023-03-22 21:52:28,655 Node[0] Epoch[18] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679539948675, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679539948676, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65812, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 21:52:28,676 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539948676, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 21:52:28,676 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539948676, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 21:52:28,676 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539948676, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 21:52:28,676 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:28,676 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:29,538 Node[0] Epoch[19] Batch [0-20]	Speed: 76161.60 samples/sec	accuracy=nan
2023-03-22 21:52:30,394 Node[0] Epoch[19] Batch [20-40]	Speed: 76230.26 samples/sec	accuracy=nan
2023-03-22 21:52:31,250 Node[0] Epoch[19] Batch [40-60]	Speed: 76295.16 samples/sec	accuracy=nan
2023-03-22 21:52:32,105 Node[0] Epoch[19] Batch [60-80]	Speed: 76335.78 samples/sec	accuracy=nan
2023-03-22 21:52:32,962 Node[0] Epoch[19] Batch [80-100]	Speed: 76164.02 samples/sec	accuracy=nan
2023-03-22 21:52:33,818 Node[0] Epoch[19] Batch [100-120]	Speed: 76276.54 samples/sec	accuracy=nan
2023-03-22 21:52:34,678 Node[0] Epoch[19] Batch [120-140]	Speed: 75956.34 samples/sec	accuracy=nan
2023-03-22 21:52:35,537 Node[0] Epoch[19] Batch [140-160]	Speed: 75995.01 samples/sec	accuracy=nan
2023-03-22 21:52:36,390 Node[0] Epoch[19] Batch [160-180]	Speed: 76455.00 samples/sec	accuracy=nan
2023-03-22 21:52:37,248 Node[0] Epoch[19] Batch [180-200]	Speed: 76161.14 samples/sec	accuracy=nan
2023-03-22 21:52:38,102 Node[0] Epoch[19] Batch [200-220]	Speed: 76362.01 samples/sec	accuracy=nan
2023-03-22 21:52:38,963 Node[0] Epoch[19] Batch [220-240]	Speed: 75844.77 samples/sec	accuracy=nan
2023-03-22 21:52:39,820 Node[0] Epoch[19] Batch [240-260]	Speed: 76182.63 samples/sec	accuracy=nan
2023-03-22 21:52:40,675 Node[0] Epoch[19] Batch [260-280]	Speed: 76375.62 samples/sec	accuracy=nan
2023-03-22 21:52:41,530 Node[0] Epoch[19] Batch [280-300]	Speed: 76366.72 samples/sec	accuracy=nan
2023-03-22 21:52:42,387 Node[0] Epoch[19] Batch [300-320]	Speed: 76174.25 samples/sec	accuracy=nan
2023-03-22 21:52:43,249 Node[0] Epoch[19] Batch [320-340]	Speed: 75696.17 samples/sec	accuracy=nan
2023-03-22 21:52:44,106 Node[0] Epoch[19] Batch [340-360]	Speed: 76124.04 samples/sec	accuracy=nan
2023-03-22 21:52:44,965 Node[0] Epoch[19] Batch [360-380]	Speed: 76021.09 samples/sec	accuracy=nan
2023-03-22 21:52:45,475 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,475 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539965476, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 21:52:45,476 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,477 Node[0] Epoch[19] Time cost=16.800
2023-03-22 21:52:45,476 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539965477, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76257.79465284749}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-22 21:52:45,476 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,476 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,477 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539965477, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 21:52:45,477 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,477 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,477 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:45,477 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:52:46,376 Node[0] Epoch[20] Batch [0-20]	Speed: 76287.16 samples/sec	accuracy=nan
2023-03-22 21:52:47,236 Node[0] Epoch[20] Batch [20-40]	Speed: 75915.55 samples/sec	accuracy=nan
2023-03-22 21:52:48,092 Node[0] Epoch[20] Batch [40-60]	Speed: 76201.05 samples/sec	accuracy=nan
2023-03-22 21:52:48,949 Node[0] Epoch[20] Batch [60-80]	Speed: 76185.21 samples/sec	accuracy=nan
2023-03-22 21:52:49,806 Node[0] Epoch[20] Batch [80-100]	Speed: 76209.89 samples/sec	accuracy=nan
2023-03-22 21:52:50,662 Node[0] Epoch[20] Batch [100-120]	Speed: 76281.74 samples/sec	accuracy=nan
2023-03-22 21:52:51,518 Node[0] Epoch[20] Batch [120-140]	Speed: 76182.37 samples/sec	accuracy=nan
2023-03-22 21:52:52,375 Node[0] Epoch[20] Batch [140-160]	Speed: 76235.55 samples/sec	accuracy=nan
2023-03-22 21:52:53,232 Node[0] Epoch[20] Batch [160-180]	Speed: 76179.85 samples/sec	accuracy=nan
2023-03-22 21:52:54,086 Node[0] Epoch[20] Batch [180-200]	Speed: 76453.06 samples/sec	accuracy=nan
2023-03-22 21:52:54,943 Node[0] Epoch[20] Batch [200-220]	Speed: 76125.44 samples/sec	accuracy=nan
2023-03-22 21:52:55,800 Node[0] Epoch[20] Batch [220-240]	Speed: 76191.06 samples/sec	accuracy=nan
2023-03-22 21:52:56,655 Node[0] Epoch[20] Batch [240-260]	Speed: 76339.98 samples/sec	accuracy=nan
2023-03-22 21:52:57,510 Node[0] Epoch[20] Batch [260-280]	Speed: 76368.47 samples/sec	accuracy=nan
2023-03-22 21:52:58,369 Node[0] Epoch[20] Batch [280-300]	Speed: 75981.68 samples/sec	accuracy=nan
2023-03-22 21:52:59,234 Node[0] Epoch[20] Batch [300-320]	Speed: 75488.81 samples/sec	accuracy=nan
2023-03-22 21:53:00,090 Node[0] Epoch[20] Batch [320-340]	Speed: 76195.18 samples/sec	accuracy=nan
2023-03-22 21:53:00,946 Node[0] Epoch[20] Batch [340-360]	Speed: 76335.59 samples/sec	accuracy=nan
2023-03-22 21:53:01,803 Node[0] Epoch[20] Batch [360-380]	Speed: 76150.14 samples/sec	accuracy=nan
2023-03-22 21:53:02,272 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539982272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 21:53:02,272 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[0] Epoch[20] Time cost=16.795
2023-03-22 21:53:02,272 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539982272, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76280.65407360133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 21:53:02,272 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539982273, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 21:53:02,272 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,272 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,273 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:02,273 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:03,171 Node[0] Epoch[21] Batch [0-20]	Speed: 76291.82 samples/sec	accuracy=nan
2023-03-22 21:53:04,029 Node[0] Epoch[21] Batch [20-40]	Speed: 76124.44 samples/sec	accuracy=nan
2023-03-22 21:53:04,886 Node[0] Epoch[21] Batch [40-60]	Speed: 76179.64 samples/sec	accuracy=nan
2023-03-22 21:53:05,746 Node[0] Epoch[21] Batch [60-80]	Speed: 75896.84 samples/sec	accuracy=nan
2023-03-22 21:53:06,604 Node[0] Epoch[21] Batch [80-100]	Speed: 76097.72 samples/sec	accuracy=nan
2023-03-22 21:53:07,459 Node[0] Epoch[21] Batch [100-120]	Speed: 76326.34 samples/sec	accuracy=nan
2023-03-22 21:53:08,317 Node[0] Epoch[21] Batch [120-140]	Speed: 76104.72 samples/sec	accuracy=nan
2023-03-22 21:53:09,171 Node[0] Epoch[21] Batch [140-160]	Speed: 76439.87 samples/sec	accuracy=nan
2023-03-22 21:53:10,026 Node[0] Epoch[21] Batch [160-180]	Speed: 76333.55 samples/sec	accuracy=nan
2023-03-22 21:53:10,880 Node[0] Epoch[21] Batch [180-200]	Speed: 76419.00 samples/sec	accuracy=nan
2023-03-22 21:53:11,738 Node[0] Epoch[21] Batch [200-220]	Speed: 76127.87 samples/sec	accuracy=nan
2023-03-22 21:53:12,591 Node[0] Epoch[21] Batch [220-240]	Speed: 76530.37 samples/sec	accuracy=nan
2023-03-22 21:53:13,446 Node[0] Epoch[21] Batch [240-260]	Speed: 76328.57 samples/sec	accuracy=nan
2023-03-22 21:53:14,299 Node[0] Epoch[21] Batch [260-280]	Speed: 76491.25 samples/sec	accuracy=nan
2023-03-22 21:53:15,155 Node[0] Epoch[21] Batch [280-300]	Speed: 76280.36 samples/sec	accuracy=nan
2023-03-22 21:53:16,011 Node[0] Epoch[21] Batch [300-320]	Speed: 76239.39 samples/sec	accuracy=nan
2023-03-22 21:53:16,878 Node[0] Epoch[21] Batch [320-340]	Speed: 75311.90 samples/sec	accuracy=nan
2023-03-22 21:53:17,732 Node[0] Epoch[21] Batch [340-360]	Speed: 76455.64 samples/sec	accuracy=nan
2023-03-22 21:53:18,587 Node[0] Epoch[21] Batch [360-380]	Speed: 76376.67 samples/sec	accuracy=nan
2023-03-22 21:53:19,097 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,097 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539999097, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 21:53:19,098 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[0] Epoch[21] Time cost=16.825
2023-03-22 21:53:19,098 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539999098, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76145.86179887468}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-22 21:53:19,098 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679539999098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 21:53:19,098 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:19,098 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:20,001 Node[0] Epoch[22] Batch [0-20]	Speed: 75881.28 samples/sec	accuracy=nan
2023-03-22 21:53:20,857 Node[0] Epoch[22] Batch [20-40]	Speed: 76248.75 samples/sec	accuracy=nan
2023-03-22 21:53:21,716 Node[0] Epoch[22] Batch [40-60]	Speed: 75982.67 samples/sec	accuracy=nan
2023-03-22 21:53:22,569 Node[0] Epoch[22] Batch [60-80]	Speed: 76522.07 samples/sec	accuracy=nan
2023-03-22 21:53:23,426 Node[0] Epoch[22] Batch [80-100]	Speed: 76208.96 samples/sec	accuracy=nan
2023-03-22 21:53:24,280 Node[0] Epoch[22] Batch [100-120]	Speed: 76436.82 samples/sec	accuracy=nan
2023-03-22 21:53:25,137 Node[0] Epoch[22] Batch [120-140]	Speed: 76179.79 samples/sec	accuracy=nan
2023-03-22 21:53:25,993 Node[0] Epoch[22] Batch [140-160]	Speed: 76226.27 samples/sec	accuracy=nan
2023-03-22 21:53:26,849 Node[0] Epoch[22] Batch [160-180]	Speed: 76255.80 samples/sec	accuracy=nan
2023-03-22 21:53:27,705 Node[0] Epoch[22] Batch [180-200]	Speed: 76262.37 samples/sec	accuracy=nan
2023-03-22 21:53:28,564 Node[0] Epoch[22] Batch [200-220]	Speed: 76031.85 samples/sec	accuracy=nan
2023-03-22 21:53:29,422 Node[0] Epoch[22] Batch [220-240]	Speed: 76048.98 samples/sec	accuracy=nan
2023-03-22 21:53:30,277 Node[0] Epoch[22] Batch [240-260]	Speed: 76383.12 samples/sec	accuracy=nan
2023-03-22 21:53:31,132 Node[0] Epoch[22] Batch [260-280]	Speed: 76305.70 samples/sec	accuracy=nan
2023-03-22 21:53:31,990 Node[0] Epoch[22] Batch [280-300]	Speed: 76144.77 samples/sec	accuracy=nan
2023-03-22 21:53:32,845 Node[0] Epoch[22] Batch [300-320]	Speed: 76300.05 samples/sec	accuracy=nan
2023-03-22 21:53:33,703 Node[0] Epoch[22] Batch [320-340]	Speed: 76144.24 samples/sec	accuracy=nan
2023-03-22 21:53:34,557 Node[0] Epoch[22] Batch [340-360]	Speed: 76449.28 samples/sec	accuracy=nan
2023-03-22 21:53:35,411 Node[0] Epoch[22] Batch [360-380]	Speed: 76445.91 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679540015880, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 21:53:35,881 Node[0] Epoch[22] Time cost=16.782
:::MLLOG {"namespace": "", "time_ms": 1679540015881, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76340.19375171534}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679540015920, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 21:53:36,110 Node[0] Epoch[22] Validation-accuracy=0.694622
2023-03-22 21:53:36,110 Node[0] Epoch[22] Validation-correct-count=1085.000000
2023-03-22 21:53:36,110 Node[0] Epoch[22] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679540016132, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679540016132, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69828, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-22 21:53:36,132 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540016132, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679540016132, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 21:53:36,132 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540016132, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 21:53:36,132 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,132 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:36,995 Node[0] Epoch[23] Batch [0-20]	Speed: 76111.68 samples/sec	accuracy=nan
2023-03-22 21:53:37,852 Node[0] Epoch[23] Batch [20-40]	Speed: 76161.22 samples/sec	accuracy=nan
2023-03-22 21:53:38,708 Node[0] Epoch[23] Batch [40-60]	Speed: 76317.61 samples/sec	accuracy=nan
2023-03-22 21:53:39,564 Node[0] Epoch[23] Batch [60-80]	Speed: 76213.86 samples/sec	accuracy=nan
2023-03-22 21:53:40,421 Node[0] Epoch[23] Batch [80-100]	Speed: 76176.31 samples/sec	accuracy=nan
2023-03-22 21:53:41,277 Node[0] Epoch[23] Batch [100-120]	Speed: 76254.72 samples/sec	accuracy=nan
2023-03-22 21:53:42,134 Node[0] Epoch[23] Batch [120-140]	Speed: 76174.66 samples/sec	accuracy=nan
2023-03-22 21:53:42,989 Node[0] Epoch[23] Batch [140-160]	Speed: 76317.87 samples/sec	accuracy=nan
2023-03-22 21:53:43,845 Node[0] Epoch[23] Batch [160-180]	Speed: 76281.85 samples/sec	accuracy=nan
2023-03-22 21:53:44,700 Node[0] Epoch[23] Batch [180-200]	Speed: 76390.69 samples/sec	accuracy=nan
2023-03-22 21:53:45,558 Node[0] Epoch[23] Batch [200-220]	Speed: 76047.82 samples/sec	accuracy=nan
2023-03-22 21:53:46,415 Node[0] Epoch[23] Batch [220-240]	Speed: 76196.24 samples/sec	accuracy=nan
2023-03-22 21:53:47,271 Node[0] Epoch[23] Batch [240-260]	Speed: 76226.34 samples/sec	accuracy=nan
2023-03-22 21:53:48,127 Node[0] Epoch[23] Batch [260-280]	Speed: 76293.58 samples/sec	accuracy=nan
2023-03-22 21:53:48,983 Node[0] Epoch[23] Batch [280-300]	Speed: 76247.73 samples/sec	accuracy=nan
2023-03-22 21:53:49,840 Node[0] Epoch[23] Batch [300-320]	Speed: 76189.73 samples/sec	accuracy=nan
2023-03-22 21:53:50,696 Node[0] Epoch[23] Batch [320-340]	Speed: 76256.84 samples/sec	accuracy=nan
2023-03-22 21:53:51,554 Node[0] Epoch[23] Batch [340-360]	Speed: 76072.84 samples/sec	accuracy=nan
2023-03-22 21:53:52,410 Node[0] Epoch[23] Batch [360-380]	Speed: 76263.41 samples/sec	accuracy=nan
2023-03-22 21:53:52,922 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,922 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540032922, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 21:53:52,923 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[0] Epoch[23] Time cost=16.791
2023-03-22 21:53:52,923 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:52,923 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540032923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76301.03959904099}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-22 21:53:52,923 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540032923, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 21:53:52,924 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:53:53,832 Node[0] Epoch[24] Batch [0-20]	Speed: 75421.31 samples/sec	accuracy=nan
2023-03-22 21:53:54,687 Node[0] Epoch[24] Batch [20-40]	Speed: 76286.27 samples/sec	accuracy=nan
2023-03-22 21:53:55,545 Node[0] Epoch[24] Batch [40-60]	Speed: 76131.79 samples/sec	accuracy=nan
2023-03-22 21:53:56,399 Node[0] Epoch[24] Batch [60-80]	Speed: 76393.40 samples/sec	accuracy=nan
2023-03-22 21:53:57,259 Node[0] Epoch[24] Batch [80-100]	Speed: 75907.26 samples/sec	accuracy=nan
2023-03-22 21:53:58,113 Node[0] Epoch[24] Batch [100-120]	Speed: 76495.14 samples/sec	accuracy=nan
2023-03-22 21:53:58,971 Node[0] Epoch[24] Batch [120-140]	Speed: 76066.35 samples/sec	accuracy=nan
2023-03-22 21:53:59,827 Node[0] Epoch[24] Batch [140-160]	Speed: 76307.19 samples/sec	accuracy=nan
2023-03-22 21:54:00,680 Node[0] Epoch[24] Batch [160-180]	Speed: 76443.56 samples/sec	accuracy=nan
2023-03-22 21:54:01,536 Node[0] Epoch[24] Batch [180-200]	Speed: 76346.11 samples/sec	accuracy=nan
2023-03-22 21:54:02,391 Node[0] Epoch[24] Batch [200-220]	Speed: 76264.55 samples/sec	accuracy=nan
2023-03-22 21:54:03,249 Node[0] Epoch[24] Batch [220-240]	Speed: 76174.74 samples/sec	accuracy=nan
2023-03-22 21:54:04,103 Node[0] Epoch[24] Batch [240-260]	Speed: 76394.31 samples/sec	accuracy=nan
2023-03-22 21:54:04,958 Node[0] Epoch[24] Batch [260-280]	Speed: 76382.85 samples/sec	accuracy=nan
2023-03-22 21:54:05,814 Node[0] Epoch[24] Batch [280-300]	Speed: 76241.49 samples/sec	accuracy=nan
2023-03-22 21:54:06,671 Node[0] Epoch[24] Batch [300-320]	Speed: 76165.42 samples/sec	accuracy=nan
2023-03-22 21:54:07,533 Node[0] Epoch[24] Batch [320-340]	Speed: 75734.53 samples/sec	accuracy=nan
2023-03-22 21:54:08,388 Node[0] Epoch[24] Batch [340-360]	Speed: 76377.11 samples/sec	accuracy=nan
2023-03-22 21:54:09,242 Node[0] Epoch[24] Batch [360-380]	Speed: 76379.93 samples/sec	accuracy=nan
2023-03-22 21:54:09,711 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540049711, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 21:54:09,711 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,711 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[0] Epoch[24] Time cost=16.788
:::MLLOG {"namespace": "", "time_ms": 1679540049712, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76313.51392359906}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-22 21:54:09,712 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540049712, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 21:54:09,712 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:09,712 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:10,612 Node[0] Epoch[25] Batch [0-20]	Speed: 76344.64 samples/sec	accuracy=nan
2023-03-22 21:54:11,468 Node[0] Epoch[25] Batch [20-40]	Speed: 76259.07 samples/sec	accuracy=nan
2023-03-22 21:54:12,323 Node[0] Epoch[25] Batch [40-60]	Speed: 76299.05 samples/sec	accuracy=nan
2023-03-22 21:54:13,181 Node[0] Epoch[25] Batch [60-80]	Speed: 76103.11 samples/sec	accuracy=nan
2023-03-22 21:54:14,046 Node[0] Epoch[25] Batch [80-100]	Speed: 75444.63 samples/sec	accuracy=nan
2023-03-22 21:54:14,902 Node[0] Epoch[25] Batch [100-120]	Speed: 76306.17 samples/sec	accuracy=nan
2023-03-22 21:54:15,756 Node[0] Epoch[25] Batch [120-140]	Speed: 76447.51 samples/sec	accuracy=nan
2023-03-22 21:54:16,610 Node[0] Epoch[25] Batch [140-160]	Speed: 76370.92 samples/sec	accuracy=nan
2023-03-22 21:54:17,464 Node[0] Epoch[25] Batch [160-180]	Speed: 76488.28 samples/sec	accuracy=nan
2023-03-22 21:54:18,319 Node[0] Epoch[25] Batch [180-200]	Speed: 76333.76 samples/sec	accuracy=nan
2023-03-22 21:54:19,177 Node[0] Epoch[25] Batch [200-220]	Speed: 76108.32 samples/sec	accuracy=nan
2023-03-22 21:54:20,035 Node[0] Epoch[25] Batch [220-240]	Speed: 76115.11 samples/sec	accuracy=nan
2023-03-22 21:54:20,890 Node[0] Epoch[25] Batch [240-260]	Speed: 76274.65 samples/sec	accuracy=nan
2023-03-22 21:54:21,745 Node[0] Epoch[25] Batch [260-280]	Speed: 76340.79 samples/sec	accuracy=nan
2023-03-22 21:54:22,602 Node[0] Epoch[25] Batch [280-300]	Speed: 76220.40 samples/sec	accuracy=nan
2023-03-22 21:54:23,461 Node[0] Epoch[25] Batch [300-320]	Speed: 76027.23 samples/sec	accuracy=nan
2023-03-22 21:54:24,320 Node[0] Epoch[25] Batch [320-340]	Speed: 75942.95 samples/sec	accuracy=nan
2023-03-22 21:54:25,176 Node[0] Epoch[25] Batch [340-360]	Speed: 76241.92 samples/sec	accuracy=nan
2023-03-22 21:54:26,037 Node[0] Epoch[25] Batch [360-380]	Speed: 75822.00 samples/sec	accuracy=nan
2023-03-22 21:54:26,549 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,549 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540066549, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 21:54:26,550 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[0] Epoch[25] Time cost=16.838
2023-03-22 21:54:26,550 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540066550, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76088.96371366436}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-22 21:54:26,550 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540066550, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 21:54:26,550 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:26,550 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:27,450 Node[0] Epoch[26] Batch [0-20]	Speed: 76132.21 samples/sec	accuracy=nan
2023-03-22 21:54:28,307 Node[0] Epoch[26] Batch [20-40]	Speed: 76149.13 samples/sec	accuracy=nan
2023-03-22 21:54:29,163 Node[0] Epoch[26] Batch [40-60]	Speed: 76324.21 samples/sec	accuracy=nan
2023-03-22 21:54:30,019 Node[0] Epoch[26] Batch [60-80]	Speed: 76208.49 samples/sec	accuracy=nan
2023-03-22 21:54:30,878 Node[0] Epoch[26] Batch [80-100]	Speed: 76040.93 samples/sec	accuracy=nan
2023-03-22 21:54:31,734 Node[0] Epoch[26] Batch [100-120]	Speed: 76285.29 samples/sec	accuracy=nan
2023-03-22 21:54:32,591 Node[0] Epoch[26] Batch [120-140]	Speed: 76153.05 samples/sec	accuracy=nan
2023-03-22 21:54:33,448 Node[0] Epoch[26] Batch [140-160]	Speed: 76106.96 samples/sec	accuracy=nan
2023-03-22 21:54:34,302 Node[0] Epoch[26] Batch [160-180]	Speed: 76477.36 samples/sec	accuracy=nan
2023-03-22 21:54:35,158 Node[0] Epoch[26] Batch [180-200]	Speed: 76240.88 samples/sec	accuracy=nan
2023-03-22 21:54:36,015 Node[0] Epoch[26] Batch [200-220]	Speed: 76210.13 samples/sec	accuracy=nan
2023-03-22 21:54:36,871 Node[0] Epoch[26] Batch [220-240]	Speed: 76236.78 samples/sec	accuracy=nan
2023-03-22 21:54:37,726 Node[0] Epoch[26] Batch [240-260]	Speed: 76338.15 samples/sec	accuracy=nan
2023-03-22 21:54:38,582 Node[0] Epoch[26] Batch [260-280]	Speed: 76273.48 samples/sec	accuracy=nan
2023-03-22 21:54:39,439 Node[0] Epoch[26] Batch [280-300]	Speed: 76225.34 samples/sec	accuracy=nan
2023-03-22 21:54:40,299 Node[0] Epoch[26] Batch [300-320]	Speed: 75871.73 samples/sec	accuracy=nan
2023-03-22 21:54:41,157 Node[0] Epoch[26] Batch [320-340]	Speed: 76048.18 samples/sec	accuracy=nan
2023-03-22 21:54:42,014 Node[0] Epoch[26] Batch [340-360]	Speed: 76247.10 samples/sec	accuracy=nan
2023-03-22 21:54:42,867 Node[0] Epoch[26] Batch [360-380]	Speed: 76470.52 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679540083379, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 21:54:43,380 Node[0] Epoch[26] Time cost=16.829
:::MLLOG {"namespace": "", "time_ms": 1679540083380, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76127.1207073425}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679540083419, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 21:54:43,609 Node[0] Epoch[26] Validation-accuracy=0.729834
2023-03-22 21:54:43,609 Node[0] Epoch[26] Validation-correct-count=1140.000000
2023-03-22 21:54:43,609 Node[0] Epoch[26] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679540083630, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679540083631, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73032, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-22 21:54:43,631 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540083631, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 21:54:43,631 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540083631, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 21:54:43,630 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,630 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,630 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,630 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,630 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540083631, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 21:54:43,630 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,630 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:43,631 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:54:44,490 Node[0] Epoch[27] Batch [0-20]	Speed: 76417.72 samples/sec	accuracy=nan
2023-03-22 21:54:45,347 Node[0] Epoch[27] Batch [20-40]	Speed: 76210.45 samples/sec	accuracy=nan
2023-03-22 21:54:46,205 Node[0] Epoch[27] Batch [40-60]	Speed: 76105.82 samples/sec	accuracy=nan
2023-03-22 21:54:47,061 Node[0] Epoch[27] Batch [60-80]	Speed: 76238.75 samples/sec	accuracy=nan
2023-03-22 21:54:47,920 Node[0] Epoch[27] Batch [80-100]	Speed: 76011.89 samples/sec	accuracy=nan
2023-03-22 21:54:48,775 Node[0] Epoch[27] Batch [100-120]	Speed: 76318.55 samples/sec	accuracy=nan
2023-03-22 21:54:49,632 Node[0] Epoch[27] Batch [120-140]	Speed: 76142.35 samples/sec	accuracy=nan
2023-03-22 21:54:50,486 Node[0] Epoch[27] Batch [140-160]	Speed: 76473.15 samples/sec	accuracy=nan
2023-03-22 21:54:51,339 Node[0] Epoch[27] Batch [160-180]	Speed: 76543.32 samples/sec	accuracy=nan
2023-03-22 21:54:52,194 Node[0] Epoch[27] Batch [180-200]	Speed: 76365.80 samples/sec	accuracy=nan
2023-03-22 21:54:53,050 Node[0] Epoch[27] Batch [200-220]	Speed: 76264.79 samples/sec	accuracy=nan
2023-03-22 21:54:53,907 Node[0] Epoch[27] Batch [220-240]	Speed: 76094.17 samples/sec	accuracy=nan
2023-03-22 21:54:54,763 Node[0] Epoch[27] Batch [240-260]	Speed: 76275.22 samples/sec	accuracy=nan
2023-03-22 21:54:55,617 Node[0] Epoch[27] Batch [260-280]	Speed: 76457.75 samples/sec	accuracy=nan
2023-03-22 21:54:56,476 Node[0] Epoch[27] Batch [280-300]	Speed: 76047.04 samples/sec	accuracy=nan
2023-03-22 21:54:57,336 Node[0] Epoch[27] Batch [300-320]	Speed: 75898.49 samples/sec	accuracy=nan
2023-03-22 21:54:58,192 Node[0] Epoch[27] Batch [320-340]	Speed: 76250.92 samples/sec	accuracy=nan
2023-03-22 21:54:59,047 Node[0] Epoch[27] Batch [340-360]	Speed: 76287.67 samples/sec	accuracy=nan
2023-03-22 21:54:59,901 Node[0] Epoch[27] Batch [360-380]	Speed: 76525.45 samples/sec	accuracy=nan
2023-03-22 21:55:00,369 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,369 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,369 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,369 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540100370, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 21:55:00,371 Node[0] Epoch[27] Time cost=16.740
2023-03-22 21:55:00,370 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540100371, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76535.25853260126}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-22 21:55:00,370 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,370 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540100371, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 21:55:00,371 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:00,371 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:01,274 Node[0] Epoch[28] Batch [0-20]	Speed: 75887.21 samples/sec	accuracy=nan
2023-03-22 21:55:02,129 Node[0] Epoch[28] Batch [20-40]	Speed: 76379.76 samples/sec	accuracy=nan
2023-03-22 21:55:02,982 Node[0] Epoch[28] Batch [40-60]	Speed: 76470.44 samples/sec	accuracy=nan
2023-03-22 21:55:03,838 Node[0] Epoch[28] Batch [60-80]	Speed: 76265.32 samples/sec	accuracy=nan
2023-03-22 21:55:04,692 Node[0] Epoch[28] Batch [80-100]	Speed: 76496.82 samples/sec	accuracy=nan
2023-03-22 21:55:05,551 Node[0] Epoch[28] Batch [100-120]	Speed: 75968.34 samples/sec	accuracy=nan
2023-03-22 21:55:06,406 Node[0] Epoch[28] Batch [120-140]	Speed: 76305.17 samples/sec	accuracy=nan
2023-03-22 21:55:07,260 Node[0] Epoch[28] Batch [140-160]	Speed: 76521.50 samples/sec	accuracy=nan
2023-03-22 21:55:08,115 Node[0] Epoch[28] Batch [160-180]	Speed: 76330.14 samples/sec	accuracy=nan
2023-03-22 21:55:08,971 Node[0] Epoch[28] Batch [180-200]	Speed: 76266.38 samples/sec	accuracy=nan
2023-03-22 21:55:09,828 Node[0] Epoch[28] Batch [200-220]	Speed: 76121.67 samples/sec	accuracy=nan
2023-03-22 21:55:10,685 Node[0] Epoch[28] Batch [220-240]	Speed: 76157.56 samples/sec	accuracy=nan
2023-03-22 21:55:11,540 Node[0] Epoch[28] Batch [240-260]	Speed: 76387.21 samples/sec	accuracy=nan
2023-03-22 21:55:12,395 Node[0] Epoch[28] Batch [260-280]	Speed: 76389.35 samples/sec	accuracy=nan
2023-03-22 21:55:13,249 Node[0] Epoch[28] Batch [280-300]	Speed: 76371.87 samples/sec	accuracy=nan
2023-03-22 21:55:14,107 Node[0] Epoch[28] Batch [300-320]	Speed: 76081.82 samples/sec	accuracy=nan
2023-03-22 21:55:14,965 Node[0] Epoch[28] Batch [320-340]	Speed: 76121.37 samples/sec	accuracy=nan
2023-03-22 21:55:15,821 Node[0] Epoch[28] Batch [340-360]	Speed: 76279.09 samples/sec	accuracy=nan
2023-03-22 21:55:16,676 Node[0] Epoch[28] Batch [360-380]	Speed: 76330.55 samples/sec	accuracy=nan
2023-03-22 21:55:17,189 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,189 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540117190, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 21:55:17,190 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[0] Epoch[28] Time cost=16.819
2023-03-22 21:55:17,190 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540117190, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76172.94064220507}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 21:55:17,190 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:17,190 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540117190, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 21:55:17,190 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:18,091 Node[0] Epoch[29] Batch [0-20]	Speed: 76098.99 samples/sec	accuracy=nan
2023-03-22 21:55:18,945 Node[0] Epoch[29] Batch [20-40]	Speed: 76474.43 samples/sec	accuracy=nan
2023-03-22 21:55:19,801 Node[0] Epoch[29] Batch [40-60]	Speed: 76198.95 samples/sec	accuracy=nan
2023-03-22 21:55:20,658 Node[0] Epoch[29] Batch [60-80]	Speed: 76175.67 samples/sec	accuracy=nan
2023-03-22 21:55:21,515 Node[0] Epoch[29] Batch [80-100]	Speed: 76242.55 samples/sec	accuracy=nan
2023-03-22 21:55:22,372 Node[0] Epoch[29] Batch [100-120]	Speed: 76125.80 samples/sec	accuracy=nan
2023-03-22 21:55:23,229 Node[0] Epoch[29] Batch [120-140]	Speed: 76184.55 samples/sec	accuracy=nan
2023-03-22 21:55:24,084 Node[0] Epoch[29] Batch [140-160]	Speed: 76349.87 samples/sec	accuracy=nan
2023-03-22 21:55:24,938 Node[0] Epoch[29] Batch [160-180]	Speed: 76483.79 samples/sec	accuracy=nan
2023-03-22 21:55:25,792 Node[0] Epoch[29] Batch [180-200]	Speed: 76401.13 samples/sec	accuracy=nan
2023-03-22 21:55:29,118 Node[0] Epoch[29] Batch [200-220]	Speed: 19626.97 samples/sec	accuracy=nan
2023-03-22 21:55:29,972 Node[0] Epoch[29] Batch [220-240]	Speed: 76407.87 samples/sec	accuracy=nan
2023-03-22 21:55:30,825 Node[0] Epoch[29] Batch [240-260]	Speed: 76521.22 samples/sec	accuracy=nan
2023-03-22 21:55:31,680 Node[0] Epoch[29] Batch [260-280]	Speed: 76399.09 samples/sec	accuracy=nan
2023-03-22 21:55:32,535 Node[0] Epoch[29] Batch [280-300]	Speed: 76381.29 samples/sec	accuracy=nan
2023-03-22 21:55:33,394 Node[0] Epoch[29] Batch [300-320]	Speed: 75950.00 samples/sec	accuracy=nan
2023-03-22 21:55:34,248 Node[0] Epoch[29] Batch [320-340]	Speed: 76410.81 samples/sec	accuracy=nan
2023-03-22 21:55:35,104 Node[0] Epoch[29] Batch [340-360]	Speed: 76311.32 samples/sec	accuracy=nan
2023-03-22 21:55:35,958 Node[0] Epoch[29] Batch [360-380]	Speed: 76407.04 samples/sec	accuracy=nan
2023-03-22 21:55:36,430 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,431 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,431 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,431 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:36,430 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540136430, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 21:55:36,431 Node[0] Epoch[29] Time cost=19.241
:::MLLOG {"namespace": "", "time_ms": 1679540136431, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 66586.46795780085}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679540136431, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 21:55:36,431 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:37,335 Node[0] Epoch[30] Batch [0-20]	Speed: 75903.93 samples/sec	accuracy=nan
2023-03-22 21:55:38,191 Node[0] Epoch[30] Batch [20-40]	Speed: 76282.74 samples/sec	accuracy=nan
2023-03-22 21:55:39,047 Node[0] Epoch[30] Batch [40-60]	Speed: 76274.50 samples/sec	accuracy=nan
2023-03-22 21:55:39,902 Node[0] Epoch[30] Batch [60-80]	Speed: 76322.78 samples/sec	accuracy=nan
2023-03-22 21:55:40,758 Node[0] Epoch[30] Batch [80-100]	Speed: 76330.31 samples/sec	accuracy=nan
2023-03-22 21:55:41,613 Node[0] Epoch[30] Batch [100-120]	Speed: 76348.83 samples/sec	accuracy=nan
2023-03-22 21:55:42,468 Node[0] Epoch[30] Batch [120-140]	Speed: 76350.09 samples/sec	accuracy=nan
2023-03-22 21:55:43,325 Node[0] Epoch[30] Batch [140-160]	Speed: 76117.90 samples/sec	accuracy=nan
2023-03-22 21:55:44,181 Node[0] Epoch[30] Batch [160-180]	Speed: 76281.28 samples/sec	accuracy=nan
2023-03-22 21:55:45,035 Node[0] Epoch[30] Batch [180-200]	Speed: 76426.23 samples/sec	accuracy=nan
2023-03-22 21:55:45,892 Node[0] Epoch[30] Batch [200-220]	Speed: 76184.98 samples/sec	accuracy=nan
2023-03-22 21:55:46,748 Node[0] Epoch[30] Batch [220-240]	Speed: 76284.08 samples/sec	accuracy=nan
2023-03-22 21:55:47,603 Node[0] Epoch[30] Batch [240-260]	Speed: 76296.54 samples/sec	accuracy=nan
2023-03-22 21:55:48,459 Node[0] Epoch[30] Batch [260-280]	Speed: 76320.42 samples/sec	accuracy=nan
2023-03-22 21:55:51,543 Node[0] Epoch[30] Batch [280-300]	Speed: 21165.39 samples/sec	accuracy=nan
2023-03-22 21:55:52,397 Node[0] Epoch[30] Batch [300-320]	Speed: 76419.83 samples/sec	accuracy=nan
2023-03-22 21:55:53,253 Node[0] Epoch[30] Batch [320-340]	Speed: 76285.14 samples/sec	accuracy=nan
2023-03-22 21:55:54,106 Node[0] Epoch[30] Batch [340-360]	Speed: 76485.73 samples/sec	accuracy=nan
2023-03-22 21:55:54,958 Node[0] Epoch[30] Batch [360-380]	Speed: 76618.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679540155469, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 21:55:55,470 Node[0] Epoch[30] Time cost=19.038
:::MLLOG {"namespace": "", "time_ms": 1679540155470, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 67294.13458789667}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679540155509, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 21:55:55,699 Node[0] Epoch[30] Validation-accuracy=0.750320
2023-03-22 21:55:55,699 Node[0] Epoch[30] Validation-correct-count=1172.000000
2023-03-22 21:55:55,699 Node[0] Epoch[30] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679540155720, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679540155720, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75126, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-22 21:55:55,720 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540155720, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679540155720, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 21:55:55,720 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540155720, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 21:55:55,720 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:55,720 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:55:56,578 Node[0] Epoch[31] Batch [0-20]	Speed: 76550.76 samples/sec	accuracy=nan
2023-03-22 21:55:57,437 Node[0] Epoch[31] Batch [20-40]	Speed: 75992.86 samples/sec	accuracy=nan
2023-03-22 21:55:58,297 Node[0] Epoch[31] Batch [40-60]	Speed: 75869.65 samples/sec	accuracy=nan
2023-03-22 21:55:59,152 Node[0] Epoch[31] Batch [60-80]	Speed: 76360.20 samples/sec	accuracy=nan
2023-03-22 21:56:00,007 Node[0] Epoch[31] Batch [80-100]	Speed: 76399.60 samples/sec	accuracy=nan
2023-03-22 21:56:00,864 Node[0] Epoch[31] Batch [100-120]	Speed: 76133.99 samples/sec	accuracy=nan
2023-03-22 21:56:01,721 Node[0] Epoch[31] Batch [120-140]	Speed: 76174.78 samples/sec	accuracy=nan
2023-03-22 21:56:02,575 Node[0] Epoch[31] Batch [140-160]	Speed: 76435.68 samples/sec	accuracy=nan
2023-03-22 21:56:03,428 Node[0] Epoch[31] Batch [160-180]	Speed: 76597.51 samples/sec	accuracy=nan
2023-03-22 21:56:04,284 Node[0] Epoch[31] Batch [180-200]	Speed: 76268.85 samples/sec	accuracy=nan
2023-03-22 21:56:05,141 Node[0] Epoch[31] Batch [200-220]	Speed: 76133.97 samples/sec	accuracy=nan
2023-03-22 21:56:05,996 Node[0] Epoch[31] Batch [220-240]	Speed: 76345.81 samples/sec	accuracy=nan
2023-03-22 21:56:06,850 Node[0] Epoch[31] Batch [240-260]	Speed: 76462.07 samples/sec	accuracy=nan
2023-03-22 21:56:07,704 Node[0] Epoch[31] Batch [260-280]	Speed: 76379.12 samples/sec	accuracy=nan
2023-03-22 21:56:08,559 Node[0] Epoch[31] Batch [280-300]	Speed: 76403.80 samples/sec	accuracy=nan
2023-03-22 21:56:09,416 Node[0] Epoch[31] Batch [300-320]	Speed: 76163.76 samples/sec	accuracy=nan
2023-03-22 21:56:10,273 Node[0] Epoch[31] Batch [320-340]	Speed: 76202.94 samples/sec	accuracy=nan
2023-03-22 21:56:11,130 Node[0] Epoch[31] Batch [340-360]	Speed: 76149.11 samples/sec	accuracy=nan
2023-03-22 21:56:11,989 Node[0] Epoch[31] Batch [360-380]	Speed: 75946.63 samples/sec	accuracy=nan
2023-03-22 21:56:12,457 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,457 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540172457, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 21:56:12,458 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[0] Epoch[31] Time cost=16.738
2023-03-22 21:56:12,458 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540172458, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76542.7077585542}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-22 21:56:12,458 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540172459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 21:56:12,459 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:12,458 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:13,361 Node[0] Epoch[32] Batch [0-20]	Speed: 76250.24 samples/sec	accuracy=nan
2023-03-22 21:56:14,218 Node[0] Epoch[32] Batch [20-40]	Speed: 76184.51 samples/sec	accuracy=nan
2023-03-22 21:56:15,072 Node[0] Epoch[32] Batch [40-60]	Speed: 76409.87 samples/sec	accuracy=nan
2023-03-22 21:56:15,930 Node[0] Epoch[32] Batch [60-80]	Speed: 76151.63 samples/sec	accuracy=nan
2023-03-22 21:56:16,786 Node[0] Epoch[32] Batch [80-100]	Speed: 76224.85 samples/sec	accuracy=nan
2023-03-22 21:56:17,639 Node[0] Epoch[32] Batch [100-120]	Speed: 76499.65 samples/sec	accuracy=nan
2023-03-22 21:56:18,497 Node[0] Epoch[32] Batch [120-140]	Speed: 76157.37 samples/sec	accuracy=nan
2023-03-22 21:56:19,353 Node[0] Epoch[32] Batch [140-160]	Speed: 76255.87 samples/sec	accuracy=nan
2023-03-22 21:56:20,209 Node[0] Epoch[32] Batch [160-180]	Speed: 76190.74 samples/sec	accuracy=nan
2023-03-22 21:56:21,063 Node[0] Epoch[32] Batch [180-200]	Speed: 76475.93 samples/sec	accuracy=nan
2023-03-22 21:56:21,921 Node[0] Epoch[32] Batch [200-220]	Speed: 76080.61 samples/sec	accuracy=nan
2023-03-22 21:56:22,774 Node[0] Epoch[32] Batch [220-240]	Speed: 76514.31 samples/sec	accuracy=nan
2023-03-22 21:56:23,629 Node[0] Epoch[32] Batch [240-260]	Speed: 76395.65 samples/sec	accuracy=nan
2023-03-22 21:56:24,483 Node[0] Epoch[32] Batch [260-280]	Speed: 76429.22 samples/sec	accuracy=nan
2023-03-22 21:56:27,805 Node[0] Epoch[32] Batch [280-300]	Speed: 19651.73 samples/sec	accuracy=nan
2023-03-22 21:56:28,667 Node[0] Epoch[32] Batch [300-320]	Speed: 75687.94 samples/sec	accuracy=nan
2023-03-22 21:56:29,520 Node[0] Epoch[32] Batch [320-340]	Speed: 76497.98 samples/sec	accuracy=nan
2023-03-22 21:56:30,373 Node[0] Epoch[32] Batch [340-360]	Speed: 76533.62 samples/sec	accuracy=nan
2023-03-22 21:56:31,229 Node[0] Epoch[32] Batch [360-380]	Speed: 76271.97 samples/sec	accuracy=nan
2023-03-22 21:56:31,742 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,742 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,742 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540191743, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 21:56:31,743 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[0] Epoch[32] Time cost=19.285
2023-03-22 21:56:31,743 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540191743, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 66434.56381013867}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-22 21:56:31,743 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540191744, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 21:56:31,743 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,743 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:31,744 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:32,643 Node[0] Epoch[33] Batch [0-20]	Speed: 76175.40 samples/sec	accuracy=nan
2023-03-22 21:56:33,496 Node[0] Epoch[33] Batch [20-40]	Speed: 76524.45 samples/sec	accuracy=nan
2023-03-22 21:56:34,352 Node[0] Epoch[33] Batch [40-60]	Speed: 76292.37 samples/sec	accuracy=nan
2023-03-22 21:56:35,207 Node[0] Epoch[33] Batch [60-80]	Speed: 76329.95 samples/sec	accuracy=nan
2023-03-22 21:56:36,063 Node[0] Epoch[33] Batch [80-100]	Speed: 76235.06 samples/sec	accuracy=nan
2023-03-22 21:56:36,920 Node[0] Epoch[33] Batch [100-120]	Speed: 76174.44 samples/sec	accuracy=nan
2023-03-22 21:56:37,776 Node[0] Epoch[33] Batch [120-140]	Speed: 76338.83 samples/sec	accuracy=nan
2023-03-22 21:56:38,634 Node[0] Epoch[33] Batch [140-160]	Speed: 76084.82 samples/sec	accuracy=nan
2023-03-22 21:56:39,486 Node[0] Epoch[33] Batch [160-180]	Speed: 76553.37 samples/sec	accuracy=nan
2023-03-22 21:56:40,341 Node[0] Epoch[33] Batch [180-200]	Speed: 76380.99 samples/sec	accuracy=nan
2023-03-22 21:56:41,196 Node[0] Epoch[33] Batch [200-220]	Speed: 76320.95 samples/sec	accuracy=nan
2023-03-22 21:56:42,052 Node[0] Epoch[33] Batch [220-240]	Speed: 76290.97 samples/sec	accuracy=nan
2023-03-22 21:56:42,906 Node[0] Epoch[33] Batch [240-260]	Speed: 76412.48 samples/sec	accuracy=nan
2023-03-22 21:56:43,760 Node[0] Epoch[33] Batch [260-280]	Speed: 76468.71 samples/sec	accuracy=nan
2023-03-22 21:56:44,617 Node[0] Epoch[33] Batch [280-300]	Speed: 76201.05 samples/sec	accuracy=nan
2023-03-22 21:56:45,473 Node[0] Epoch[33] Batch [300-320]	Speed: 76258.27 samples/sec	accuracy=nan
2023-03-22 21:56:46,326 Node[0] Epoch[33] Batch [320-340]	Speed: 76474.97 samples/sec	accuracy=nan
2023-03-22 21:56:47,181 Node[0] Epoch[33] Batch [340-360]	Speed: 76356.43 samples/sec	accuracy=nan
2023-03-22 21:56:48,035 Node[0] Epoch[33] Batch [360-380]	Speed: 76476.33 samples/sec	accuracy=nan
2023-03-22 21:56:48,504 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,504 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540208504, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 21:56:48,505 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:48,505 Node[0] Epoch[33] Time cost=16.762
:::MLLOG {"namespace": "", "time_ms": 1679540208505, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 76434.7786294453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-22 21:56:48,505 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679540208505, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 21:56:48,506 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 21:56:49,405 Node[0] Epoch[34] Batch [0-20]	Speed: 76222.22 samples/sec	accuracy=nan
2023-03-22 21:56:50,262 Node[0] Epoch[34] Batch [20-40]	Speed: 76209.11 samples/sec	accuracy=nan
2023-03-22 21:56:51,117 Node[0] Epoch[34] Batch [40-60]	Speed: 76289.52 samples/sec	accuracy=nan
2023-03-22 21:56:51,974 Node[0] Epoch[34] Batch [60-80]	Speed: 76230.54 samples/sec	accuracy=nan
2023-03-22 21:56:52,828 Node[0] Epoch[34] Batch [80-100]	Speed: 76437.75 samples/sec	accuracy=nan
2023-03-22 21:56:53,683 Node[0] Epoch[34] Batch [100-120]	Speed: 76341.38 samples/sec	accuracy=nan
2023-03-22 21:56:54,539 Node[0] Epoch[34] Batch [120-140]	Speed: 76275.01 samples/sec	accuracy=nan
2023-03-22 21:56:55,393 Node[0] Epoch[34] Batch [140-160]	Speed: 76429.20 samples/sec	accuracy=nan
2023-03-22 21:56:56,246 Node[0] Epoch[34] Batch [160-180]	Speed: 76474.54 samples/sec	accuracy=nan
2023-03-22 21:56:57,101 Node[0] Epoch[34] Batch [180-200]	Speed: 76416.59 samples/sec	accuracy=nan
2023-03-22 21:56:57,958 Node[0] Epoch[34] Batch [200-220]	Speed: 76101.38 samples/sec	accuracy=nan
2023-03-22 21:56:58,814 Node[0] Epoch[34] Batch [220-240]	Speed: 76297.37 samples/sec	accuracy=nan
2023-03-22 21:56:59,669 Node[0] Epoch[34] Batch [240-260]	Speed: 76388.77 samples/sec	accuracy=nan
2023-03-22 21:57:00,525 Node[0] Epoch[34] Batch [260-280]	Speed: 76230.41 samples/sec	accuracy=nan
2023-03-22 21:57:06,071 Node[0] Epoch[34] Batch [280-300]	Speed: 11770.62 samples/sec	accuracy=nan
2023-03-22 21:57:06,924 Node[0] Epoch[34] Batch [300-320]	Speed: 76518.76 samples/sec	accuracy=nan
2023-03-22 21:57:07,779 Node[0] Epoch[34] Batch [320-340]	Speed: 76364.63 samples/sec	accuracy=nan
2023-03-22 21:57:08,633 Node[0] Epoch[34] Batch [340-360]	Speed: 76405.59 samples/sec	accuracy=nan
2023-03-22 21:57:09,490 Node[0] Epoch[34] Batch [360-380]	Speed: 76191.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679540230001, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 21:57:10,002 Node[0] Epoch[34] Time cost=21.496
:::MLLOG {"namespace": "", "time_ms": 1679540230002, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 59600.00053202523}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679540230041, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 21:57:10,231 Node[0] Epoch[34] Validation-accuracy=0.760563
2023-03-22 21:57:10,231 Node[0] Epoch[34] Validation-correct-count=1188.000000
2023-03-22 21:57:10,231 Node[0] Epoch[34] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679540230253, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679540230253, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76084, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679540230254, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679540230254, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540235
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:15 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:15 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540235
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:15 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:15 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540235
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:15 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:15 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540235
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:15 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:15 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540235
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:15 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:15 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:15 PM
+ result=676
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,676,root,2023-03-22 09:45:59 PM'
RESULT,IMAGE_CLASSIFICATION,,676,root,2023-03-22 09:45:59 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
+ end=1679540236
++ date +%s
++ date '+%Y-%m-%d %r'
+ end=1679540236
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=677
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,677,root,2023-03-22 09:45:59 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:16 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:16 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=678
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,678,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=679
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM'
RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=679
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=679
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=679
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679540237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 09:57:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 09:57:17 PM'
ENDING TIMING RUN AT 2023-03-22 09:57:17 PM
+ result=679
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,679,root,2023-03-22 09:45:58 PM'
+ export PROFILE=0
+ PROFILE=0
