+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node043 node044 '
+ echo 'hosts=node040 node041 node043 node044 '
hosts=node040 node041 node043 node044 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344635225, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344635261, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344635262, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344635264, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344635265, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344648384, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344654472, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344654508, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344654510, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344654511, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344654512, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344665725, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344670726, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344670761, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344670762, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344670763, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344670765, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344692328, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344697248, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344697283, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344697284, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344697286, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344697287, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679344718980, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=30765
+ SEED=30765
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ DGXSYSTEM=4xR750xax4A100
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+ start=1679344720
+ start=1679344720
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ readonly local_rank=0
+ local_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ SLURM_NTASKS_PER_NODE=4
+ INPUT_BATCH_MULTIPLIER=1
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ BATCHSIZE=204
+ LR=10.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=10.5
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ SEED=30765
+ WD=5.0e-05
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LABELSMOOTHING=0.1
+ SEED=30765
+ DALI_PREFETCH_QUEUE=5
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_THREADS=6
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CACHE_SIZE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_ROI_DECODE=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DONT_USE_MMAP=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BN_GROUP=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NODALI=0
+ BN_GROUP=1
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ PROFILE_EXCEL=0
+ THR=0.759
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ DATAROOT=/data
+ THR=0.759
+ echo 'running benchmark'
+ [[ 0 == 1 ]]
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ DATAROOT=/data
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=4
running benchmark
+ NGPUS=4
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679344720
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ source ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679344720
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
+ source ./config_4xR750xax4A100.sh
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ source ./config_4xR750xax4A100.sh
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ source ./config_4xR750xax4A100.sh
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+ source ./config_4xR750xax4A100.sh
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ date +%s
++ date +%s
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
+ source ./config_4xR750xax4A100.sh
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export DGXSYSTEM=4xR750xax4A100
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
++ date +%s
+ start=1679344720
++ date +%s
+ start=1679344720
+++ dirname ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ start_fmt='2023-03-20 03:38:40 PM'
+ readonly global_rank=1
+ global_rank=1
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 -ge 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ tr '\n' ,
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
++ tr '\n' ,
++ sed 's/,$//'
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ sed 's/,$//'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start=1679344720
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679344720
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
++ date +%s
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ date +%s
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679344720
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679344720
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679344720
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ date '+%Y-%m-%d %r'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ UCX_NET_DEVICES=hfi1_0:1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ start_fmt='2023-03-20 03:38:40 PM'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ date +%s
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ source ./config_4xR750xax4A100.sh
+ DALI_NVJPEG_MEMPADDING=256
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ GPUS=0,1,2,3
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
++ tr '\n' ,
+ start_fmt='2023-03-20 03:38:40 PM'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ dirname ./config_4xR750xax4A100.sh
++ sed 's/,$//'
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
++ seq 0 3
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ tr '\n' ,
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ sed 's/,$//'
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679344720
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
+ GPUS=0,1,2,3
++ sed 's/,$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ '' -ge 1 ]]
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+++ sed 's/^config_//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679344720
+ start=1679344720
+ start=1679344720
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ start_fmt='2023-03-20 03:38:40 PM'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
+ readonly global_rank=2
+ global_rank=2
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679344720
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 03:38:40 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 03:38:40 PM'
STARTING TIMING RUN AT 2023-03-20 03:38:40 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=30765
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 30765 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:1175772] MCW rank 1 is not bound (or bound to all available processors)
[node040:1175797] MCW rank 0 is not bound (or bound to all available processors)
[node041:908985] MCW rank 4 is not bound (or bound to all available processors)
[node040:1175785] MCW rank 2 is not bound (or bound to all available processors)
[node040:1175771] MCW rank 3 is not bound (or bound to all available processors)
[node041:908978] MCW rank 5 is not bound (or bound to all available processors)
[node041:908977] MCW rank 6 is not bound (or bound to all available processors)
[node041:908984] MCW rank 7 is not bound (or bound to all available processors)
[node043:1053738] MCW rank 9 is not bound (or bound to all available processors)
[node043:1053748] MCW rank 10 is not bound (or bound to all available processors)
[node043:1053737] MCW rank 11 is not bound (or bound to all available processors)
[node043:1053747] MCW rank 8 is not bound (or bound to all available processors)
[node044:949116] MCW rank 13 is not bound (or bound to all available processors)
[node044:949117] MCW rank 15 is not bound (or bound to all available processors)
[node044:949115] MCW rank 14 is not bound (or bound to all available processors)
[node044:949122] MCW rank 12 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679344725465, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[15:38:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679344733759, "event_type": "POINT_IN_TIME", "key": "seed", "value": 30765, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[15:38:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679344735576, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[15:38:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:38:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:38:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:38:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:38:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[15:39:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679344740527, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740527, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740528, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740528, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740528, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740529, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740529, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740529, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740529, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740530, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740530, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740530, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740530, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740531, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740531, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740531, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740531, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740532, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740532, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740532, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740532, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740533, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740533, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740533, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740533, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740533, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740534, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740534, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740534, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740534, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740535, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740535, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740535, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740535, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740536, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740536, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740536, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740536, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740537, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740537, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740537, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740537, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679344740566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,938 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60034, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679344742939, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679344742940, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679344742941, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679344742942, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679344742942, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679344742942, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679344742942, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,952 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13052, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,958 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41951, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,961 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41952, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,969 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47277, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,970 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49169, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,970 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55016, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37837, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37450, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32213, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52554, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12306, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47600, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,972 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13475, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,973 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43078, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 15:39:02,973 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37908, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679344830230, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679344830231, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679344830231, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679344830795, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679344830875, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679344830875, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 15:40:32,714 Node[0] Epoch[0] Batch [0-20]	Speed: 35679.39 samples/sec	accuracy=nan
2023-03-20 15:40:34,443 Node[0] Epoch[0] Batch [20-40]	Speed: 37763.02 samples/sec	accuracy=nan
2023-03-20 15:40:36,171 Node[0] Epoch[0] Batch [40-60]	Speed: 37771.99 samples/sec	accuracy=nan
2023-03-20 15:40:37,901 Node[0] Epoch[0] Batch [60-80]	Speed: 37736.91 samples/sec	accuracy=nan
2023-03-20 15:40:39,629 Node[0] Epoch[0] Batch [80-100]	Speed: 37780.04 samples/sec	accuracy=nan
2023-03-20 15:40:41,355 Node[0] Epoch[0] Batch [100-120]	Speed: 37817.84 samples/sec	accuracy=nan
2023-03-20 15:40:43,085 Node[0] Epoch[0] Batch [120-140]	Speed: 37736.55 samples/sec	accuracy=nan
2023-03-20 15:40:44,815 Node[0] Epoch[0] Batch [140-160]	Speed: 37729.12 samples/sec	accuracy=nan
2023-03-20 15:40:46,543 Node[0] Epoch[0] Batch [160-180]	Speed: 37765.70 samples/sec	accuracy=nan
2023-03-20 15:40:48,272 Node[0] Epoch[0] Batch [180-200]	Speed: 37764.98 samples/sec	accuracy=nan
2023-03-20 15:40:50,003 Node[0] Epoch[0] Batch [200-220]	Speed: 37722.12 samples/sec	accuracy=nan
2023-03-20 15:40:51,735 Node[0] Epoch[0] Batch [220-240]	Speed: 37685.01 samples/sec	accuracy=nan
2023-03-20 15:40:53,464 Node[0] Epoch[0] Batch [240-260]	Speed: 37751.91 samples/sec	accuracy=nan
2023-03-20 15:40:55,192 Node[0] Epoch[0] Batch [260-280]	Speed: 37780.72 samples/sec	accuracy=nan
2023-03-20 15:40:56,922 Node[0] Epoch[0] Batch [280-300]	Speed: 37727.79 samples/sec	accuracy=nan
2023-03-20 15:40:58,653 Node[0] Epoch[0] Batch [300-320]	Speed: 37713.16 samples/sec	accuracy=nan
2023-03-20 15:41:00,387 Node[0] Epoch[0] Batch [320-340]	Speed: 37646.01 samples/sec	accuracy=nan
2023-03-20 15:41:02,122 Node[0] Epoch[0] Batch [340-360]	Speed: 37621.72 samples/sec	accuracy=nan
2023-03-20 15:41:03,857 Node[0] Epoch[0] Batch [360-380]	Speed: 37628.17 samples/sec	accuracy=nan
2023-03-20 15:41:04,897 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,897 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344864896, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 15:41:04,897 Node[0] Epoch[0] Time cost=34.022
:::MLLOG {"namespace": "", "time_ms": 1679344864897, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37656.984826879576}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 15:41:04,897 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,898 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,898 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,898 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344864898, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 15:41:04,898 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,899 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,898 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,899 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,899 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,899 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,899 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,900 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,900 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:04,900 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:06,716 Node[0] Epoch[1] Batch [0-20]	Speed: 37669.67 samples/sec	accuracy=nan
2023-03-20 15:41:08,449 Node[0] Epoch[1] Batch [20-40]	Speed: 37668.37 samples/sec	accuracy=nan
2023-03-20 15:41:10,190 Node[0] Epoch[1] Batch [40-60]	Speed: 37512.53 samples/sec	accuracy=nan
2023-03-20 15:41:11,925 Node[0] Epoch[1] Batch [60-80]	Speed: 37622.72 samples/sec	accuracy=nan
2023-03-20 15:41:13,660 Node[0] Epoch[1] Batch [80-100]	Speed: 37629.35 samples/sec	accuracy=nan
2023-03-20 15:41:15,524 Node[0] Epoch[1] Batch [100-120]	Speed: 35013.61 samples/sec	accuracy=nan
2023-03-20 15:41:17,260 Node[0] Epoch[1] Batch [120-140]	Speed: 37605.91 samples/sec	accuracy=nan
2023-03-20 15:41:19,117 Node[0] Epoch[1] Batch [140-160]	Speed: 35160.64 samples/sec	accuracy=nan
2023-03-20 15:41:20,856 Node[0] Epoch[1] Batch [160-180]	Speed: 37524.22 samples/sec	accuracy=nan
2023-03-20 15:41:22,592 Node[0] Epoch[1] Batch [180-200]	Speed: 37609.58 samples/sec	accuracy=nan
2023-03-20 15:41:26,470 Node[0] Epoch[1] Batch [200-220]	Speed: 16831.05 samples/sec	accuracy=nan
2023-03-20 15:41:30,710 Node[0] Epoch[1] Batch [220-240]	Speed: 15398.96 samples/sec	accuracy=nan
2023-03-20 15:41:32,447 Node[0] Epoch[1] Batch [240-260]	Speed: 37576.25 samples/sec	accuracy=nan
2023-03-20 15:41:36,537 Node[0] Epoch[1] Batch [260-280]	Speed: 15959.24 samples/sec	accuracy=nan
2023-03-20 15:41:38,272 Node[0] Epoch[1] Batch [280-300]	Speed: 37634.99 samples/sec	accuracy=nan
2023-03-20 15:41:40,008 Node[0] Epoch[1] Batch [300-320]	Speed: 37594.27 samples/sec	accuracy=nan
2023-03-20 15:41:41,745 Node[0] Epoch[1] Batch [320-340]	Speed: 37584.28 samples/sec	accuracy=nan
2023-03-20 15:41:45,836 Node[0] Epoch[1] Batch [340-360]	Speed: 15959.51 samples/sec	accuracy=nan
2023-03-20 15:41:47,572 Node[0] Epoch[1] Batch [360-380]	Speed: 37597.64 samples/sec	accuracy=nan
2023-03-20 15:41:48,610 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,610 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,610 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,610 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,611 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,611 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344908610, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 15:41:48,611 Node[0] Epoch[1] Time cost=43.713
2023-03-20 15:41:48,611 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344908611, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 29308.89858267175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-20 15:41:48,611 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344908612, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 15:41:48,612 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,612 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,612 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,612 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,612 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,612 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,613 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:48,613 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:41:52,966 Node[0] Epoch[2] Batch [0-20]	Speed: 15293.50 samples/sec	accuracy=nan
2023-03-20 15:41:54,701 Node[0] Epoch[2] Batch [20-40]	Speed: 37632.15 samples/sec	accuracy=nan
2023-03-20 15:41:56,438 Node[0] Epoch[2] Batch [40-60]	Speed: 37580.07 samples/sec	accuracy=nan
2023-03-20 15:42:00,521 Node[0] Epoch[2] Batch [60-80]	Speed: 15989.28 samples/sec	accuracy=nan
2023-03-20 15:42:02,257 Node[0] Epoch[2] Batch [80-100]	Speed: 37592.69 samples/sec	accuracy=nan
2023-03-20 15:42:03,994 Node[0] Epoch[2] Batch [100-120]	Speed: 37590.57 samples/sec	accuracy=nan
2023-03-20 15:42:05,728 Node[0] Epoch[2] Batch [120-140]	Speed: 37648.92 samples/sec	accuracy=nan
2023-03-20 15:42:09,546 Node[0] Epoch[2] Batch [140-160]	Speed: 17094.56 samples/sec	accuracy=nan
2023-03-20 15:42:18,339 Node[0] Epoch[2] Batch [160-180]	Speed: 7424.71 samples/sec	accuracy=nan
2023-03-20 15:42:20,073 Node[0] Epoch[2] Batch [180-200]	Speed: 37642.25 samples/sec	accuracy=nan
2023-03-20 15:42:24,179 Node[0] Epoch[2] Batch [200-220]	Speed: 15899.21 samples/sec	accuracy=nan
2023-03-20 15:42:32,934 Node[0] Epoch[2] Batch [220-240]	Speed: 7455.98 samples/sec	accuracy=nan
2023-03-20 15:42:34,668 Node[0] Epoch[2] Batch [240-260]	Speed: 37657.28 samples/sec	accuracy=nan
2023-03-20 15:42:36,401 Node[0] Epoch[2] Batch [260-280]	Speed: 37661.43 samples/sec	accuracy=nan
2023-03-20 15:42:38,136 Node[0] Epoch[2] Batch [280-300]	Speed: 37630.83 samples/sec	accuracy=nan
2023-03-20 15:42:39,867 Node[0] Epoch[2] Batch [300-320]	Speed: 37705.19 samples/sec	accuracy=nan
2023-03-20 15:42:46,395 Node[0] Epoch[2] Batch [320-340]	Speed: 9999.65 samples/sec	accuracy=nan
2023-03-20 15:42:48,123 Node[0] Epoch[2] Batch [340-360]	Speed: 37776.22 samples/sec	accuracy=nan
2023-03-20 15:42:49,861 Node[0] Epoch[2] Batch [360-380]	Speed: 37568.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679344970812, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 15:42:50,813 Node[0] Epoch[2] Time cost=62.201
:::MLLOG {"namespace": "", "time_ms": 1679344970813, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20597.194371642076}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 15:42:50,894 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344970894, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 15:42:50,895 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,894 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,895 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,895 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,895 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,895 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,896 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,896 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,896 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,896 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,896 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,897 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,897 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,897 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:50,897 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,585 Node[0] Epoch[2] Validation-accuracy=0.329280
2023-03-20 15:42:51,585 Node[0] Epoch[2] Validation-correct-count=1029.000000
2023-03-20 15:42:51,585 Node[0] Epoch[2] Validation-total-count=3125.000000
2023-03-20 15:42:51,694 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344971694, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 15:42:51,694 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344971694, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32652, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 15:42:51,694 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344971695, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 15:42:51,695 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,694 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344971695, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 15:42:51,695 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:51,695 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679344971695, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 15:42:51,695 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:42:53,438 Node[0] Epoch[3] Batch [0-20]	Speed: 37623.76 samples/sec	accuracy=nan
2023-03-20 15:42:55,172 Node[0] Epoch[3] Batch [20-40]	Speed: 37638.49 samples/sec	accuracy=nan
2023-03-20 15:42:56,910 Node[0] Epoch[3] Batch [40-60]	Speed: 37575.67 samples/sec	accuracy=nan
2023-03-20 15:42:58,646 Node[0] Epoch[3] Batch [60-80]	Speed: 37586.90 samples/sec	accuracy=nan
2023-03-20 15:43:00,384 Node[0] Epoch[3] Batch [80-100]	Speed: 37569.90 samples/sec	accuracy=nan
2023-03-20 15:43:02,123 Node[0] Epoch[3] Batch [100-120]	Speed: 37536.70 samples/sec	accuracy=nan
2023-03-20 15:43:03,860 Node[0] Epoch[3] Batch [120-140]	Speed: 37585.79 samples/sec	accuracy=nan
2023-03-20 15:43:05,601 Node[0] Epoch[3] Batch [140-160]	Speed: 37483.96 samples/sec	accuracy=nan
2023-03-20 15:43:07,342 Node[0] Epoch[3] Batch [160-180]	Speed: 37506.89 samples/sec	accuracy=nan
2023-03-20 15:43:09,084 Node[0] Epoch[3] Batch [180-200]	Speed: 37464.98 samples/sec	accuracy=nan
2023-03-20 15:43:10,823 Node[0] Epoch[3] Batch [200-220]	Speed: 37547.54 samples/sec	accuracy=nan
2023-03-20 15:43:12,561 Node[0] Epoch[3] Batch [220-240]	Speed: 37562.23 samples/sec	accuracy=nan
2023-03-20 15:43:14,301 Node[0] Epoch[3] Batch [240-260]	Speed: 37503.70 samples/sec	accuracy=nan
2023-03-20 15:43:16,041 Node[0] Epoch[3] Batch [260-280]	Speed: 37515.50 samples/sec	accuracy=nan
2023-03-20 15:43:17,783 Node[0] Epoch[3] Batch [280-300]	Speed: 37486.12 samples/sec	accuracy=nan
2023-03-20 15:43:19,523 Node[0] Epoch[3] Batch [300-320]	Speed: 37523.60 samples/sec	accuracy=nan
2023-03-20 15:43:21,264 Node[0] Epoch[3] Batch [320-340]	Speed: 37488.01 samples/sec	accuracy=nan
2023-03-20 15:43:23,007 Node[0] Epoch[3] Batch [340-360]	Speed: 37454.20 samples/sec	accuracy=nan
2023-03-20 15:43:24,750 Node[0] Epoch[3] Batch [360-380]	Speed: 37445.87 samples/sec	accuracy=nan
2023-03-20 15:43:25,794 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,794 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,795 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345005795, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 15:43:25,795 Node[0] Epoch[3] Time cost=34.100
:::MLLOG {"namespace": "", "time_ms": 1679345005795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37570.79187083482}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-20 15:43:25,795 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345005796, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 15:43:25,795 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,796 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,797 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,797 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,797 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,798 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:25,798 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:27,625 Node[0] Epoch[4] Batch [0-20]	Speed: 37469.67 samples/sec	accuracy=nan
2023-03-20 15:43:29,367 Node[0] Epoch[4] Batch [20-40]	Speed: 37489.76 samples/sec	accuracy=nan
2023-03-20 15:43:31,107 Node[0] Epoch[4] Batch [40-60]	Speed: 37505.35 samples/sec	accuracy=nan
2023-03-20 15:43:32,849 Node[0] Epoch[4] Batch [60-80]	Speed: 37466.48 samples/sec	accuracy=nan
2023-03-20 15:43:34,592 Node[0] Epoch[4] Batch [80-100]	Speed: 37465.02 samples/sec	accuracy=nan
2023-03-20 15:43:36,334 Node[0] Epoch[4] Batch [100-120]	Speed: 37463.98 samples/sec	accuracy=nan
2023-03-20 15:43:38,078 Node[0] Epoch[4] Batch [120-140]	Speed: 37442.77 samples/sec	accuracy=nan
2023-03-20 15:43:39,821 Node[0] Epoch[4] Batch [140-160]	Speed: 37445.31 samples/sec	accuracy=nan
2023-03-20 15:43:41,568 Node[0] Epoch[4] Batch [160-180]	Speed: 37369.08 samples/sec	accuracy=nan
2023-03-20 15:43:43,311 Node[0] Epoch[4] Batch [180-200]	Speed: 37459.19 samples/sec	accuracy=nan
2023-03-20 15:43:45,052 Node[0] Epoch[4] Batch [200-220]	Speed: 37484.53 samples/sec	accuracy=nan
2023-03-20 15:43:46,797 Node[0] Epoch[4] Batch [220-240]	Speed: 37425.77 samples/sec	accuracy=nan
2023-03-20 15:43:48,538 Node[0] Epoch[4] Batch [240-260]	Speed: 37486.88 samples/sec	accuracy=nan
2023-03-20 15:43:50,280 Node[0] Epoch[4] Batch [260-280]	Speed: 37464.60 samples/sec	accuracy=nan
2023-03-20 15:43:52,021 Node[0] Epoch[4] Batch [280-300]	Speed: 37501.41 samples/sec	accuracy=nan
2023-03-20 15:43:53,763 Node[0] Epoch[4] Batch [300-320]	Speed: 37469.32 samples/sec	accuracy=nan
2023-03-20 15:43:55,504 Node[0] Epoch[4] Batch [320-340]	Speed: 37499.04 samples/sec	accuracy=nan
2023-03-20 15:43:57,244 Node[0] Epoch[4] Batch [340-360]	Speed: 37522.41 samples/sec	accuracy=nan
2023-03-20 15:43:58,982 Node[0] Epoch[4] Batch [360-380]	Speed: 37569.91 samples/sec	accuracy=nan
2023-03-20 15:43:59,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,940 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,940 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,940 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,940 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345039939, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 15:43:59,941 Node[0] Epoch[4] Time cost=34.145
2023-03-20 15:43:59,941 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345039941, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37521.410113905}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-20 15:43:59,941 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345039941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 15:43:59,941 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,941 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,942 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,942 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,942 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,942 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:43:59,943 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:01,769 Node[0] Epoch[5] Batch [0-20]	Speed: 37566.80 samples/sec	accuracy=nan
2023-03-20 15:44:03,508 Node[0] Epoch[5] Batch [20-40]	Speed: 37536.48 samples/sec	accuracy=nan
2023-03-20 15:44:05,248 Node[0] Epoch[5] Batch [40-60]	Speed: 37515.20 samples/sec	accuracy=nan
2023-03-20 15:44:06,990 Node[0] Epoch[5] Batch [60-80]	Speed: 37468.69 samples/sec	accuracy=nan
2023-03-20 15:44:08,732 Node[0] Epoch[5] Batch [80-100]	Speed: 37472.65 samples/sec	accuracy=nan
2023-03-20 15:44:10,477 Node[0] Epoch[5] Batch [100-120]	Speed: 37407.02 samples/sec	accuracy=nan
2023-03-20 15:44:12,218 Node[0] Epoch[5] Batch [120-140]	Speed: 37503.95 samples/sec	accuracy=nan
2023-03-20 15:44:13,958 Node[0] Epoch[5] Batch [140-160]	Speed: 37524.84 samples/sec	accuracy=nan
2023-03-20 15:44:15,700 Node[0] Epoch[5] Batch [160-180]	Speed: 37464.16 samples/sec	accuracy=nan
2023-03-20 15:44:17,438 Node[0] Epoch[5] Batch [180-200]	Speed: 37559.28 samples/sec	accuracy=nan
2023-03-20 15:44:19,180 Node[0] Epoch[5] Batch [200-220]	Speed: 37489.44 samples/sec	accuracy=nan
2023-03-20 15:44:20,918 Node[0] Epoch[5] Batch [220-240]	Speed: 37549.00 samples/sec	accuracy=nan
2023-03-20 15:44:22,656 Node[0] Epoch[5] Batch [240-260]	Speed: 37569.10 samples/sec	accuracy=nan
2023-03-20 15:44:24,394 Node[0] Epoch[5] Batch [260-280]	Speed: 37562.96 samples/sec	accuracy=nan
2023-03-20 15:44:26,133 Node[0] Epoch[5] Batch [280-300]	Speed: 37530.82 samples/sec	accuracy=nan
2023-03-20 15:44:27,871 Node[0] Epoch[5] Batch [300-320]	Speed: 37553.61 samples/sec	accuracy=nan
2023-03-20 15:44:29,609 Node[0] Epoch[5] Batch [320-340]	Speed: 37555.42 samples/sec	accuracy=nan
2023-03-20 15:44:31,347 Node[0] Epoch[5] Batch [340-360]	Speed: 37575.37 samples/sec	accuracy=nan
2023-03-20 15:44:33,088 Node[0] Epoch[5] Batch [360-380]	Speed: 37487.27 samples/sec	accuracy=nan
2023-03-20 15:44:34,130 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,130 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345074130, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 15:44:34,130 Node[0] Epoch[5] Time cost=34.189
:::MLLOG {"namespace": "", "time_ms": 1679345074130, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37473.06188215361}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-20 15:44:34,130 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345074131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 15:44:34,131 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,131 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,131 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,131 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,131 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,131 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,132 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,132 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,132 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,132 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,132 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,133 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:34,133 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:44:35,957 Node[0] Epoch[6] Batch [0-20]	Speed: 37532.87 samples/sec	accuracy=nan
2023-03-20 15:44:37,694 Node[0] Epoch[6] Batch [20-40]	Speed: 37587.66 samples/sec	accuracy=nan
2023-03-20 15:44:39,431 Node[0] Epoch[6] Batch [40-60]	Speed: 37577.72 samples/sec	accuracy=nan
2023-03-20 15:44:41,168 Node[0] Epoch[6] Batch [60-80]	Speed: 37581.90 samples/sec	accuracy=nan
2023-03-20 15:44:42,906 Node[0] Epoch[6] Batch [80-100]	Speed: 37569.11 samples/sec	accuracy=nan
2023-03-20 15:44:44,645 Node[0] Epoch[6] Batch [100-120]	Speed: 37526.77 samples/sec	accuracy=nan
2023-03-20 15:44:46,383 Node[0] Epoch[6] Batch [120-140]	Speed: 37566.16 samples/sec	accuracy=nan
2023-03-20 15:44:48,120 Node[0] Epoch[6] Batch [140-160]	Speed: 37569.12 samples/sec	accuracy=nan
2023-03-20 15:44:49,857 Node[0] Epoch[6] Batch [160-180]	Speed: 37583.11 samples/sec	accuracy=nan
2023-03-20 15:44:51,596 Node[0] Epoch[6] Batch [180-200]	Speed: 37536.94 samples/sec	accuracy=nan
2023-03-20 15:44:53,336 Node[0] Epoch[6] Batch [200-220]	Speed: 37524.71 samples/sec	accuracy=nan
2023-03-20 15:44:55,073 Node[0] Epoch[6] Batch [220-240]	Speed: 37595.87 samples/sec	accuracy=nan
2023-03-20 15:44:56,810 Node[0] Epoch[6] Batch [240-260]	Speed: 37579.74 samples/sec	accuracy=nan
2023-03-20 15:44:58,549 Node[0] Epoch[6] Batch [260-280]	Speed: 37541.29 samples/sec	accuracy=nan
2023-03-20 15:45:00,285 Node[0] Epoch[6] Batch [280-300]	Speed: 37596.47 samples/sec	accuracy=nan
2023-03-20 15:45:02,020 Node[0] Epoch[6] Batch [300-320]	Speed: 37617.38 samples/sec	accuracy=nan
2023-03-20 15:45:03,758 Node[0] Epoch[6] Batch [320-340]	Speed: 37572.86 samples/sec	accuracy=nan
2023-03-20 15:45:05,495 Node[0] Epoch[6] Batch [340-360]	Speed: 37583.52 samples/sec	accuracy=nan
2023-03-20 15:45:07,231 Node[0] Epoch[6] Batch [360-380]	Speed: 37602.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345108183, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 15:45:08,184 Node[0] Epoch[6] Time cost=34.053
:::MLLOG {"namespace": "", "time_ms": 1679345108184, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37622.18518203668}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679345108266, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 15:45:09,022 Node[0] Epoch[6] Validation-accuracy=0.455040
2023-03-20 15:45:09,022 Node[0] Epoch[6] Validation-correct-count=1422.000000
2023-03-20 15:45:09,022 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345109108, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-20 15:45:09,108 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345109108, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.46668, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679345109108, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 15:45:09,108 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345109108, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 15:45:09,108 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:09,108 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345109109, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 15:45:09,109 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:10,853 Node[0] Epoch[7] Batch [0-20]	Speed: 37588.43 samples/sec	accuracy=nan
2023-03-20 15:45:12,588 Node[0] Epoch[7] Batch [20-40]	Speed: 37644.16 samples/sec	accuracy=nan
2023-03-20 15:45:14,321 Node[0] Epoch[7] Batch [40-60]	Speed: 37651.03 samples/sec	accuracy=nan
2023-03-20 15:45:16,058 Node[0] Epoch[7] Batch [60-80]	Speed: 37587.53 samples/sec	accuracy=nan
2023-03-20 15:45:17,793 Node[0] Epoch[7] Batch [80-100]	Speed: 37628.12 samples/sec	accuracy=nan
2023-03-20 15:45:19,528 Node[0] Epoch[7] Batch [100-120]	Speed: 37627.83 samples/sec	accuracy=nan
2023-03-20 15:45:21,260 Node[0] Epoch[7] Batch [120-140]	Speed: 37695.34 samples/sec	accuracy=nan
2023-03-20 15:45:22,994 Node[0] Epoch[7] Batch [140-160]	Speed: 37627.53 samples/sec	accuracy=nan
2023-03-20 15:45:24,730 Node[0] Epoch[7] Batch [160-180]	Speed: 37624.74 samples/sec	accuracy=nan
2023-03-20 15:45:26,463 Node[0] Epoch[7] Batch [180-200]	Speed: 37651.34 samples/sec	accuracy=nan
2023-03-20 15:45:28,198 Node[0] Epoch[7] Batch [200-220]	Speed: 37640.31 samples/sec	accuracy=nan
2023-03-20 15:45:29,932 Node[0] Epoch[7] Batch [220-240]	Speed: 37650.01 samples/sec	accuracy=nan
2023-03-20 15:45:31,666 Node[0] Epoch[7] Batch [240-260]	Speed: 37644.31 samples/sec	accuracy=nan
2023-03-20 15:45:33,401 Node[0] Epoch[7] Batch [260-280]	Speed: 37610.92 samples/sec	accuracy=nan
2023-03-20 15:45:35,138 Node[0] Epoch[7] Batch [280-300]	Speed: 37598.26 samples/sec	accuracy=nan
2023-03-20 15:45:36,870 Node[0] Epoch[7] Batch [300-320]	Speed: 37680.91 samples/sec	accuracy=nan
2023-03-20 15:45:38,603 Node[0] Epoch[7] Batch [320-340]	Speed: 37678.47 samples/sec	accuracy=nan
2023-03-20 15:45:40,337 Node[0] Epoch[7] Batch [340-360]	Speed: 37648.61 samples/sec	accuracy=nan
2023-03-20 15:45:42,069 Node[0] Epoch[7] Batch [360-380]	Speed: 37668.88 samples/sec	accuracy=nan
2023-03-20 15:45:43,109 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,109 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345143109, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 15:45:43,109 Node[0] Epoch[7] Time cost=34.001
:::MLLOG {"namespace": "", "time_ms": 1679345143109, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37680.645948352125}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679345143110, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 15:45:43,110 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,110 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,110 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,110 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,110 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,111 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,111 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,111 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,111 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,112 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,112 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,112 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,112 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:43,115 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:45:44,928 Node[0] Epoch[8] Batch [0-20]	Speed: 37722.92 samples/sec	accuracy=nan
2023-03-20 15:45:46,662 Node[0] Epoch[8] Batch [20-40]	Speed: 37637.68 samples/sec	accuracy=nan
2023-03-20 15:45:48,395 Node[0] Epoch[8] Batch [40-60]	Speed: 37666.43 samples/sec	accuracy=nan
2023-03-20 15:45:50,127 Node[0] Epoch[8] Batch [60-80]	Speed: 37686.52 samples/sec	accuracy=nan
2023-03-20 15:45:51,861 Node[0] Epoch[8] Batch [80-100]	Speed: 37659.83 samples/sec	accuracy=nan
2023-03-20 15:45:53,594 Node[0] Epoch[8] Batch [100-120]	Speed: 37665.63 samples/sec	accuracy=nan
2023-03-20 15:45:55,325 Node[0] Epoch[8] Batch [120-140]	Speed: 37722.51 samples/sec	accuracy=nan
2023-03-20 15:45:57,059 Node[0] Epoch[8] Batch [140-160]	Speed: 37643.56 samples/sec	accuracy=nan
2023-03-20 15:45:58,789 Node[0] Epoch[8] Batch [160-180]	Speed: 37721.41 samples/sec	accuracy=nan
2023-03-20 15:46:00,523 Node[0] Epoch[8] Batch [180-200]	Speed: 37657.04 samples/sec	accuracy=nan
2023-03-20 15:46:02,258 Node[0] Epoch[8] Batch [200-220]	Speed: 37629.23 samples/sec	accuracy=nan
2023-03-20 15:46:03,991 Node[0] Epoch[8] Batch [220-240]	Speed: 37655.38 samples/sec	accuracy=nan
2023-03-20 15:46:05,725 Node[0] Epoch[8] Batch [240-260]	Speed: 37663.87 samples/sec	accuracy=nan
2023-03-20 15:46:07,457 Node[0] Epoch[8] Batch [260-280]	Speed: 37688.03 samples/sec	accuracy=nan
2023-03-20 15:46:09,191 Node[0] Epoch[8] Batch [280-300]	Speed: 37630.35 samples/sec	accuracy=nan
2023-03-20 15:46:10,926 Node[0] Epoch[8] Batch [300-320]	Speed: 37628.82 samples/sec	accuracy=nan
2023-03-20 15:46:12,658 Node[0] Epoch[8] Batch [320-340]	Speed: 37699.99 samples/sec	accuracy=nan
2023-03-20 15:46:14,393 Node[0] Epoch[8] Batch [340-360]	Speed: 37618.10 samples/sec	accuracy=nan
2023-03-20 15:46:16,125 Node[0] Epoch[8] Batch [360-380]	Speed: 37700.26 samples/sec	accuracy=nan
2023-03-20 15:46:17,075 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,075 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,076 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345177075, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 15:46:17,076 Node[0] Epoch[8] Time cost=33.966
2023-03-20 15:46:17,076 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345177076, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37718.86281562755}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-20 15:46:17,076 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,076 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345177076, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 15:46:17,076 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,077 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,078 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,078 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:17,078 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:18,896 Node[0] Epoch[9] Batch [0-20]	Speed: 37706.28 samples/sec	accuracy=nan
2023-03-20 15:46:20,629 Node[0] Epoch[9] Batch [20-40]	Speed: 37684.82 samples/sec	accuracy=nan
2023-03-20 15:46:22,365 Node[0] Epoch[9] Batch [40-60]	Speed: 37598.78 samples/sec	accuracy=nan
2023-03-20 15:46:24,095 Node[0] Epoch[9] Batch [60-80]	Speed: 37729.08 samples/sec	accuracy=nan
2023-03-20 15:46:25,827 Node[0] Epoch[9] Batch [80-100]	Speed: 37693.84 samples/sec	accuracy=nan
2023-03-20 15:46:27,560 Node[0] Epoch[9] Batch [100-120]	Speed: 37669.60 samples/sec	accuracy=nan
2023-03-20 15:46:29,293 Node[0] Epoch[9] Batch [120-140]	Speed: 37668.69 samples/sec	accuracy=nan
2023-03-20 15:46:31,026 Node[0] Epoch[9] Batch [140-160]	Speed: 37677.02 samples/sec	accuracy=nan
2023-03-20 15:46:32,758 Node[0] Epoch[9] Batch [160-180]	Speed: 37681.43 samples/sec	accuracy=nan
2023-03-20 15:46:34,494 Node[0] Epoch[9] Batch [180-200]	Speed: 37597.31 samples/sec	accuracy=nan
2023-03-20 15:46:36,228 Node[0] Epoch[9] Batch [200-220]	Speed: 37660.53 samples/sec	accuracy=nan
2023-03-20 15:46:37,961 Node[0] Epoch[9] Batch [220-240]	Speed: 37668.85 samples/sec	accuracy=nan
2023-03-20 15:46:39,694 Node[0] Epoch[9] Batch [240-260]	Speed: 37666.19 samples/sec	accuracy=nan
2023-03-20 15:46:41,424 Node[0] Epoch[9] Batch [260-280]	Speed: 37723.90 samples/sec	accuracy=nan
2023-03-20 15:46:43,157 Node[0] Epoch[9] Batch [280-300]	Speed: 37676.13 samples/sec	accuracy=nan
2023-03-20 15:46:44,890 Node[0] Epoch[9] Batch [300-320]	Speed: 37665.49 samples/sec	accuracy=nan
2023-03-20 15:46:46,625 Node[0] Epoch[9] Batch [320-340]	Speed: 37617.21 samples/sec	accuracy=nan
2023-03-20 15:46:48,359 Node[0] Epoch[9] Batch [340-360]	Speed: 37647.22 samples/sec	accuracy=nan
2023-03-20 15:46:50,092 Node[0] Epoch[9] Batch [360-380]	Speed: 37675.00 samples/sec	accuracy=nan
2023-03-20 15:46:51,133 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,134 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345211133, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 15:46:51,134 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,134 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,134 Node[0] Epoch[9] Time cost=34.058
2023-03-20 15:46:51,134 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345211134, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37617.63937811876}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 15:46:51,134 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345211135, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 15:46:51,134 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,135 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,136 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,136 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:51,137 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:46:52,955 Node[0] Epoch[10] Batch [0-20]	Speed: 37641.38 samples/sec	accuracy=nan
2023-03-20 15:46:54,689 Node[0] Epoch[10] Batch [20-40]	Speed: 37638.55 samples/sec	accuracy=nan
2023-03-20 15:46:56,422 Node[0] Epoch[10] Batch [40-60]	Speed: 37660.79 samples/sec	accuracy=nan
2023-03-20 15:46:58,156 Node[0] Epoch[10] Batch [60-80]	Speed: 37665.18 samples/sec	accuracy=nan
2023-03-20 15:46:59,887 Node[0] Epoch[10] Batch [80-100]	Speed: 37708.00 samples/sec	accuracy=nan
2023-03-20 15:47:01,620 Node[0] Epoch[10] Batch [100-120]	Speed: 37662.70 samples/sec	accuracy=nan
2023-03-20 15:47:03,351 Node[0] Epoch[10] Batch [120-140]	Speed: 37705.97 samples/sec	accuracy=nan
2023-03-20 15:47:05,085 Node[0] Epoch[10] Batch [140-160]	Speed: 37646.87 samples/sec	accuracy=nan
2023-03-20 15:47:06,816 Node[0] Epoch[10] Batch [160-180]	Speed: 37717.24 samples/sec	accuracy=nan
2023-03-20 15:47:08,549 Node[0] Epoch[10] Batch [180-200]	Speed: 37666.95 samples/sec	accuracy=nan
2023-03-20 15:47:10,281 Node[0] Epoch[10] Batch [200-220]	Speed: 37686.49 samples/sec	accuracy=nan
2023-03-20 15:47:12,014 Node[0] Epoch[10] Batch [220-240]	Speed: 37671.51 samples/sec	accuracy=nan
2023-03-20 15:47:13,749 Node[0] Epoch[10] Batch [240-260]	Speed: 37635.43 samples/sec	accuracy=nan
2023-03-20 15:47:15,482 Node[0] Epoch[10] Batch [260-280]	Speed: 37672.29 samples/sec	accuracy=nan
2023-03-20 15:47:17,216 Node[0] Epoch[10] Batch [280-300]	Speed: 37640.80 samples/sec	accuracy=nan
2023-03-20 15:47:18,949 Node[0] Epoch[10] Batch [300-320]	Speed: 37658.43 samples/sec	accuracy=nan
2023-03-20 15:47:20,680 Node[0] Epoch[10] Batch [320-340]	Speed: 37722.79 samples/sec	accuracy=nan
2023-03-20 15:47:22,413 Node[0] Epoch[10] Batch [340-360]	Speed: 37667.36 samples/sec	accuracy=nan
2023-03-20 15:47:24,147 Node[0] Epoch[10] Batch [360-380]	Speed: 37650.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345245098, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 15:47:25,099 Node[0] Epoch[10] Time cost=33.965
:::MLLOG {"namespace": "", "time_ms": 1679345245099, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37720.64526073068}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679345245181, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 15:47:25,976 Node[0] Epoch[10] Validation-accuracy=0.537280
2023-03-20 15:47:25,977 Node[0] Epoch[10] Validation-correct-count=1679.000000
2023-03-20 15:47:25,977 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345246033, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679345246034, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5319, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679345246034, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 15:47:26,034 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345246034, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 15:47:26,034 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345246034, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 15:47:26,034 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:26,034 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:27,775 Node[0] Epoch[11] Batch [0-20]	Speed: 37660.40 samples/sec	accuracy=nan
2023-03-20 15:47:29,506 Node[0] Epoch[11] Batch [20-40]	Speed: 37712.82 samples/sec	accuracy=nan
2023-03-20 15:47:31,239 Node[0] Epoch[11] Batch [40-60]	Speed: 37664.88 samples/sec	accuracy=nan
2023-03-20 15:47:32,973 Node[0] Epoch[11] Batch [60-80]	Speed: 37663.80 samples/sec	accuracy=nan
2023-03-20 15:47:34,705 Node[0] Epoch[11] Batch [80-100]	Speed: 37674.23 samples/sec	accuracy=nan
2023-03-20 15:47:36,439 Node[0] Epoch[11] Batch [100-120]	Speed: 37661.05 samples/sec	accuracy=nan
2023-03-20 15:47:38,172 Node[0] Epoch[11] Batch [120-140]	Speed: 37670.51 samples/sec	accuracy=nan
2023-03-20 15:47:39,905 Node[0] Epoch[11] Batch [140-160]	Speed: 37663.64 samples/sec	accuracy=nan
2023-03-20 15:47:41,635 Node[0] Epoch[11] Batch [160-180]	Speed: 37726.58 samples/sec	accuracy=nan
2023-03-20 15:47:43,366 Node[0] Epoch[11] Batch [180-200]	Speed: 37717.56 samples/sec	accuracy=nan
2023-03-20 15:47:45,098 Node[0] Epoch[11] Batch [200-220]	Speed: 37701.73 samples/sec	accuracy=nan
2023-03-20 15:47:46,830 Node[0] Epoch[11] Batch [220-240]	Speed: 37692.53 samples/sec	accuracy=nan
2023-03-20 15:47:48,562 Node[0] Epoch[11] Batch [240-260]	Speed: 37673.51 samples/sec	accuracy=nan
2023-03-20 15:47:50,294 Node[0] Epoch[11] Batch [260-280]	Speed: 37688.05 samples/sec	accuracy=nan
2023-03-20 15:47:52,028 Node[0] Epoch[11] Batch [280-300]	Speed: 37661.82 samples/sec	accuracy=nan
2023-03-20 15:47:53,761 Node[0] Epoch[11] Batch [300-320]	Speed: 37666.49 samples/sec	accuracy=nan
2023-03-20 15:47:55,491 Node[0] Epoch[11] Batch [320-340]	Speed: 37736.16 samples/sec	accuracy=nan
2023-03-20 15:47:57,224 Node[0] Epoch[11] Batch [340-360]	Speed: 37671.49 samples/sec	accuracy=nan
2023-03-20 15:47:58,956 Node[0] Epoch[11] Batch [360-380]	Speed: 37671.92 samples/sec	accuracy=nan
2023-03-20 15:47:59,995 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,995 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,995 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345279995, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 15:47:59,996 Node[0] Epoch[11] Time cost=33.962
:::MLLOG {"namespace": "", "time_ms": 1679345279996, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37723.86981736103}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 15:47:59,996 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,996 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,996 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,996 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345279996, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 15:47:59,996 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,996 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,997 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,997 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,997 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,997 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,997 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,998 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:47:59,999 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:01,814 Node[0] Epoch[12] Batch [0-20]	Speed: 37697.73 samples/sec	accuracy=nan
2023-03-20 15:48:03,549 Node[0] Epoch[12] Batch [20-40]	Speed: 37630.77 samples/sec	accuracy=nan
2023-03-20 15:48:05,282 Node[0] Epoch[12] Batch [40-60]	Speed: 37667.18 samples/sec	accuracy=nan
2023-03-20 15:48:07,011 Node[0] Epoch[12] Batch [60-80]	Speed: 37762.95 samples/sec	accuracy=nan
2023-03-20 15:48:08,742 Node[0] Epoch[12] Batch [80-100]	Speed: 37703.55 samples/sec	accuracy=nan
2023-03-20 15:48:10,472 Node[0] Epoch[12] Batch [100-120]	Speed: 37731.89 samples/sec	accuracy=nan
2023-03-20 15:48:12,206 Node[0] Epoch[12] Batch [120-140]	Speed: 37668.49 samples/sec	accuracy=nan
2023-03-20 15:48:13,938 Node[0] Epoch[12] Batch [140-160]	Speed: 37688.29 samples/sec	accuracy=nan
2023-03-20 15:48:15,670 Node[0] Epoch[12] Batch [160-180]	Speed: 37685.93 samples/sec	accuracy=nan
2023-03-20 15:48:17,405 Node[0] Epoch[12] Batch [180-200]	Speed: 37615.63 samples/sec	accuracy=nan
2023-03-20 15:48:19,134 Node[0] Epoch[12] Batch [200-220]	Speed: 37750.78 samples/sec	accuracy=nan
2023-03-20 15:48:20,868 Node[0] Epoch[12] Batch [220-240]	Speed: 37666.10 samples/sec	accuracy=nan
2023-03-20 15:48:22,599 Node[0] Epoch[12] Batch [240-260]	Speed: 37697.47 samples/sec	accuracy=nan
2023-03-20 15:48:24,333 Node[0] Epoch[12] Batch [260-280]	Speed: 37652.54 samples/sec	accuracy=nan
2023-03-20 15:48:26,065 Node[0] Epoch[12] Batch [280-300]	Speed: 37686.20 samples/sec	accuracy=nan
2023-03-20 15:48:27,796 Node[0] Epoch[12] Batch [300-320]	Speed: 37709.56 samples/sec	accuracy=nan
2023-03-20 15:48:29,528 Node[0] Epoch[12] Batch [320-340]	Speed: 37689.02 samples/sec	accuracy=nan
2023-03-20 15:48:31,262 Node[0] Epoch[12] Batch [340-360]	Speed: 37659.46 samples/sec	accuracy=nan
2023-03-20 15:48:33,001 Node[0] Epoch[12] Batch [360-380]	Speed: 37536.11 samples/sec	accuracy=nan
2023-03-20 15:48:33,954 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,955 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,955 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345313955, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 15:48:33,955 Node[0] Epoch[12] Time cost=33.959
2023-03-20 15:48:33,955 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345313956, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37726.8435605774}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 15:48:33,955 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345313956, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 15:48:33,956 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,956 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,956 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,956 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,956 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,957 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,957 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,957 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,957 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,957 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:33,958 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:48:35,777 Node[0] Epoch[13] Batch [0-20]	Speed: 37706.50 samples/sec	accuracy=nan
2023-03-20 15:48:37,508 Node[0] Epoch[13] Batch [20-40]	Speed: 37705.13 samples/sec	accuracy=nan
2023-03-20 15:48:39,239 Node[0] Epoch[13] Batch [40-60]	Speed: 37701.38 samples/sec	accuracy=nan
2023-03-20 15:48:40,971 Node[0] Epoch[13] Batch [60-80]	Speed: 37689.54 samples/sec	accuracy=nan
2023-03-20 15:48:42,703 Node[0] Epoch[13] Batch [80-100]	Speed: 37707.36 samples/sec	accuracy=nan
2023-03-20 15:48:44,434 Node[0] Epoch[13] Batch [100-120]	Speed: 37714.92 samples/sec	accuracy=nan
2023-03-20 15:48:46,166 Node[0] Epoch[13] Batch [120-140]	Speed: 37671.34 samples/sec	accuracy=nan
2023-03-20 15:48:47,898 Node[0] Epoch[13] Batch [140-160]	Speed: 37694.28 samples/sec	accuracy=nan
2023-03-20 15:48:49,630 Node[0] Epoch[13] Batch [160-180]	Speed: 37690.61 samples/sec	accuracy=nan
2023-03-20 15:48:51,365 Node[0] Epoch[13] Batch [180-200]	Speed: 37641.28 samples/sec	accuracy=nan
2023-03-20 15:48:53,096 Node[0] Epoch[13] Batch [200-220]	Speed: 37701.82 samples/sec	accuracy=nan
2023-03-20 15:48:54,828 Node[0] Epoch[13] Batch [220-240]	Speed: 37687.18 samples/sec	accuracy=nan
2023-03-20 15:48:56,560 Node[0] Epoch[13] Batch [240-260]	Speed: 37693.14 samples/sec	accuracy=nan
2023-03-20 15:48:58,292 Node[0] Epoch[13] Batch [260-280]	Speed: 37694.47 samples/sec	accuracy=nan
2023-03-20 15:49:00,023 Node[0] Epoch[13] Batch [280-300]	Speed: 37709.77 samples/sec	accuracy=nan
2023-03-20 15:49:01,758 Node[0] Epoch[13] Batch [300-320]	Speed: 37618.65 samples/sec	accuracy=nan
2023-03-20 15:49:03,492 Node[0] Epoch[13] Batch [320-340]	Speed: 37658.05 samples/sec	accuracy=nan
2023-03-20 15:49:05,226 Node[0] Epoch[13] Batch [340-360]	Speed: 37640.20 samples/sec	accuracy=nan
2023-03-20 15:49:06,960 Node[0] Epoch[13] Batch [360-380]	Speed: 37650.72 samples/sec	accuracy=nan
2023-03-20 15:49:07,998 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,998 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,998 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,998 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,999 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,999 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:07,999 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345347998, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 15:49:07,999 Node[0] Epoch[13] Time cost=34.043
2023-03-20 15:49:07,999 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345347999, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37633.492562624764}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 15:49:07,999 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,000 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345348000, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 15:49:08,000 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,000 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,000 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,000 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,001 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:08,001 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:09,818 Node[0] Epoch[14] Batch [0-20]	Speed: 37681.01 samples/sec	accuracy=nan
2023-03-20 15:49:11,552 Node[0] Epoch[14] Batch [20-40]	Speed: 37635.14 samples/sec	accuracy=nan
2023-03-20 15:49:13,286 Node[0] Epoch[14] Batch [40-60]	Speed: 37655.31 samples/sec	accuracy=nan
2023-03-20 15:49:15,019 Node[0] Epoch[14] Batch [60-80]	Speed: 37658.47 samples/sec	accuracy=nan
2023-03-20 15:49:16,750 Node[0] Epoch[14] Batch [80-100]	Speed: 37714.86 samples/sec	accuracy=nan
2023-03-20 15:49:18,483 Node[0] Epoch[14] Batch [100-120]	Speed: 37680.65 samples/sec	accuracy=nan
2023-03-20 15:49:20,213 Node[0] Epoch[14] Batch [120-140]	Speed: 37734.44 samples/sec	accuracy=nan
2023-03-20 15:49:21,947 Node[0] Epoch[14] Batch [140-160]	Speed: 37647.46 samples/sec	accuracy=nan
2023-03-20 15:49:23,680 Node[0] Epoch[14] Batch [160-180]	Speed: 37653.37 samples/sec	accuracy=nan
2023-03-20 15:49:25,414 Node[0] Epoch[14] Batch [180-200]	Speed: 37649.50 samples/sec	accuracy=nan
2023-03-20 15:49:27,148 Node[0] Epoch[14] Batch [200-220]	Speed: 37661.73 samples/sec	accuracy=nan
2023-03-20 15:49:28,880 Node[0] Epoch[14] Batch [220-240]	Speed: 37688.62 samples/sec	accuracy=nan
2023-03-20 15:49:30,610 Node[0] Epoch[14] Batch [240-260]	Speed: 37720.29 samples/sec	accuracy=nan
2023-03-20 15:49:32,341 Node[0] Epoch[14] Batch [260-280]	Speed: 37716.08 samples/sec	accuracy=nan
2023-03-20 15:49:34,074 Node[0] Epoch[14] Batch [280-300]	Speed: 37667.22 samples/sec	accuracy=nan
2023-03-20 15:49:35,805 Node[0] Epoch[14] Batch [300-320]	Speed: 37708.87 samples/sec	accuracy=nan
2023-03-20 15:49:37,538 Node[0] Epoch[14] Batch [320-340]	Speed: 37672.43 samples/sec	accuracy=nan
2023-03-20 15:49:39,273 Node[0] Epoch[14] Batch [340-360]	Speed: 37625.46 samples/sec	accuracy=nan
2023-03-20 15:49:41,008 Node[0] Epoch[14] Batch [360-380]	Speed: 37626.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345381959, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 15:49:41,961 Node[0] Epoch[14] Time cost=33.961
:::MLLOG {"namespace": "", "time_ms": 1679345381961, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37725.092576107156}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679345382042, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 15:49:42,765 Node[0] Epoch[14] Validation-accuracy=0.574400
2023-03-20 15:49:42,765 Node[0] Epoch[14] Validation-correct-count=1795.000000
2023-03-20 15:49:42,765 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345382885, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679345382885, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5881, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 15:49:42,885 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345382885, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-20 15:49:42,885 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345382885, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 15:49:42,885 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,885 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,886 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345382886, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 15:49:42,886 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:42,886 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:49:44,628 Node[0] Epoch[15] Batch [0-20]	Speed: 37636.72 samples/sec	accuracy=nan
2023-03-20 15:49:46,358 Node[0] Epoch[15] Batch [20-40]	Speed: 37728.60 samples/sec	accuracy=nan
2023-03-20 15:49:48,091 Node[0] Epoch[15] Batch [40-60]	Speed: 37682.05 samples/sec	accuracy=nan
2023-03-20 15:49:49,822 Node[0] Epoch[15] Batch [60-80]	Speed: 37700.98 samples/sec	accuracy=nan
2023-03-20 15:49:51,553 Node[0] Epoch[15] Batch [80-100]	Speed: 37707.24 samples/sec	accuracy=nan
2023-03-20 15:49:53,285 Node[0] Epoch[15] Batch [100-120]	Speed: 37685.24 samples/sec	accuracy=nan
2023-03-20 15:49:55,017 Node[0] Epoch[15] Batch [120-140]	Speed: 37701.59 samples/sec	accuracy=nan
2023-03-20 15:49:56,749 Node[0] Epoch[15] Batch [140-160]	Speed: 37694.79 samples/sec	accuracy=nan
2023-03-20 15:49:58,481 Node[0] Epoch[15] Batch [160-180]	Speed: 37677.80 samples/sec	accuracy=nan
2023-03-20 15:50:00,217 Node[0] Epoch[15] Batch [180-200]	Speed: 37619.36 samples/sec	accuracy=nan
2023-03-20 15:50:01,947 Node[0] Epoch[15] Batch [200-220]	Speed: 37731.38 samples/sec	accuracy=nan
2023-03-20 15:50:03,683 Node[0] Epoch[15] Batch [220-240]	Speed: 37594.54 samples/sec	accuracy=nan
2023-03-20 15:50:05,414 Node[0] Epoch[15] Batch [240-260]	Speed: 37714.19 samples/sec	accuracy=nan
2023-03-20 15:50:07,145 Node[0] Epoch[15] Batch [260-280]	Speed: 37705.70 samples/sec	accuracy=nan
2023-03-20 15:50:08,877 Node[0] Epoch[15] Batch [280-300]	Speed: 37697.65 samples/sec	accuracy=nan
2023-03-20 15:50:10,609 Node[0] Epoch[15] Batch [300-320]	Speed: 37681.09 samples/sec	accuracy=nan
2023-03-20 15:50:12,342 Node[0] Epoch[15] Batch [320-340]	Speed: 37690.72 samples/sec	accuracy=nan
2023-03-20 15:50:14,091 Node[0] Epoch[15] Batch [340-360]	Speed: 37319.77 samples/sec	accuracy=nan
2023-03-20 15:50:15,822 Node[0] Epoch[15] Batch [360-380]	Speed: 37708.94 samples/sec	accuracy=nan
2023-03-20 15:50:16,861 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,861 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,861 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345416861, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 15:50:16,861 Node[0] Epoch[15] Time cost=33.975
:::MLLOG {"namespace": "", "time_ms": 1679345416861, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37708.633959881736}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-20 15:50:16,861 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345416862, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 15:50:16,862 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,862 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,862 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,862 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,862 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,863 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:16,864 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:18,681 Node[0] Epoch[16] Batch [0-20]	Speed: 37671.03 samples/sec	accuracy=nan
2023-03-20 15:50:20,412 Node[0] Epoch[16] Batch [20-40]	Speed: 37709.27 samples/sec	accuracy=nan
2023-03-20 15:50:22,143 Node[0] Epoch[16] Batch [40-60]	Speed: 37712.58 samples/sec	accuracy=nan
2023-03-20 15:50:23,875 Node[0] Epoch[16] Batch [60-80]	Speed: 37694.25 samples/sec	accuracy=nan
2023-03-20 15:50:25,604 Node[0] Epoch[16] Batch [80-100]	Speed: 37755.12 samples/sec	accuracy=nan
2023-03-20 15:50:27,336 Node[0] Epoch[16] Batch [100-120]	Speed: 37686.50 samples/sec	accuracy=nan
2023-03-20 15:50:29,067 Node[0] Epoch[16] Batch [120-140]	Speed: 37699.46 samples/sec	accuracy=nan
2023-03-20 15:50:30,803 Node[0] Epoch[16] Batch [140-160]	Speed: 37621.83 samples/sec	accuracy=nan
2023-03-20 15:50:32,537 Node[0] Epoch[16] Batch [160-180]	Speed: 37627.14 samples/sec	accuracy=nan
2023-03-20 15:50:34,270 Node[0] Epoch[16] Batch [180-200]	Speed: 37674.01 samples/sec	accuracy=nan
2023-03-20 15:50:36,003 Node[0] Epoch[16] Batch [200-220]	Speed: 37683.16 samples/sec	accuracy=nan
2023-03-20 15:50:37,735 Node[0] Epoch[16] Batch [220-240]	Speed: 37676.41 samples/sec	accuracy=nan
2023-03-20 15:50:39,467 Node[0] Epoch[16] Batch [240-260]	Speed: 37697.89 samples/sec	accuracy=nan
2023-03-20 15:50:41,198 Node[0] Epoch[16] Batch [260-280]	Speed: 37715.14 samples/sec	accuracy=nan
2023-03-20 15:50:42,926 Node[0] Epoch[16] Batch [280-300]	Speed: 37764.16 samples/sec	accuracy=nan
2023-03-20 15:50:44,660 Node[0] Epoch[16] Batch [300-320]	Speed: 37662.73 samples/sec	accuracy=nan
2023-03-20 15:50:46,392 Node[0] Epoch[16] Batch [320-340]	Speed: 37688.51 samples/sec	accuracy=nan
2023-03-20 15:50:48,127 Node[0] Epoch[16] Batch [340-360]	Speed: 37621.06 samples/sec	accuracy=nan
2023-03-20 15:50:49,857 Node[0] Epoch[16] Batch [360-380]	Speed: 37731.56 samples/sec	accuracy=nan
2023-03-20 15:50:50,807 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,807 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,808 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,808 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,808 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,808 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345450807, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 15:50:50,809 Node[0] Epoch[16] Time cost=33.947
2023-03-20 15:50:50,809 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345450809, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37740.26990768656}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-20 15:50:50,809 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,809 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345450809, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 15:50:50,809 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,809 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,809 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,809 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,810 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,811 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:50,811 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:50:52,627 Node[0] Epoch[17] Batch [0-20]	Speed: 37746.59 samples/sec	accuracy=nan
2023-03-20 15:50:54,356 Node[0] Epoch[17] Batch [20-40]	Speed: 37741.23 samples/sec	accuracy=nan
2023-03-20 15:50:56,089 Node[0] Epoch[17] Batch [40-60]	Speed: 37676.40 samples/sec	accuracy=nan
2023-03-20 15:50:57,821 Node[0] Epoch[17] Batch [60-80]	Speed: 37681.32 samples/sec	accuracy=nan
2023-03-20 15:50:59,555 Node[0] Epoch[17] Batch [80-100]	Speed: 37664.71 samples/sec	accuracy=nan
2023-03-20 15:51:01,284 Node[0] Epoch[17] Batch [100-120]	Speed: 37742.73 samples/sec	accuracy=nan
2023-03-20 15:51:03,020 Node[0] Epoch[17] Batch [120-140]	Speed: 37618.70 samples/sec	accuracy=nan
2023-03-20 15:51:04,752 Node[0] Epoch[17] Batch [140-160]	Speed: 37685.54 samples/sec	accuracy=nan
2023-03-20 15:51:06,484 Node[0] Epoch[17] Batch [160-180]	Speed: 37694.84 samples/sec	accuracy=nan
2023-03-20 15:51:08,213 Node[0] Epoch[17] Batch [180-200]	Speed: 37743.85 samples/sec	accuracy=nan
2023-03-20 15:51:09,943 Node[0] Epoch[17] Batch [200-220]	Speed: 37745.93 samples/sec	accuracy=nan
2023-03-20 15:51:11,676 Node[0] Epoch[17] Batch [220-240]	Speed: 37668.04 samples/sec	accuracy=nan
2023-03-20 15:51:13,407 Node[0] Epoch[17] Batch [240-260]	Speed: 37703.09 samples/sec	accuracy=nan
2023-03-20 15:51:15,138 Node[0] Epoch[17] Batch [260-280]	Speed: 37700.09 samples/sec	accuracy=nan
2023-03-20 15:51:16,870 Node[0] Epoch[17] Batch [280-300]	Speed: 37714.16 samples/sec	accuracy=nan
2023-03-20 15:51:18,599 Node[0] Epoch[17] Batch [300-320]	Speed: 37739.76 samples/sec	accuracy=nan
2023-03-20 15:51:20,335 Node[0] Epoch[17] Batch [320-340]	Speed: 37605.26 samples/sec	accuracy=nan
2023-03-20 15:51:22,073 Node[0] Epoch[17] Batch [340-360]	Speed: 37567.68 samples/sec	accuracy=nan
2023-03-20 15:51:23,806 Node[0] Epoch[17] Batch [360-380]	Speed: 37667.90 samples/sec	accuracy=nan
2023-03-20 15:51:24,844 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,844 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,844 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345484844, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 15:51:24,845 Node[0] Epoch[17] Time cost=34.035
:::MLLOG {"namespace": "", "time_ms": 1679345484845, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37642.45291686699}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-20 15:51:24,845 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345484845, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 15:51:24,845 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,845 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,845 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,845 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,845 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,846 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,846 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,846 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,846 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,847 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,847 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:24,847 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:26,663 Node[0] Epoch[18] Batch [0-20]	Speed: 37690.32 samples/sec	accuracy=nan
2023-03-20 15:51:28,394 Node[0] Epoch[18] Batch [20-40]	Speed: 37697.76 samples/sec	accuracy=nan
2023-03-20 15:51:30,129 Node[0] Epoch[18] Batch [40-60]	Speed: 37636.06 samples/sec	accuracy=nan
2023-03-20 15:51:31,859 Node[0] Epoch[18] Batch [60-80]	Speed: 37725.80 samples/sec	accuracy=nan
2023-03-20 15:51:33,595 Node[0] Epoch[18] Batch [80-100]	Speed: 37619.84 samples/sec	accuracy=nan
2023-03-20 15:51:35,323 Node[0] Epoch[18] Batch [100-120]	Speed: 37757.44 samples/sec	accuracy=nan
2023-03-20 15:51:37,056 Node[0] Epoch[18] Batch [120-140]	Speed: 37670.32 samples/sec	accuracy=nan
2023-03-20 15:51:38,788 Node[0] Epoch[18] Batch [140-160]	Speed: 37704.83 samples/sec	accuracy=nan
2023-03-20 15:51:40,518 Node[0] Epoch[18] Batch [160-180]	Speed: 37725.08 samples/sec	accuracy=nan
2023-03-20 15:51:42,248 Node[0] Epoch[18] Batch [180-200]	Speed: 37737.99 samples/sec	accuracy=nan
2023-03-20 15:51:43,981 Node[0] Epoch[18] Batch [200-220]	Speed: 37675.62 samples/sec	accuracy=nan
2023-03-20 15:51:45,715 Node[0] Epoch[18] Batch [220-240]	Speed: 37631.57 samples/sec	accuracy=nan
2023-03-20 15:51:47,445 Node[0] Epoch[18] Batch [240-260]	Speed: 37736.52 samples/sec	accuracy=nan
2023-03-20 15:51:49,177 Node[0] Epoch[18] Batch [260-280]	Speed: 37694.82 samples/sec	accuracy=nan
2023-03-20 15:51:50,908 Node[0] Epoch[18] Batch [280-300]	Speed: 37718.99 samples/sec	accuracy=nan
2023-03-20 15:51:52,640 Node[0] Epoch[18] Batch [300-320]	Speed: 37693.84 samples/sec	accuracy=nan
2023-03-20 15:51:54,371 Node[0] Epoch[18] Batch [320-340]	Speed: 37698.31 samples/sec	accuracy=nan
2023-03-20 15:51:56,101 Node[0] Epoch[18] Batch [340-360]	Speed: 37739.27 samples/sec	accuracy=nan
2023-03-20 15:51:57,834 Node[0] Epoch[18] Batch [360-380]	Speed: 37659.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345518784, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 15:51:58,785 Node[0] Epoch[18] Time cost=33.940
:::MLLOG {"namespace": "", "time_ms": 1679345518785, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37747.915789613886}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679345518867, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 15:51:59,609 Node[0] Epoch[18] Validation-accuracy=0.649280
2023-03-20 15:51:59,609 Node[0] Epoch[18] Validation-correct-count=2029.000000
2023-03-20 15:51:59,609 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345519737, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-20 15:51:59,737 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345519737, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65382, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 15:51:59,737 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345519737, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679345519737, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 15:51:59,737 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:51:59,737 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345519738, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 15:51:59,738 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:01,478 Node[0] Epoch[19] Batch [0-20]	Speed: 37702.10 samples/sec	accuracy=nan
2023-03-20 15:52:03,214 Node[0] Epoch[19] Batch [20-40]	Speed: 37604.34 samples/sec	accuracy=nan
2023-03-20 15:52:04,948 Node[0] Epoch[19] Batch [40-60]	Speed: 37648.99 samples/sec	accuracy=nan
2023-03-20 15:52:06,677 Node[0] Epoch[19] Batch [60-80]	Speed: 37752.48 samples/sec	accuracy=nan
2023-03-20 15:52:08,408 Node[0] Epoch[19] Batch [80-100]	Speed: 37711.40 samples/sec	accuracy=nan
2023-03-20 15:52:10,140 Node[0] Epoch[19] Batch [100-120]	Speed: 37689.75 samples/sec	accuracy=nan
2023-03-20 15:52:11,873 Node[0] Epoch[19] Batch [120-140]	Speed: 37680.73 samples/sec	accuracy=nan
2023-03-20 15:52:13,606 Node[0] Epoch[19] Batch [140-160]	Speed: 37671.79 samples/sec	accuracy=nan
2023-03-20 15:52:15,338 Node[0] Epoch[19] Batch [160-180]	Speed: 37684.63 samples/sec	accuracy=nan
2023-03-20 15:52:17,070 Node[0] Epoch[19] Batch [180-200]	Speed: 37683.05 samples/sec	accuracy=nan
2023-03-20 15:52:18,802 Node[0] Epoch[19] Batch [200-220]	Speed: 37698.97 samples/sec	accuracy=nan
2023-03-20 15:52:20,534 Node[0] Epoch[19] Batch [220-240]	Speed: 37679.43 samples/sec	accuracy=nan
2023-03-20 15:52:22,270 Node[0] Epoch[19] Batch [240-260]	Speed: 37605.48 samples/sec	accuracy=nan
2023-03-20 15:52:24,002 Node[0] Epoch[19] Batch [260-280]	Speed: 37697.86 samples/sec	accuracy=nan
2023-03-20 15:52:25,735 Node[0] Epoch[19] Batch [280-300]	Speed: 37671.26 samples/sec	accuracy=nan
2023-03-20 15:52:27,467 Node[0] Epoch[19] Batch [300-320]	Speed: 37677.10 samples/sec	accuracy=nan
2023-03-20 15:52:29,200 Node[0] Epoch[19] Batch [320-340]	Speed: 37682.75 samples/sec	accuracy=nan
2023-03-20 15:52:30,932 Node[0] Epoch[19] Batch [340-360]	Speed: 37697.32 samples/sec	accuracy=nan
2023-03-20 15:52:32,666 Node[0] Epoch[19] Batch [360-380]	Speed: 37646.08 samples/sec	accuracy=nan
2023-03-20 15:52:33,704 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,704 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,704 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,704 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345553704, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 15:52:33,705 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,705 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,705 Node[0] Epoch[19] Time cost=33.967
:::MLLOG {"namespace": "", "time_ms": 1679345553705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37717.90176317236}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-20 15:52:33,705 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,705 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345553706, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 15:52:33,706 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,706 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,706 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,706 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,706 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,706 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,707 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:33,707 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:52:35,525 Node[0] Epoch[20] Batch [0-20]	Speed: 37648.60 samples/sec	accuracy=nan
2023-03-20 15:52:37,256 Node[0] Epoch[20] Batch [20-40]	Speed: 37706.97 samples/sec	accuracy=nan
2023-03-20 15:52:38,991 Node[0] Epoch[20] Batch [40-60]	Speed: 37614.31 samples/sec	accuracy=nan
2023-03-20 15:52:40,722 Node[0] Epoch[20] Batch [60-80]	Speed: 37726.54 samples/sec	accuracy=nan
2023-03-20 15:52:42,454 Node[0] Epoch[20] Batch [80-100]	Speed: 37688.95 samples/sec	accuracy=nan
2023-03-20 15:52:44,185 Node[0] Epoch[20] Batch [100-120]	Speed: 37716.61 samples/sec	accuracy=nan
2023-03-20 15:52:45,920 Node[0] Epoch[20] Batch [120-140]	Speed: 37619.94 samples/sec	accuracy=nan
2023-03-20 15:52:47,656 Node[0] Epoch[20] Batch [140-160]	Speed: 37599.60 samples/sec	accuracy=nan
2023-03-20 15:52:49,390 Node[0] Epoch[20] Batch [160-180]	Speed: 37655.90 samples/sec	accuracy=nan
2023-03-20 15:52:51,122 Node[0] Epoch[20] Batch [180-200]	Speed: 37681.21 samples/sec	accuracy=nan
2023-03-20 15:52:52,855 Node[0] Epoch[20] Batch [200-220]	Speed: 37670.84 samples/sec	accuracy=nan
2023-03-20 15:52:54,588 Node[0] Epoch[20] Batch [220-240]	Speed: 37667.95 samples/sec	accuracy=nan
2023-03-20 15:52:56,322 Node[0] Epoch[20] Batch [240-260]	Speed: 37648.40 samples/sec	accuracy=nan
2023-03-20 15:52:58,055 Node[0] Epoch[20] Batch [260-280]	Speed: 37662.59 samples/sec	accuracy=nan
2023-03-20 15:52:59,787 Node[0] Epoch[20] Batch [280-300]	Speed: 37698.64 samples/sec	accuracy=nan
2023-03-20 15:53:01,519 Node[0] Epoch[20] Batch [300-320]	Speed: 37686.39 samples/sec	accuracy=nan
2023-03-20 15:53:03,258 Node[0] Epoch[20] Batch [320-340]	Speed: 37548.93 samples/sec	accuracy=nan
2023-03-20 15:53:04,989 Node[0] Epoch[20] Batch [340-360]	Speed: 37697.60 samples/sec	accuracy=nan
2023-03-20 15:53:06,724 Node[0] Epoch[20] Batch [360-380]	Speed: 37632.06 samples/sec	accuracy=nan
2023-03-20 15:53:07,675 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,675 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,676 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,676 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,676 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,676 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,677 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,677 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345587676, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 15:53:07,677 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,677 Node[0] Epoch[20] Time cost=33.972
:::MLLOG {"namespace": "", "time_ms": 1679345587677, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37712.96436724684}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 15:53:07,677 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,677 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345587678, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 15:53:07,678 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,678 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,678 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,678 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:07,679 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:09,497 Node[0] Epoch[21] Batch [0-20]	Speed: 37706.24 samples/sec	accuracy=nan
2023-03-20 15:53:11,231 Node[0] Epoch[21] Batch [20-40]	Speed: 37644.06 samples/sec	accuracy=nan
2023-03-20 15:53:12,964 Node[0] Epoch[21] Batch [40-60]	Speed: 37672.56 samples/sec	accuracy=nan
2023-03-20 15:53:14,696 Node[0] Epoch[21] Batch [60-80]	Speed: 37685.54 samples/sec	accuracy=nan
2023-03-20 15:53:16,428 Node[0] Epoch[21] Batch [80-100]	Speed: 37693.04 samples/sec	accuracy=nan
2023-03-20 15:53:18,167 Node[0] Epoch[21] Batch [100-120]	Speed: 37535.11 samples/sec	accuracy=nan
2023-03-20 15:53:19,898 Node[0] Epoch[21] Batch [120-140]	Speed: 37700.72 samples/sec	accuracy=nan
2023-03-20 15:53:21,632 Node[0] Epoch[21] Batch [140-160]	Speed: 37649.75 samples/sec	accuracy=nan
2023-03-20 15:53:23,368 Node[0] Epoch[21] Batch [160-180]	Speed: 37620.74 samples/sec	accuracy=nan
2023-03-20 15:53:25,101 Node[0] Epoch[21] Batch [180-200]	Speed: 37666.58 samples/sec	accuracy=nan
2023-03-20 15:53:26,839 Node[0] Epoch[21] Batch [200-220]	Speed: 37555.90 samples/sec	accuracy=nan
2023-03-20 15:53:28,571 Node[0] Epoch[21] Batch [220-240]	Speed: 37684.54 samples/sec	accuracy=nan
2023-03-20 15:53:30,303 Node[0] Epoch[21] Batch [240-260]	Speed: 37697.04 samples/sec	accuracy=nan
2023-03-20 15:53:32,038 Node[0] Epoch[21] Batch [260-280]	Speed: 37628.76 samples/sec	accuracy=nan
2023-03-20 15:53:33,773 Node[0] Epoch[21] Batch [280-300]	Speed: 37613.50 samples/sec	accuracy=nan
2023-03-20 15:53:35,505 Node[0] Epoch[21] Batch [300-320]	Speed: 37688.92 samples/sec	accuracy=nan
2023-03-20 15:53:37,241 Node[0] Epoch[21] Batch [320-340]	Speed: 37611.81 samples/sec	accuracy=nan
2023-03-20 15:53:38,973 Node[0] Epoch[21] Batch [340-360]	Speed: 37686.50 samples/sec	accuracy=nan
2023-03-20 15:53:40,708 Node[0] Epoch[21] Batch [360-380]	Speed: 37619.56 samples/sec	accuracy=nan
2023-03-20 15:53:41,746 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345621746, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 15:53:41,746 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,746 Node[0] Epoch[21] Time cost=34.068
:::MLLOG {"namespace": "", "time_ms": 1679345621746, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37605.89122124498}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-20 15:53:41,746 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345621747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 15:53:41,746 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,747 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,748 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,748 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,748 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,748 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,748 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:41,749 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:53:43,568 Node[0] Epoch[22] Batch [0-20]	Speed: 37638.24 samples/sec	accuracy=nan
2023-03-20 15:53:45,300 Node[0] Epoch[22] Batch [20-40]	Speed: 37694.94 samples/sec	accuracy=nan
2023-03-20 15:53:47,033 Node[0] Epoch[22] Batch [40-60]	Speed: 37671.04 samples/sec	accuracy=nan
2023-03-20 15:53:48,764 Node[0] Epoch[22] Batch [60-80]	Speed: 37702.61 samples/sec	accuracy=nan
2023-03-20 15:53:50,498 Node[0] Epoch[22] Batch [80-100]	Speed: 37641.24 samples/sec	accuracy=nan
2023-03-20 15:53:52,232 Node[0] Epoch[22] Batch [100-120]	Speed: 37653.30 samples/sec	accuracy=nan
2023-03-20 15:53:53,966 Node[0] Epoch[22] Batch [120-140]	Speed: 37644.47 samples/sec	accuracy=nan
2023-03-20 15:53:55,701 Node[0] Epoch[22] Batch [140-160]	Speed: 37642.99 samples/sec	accuracy=nan
2023-03-20 15:53:57,435 Node[0] Epoch[22] Batch [160-180]	Speed: 37624.52 samples/sec	accuracy=nan
2023-03-20 15:53:59,168 Node[0] Epoch[22] Batch [180-200]	Speed: 37672.63 samples/sec	accuracy=nan
2023-03-20 15:54:00,905 Node[0] Epoch[22] Batch [200-220]	Speed: 37580.33 samples/sec	accuracy=nan
2023-03-20 15:54:02,642 Node[0] Epoch[22] Batch [220-240]	Speed: 37580.34 samples/sec	accuracy=nan
2023-03-20 15:54:04,375 Node[0] Epoch[22] Batch [240-260]	Speed: 37688.54 samples/sec	accuracy=nan
2023-03-20 15:54:06,107 Node[0] Epoch[22] Batch [260-280]	Speed: 37673.59 samples/sec	accuracy=nan
2023-03-20 15:54:07,839 Node[0] Epoch[22] Batch [280-300]	Speed: 37699.26 samples/sec	accuracy=nan
2023-03-20 15:54:09,574 Node[0] Epoch[22] Batch [300-320]	Speed: 37616.94 samples/sec	accuracy=nan
2023-03-20 15:54:11,308 Node[0] Epoch[22] Batch [320-340]	Speed: 37661.25 samples/sec	accuracy=nan
2023-03-20 15:54:13,040 Node[0] Epoch[22] Batch [340-360]	Speed: 37675.67 samples/sec	accuracy=nan
2023-03-20 15:54:14,773 Node[0] Epoch[22] Batch [360-380]	Speed: 37689.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345655723, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 15:54:15,724 Node[0] Epoch[22] Time cost=33.978
:::MLLOG {"namespace": "", "time_ms": 1679345655725, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37706.0821767458}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679345655806, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 15:54:16,577 Node[0] Epoch[22] Validation-accuracy=0.686400
2023-03-20 15:54:16,577 Node[0] Epoch[22] Validation-correct-count=2145.000000
2023-03-20 15:54:16,577 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345656654, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679345656655, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68938, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-20 15:54:16,655 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345656655, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 15:54:16,655 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345656655, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 15:54:16,655 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:16,655 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345656655, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 15:54:16,655 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:18,400 Node[0] Epoch[23] Batch [0-20]	Speed: 37614.46 samples/sec	accuracy=nan
2023-03-20 15:54:20,132 Node[0] Epoch[23] Batch [20-40]	Speed: 37695.63 samples/sec	accuracy=nan
2023-03-20 15:54:21,866 Node[0] Epoch[23] Batch [40-60]	Speed: 37646.73 samples/sec	accuracy=nan
2023-03-20 15:54:23,597 Node[0] Epoch[23] Batch [60-80]	Speed: 37712.50 samples/sec	accuracy=nan
2023-03-20 15:54:25,331 Node[0] Epoch[23] Batch [80-100]	Speed: 37644.62 samples/sec	accuracy=nan
2023-03-20 15:54:27,063 Node[0] Epoch[23] Batch [100-120]	Speed: 37687.84 samples/sec	accuracy=nan
2023-03-20 15:54:28,794 Node[0] Epoch[23] Batch [120-140]	Speed: 37707.84 samples/sec	accuracy=nan
2023-03-20 15:54:30,528 Node[0] Epoch[23] Batch [140-160]	Speed: 37650.66 samples/sec	accuracy=nan
2023-03-20 15:54:32,260 Node[0] Epoch[23] Batch [160-180]	Speed: 37689.48 samples/sec	accuracy=nan
2023-03-20 15:54:33,994 Node[0] Epoch[23] Batch [180-200]	Speed: 37649.77 samples/sec	accuracy=nan
2023-03-20 15:54:35,728 Node[0] Epoch[23] Batch [200-220]	Speed: 37644.05 samples/sec	accuracy=nan
2023-03-20 15:54:37,462 Node[0] Epoch[23] Batch [220-240]	Speed: 37656.87 samples/sec	accuracy=nan
2023-03-20 15:54:39,195 Node[0] Epoch[23] Batch [240-260]	Speed: 37657.33 samples/sec	accuracy=nan
2023-03-20 15:54:40,929 Node[0] Epoch[23] Batch [260-280]	Speed: 37658.88 samples/sec	accuracy=nan
2023-03-20 15:54:42,662 Node[0] Epoch[23] Batch [280-300]	Speed: 37667.00 samples/sec	accuracy=nan
2023-03-20 15:54:44,394 Node[0] Epoch[23] Batch [300-320]	Speed: 37697.73 samples/sec	accuracy=nan
2023-03-20 15:54:46,126 Node[0] Epoch[23] Batch [320-340]	Speed: 37685.55 samples/sec	accuracy=nan
2023-03-20 15:54:47,859 Node[0] Epoch[23] Batch [340-360]	Speed: 37661.18 samples/sec	accuracy=nan
2023-03-20 15:54:49,595 Node[0] Epoch[23] Batch [360-380]	Speed: 37620.02 samples/sec	accuracy=nan
2023-03-20 15:54:50,633 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,633 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,633 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345690633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 15:54:50,633 Node[0] Epoch[23] Time cost=33.978
:::MLLOG {"namespace": "", "time_ms": 1679345690634, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37705.66996546133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-20 15:54:50,633 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345690634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 15:54:50,634 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,634 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,634 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,634 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,634 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,635 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,635 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,635 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,635 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,635 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,636 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:50,636 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:54:52,452 Node[0] Epoch[24] Batch [0-20]	Speed: 37699.40 samples/sec	accuracy=nan
2023-03-20 15:54:54,187 Node[0] Epoch[24] Batch [20-40]	Speed: 37628.01 samples/sec	accuracy=nan
2023-03-20 15:54:55,924 Node[0] Epoch[24] Batch [40-60]	Speed: 37583.04 samples/sec	accuracy=nan
2023-03-20 15:54:57,660 Node[0] Epoch[24] Batch [60-80]	Speed: 37607.20 samples/sec	accuracy=nan
2023-03-20 15:54:59,393 Node[0] Epoch[24] Batch [80-100]	Speed: 37659.45 samples/sec	accuracy=nan
2023-03-20 15:55:01,130 Node[0] Epoch[24] Batch [100-120]	Speed: 37588.84 samples/sec	accuracy=nan
2023-03-20 15:55:02,866 Node[0] Epoch[24] Batch [120-140]	Speed: 37598.72 samples/sec	accuracy=nan
2023-03-20 15:55:04,599 Node[0] Epoch[24] Batch [140-160]	Speed: 37677.50 samples/sec	accuracy=nan
2023-03-20 15:55:06,327 Node[0] Epoch[24] Batch [160-180]	Speed: 37777.86 samples/sec	accuracy=nan
2023-03-20 15:55:08,061 Node[0] Epoch[24] Batch [180-200]	Speed: 37640.32 samples/sec	accuracy=nan
2023-03-20 15:55:09,795 Node[0] Epoch[24] Batch [200-220]	Speed: 37653.07 samples/sec	accuracy=nan
2023-03-20 15:55:11,529 Node[0] Epoch[24] Batch [220-240]	Speed: 37643.38 samples/sec	accuracy=nan
2023-03-20 15:55:13,261 Node[0] Epoch[24] Batch [240-260]	Speed: 37684.01 samples/sec	accuracy=nan
2023-03-20 15:55:14,993 Node[0] Epoch[24] Batch [260-280]	Speed: 37685.57 samples/sec	accuracy=nan
2023-03-20 15:55:16,726 Node[0] Epoch[24] Batch [280-300]	Speed: 37686.75 samples/sec	accuracy=nan
2023-03-20 15:55:18,460 Node[0] Epoch[24] Batch [300-320]	Speed: 37635.60 samples/sec	accuracy=nan
2023-03-20 15:55:20,191 Node[0] Epoch[24] Batch [320-340]	Speed: 37721.65 samples/sec	accuracy=nan
2023-03-20 15:55:21,923 Node[0] Epoch[24] Batch [340-360]	Speed: 37691.28 samples/sec	accuracy=nan
2023-03-20 15:55:23,658 Node[0] Epoch[24] Batch [360-380]	Speed: 37622.20 samples/sec	accuracy=nan
2023-03-20 15:55:24,612 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,613 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,613 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,613 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,613 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,613 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,614 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,614 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,614 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,614 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,614 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,615 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345724614, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 15:55:24,615 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,615 Node[0] Epoch[24] Time cost=33.981
:::MLLOG {"namespace": "", "time_ms": 1679345724615, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37702.49348931885}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-20 15:55:24,615 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345724615, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 15:55:24,616 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:24,616 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:26,433 Node[0] Epoch[25] Batch [0-20]	Speed: 37735.76 samples/sec	accuracy=nan
2023-03-20 15:55:28,169 Node[0] Epoch[25] Batch [20-40]	Speed: 37596.50 samples/sec	accuracy=nan
2023-03-20 15:55:29,904 Node[0] Epoch[25] Batch [40-60]	Speed: 37631.13 samples/sec	accuracy=nan
2023-03-20 15:55:31,637 Node[0] Epoch[25] Batch [60-80]	Speed: 37669.84 samples/sec	accuracy=nan
2023-03-20 15:55:33,370 Node[0] Epoch[25] Batch [80-100]	Speed: 37667.83 samples/sec	accuracy=nan
2023-03-20 15:55:35,103 Node[0] Epoch[25] Batch [100-120]	Speed: 37667.08 samples/sec	accuracy=nan
2023-03-20 15:55:36,837 Node[0] Epoch[25] Batch [120-140]	Speed: 37641.33 samples/sec	accuracy=nan
2023-03-20 15:55:38,567 Node[0] Epoch[25] Batch [140-160]	Speed: 37743.28 samples/sec	accuracy=nan
2023-03-20 15:55:40,300 Node[0] Epoch[25] Batch [160-180]	Speed: 37671.77 samples/sec	accuracy=nan
2023-03-20 15:55:42,030 Node[0] Epoch[25] Batch [180-200]	Speed: 37715.72 samples/sec	accuracy=nan
2023-03-20 15:55:43,767 Node[0] Epoch[25] Batch [200-220]	Speed: 37592.49 samples/sec	accuracy=nan
2023-03-20 15:55:45,501 Node[0] Epoch[25] Batch [220-240]	Speed: 37638.71 samples/sec	accuracy=nan
2023-03-20 15:55:47,235 Node[0] Epoch[25] Batch [240-260]	Speed: 37639.17 samples/sec	accuracy=nan
2023-03-20 15:55:48,968 Node[0] Epoch[25] Batch [260-280]	Speed: 37684.51 samples/sec	accuracy=nan
2023-03-20 15:55:50,703 Node[0] Epoch[25] Batch [280-300]	Speed: 37623.47 samples/sec	accuracy=nan
2023-03-20 15:55:52,434 Node[0] Epoch[25] Batch [300-320]	Speed: 37714.76 samples/sec	accuracy=nan
2023-03-20 15:55:54,167 Node[0] Epoch[25] Batch [320-340]	Speed: 37671.14 samples/sec	accuracy=nan
2023-03-20 15:55:55,901 Node[0] Epoch[25] Batch [340-360]	Speed: 37650.39 samples/sec	accuracy=nan
2023-03-20 15:55:57,635 Node[0] Epoch[25] Batch [360-380]	Speed: 37628.17 samples/sec	accuracy=nan
2023-03-20 15:55:58,672 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,673 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345758672, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 15:55:58,673 Node[0] Epoch[25] Time cost=34.057
2023-03-20 15:55:58,673 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345758673, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37618.07705489368}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-20 15:55:58,673 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345758673, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 15:55:58,673 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,673 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,673 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,674 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,674 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,674 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,674 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,674 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,675 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,675 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,675 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:55:58,676 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:00,491 Node[0] Epoch[26] Batch [0-20]	Speed: 37697.83 samples/sec	accuracy=nan
2023-03-20 15:56:02,225 Node[0] Epoch[26] Batch [20-40]	Speed: 37642.40 samples/sec	accuracy=nan
2023-03-20 15:56:03,960 Node[0] Epoch[26] Batch [40-60]	Speed: 37628.53 samples/sec	accuracy=nan
2023-03-20 15:56:05,692 Node[0] Epoch[26] Batch [60-80]	Speed: 37685.55 samples/sec	accuracy=nan
2023-03-20 15:56:07,434 Node[0] Epoch[26] Batch [80-100]	Speed: 37483.05 samples/sec	accuracy=nan
2023-03-20 15:56:09,165 Node[0] Epoch[26] Batch [100-120]	Speed: 37714.33 samples/sec	accuracy=nan
2023-03-20 15:56:10,897 Node[0] Epoch[26] Batch [120-140]	Speed: 37677.33 samples/sec	accuracy=nan
2023-03-20 15:56:12,630 Node[0] Epoch[26] Batch [140-160]	Speed: 37683.10 samples/sec	accuracy=nan
2023-03-20 15:56:14,365 Node[0] Epoch[26] Batch [160-180]	Speed: 37614.16 samples/sec	accuracy=nan
2023-03-20 15:56:16,099 Node[0] Epoch[26] Batch [180-200]	Speed: 37662.98 samples/sec	accuracy=nan
2023-03-20 15:56:17,832 Node[0] Epoch[26] Batch [200-220]	Speed: 37654.71 samples/sec	accuracy=nan
2023-03-20 15:56:19,565 Node[0] Epoch[26] Batch [220-240]	Speed: 37674.77 samples/sec	accuracy=nan
2023-03-20 15:56:21,299 Node[0] Epoch[26] Batch [240-260]	Speed: 37638.22 samples/sec	accuracy=nan
2023-03-20 15:56:23,030 Node[0] Epoch[26] Batch [260-280]	Speed: 37712.46 samples/sec	accuracy=nan
2023-03-20 15:56:24,766 Node[0] Epoch[26] Batch [280-300]	Speed: 37620.70 samples/sec	accuracy=nan
2023-03-20 15:56:26,498 Node[0] Epoch[26] Batch [300-320]	Speed: 37680.37 samples/sec	accuracy=nan
2023-03-20 15:56:28,235 Node[0] Epoch[26] Batch [320-340]	Speed: 37575.18 samples/sec	accuracy=nan
2023-03-20 15:56:29,969 Node[0] Epoch[26] Batch [340-360]	Speed: 37649.76 samples/sec	accuracy=nan
2023-03-20 15:56:31,706 Node[0] Epoch[26] Batch [360-380]	Speed: 37584.52 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345792659, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 15:56:32,661 Node[0] Epoch[26] Time cost=33.987
:::MLLOG {"namespace": "", "time_ms": 1679345792661, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37695.54927581505}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679345792742, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 15:56:33,466 Node[0] Epoch[26] Validation-accuracy=0.725120
2023-03-20 15:56:33,466 Node[0] Epoch[26] Validation-correct-count=2266.000000
2023-03-20 15:56:33,466 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345793581, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679345793581, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72736, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-20 15:56:33,581 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345793581, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 15:56:33,581 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345793581, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 15:56:33,581 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:33,581 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345793581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 15:56:33,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:56:35,327 Node[0] Epoch[27] Batch [0-20]	Speed: 37654.07 samples/sec	accuracy=nan
2023-03-20 15:56:37,059 Node[0] Epoch[27] Batch [20-40]	Speed: 37676.16 samples/sec	accuracy=nan
2023-03-20 15:56:38,793 Node[0] Epoch[27] Batch [40-60]	Speed: 37643.32 samples/sec	accuracy=nan
2023-03-20 15:56:40,528 Node[0] Epoch[27] Batch [60-80]	Speed: 37628.91 samples/sec	accuracy=nan
2023-03-20 15:56:42,263 Node[0] Epoch[27] Batch [80-100]	Speed: 37619.44 samples/sec	accuracy=nan
2023-03-20 15:56:43,997 Node[0] Epoch[27] Batch [100-120]	Speed: 37659.22 samples/sec	accuracy=nan
2023-03-20 15:56:45,731 Node[0] Epoch[27] Batch [120-140]	Speed: 37634.36 samples/sec	accuracy=nan
2023-03-20 15:56:47,467 Node[0] Epoch[27] Batch [140-160]	Speed: 37614.94 samples/sec	accuracy=nan
2023-03-20 15:56:49,201 Node[0] Epoch[27] Batch [160-180]	Speed: 37651.22 samples/sec	accuracy=nan
2023-03-20 15:56:50,936 Node[0] Epoch[27] Batch [180-200]	Speed: 37616.39 samples/sec	accuracy=nan
2023-03-20 15:56:52,670 Node[0] Epoch[27] Batch [200-220]	Speed: 37642.23 samples/sec	accuracy=nan
2023-03-20 15:56:54,406 Node[0] Epoch[27] Batch [220-240]	Speed: 37617.86 samples/sec	accuracy=nan
2023-03-20 15:56:56,141 Node[0] Epoch[27] Batch [240-260]	Speed: 37611.68 samples/sec	accuracy=nan
2023-03-20 15:56:57,878 Node[0] Epoch[27] Batch [260-280]	Speed: 37585.68 samples/sec	accuracy=nan
2023-03-20 15:56:59,613 Node[0] Epoch[27] Batch [280-300]	Speed: 37631.88 samples/sec	accuracy=nan
2023-03-20 15:57:01,346 Node[0] Epoch[27] Batch [300-320]	Speed: 37659.68 samples/sec	accuracy=nan
2023-03-20 15:57:03,079 Node[0] Epoch[27] Batch [320-340]	Speed: 37685.70 samples/sec	accuracy=nan
2023-03-20 15:57:04,815 Node[0] Epoch[27] Batch [340-360]	Speed: 37601.10 samples/sec	accuracy=nan
2023-03-20 15:57:06,548 Node[0] Epoch[27] Batch [360-380]	Speed: 37669.40 samples/sec	accuracy=nan
2023-03-20 15:57:07,586 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,586 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,586 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345827586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 15:57:07,587 Node[0] Epoch[27] Time cost=34.005
:::MLLOG {"namespace": "", "time_ms": 1679345827587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37675.409507119395}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-20 15:57:07,587 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345827587, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 15:57:07,587 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,587 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,587 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,587 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,588 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,588 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,588 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,588 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,589 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,589 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:07,590 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:09,409 Node[0] Epoch[28] Batch [0-20]	Speed: 37621.97 samples/sec	accuracy=nan
2023-03-20 15:57:11,142 Node[0] Epoch[28] Batch [20-40]	Speed: 37673.71 samples/sec	accuracy=nan
2023-03-20 15:57:12,879 Node[0] Epoch[28] Batch [40-60]	Speed: 37585.10 samples/sec	accuracy=nan
2023-03-20 15:57:14,613 Node[0] Epoch[28] Batch [60-80]	Speed: 37641.40 samples/sec	accuracy=nan
2023-03-20 15:57:16,347 Node[0] Epoch[28] Batch [80-100]	Speed: 37658.73 samples/sec	accuracy=nan
2023-03-20 15:57:18,078 Node[0] Epoch[28] Batch [100-120]	Speed: 37706.40 samples/sec	accuracy=nan
2023-03-20 15:57:19,809 Node[0] Epoch[28] Batch [120-140]	Speed: 37701.53 samples/sec	accuracy=nan
2023-03-20 15:57:21,543 Node[0] Epoch[28] Batch [140-160]	Speed: 37654.77 samples/sec	accuracy=nan
2023-03-20 15:57:23,276 Node[0] Epoch[28] Batch [160-180]	Speed: 37660.67 samples/sec	accuracy=nan
2023-03-20 15:57:25,012 Node[0] Epoch[28] Batch [180-200]	Speed: 37607.05 samples/sec	accuracy=nan
2023-03-20 15:57:26,744 Node[0] Epoch[28] Batch [200-220]	Speed: 37706.51 samples/sec	accuracy=nan
2023-03-20 15:57:28,481 Node[0] Epoch[28] Batch [220-240]	Speed: 37572.17 samples/sec	accuracy=nan
2023-03-20 15:57:30,214 Node[0] Epoch[28] Batch [240-260]	Speed: 37659.24 samples/sec	accuracy=nan
2023-03-20 15:57:31,951 Node[0] Epoch[28] Batch [260-280]	Speed: 37584.95 samples/sec	accuracy=nan
2023-03-20 15:57:33,686 Node[0] Epoch[28] Batch [280-300]	Speed: 37627.78 samples/sec	accuracy=nan
2023-03-20 15:57:35,419 Node[0] Epoch[28] Batch [300-320]	Speed: 37669.49 samples/sec	accuracy=nan
2023-03-20 15:57:37,154 Node[0] Epoch[28] Batch [320-340]	Speed: 37623.45 samples/sec	accuracy=nan
2023-03-20 15:57:38,893 Node[0] Epoch[28] Batch [340-360]	Speed: 37547.59 samples/sec	accuracy=nan
2023-03-20 15:57:40,628 Node[0] Epoch[28] Batch [360-380]	Speed: 37628.70 samples/sec	accuracy=nan
2023-03-20 15:57:41,579 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,579 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,579 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,579 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345861579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 15:57:41,580 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,580 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,580 Node[0] Epoch[28] Time cost=33.993
:::MLLOG {"namespace": "", "time_ms": 1679345861580, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37689.65097868105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-20 15:57:41,580 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,580 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345861580, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 15:57:41,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,581 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:41,582 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:57:43,403 Node[0] Epoch[29] Batch [0-20]	Speed: 37643.75 samples/sec	accuracy=nan
2023-03-20 15:57:45,136 Node[0] Epoch[29] Batch [20-40]	Speed: 37681.67 samples/sec	accuracy=nan
2023-03-20 15:57:46,873 Node[0] Epoch[29] Batch [40-60]	Speed: 37574.36 samples/sec	accuracy=nan
2023-03-20 15:57:48,607 Node[0] Epoch[29] Batch [60-80]	Speed: 37640.60 samples/sec	accuracy=nan
2023-03-20 15:57:50,339 Node[0] Epoch[29] Batch [80-100]	Speed: 37708.34 samples/sec	accuracy=nan
2023-03-20 15:57:52,070 Node[0] Epoch[29] Batch [100-120]	Speed: 37697.85 samples/sec	accuracy=nan
2023-03-20 15:57:53,809 Node[0] Epoch[29] Batch [120-140]	Speed: 37535.86 samples/sec	accuracy=nan
2023-03-20 15:57:55,540 Node[0] Epoch[29] Batch [140-160]	Speed: 37711.88 samples/sec	accuracy=nan
2023-03-20 15:57:57,275 Node[0] Epoch[29] Batch [160-180]	Speed: 37634.89 samples/sec	accuracy=nan
2023-03-20 15:57:59,009 Node[0] Epoch[29] Batch [180-200]	Speed: 37656.69 samples/sec	accuracy=nan
2023-03-20 15:58:00,740 Node[0] Epoch[29] Batch [200-220]	Speed: 37694.33 samples/sec	accuracy=nan
2023-03-20 15:58:02,473 Node[0] Epoch[29] Batch [220-240]	Speed: 37665.85 samples/sec	accuracy=nan
2023-03-20 15:58:04,208 Node[0] Epoch[29] Batch [240-260]	Speed: 37630.10 samples/sec	accuracy=nan
2023-03-20 15:58:05,939 Node[0] Epoch[29] Batch [260-280]	Speed: 37718.33 samples/sec	accuracy=nan
2023-03-20 15:58:07,670 Node[0] Epoch[29] Batch [280-300]	Speed: 37703.50 samples/sec	accuracy=nan
2023-03-20 15:58:09,405 Node[0] Epoch[29] Batch [300-320]	Speed: 37626.33 samples/sec	accuracy=nan
2023-03-20 15:58:11,141 Node[0] Epoch[29] Batch [320-340]	Speed: 37609.48 samples/sec	accuracy=nan
2023-03-20 15:58:12,880 Node[0] Epoch[29] Batch [340-360]	Speed: 37540.47 samples/sec	accuracy=nan
2023-03-20 15:58:14,615 Node[0] Epoch[29] Batch [360-380]	Speed: 37622.22 samples/sec	accuracy=nan
2023-03-20 15:58:15,657 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345895657, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 15:58:15,657 Node[0] Epoch[29] Time cost=34.077
:::MLLOG {"namespace": "", "time_ms": 1679345895657, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37596.62076733797}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-20 15:58:15,657 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,657 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345895658, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 15:58:15,658 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,658 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,658 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,658 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,658 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,658 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,659 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:15,661 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:17,483 Node[0] Epoch[30] Batch [0-20]	Speed: 37556.02 samples/sec	accuracy=nan
2023-03-20 15:58:19,216 Node[0] Epoch[30] Batch [20-40]	Speed: 37677.89 samples/sec	accuracy=nan
2023-03-20 15:58:20,952 Node[0] Epoch[30] Batch [40-60]	Speed: 37591.42 samples/sec	accuracy=nan
2023-03-20 15:58:22,689 Node[0] Epoch[30] Batch [60-80]	Speed: 37584.42 samples/sec	accuracy=nan
2023-03-20 15:58:24,422 Node[0] Epoch[30] Batch [80-100]	Speed: 37668.17 samples/sec	accuracy=nan
2023-03-20 15:58:26,155 Node[0] Epoch[30] Batch [100-120]	Speed: 37667.12 samples/sec	accuracy=nan
2023-03-20 15:58:27,892 Node[0] Epoch[30] Batch [120-140]	Speed: 37589.31 samples/sec	accuracy=nan
2023-03-20 15:58:29,626 Node[0] Epoch[30] Batch [140-160]	Speed: 37636.87 samples/sec	accuracy=nan
2023-03-20 15:58:31,361 Node[0] Epoch[30] Batch [160-180]	Speed: 37637.34 samples/sec	accuracy=nan
2023-03-20 15:58:33,096 Node[0] Epoch[30] Batch [180-200]	Speed: 37617.63 samples/sec	accuracy=nan
2023-03-20 15:58:34,836 Node[0] Epoch[30] Batch [200-220]	Speed: 37511.57 samples/sec	accuracy=nan
2023-03-20 15:58:36,569 Node[0] Epoch[30] Batch [220-240]	Speed: 37690.50 samples/sec	accuracy=nan
2023-03-20 15:58:38,300 Node[0] Epoch[30] Batch [240-260]	Speed: 37698.72 samples/sec	accuracy=nan
2023-03-20 15:58:40,033 Node[0] Epoch[30] Batch [260-280]	Speed: 37668.23 samples/sec	accuracy=nan
2023-03-20 15:58:41,767 Node[0] Epoch[30] Batch [280-300]	Speed: 37638.47 samples/sec	accuracy=nan
2023-03-20 15:58:43,504 Node[0] Epoch[30] Batch [300-320]	Speed: 37593.49 samples/sec	accuracy=nan
2023-03-20 15:58:45,241 Node[0] Epoch[30] Batch [320-340]	Speed: 37577.90 samples/sec	accuracy=nan
2023-03-20 15:58:46,989 Node[0] Epoch[30] Batch [340-360]	Speed: 37347.78 samples/sec	accuracy=nan
2023-03-20 15:58:48,721 Node[0] Epoch[30] Batch [360-380]	Speed: 37689.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679345929674, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 15:58:49,675 Node[0] Epoch[30] Time cost=34.018
:::MLLOG {"namespace": "", "time_ms": 1679345929675, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37661.96010321792}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679345929757, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 15:58:50,502 Node[0] Epoch[30] Validation-accuracy=0.745600
2023-03-20 15:58:50,502 Node[0] Epoch[30] Validation-correct-count=2330.000000
2023-03-20 15:58:50,502 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679345930611, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-20 15:58:50,611 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345930611, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74812, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-20 15:58:50,611 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345930611, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 15:58:50,611 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345930611, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 15:58:50,611 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:50,611 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345930611, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 15:58:50,612 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:58:52,355 Node[0] Epoch[31] Batch [0-20]	Speed: 37631.91 samples/sec	accuracy=nan
2023-03-20 15:58:54,089 Node[0] Epoch[31] Batch [20-40]	Speed: 37642.13 samples/sec	accuracy=nan
2023-03-20 15:58:55,821 Node[0] Epoch[31] Batch [40-60]	Speed: 37704.47 samples/sec	accuracy=nan
2023-03-20 15:58:57,558 Node[0] Epoch[31] Batch [60-80]	Speed: 37568.84 samples/sec	accuracy=nan
2023-03-20 15:58:59,293 Node[0] Epoch[31] Batch [80-100]	Speed: 37628.27 samples/sec	accuracy=nan
2023-03-20 15:59:01,026 Node[0] Epoch[31] Batch [100-120]	Speed: 37661.98 samples/sec	accuracy=nan
2023-03-20 15:59:02,763 Node[0] Epoch[31] Batch [120-140]	Speed: 37600.52 samples/sec	accuracy=nan
2023-03-20 15:59:04,494 Node[0] Epoch[31] Batch [140-160]	Speed: 37698.29 samples/sec	accuracy=nan
2023-03-20 15:59:06,226 Node[0] Epoch[31] Batch [160-180]	Speed: 37689.17 samples/sec	accuracy=nan
2023-03-20 15:59:07,963 Node[0] Epoch[31] Batch [180-200]	Speed: 37577.61 samples/sec	accuracy=nan
2023-03-20 15:59:09,696 Node[0] Epoch[31] Batch [200-220]	Speed: 37680.66 samples/sec	accuracy=nan
2023-03-20 15:59:11,428 Node[0] Epoch[31] Batch [220-240]	Speed: 37684.19 samples/sec	accuracy=nan
2023-03-20 15:59:13,160 Node[0] Epoch[31] Batch [240-260]	Speed: 37701.66 samples/sec	accuracy=nan
2023-03-20 15:59:14,892 Node[0] Epoch[31] Batch [260-280]	Speed: 37689.97 samples/sec	accuracy=nan
2023-03-20 15:59:16,625 Node[0] Epoch[31] Batch [280-300]	Speed: 37658.60 samples/sec	accuracy=nan
2023-03-20 15:59:18,360 Node[0] Epoch[31] Batch [300-320]	Speed: 37634.65 samples/sec	accuracy=nan
2023-03-20 15:59:20,092 Node[0] Epoch[31] Batch [320-340]	Speed: 37693.30 samples/sec	accuracy=nan
2023-03-20 15:59:21,823 Node[0] Epoch[31] Batch [340-360]	Speed: 37702.35 samples/sec	accuracy=nan
2023-03-20 15:59:23,556 Node[0] Epoch[31] Batch [360-380]	Speed: 37675.46 samples/sec	accuracy=nan
2023-03-20 15:59:24,594 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,594 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,594 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345964594, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 15:59:24,594 Node[0] Epoch[31] Time cost=33.983
:::MLLOG {"namespace": "", "time_ms": 1679345964594, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37700.392975715215}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-20 15:59:24,594 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345964595, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 15:59:24,595 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,595 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,595 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,595 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,595 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,596 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,596 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,596 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,596 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,596 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,597 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:24,597 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:26,416 Node[0] Epoch[32] Batch [0-20]	Speed: 37640.97 samples/sec	accuracy=nan
2023-03-20 15:59:28,145 Node[0] Epoch[32] Batch [20-40]	Speed: 37752.87 samples/sec	accuracy=nan
2023-03-20 15:59:29,878 Node[0] Epoch[32] Batch [40-60]	Speed: 37658.31 samples/sec	accuracy=nan
2023-03-20 15:59:31,611 Node[0] Epoch[32] Batch [60-80]	Speed: 37676.81 samples/sec	accuracy=nan
2023-03-20 15:59:33,347 Node[0] Epoch[32] Batch [80-100]	Speed: 37608.12 samples/sec	accuracy=nan
2023-03-20 15:59:35,081 Node[0] Epoch[32] Batch [100-120]	Speed: 37637.25 samples/sec	accuracy=nan
2023-03-20 15:59:36,813 Node[0] Epoch[32] Batch [120-140]	Speed: 37699.53 samples/sec	accuracy=nan
2023-03-20 15:59:38,549 Node[0] Epoch[32] Batch [140-160]	Speed: 37604.35 samples/sec	accuracy=nan
2023-03-20 15:59:40,281 Node[0] Epoch[32] Batch [160-180]	Speed: 37682.61 samples/sec	accuracy=nan
2023-03-20 15:59:42,015 Node[0] Epoch[32] Batch [180-200]	Speed: 37653.76 samples/sec	accuracy=nan
2023-03-20 15:59:43,747 Node[0] Epoch[32] Batch [200-220]	Speed: 37679.69 samples/sec	accuracy=nan
2023-03-20 15:59:45,482 Node[0] Epoch[32] Batch [220-240]	Speed: 37630.49 samples/sec	accuracy=nan
2023-03-20 15:59:47,218 Node[0] Epoch[32] Batch [240-260]	Speed: 37607.85 samples/sec	accuracy=nan
2023-03-20 15:59:48,951 Node[0] Epoch[32] Batch [260-280]	Speed: 37664.48 samples/sec	accuracy=nan
2023-03-20 15:59:50,683 Node[0] Epoch[32] Batch [280-300]	Speed: 37702.11 samples/sec	accuracy=nan
2023-03-20 15:59:52,418 Node[0] Epoch[32] Batch [300-320]	Speed: 37606.87 samples/sec	accuracy=nan
2023-03-20 15:59:54,153 Node[0] Epoch[32] Batch [320-340]	Speed: 37637.05 samples/sec	accuracy=nan
2023-03-20 15:59:55,891 Node[0] Epoch[32] Batch [340-360]	Speed: 37569.51 samples/sec	accuracy=nan
2023-03-20 15:59:57,624 Node[0] Epoch[32] Batch [360-380]	Speed: 37649.88 samples/sec	accuracy=nan
2023-03-20 15:59:58,576 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,576 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,577 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,577 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,577 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,577 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345998576, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 15:59:58,577 Node[0] Epoch[32] Time cost=33.982
:::MLLOG {"namespace": "", "time_ms": 1679345998578, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37700.82967070556}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-20 15:59:58,577 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679345998578, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 15:59:58,578 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,578 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,578 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,578 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,578 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,578 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,579 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,579 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 15:59:58,580 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:00,402 Node[0] Epoch[33] Batch [0-20]	Speed: 37609.26 samples/sec	accuracy=nan
2023-03-20 16:00:02,135 Node[0] Epoch[33] Batch [20-40]	Speed: 37669.60 samples/sec	accuracy=nan
2023-03-20 16:00:03,873 Node[0] Epoch[33] Batch [40-60]	Speed: 37562.63 samples/sec	accuracy=nan
2023-03-20 16:00:05,605 Node[0] Epoch[33] Batch [60-80]	Speed: 37677.58 samples/sec	accuracy=nan
2023-03-20 16:00:07,338 Node[0] Epoch[33] Batch [80-100]	Speed: 37678.26 samples/sec	accuracy=nan
2023-03-20 16:00:09,070 Node[0] Epoch[33] Batch [100-120]	Speed: 37695.82 samples/sec	accuracy=nan
2023-03-20 16:00:10,802 Node[0] Epoch[33] Batch [120-140]	Speed: 37689.07 samples/sec	accuracy=nan
2023-03-20 16:00:12,539 Node[0] Epoch[33] Batch [140-160]	Speed: 37583.14 samples/sec	accuracy=nan
2023-03-20 16:00:14,271 Node[0] Epoch[33] Batch [160-180]	Speed: 37689.71 samples/sec	accuracy=nan
2023-03-20 16:00:16,004 Node[0] Epoch[33] Batch [180-200]	Speed: 37665.00 samples/sec	accuracy=nan
2023-03-20 16:00:17,736 Node[0] Epoch[33] Batch [200-220]	Speed: 37685.96 samples/sec	accuracy=nan
2023-03-20 16:00:19,476 Node[0] Epoch[33] Batch [220-240]	Speed: 37522.16 samples/sec	accuracy=nan
2023-03-20 16:00:21,208 Node[0] Epoch[33] Batch [240-260]	Speed: 37686.55 samples/sec	accuracy=nan
2023-03-20 16:00:22,940 Node[0] Epoch[33] Batch [260-280]	Speed: 37687.78 samples/sec	accuracy=nan
2023-03-20 16:00:24,675 Node[0] Epoch[33] Batch [280-300]	Speed: 37628.93 samples/sec	accuracy=nan
2023-03-20 16:00:26,410 Node[0] Epoch[33] Batch [300-320]	Speed: 37633.31 samples/sec	accuracy=nan
2023-03-20 16:00:28,148 Node[0] Epoch[33] Batch [320-340]	Speed: 37555.56 samples/sec	accuracy=nan
2023-03-20 16:00:29,881 Node[0] Epoch[33] Batch [340-360]	Speed: 37654.86 samples/sec	accuracy=nan
2023-03-20 16:00:31,615 Node[0] Epoch[33] Batch [360-380]	Speed: 37652.69 samples/sec	accuracy=nan
2023-03-20 16:00:32,658 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346032658, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 16:00:32,658 Node[0] Epoch[33] Time cost=34.080
2023-03-20 16:00:32,658 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346032659, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37592.40487315472}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 16:00:32,658 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,659 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346032659, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 16:00:32,659 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,659 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,659 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,659 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,659 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,660 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,660 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,660 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,660 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,660 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,661 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:32,661 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:00:34,481 Node[0] Epoch[34] Batch [0-20]	Speed: 37606.13 samples/sec	accuracy=nan
2023-03-20 16:00:36,212 Node[0] Epoch[34] Batch [20-40]	Speed: 37713.64 samples/sec	accuracy=nan
2023-03-20 16:00:37,947 Node[0] Epoch[34] Batch [40-60]	Speed: 37611.90 samples/sec	accuracy=nan
2023-03-20 16:00:39,682 Node[0] Epoch[34] Batch [60-80]	Speed: 37641.35 samples/sec	accuracy=nan
2023-03-20 16:00:41,413 Node[0] Epoch[34] Batch [80-100]	Speed: 37699.16 samples/sec	accuracy=nan
2023-03-20 16:00:43,148 Node[0] Epoch[34] Batch [100-120]	Speed: 37631.97 samples/sec	accuracy=nan
2023-03-20 16:00:44,881 Node[0] Epoch[34] Batch [120-140]	Speed: 37668.16 samples/sec	accuracy=nan
2023-03-20 16:00:46,619 Node[0] Epoch[34] Batch [140-160]	Speed: 37571.50 samples/sec	accuracy=nan
2023-03-20 16:00:48,355 Node[0] Epoch[34] Batch [160-180]	Speed: 37589.90 samples/sec	accuracy=nan
2023-03-20 16:00:50,090 Node[0] Epoch[34] Batch [180-200]	Speed: 37636.41 samples/sec	accuracy=nan
2023-03-20 16:00:51,822 Node[0] Epoch[34] Batch [200-220]	Speed: 37685.11 samples/sec	accuracy=nan
2023-03-20 16:00:53,556 Node[0] Epoch[34] Batch [220-240]	Speed: 37642.44 samples/sec	accuracy=nan
2023-03-20 16:00:55,290 Node[0] Epoch[34] Batch [240-260]	Speed: 37646.00 samples/sec	accuracy=nan
2023-03-20 16:00:57,026 Node[0] Epoch[34] Batch [260-280]	Speed: 37615.72 samples/sec	accuracy=nan
2023-03-20 16:00:58,763 Node[0] Epoch[34] Batch [280-300]	Speed: 37579.80 samples/sec	accuracy=nan
2023-03-20 16:01:00,495 Node[0] Epoch[34] Batch [300-320]	Speed: 37681.42 samples/sec	accuracy=nan
2023-03-20 16:01:02,232 Node[0] Epoch[34] Batch [320-340]	Speed: 37584.86 samples/sec	accuracy=nan
2023-03-20 16:01:03,964 Node[0] Epoch[34] Batch [340-360]	Speed: 37696.39 samples/sec	accuracy=nan
2023-03-20 16:01:05,697 Node[0] Epoch[34] Batch [360-380]	Speed: 37660.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346066735, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 16:01:06,736 Node[0] Epoch[34] Time cost=34.077
:::MLLOG {"namespace": "", "time_ms": 1679346066736, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37596.04549417673}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679346066818, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 16:01:07,584 Node[0] Epoch[34] Validation-accuracy=0.762560
2023-03-20 16:01:07,584 Node[0] Epoch[34] Validation-correct-count=2383.000000
2023-03-20 16:01:07,584 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679346067617, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679346067617, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75876, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679346067617, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
2023-03-20 16:01:07,617 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346067617, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 36, "epoch_count": 2}}
2023-03-20 16:01:07,617 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,617 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346067617, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 36}}
2023-03-20 16:01:07,617 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:07,618 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:09,368 Node[0] Epoch[35] Batch [0-20]	Speed: 37466.80 samples/sec	accuracy=nan
2023-03-20 16:01:11,102 Node[0] Epoch[35] Batch [20-40]	Speed: 37637.24 samples/sec	accuracy=nan
2023-03-20 16:01:12,837 Node[0] Epoch[35] Batch [40-60]	Speed: 37640.21 samples/sec	accuracy=nan
2023-03-20 16:01:14,570 Node[0] Epoch[35] Batch [60-80]	Speed: 37668.43 samples/sec	accuracy=nan
2023-03-20 16:01:16,305 Node[0] Epoch[35] Batch [80-100]	Speed: 37606.85 samples/sec	accuracy=nan
2023-03-20 16:01:18,039 Node[0] Epoch[35] Batch [100-120]	Speed: 37653.86 samples/sec	accuracy=nan
2023-03-20 16:01:19,774 Node[0] Epoch[35] Batch [120-140]	Speed: 37632.35 samples/sec	accuracy=nan
2023-03-20 16:01:21,510 Node[0] Epoch[35] Batch [140-160]	Speed: 37612.52 samples/sec	accuracy=nan
2023-03-20 16:01:23,245 Node[0] Epoch[35] Batch [160-180]	Speed: 37618.32 samples/sec	accuracy=nan
2023-03-20 16:01:24,980 Node[0] Epoch[35] Batch [180-200]	Speed: 37625.43 samples/sec	accuracy=nan
2023-03-20 16:01:26,713 Node[0] Epoch[35] Batch [200-220]	Speed: 37664.35 samples/sec	accuracy=nan
2023-03-20 16:01:28,445 Node[0] Epoch[35] Batch [220-240]	Speed: 37688.24 samples/sec	accuracy=nan
2023-03-20 16:01:30,182 Node[0] Epoch[35] Batch [240-260]	Speed: 37580.73 samples/sec	accuracy=nan
2023-03-20 16:01:31,914 Node[0] Epoch[35] Batch [260-280]	Speed: 37693.61 samples/sec	accuracy=nan
2023-03-20 16:01:33,651 Node[0] Epoch[35] Batch [280-300]	Speed: 37588.65 samples/sec	accuracy=nan
2023-03-20 16:01:35,385 Node[0] Epoch[35] Batch [300-320]	Speed: 37645.73 samples/sec	accuracy=nan
2023-03-20 16:01:37,118 Node[0] Epoch[35] Batch [320-340]	Speed: 37670.26 samples/sec	accuracy=nan
2023-03-20 16:01:38,854 Node[0] Epoch[35] Batch [340-360]	Speed: 37605.28 samples/sec	accuracy=nan
2023-03-20 16:01:40,588 Node[0] Epoch[35] Batch [360-380]	Speed: 37638.30 samples/sec	accuracy=nan
2023-03-20 16:01:41,539 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,539 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346101540, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 36}}
2023-03-20 16:01:41,540 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,540 Node[0] Epoch[35] Time cost=33.923
:::MLLOG {"namespace": "", "time_ms": 1679346101540, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37767.46424537493}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 36}}
2023-03-20 16:01:41,540 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346101540, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 37}}
2023-03-20 16:01:41,541 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,540 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,540 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,541 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,541 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,541 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,541 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,542 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,542 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,542 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,542 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:41,543 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:01:43,364 Node[0] Epoch[36] Batch [0-20]	Speed: 37582.35 samples/sec	accuracy=nan
2023-03-20 16:01:45,098 Node[0] Epoch[36] Batch [20-40]	Speed: 37654.47 samples/sec	accuracy=nan
2023-03-20 16:01:46,832 Node[0] Epoch[36] Batch [40-60]	Speed: 37645.19 samples/sec	accuracy=nan
2023-03-20 16:01:48,564 Node[0] Epoch[36] Batch [60-80]	Speed: 37693.22 samples/sec	accuracy=nan
2023-03-20 16:01:50,299 Node[0] Epoch[36] Batch [80-100]	Speed: 37623.37 samples/sec	accuracy=nan
2023-03-20 16:01:52,034 Node[0] Epoch[36] Batch [100-120]	Speed: 37620.98 samples/sec	accuracy=nan
2023-03-20 16:01:53,767 Node[0] Epoch[36] Batch [120-140]	Speed: 37659.60 samples/sec	accuracy=nan
2023-03-20 16:01:55,500 Node[0] Epoch[36] Batch [140-160]	Speed: 37665.63 samples/sec	accuracy=nan
2023-03-20 16:01:57,235 Node[0] Epoch[36] Batch [160-180]	Speed: 37635.92 samples/sec	accuracy=nan
2023-03-20 16:01:58,973 Node[0] Epoch[36] Batch [180-200]	Speed: 37552.30 samples/sec	accuracy=nan
2023-03-20 16:02:00,707 Node[0] Epoch[36] Batch [200-220]	Speed: 37654.46 samples/sec	accuracy=nan
2023-03-20 16:02:02,441 Node[0] Epoch[36] Batch [220-240]	Speed: 37654.91 samples/sec	accuracy=nan
2023-03-20 16:02:04,175 Node[0] Epoch[36] Batch [240-260]	Speed: 37648.20 samples/sec	accuracy=nan
2023-03-20 16:02:05,908 Node[0] Epoch[36] Batch [260-280]	Speed: 37649.93 samples/sec	accuracy=nan
2023-03-20 16:02:07,646 Node[0] Epoch[36] Batch [280-300]	Speed: 37575.46 samples/sec	accuracy=nan
2023-03-20 16:02:09,378 Node[0] Epoch[36] Batch [300-320]	Speed: 37694.13 samples/sec	accuracy=nan
2023-03-20 16:02:11,111 Node[0] Epoch[36] Batch [320-340]	Speed: 37650.08 samples/sec	accuracy=nan
2023-03-20 16:02:12,848 Node[0] Epoch[36] Batch [340-360]	Speed: 37591.29 samples/sec	accuracy=nan
2023-03-20 16:02:14,582 Node[0] Epoch[36] Batch [360-380]	Speed: 37639.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346135621, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 37}}
2023-03-20 16:02:15,623 Node[0] Epoch[36] Time cost=34.082
:::MLLOG {"namespace": "", "time_ms": 1679346135623, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37590.79756426414}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1679346135624, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "status": "aborted"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346158
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:38 PM
+ result=1438
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1438,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346159
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:39 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:39 PM
+ result=1439
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1439,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1439,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346159
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:39 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:39 PM
+ result=1439
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1439,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1439,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346160
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:40 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:40 PM
+ result=1440
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1440,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1440,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679346160
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:02:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:02:40 PM'
ENDING TIMING RUN AT 2023-03-20 04:02:40 PM
+ result=1440
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1440,root,2023-03-20 03:38:40 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1440,root,2023-03-20 03:38:40 PM'
+ export PROFILE=0
+ PROFILE=0
