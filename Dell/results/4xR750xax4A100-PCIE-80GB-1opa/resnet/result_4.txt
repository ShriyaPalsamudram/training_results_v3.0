+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node043 node044 '
+ echo 'hosts=node040 node041 node043 node044 '
hosts=node040 node041 node043 node044 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350466773, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350466809, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350466810, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350466811, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350466813, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350478895, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350484994, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350485030, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350485031, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350485033, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350485034, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350496248, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350502158, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350502193, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350502194, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350502196, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350502197, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350514579, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350519485, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350519520, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350519522, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350519523, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350519525, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679350532003, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=17606
+ SEED=17606
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ WALLTIME=00:40:00
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+ source ./config_4xR750xax4A100.sh
+ start=1679350533
+++ dirname ./config_4xR750xax4A100.sh
+ start=1679350533
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ SLURM_NTASKS_PER_NODE=4
+ INPUT_BATCH_MULTIPLIER=1
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ BATCHSIZE=204
+ LR=10.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=10.5
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ SEED=17606
+ WD=5.0e-05
+ EVAL_OFFSET=2
+ LABELSMOOTHING=0.1
+ EVAL_PERIOD=4
+ SEED=17606
+ DALI_PREFETCH_QUEUE=5
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ BN_GROUP=1
+ NUMEPOCHS=37
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NODALI=0
+ BN_GROUP=1
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ PROFILE_EXCEL=0
+ THR=0.759
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ DATAROOT=/data
+ THR=0.759
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NGPUS=4
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679350533
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679350533
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ sed 's/^config_//'
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ sed 's/\.sh$//'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ date +%s
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ start=1679350533
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start=1679350533
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ date '+%Y-%m-%d %r'
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+++ sed 's/^config_//'
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
++ seq 0 3
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679350533
+ start=1679350533
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=2
+ global_rank=2
+ start_fmt='2023-03-20 05:15:33 PM'
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly global_rank=2
+ global_rank=2
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ seq 0 3
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ seq 0 3
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ tr '\n' ,
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ date +%s
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ sed 's/,$//'
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ tr '\n' ,
++ export DGXNNODES=4
++ DGXNNODES=4
++ sed 's/,$//'
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ start=1679350533
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ GPUS=0,1,2,3
+ source ./config_4xR750xax4A100.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ dirname ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679350533
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ date +%s
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ seq 0 3
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ tr '\n' ,
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679350533
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ tr '\n' ,
+ [[ '' -ge 1 ]]
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679350533
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ start=1679350533
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date '+%Y-%m-%d %r'
++ date +%s
++ date +%s
++ date +%s
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679350533
+ start=1679350533
+ start=1679350533
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 05:15:33 PM'
+ start_fmt='2023-03-20 05:15:33 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ start_fmt='2023-03-20 05:15:33 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
STARTING TIMING RUN AT 2023-03-20 05:15:33 PM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ echo 'STARTING TIMING RUN AT 2023-03-20 05:15:33 PM'
+ readonly global_rank=0
+ global_rank=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ readonly local_rank=0
+ local_rank=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ LABELSMOOTHING=0.1
+ SEED=17606
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 17606 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:1187702] MCW rank 3 is not bound (or bound to all available processors)
[node040:1187692] MCW rank 2 is not bound (or bound to all available processors)
[node040:1187714] MCW rank 1 is not bound (or bound to all available processors)
[node040:1187691] MCW rank 0 is not bound (or bound to all available processors)
[node041:917172] MCW rank 5 is not bound (or bound to all available processors)
[node041:917174] MCW rank 4 is not bound (or bound to all available processors)
[node041:917171] MCW rank 6 is not bound (or bound to all available processors)
[node041:917173] MCW rank 7 is not bound (or bound to all available processors)
[node043:1061966] MCW rank 11 is not bound (or bound to all available processors)
[node043:1061988] MCW rank 9 is not bound (or bound to all available processors)
[node044:958567] MCW rank 13 is not bound (or bound to all available processors)
[node043:1061981] MCW rank 10 is not bound (or bound to all available processors)
[node043:1061970] MCW rank 8 is not bound (or bound to all available processors)
[node044:958581] MCW rank 15 is not bound (or bound to all available processors)
[node044:958569] MCW rank 14 is not bound (or bound to all available processors)
[node044:958580] MCW rank 12 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679350537849, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[17:15:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679350545752, "event_type": "POINT_IN_TIME", "key": "seed", "value": 17606, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[17:15:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679350548418, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[17:15:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:52] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: [17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[17:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679350553463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679350553503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,049 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35539, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,050 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11602, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,051 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24422, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679350556050, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679350556052, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679350556053, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,066 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51536, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,069 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2771, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,069 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17753, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,069 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56870, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,069 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61740, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,072 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8749, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,073 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17596, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,076 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46358, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,076 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11174, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,078 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45269, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,078 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61649, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,078 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10332, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 17:15:56,079 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60450, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679350642911, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679350642912, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679350642912, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679350643482, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679350643577, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679350643577, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 17:17:25,317 Node[0] Epoch[0] Batch [0-20]	Speed: 37757.97 samples/sec	accuracy=nan
2023-03-20 17:17:27,047 Node[0] Epoch[0] Batch [20-40]	Speed: 37751.95 samples/sec	accuracy=nan
2023-03-20 17:17:28,782 Node[0] Epoch[0] Batch [40-60]	Speed: 37612.79 samples/sec	accuracy=nan
2023-03-20 17:17:30,510 Node[0] Epoch[0] Batch [60-80]	Speed: 37784.91 samples/sec	accuracy=nan
2023-03-20 17:17:32,240 Node[0] Epoch[0] Batch [80-100]	Speed: 37737.72 samples/sec	accuracy=nan
2023-03-20 17:17:33,968 Node[0] Epoch[0] Batch [100-120]	Speed: 37764.59 samples/sec	accuracy=nan
2023-03-20 17:17:35,699 Node[0] Epoch[0] Batch [120-140]	Speed: 37713.47 samples/sec	accuracy=nan
2023-03-20 17:17:37,430 Node[0] Epoch[0] Batch [140-160]	Speed: 37705.97 samples/sec	accuracy=nan
2023-03-20 17:17:39,160 Node[0] Epoch[0] Batch [160-180]	Speed: 37734.05 samples/sec	accuracy=nan
2023-03-20 17:17:40,895 Node[0] Epoch[0] Batch [180-200]	Speed: 37644.74 samples/sec	accuracy=nan
2023-03-20 17:17:42,627 Node[0] Epoch[0] Batch [200-220]	Speed: 37683.07 samples/sec	accuracy=nan
2023-03-20 17:17:44,360 Node[0] Epoch[0] Batch [220-240]	Speed: 37660.52 samples/sec	accuracy=nan
2023-03-20 17:17:46,094 Node[0] Epoch[0] Batch [240-260]	Speed: 37648.43 samples/sec	accuracy=nan
2023-03-20 17:17:47,830 Node[0] Epoch[0] Batch [260-280]	Speed: 37615.51 samples/sec	accuracy=nan
2023-03-20 17:17:49,562 Node[0] Epoch[0] Batch [280-300]	Speed: 37674.15 samples/sec	accuracy=nan
2023-03-20 17:17:51,299 Node[0] Epoch[0] Batch [300-320]	Speed: 37600.46 samples/sec	accuracy=nan
2023-03-20 17:17:53,035 Node[0] Epoch[0] Batch [320-340]	Speed: 37599.23 samples/sec	accuracy=nan
2023-03-20 17:17:54,772 Node[0] Epoch[0] Batch [340-360]	Speed: 37568.53 samples/sec	accuracy=nan
2023-03-20 17:17:56,511 Node[0] Epoch[0] Batch [360-380]	Speed: 37541.34 samples/sec	accuracy=nan
2023-03-20 17:17:57,558 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,558 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,558 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350677558, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 17:17:57,559 Node[0] Epoch[0] Time cost=33.981
:::MLLOG {"namespace": "", "time_ms": 1679350677559, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37702.20568316279}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 17:17:57,558 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,559 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,559 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,559 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,559 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,559 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350677560, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 17:17:57,560 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,560 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,560 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,560 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,560 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,560 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:57,561 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:17:59,386 Node[0] Epoch[1] Batch [0-20]	Speed: 37477.68 samples/sec	accuracy=nan
2023-03-20 17:18:01,125 Node[0] Epoch[1] Batch [20-40]	Speed: 37542.54 samples/sec	accuracy=nan
2023-03-20 17:18:02,867 Node[0] Epoch[1] Batch [40-60]	Speed: 37479.81 samples/sec	accuracy=nan
2023-03-20 17:18:04,604 Node[0] Epoch[1] Batch [60-80]	Speed: 37568.02 samples/sec	accuracy=nan
2023-03-20 17:18:06,346 Node[0] Epoch[1] Batch [80-100]	Speed: 37485.79 samples/sec	accuracy=nan
2023-03-20 17:18:08,083 Node[0] Epoch[1] Batch [100-120]	Speed: 37582.15 samples/sec	accuracy=nan
2023-03-20 17:18:09,825 Node[0] Epoch[1] Batch [120-140]	Speed: 37464.89 samples/sec	accuracy=nan
2023-03-20 17:18:11,569 Node[0] Epoch[1] Batch [140-160]	Speed: 37435.80 samples/sec	accuracy=nan
2023-03-20 17:18:13,311 Node[0] Epoch[1] Batch [160-180]	Speed: 37474.65 samples/sec	accuracy=nan
2023-03-20 17:18:17,223 Node[0] Epoch[1] Batch [180-200]	Speed: 16688.68 samples/sec	accuracy=nan
2023-03-20 17:18:18,963 Node[0] Epoch[1] Batch [200-220]	Speed: 37511.84 samples/sec	accuracy=nan
2023-03-20 17:18:23,100 Node[0] Epoch[1] Batch [220-240]	Speed: 15777.35 samples/sec	accuracy=nan
2023-03-20 17:18:24,840 Node[0] Epoch[1] Batch [240-260]	Speed: 37521.65 samples/sec	accuracy=nan
2023-03-20 17:18:26,581 Node[0] Epoch[1] Batch [260-280]	Speed: 37495.61 samples/sec	accuracy=nan
2023-03-20 17:18:28,325 Node[0] Epoch[1] Batch [280-300]	Speed: 37440.11 samples/sec	accuracy=nan
2023-03-20 17:18:30,066 Node[0] Epoch[1] Batch [300-320]	Speed: 37486.55 samples/sec	accuracy=nan
2023-03-20 17:18:31,806 Node[0] Epoch[1] Batch [320-340]	Speed: 37527.20 samples/sec	accuracy=nan
2023-03-20 17:18:33,551 Node[0] Epoch[1] Batch [340-360]	Speed: 37396.71 samples/sec	accuracy=nan
2023-03-20 17:18:35,297 Node[0] Epoch[1] Batch [360-380]	Speed: 37401.59 samples/sec	accuracy=nan
2023-03-20 17:18:36,338 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,338 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,338 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,338 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350716338, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 17:18:36,339 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,339 Node[0] Epoch[1] Time cost=38.779
:::MLLOG {"namespace": "", "time_ms": 1679350716339, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 33037.48467941548}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-20 17:18:36,339 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,339 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350716340, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 17:18:36,339 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,340 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,341 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:36,341 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:18:38,166 Node[0] Epoch[2] Batch [0-20]	Speed: 37515.97 samples/sec	accuracy=nan
2023-03-20 17:18:39,905 Node[0] Epoch[2] Batch [20-40]	Speed: 37535.62 samples/sec	accuracy=nan
2023-03-20 17:18:41,648 Node[0] Epoch[2] Batch [40-60]	Speed: 37444.26 samples/sec	accuracy=nan
2023-03-20 17:18:43,391 Node[0] Epoch[2] Batch [60-80]	Speed: 37458.28 samples/sec	accuracy=nan
2023-03-20 17:18:45,135 Node[0] Epoch[2] Batch [80-100]	Speed: 37435.26 samples/sec	accuracy=nan
2023-03-20 17:18:46,877 Node[0] Epoch[2] Batch [100-120]	Speed: 37457.86 samples/sec	accuracy=nan
2023-03-20 17:18:51,076 Node[0] Epoch[2] Batch [120-140]	Speed: 15549.89 samples/sec	accuracy=nan
2023-03-20 17:18:59,633 Node[0] Epoch[2] Batch [140-160]	Speed: 7628.82 samples/sec	accuracy=nan
2023-03-20 17:19:06,196 Node[0] Epoch[2] Batch [160-180]	Speed: 9946.19 samples/sec	accuracy=nan
2023-03-20 17:19:12,745 Node[0] Epoch[2] Batch [180-200]	Speed: 9968.01 samples/sec	accuracy=nan
2023-03-20 17:19:16,837 Node[0] Epoch[2] Batch [200-220]	Speed: 15952.62 samples/sec	accuracy=nan
2023-03-20 17:19:20,654 Node[0] Epoch[2] Batch [220-240]	Speed: 17103.52 samples/sec	accuracy=nan
2023-03-20 17:19:27,159 Node[0] Epoch[2] Batch [240-260]	Speed: 10034.72 samples/sec	accuracy=nan
2023-03-20 17:19:28,893 Node[0] Epoch[2] Batch [260-280]	Speed: 37646.99 samples/sec	accuracy=nan
2023-03-20 17:19:30,627 Node[0] Epoch[2] Batch [280-300]	Speed: 37643.85 samples/sec	accuracy=nan
2023-03-20 17:19:32,358 Node[0] Epoch[2] Batch [300-320]	Speed: 37728.56 samples/sec	accuracy=nan
2023-03-20 17:19:34,092 Node[0] Epoch[2] Batch [320-340]	Speed: 37646.21 samples/sec	accuracy=nan
2023-03-20 17:19:35,823 Node[0] Epoch[2] Batch [340-360]	Speed: 37710.75 samples/sec	accuracy=nan
2023-03-20 17:19:39,921 Node[0] Epoch[2] Batch [360-380]	Speed: 15930.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350780873, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 17:19:40,874 Node[0] Epoch[2] Time cost=64.535
:::MLLOG {"namespace": "", "time_ms": 1679350780874, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19852.391328714024}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 17:19:40,956 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,956 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350780956, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 17:19:40,957 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,956 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,957 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,957 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,957 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,957 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,958 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,958 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,958 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,958 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,959 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,958 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,959 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:40,959 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,645 Node[0] Epoch[2] Validation-accuracy=0.286400
2023-03-20 17:19:41,645 Node[0] Epoch[2] Validation-correct-count=895.000000
2023-03-20 17:19:41,645 Node[0] Epoch[2] Validation-total-count=3125.000000
2023-03-20 17:19:41,754 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350781754, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 17:19:41,755 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350781755, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.29288, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 17:19:41,754 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350781755, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 17:19:41,754 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,754 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:41,755 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350781755, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 17:19:41,755 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350781755, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 17:19:41,755 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:19:43,499 Node[0] Epoch[3] Batch [0-20]	Speed: 37659.06 samples/sec	accuracy=nan
2023-03-20 17:19:45,234 Node[0] Epoch[3] Batch [20-40]	Speed: 37632.16 samples/sec	accuracy=nan
2023-03-20 17:19:46,969 Node[0] Epoch[3] Batch [40-60]	Speed: 37613.37 samples/sec	accuracy=nan
2023-03-20 17:19:48,704 Node[0] Epoch[3] Batch [60-80]	Speed: 37624.39 samples/sec	accuracy=nan
2023-03-20 17:19:50,438 Node[0] Epoch[3] Batch [80-100]	Speed: 37653.49 samples/sec	accuracy=nan
2023-03-20 17:19:52,173 Node[0] Epoch[3] Batch [100-120]	Speed: 37613.38 samples/sec	accuracy=nan
2023-03-20 17:19:53,907 Node[0] Epoch[3] Batch [120-140]	Speed: 37644.54 samples/sec	accuracy=nan
2023-03-20 17:19:55,644 Node[0] Epoch[3] Batch [140-160]	Speed: 37586.39 samples/sec	accuracy=nan
2023-03-20 17:19:57,384 Node[0] Epoch[3] Batch [160-180]	Speed: 37528.19 samples/sec	accuracy=nan
2023-03-20 17:19:59,121 Node[0] Epoch[3] Batch [180-200]	Speed: 37569.68 samples/sec	accuracy=nan
2023-03-20 17:20:00,861 Node[0] Epoch[3] Batch [200-220]	Speed: 37535.57 samples/sec	accuracy=nan
2023-03-20 17:20:02,597 Node[0] Epoch[3] Batch [220-240]	Speed: 37581.36 samples/sec	accuracy=nan
2023-03-20 17:20:04,337 Node[0] Epoch[3] Batch [240-260]	Speed: 37529.35 samples/sec	accuracy=nan
2023-03-20 17:20:06,076 Node[0] Epoch[3] Batch [260-280]	Speed: 37545.19 samples/sec	accuracy=nan
2023-03-20 17:20:07,812 Node[0] Epoch[3] Batch [280-300]	Speed: 37592.12 samples/sec	accuracy=nan
2023-03-20 17:20:09,553 Node[0] Epoch[3] Batch [300-320]	Speed: 37502.21 samples/sec	accuracy=nan
2023-03-20 17:20:11,289 Node[0] Epoch[3] Batch [320-340]	Speed: 37595.81 samples/sec	accuracy=nan
2023-03-20 17:20:13,032 Node[0] Epoch[3] Batch [340-360]	Speed: 37458.14 samples/sec	accuracy=nan
2023-03-20 17:20:14,773 Node[0] Epoch[3] Batch [360-380]	Speed: 37502.70 samples/sec	accuracy=nan
2023-03-20 17:20:15,816 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,816 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350815816, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 17:20:15,816 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,816 Node[0] Epoch[3] Time cost=34.061
:::MLLOG {"namespace": "", "time_ms": 1679350815816, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37613.9087418746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679350815817, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 17:20:15,817 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,816 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,817 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,817 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,817 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,817 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,817 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,818 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,818 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,818 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,818 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,819 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:15,819 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:17,647 Node[0] Epoch[4] Batch [0-20]	Speed: 37456.71 samples/sec	accuracy=nan
2023-03-20 17:20:19,389 Node[0] Epoch[4] Batch [20-40]	Speed: 37481.54 samples/sec	accuracy=nan
2023-03-20 17:20:21,131 Node[0] Epoch[4] Batch [40-60]	Speed: 37479.23 samples/sec	accuracy=nan
2023-03-20 17:20:22,870 Node[0] Epoch[4] Batch [60-80]	Speed: 37527.34 samples/sec	accuracy=nan
2023-03-20 17:20:24,612 Node[0] Epoch[4] Batch [80-100]	Speed: 37479.48 samples/sec	accuracy=nan
2023-03-20 17:20:26,355 Node[0] Epoch[4] Batch [100-120]	Speed: 37461.39 samples/sec	accuracy=nan
2023-03-20 17:20:28,097 Node[0] Epoch[4] Batch [120-140]	Speed: 37463.84 samples/sec	accuracy=nan
2023-03-20 17:20:29,839 Node[0] Epoch[4] Batch [140-160]	Speed: 37470.35 samples/sec	accuracy=nan
2023-03-20 17:20:31,580 Node[0] Epoch[4] Batch [160-180]	Speed: 37501.89 samples/sec	accuracy=nan
2023-03-20 17:20:33,321 Node[0] Epoch[4] Batch [180-200]	Speed: 37501.15 samples/sec	accuracy=nan
2023-03-20 17:20:35,063 Node[0] Epoch[4] Batch [200-220]	Speed: 37456.44 samples/sec	accuracy=nan
2023-03-20 17:20:36,805 Node[0] Epoch[4] Batch [220-240]	Speed: 37487.96 samples/sec	accuracy=nan
2023-03-20 17:20:38,546 Node[0] Epoch[4] Batch [240-260]	Speed: 37483.83 samples/sec	accuracy=nan
2023-03-20 17:20:40,287 Node[0] Epoch[4] Batch [260-280]	Speed: 37501.46 samples/sec	accuracy=nan
2023-03-20 17:20:42,028 Node[0] Epoch[4] Batch [280-300]	Speed: 37491.37 samples/sec	accuracy=nan
2023-03-20 17:20:43,768 Node[0] Epoch[4] Batch [300-320]	Speed: 37515.34 samples/sec	accuracy=nan
2023-03-20 17:20:45,509 Node[0] Epoch[4] Batch [320-340]	Speed: 37504.98 samples/sec	accuracy=nan
2023-03-20 17:20:47,250 Node[0] Epoch[4] Batch [340-360]	Speed: 37487.40 samples/sec	accuracy=nan
2023-03-20 17:20:48,990 Node[0] Epoch[4] Batch [360-380]	Speed: 37520.92 samples/sec	accuracy=nan
2023-03-20 17:20:49,946 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,946 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,947 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,947 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350849946, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 17:20:49,947 Node[0] Epoch[4] Time cost=34.131
:::MLLOG {"namespace": "", "time_ms": 1679350849947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37537.14530514671}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-20 17:20:49,947 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,947 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350849948, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 17:20:49,948 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,948 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,949 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,949 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:49,950 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:20:51,775 Node[0] Epoch[5] Batch [0-20]	Speed: 37545.72 samples/sec	accuracy=nan
2023-03-20 17:20:53,516 Node[0] Epoch[5] Batch [20-40]	Speed: 37502.21 samples/sec	accuracy=nan
2023-03-20 17:20:55,258 Node[0] Epoch[5] Batch [40-60]	Speed: 37480.30 samples/sec	accuracy=nan
2023-03-20 17:20:56,998 Node[0] Epoch[5] Batch [60-80]	Speed: 37495.88 samples/sec	accuracy=nan
2023-03-20 17:20:58,739 Node[0] Epoch[5] Batch [80-100]	Speed: 37503.55 samples/sec	accuracy=nan
2023-03-20 17:21:00,479 Node[0] Epoch[5] Batch [100-120]	Speed: 37529.67 samples/sec	accuracy=nan
2023-03-20 17:21:02,218 Node[0] Epoch[5] Batch [120-140]	Speed: 37518.72 samples/sec	accuracy=nan
2023-03-20 17:21:03,954 Node[0] Epoch[5] Batch [140-160]	Speed: 37611.59 samples/sec	accuracy=nan
2023-03-20 17:21:05,692 Node[0] Epoch[5] Batch [160-180]	Speed: 37558.51 samples/sec	accuracy=nan
2023-03-20 17:21:07,431 Node[0] Epoch[5] Batch [180-200]	Speed: 37534.49 samples/sec	accuracy=nan
2023-03-20 17:21:09,173 Node[0] Epoch[5] Batch [200-220]	Speed: 37474.88 samples/sec	accuracy=nan
2023-03-20 17:21:10,912 Node[0] Epoch[5] Batch [220-240]	Speed: 37555.57 samples/sec	accuracy=nan
2023-03-20 17:21:12,650 Node[0] Epoch[5] Batch [240-260]	Speed: 37554.30 samples/sec	accuracy=nan
2023-03-20 17:21:14,387 Node[0] Epoch[5] Batch [260-280]	Speed: 37587.41 samples/sec	accuracy=nan
2023-03-20 17:21:16,123 Node[0] Epoch[5] Batch [280-300]	Speed: 37603.63 samples/sec	accuracy=nan
2023-03-20 17:21:17,862 Node[0] Epoch[5] Batch [300-320]	Speed: 37521.13 samples/sec	accuracy=nan
2023-03-20 17:21:19,602 Node[0] Epoch[5] Batch [320-340]	Speed: 37530.46 samples/sec	accuracy=nan
2023-03-20 17:21:21,340 Node[0] Epoch[5] Batch [340-360]	Speed: 37557.23 samples/sec	accuracy=nan
2023-03-20 17:21:23,077 Node[0] Epoch[5] Batch [360-380]	Speed: 37577.00 samples/sec	accuracy=nan
2023-03-20 17:21:24,117 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,117 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350884117, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 17:21:24,117 Node[0] Epoch[5] Time cost=34.169
2023-03-20 17:21:24,117 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350884117, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37494.64575342951}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679350884118, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 17:21:24,118 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,117 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,118 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,118 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,118 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,118 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,119 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,119 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,119 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,119 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,120 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,120 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:24,120 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:25,942 Node[0] Epoch[6] Batch [0-20]	Speed: 37571.63 samples/sec	accuracy=nan
2023-03-20 17:21:27,678 Node[0] Epoch[6] Batch [20-40]	Speed: 37608.70 samples/sec	accuracy=nan
2023-03-20 17:21:29,416 Node[0] Epoch[6] Batch [40-60]	Speed: 37568.47 samples/sec	accuracy=nan
2023-03-20 17:21:31,152 Node[0] Epoch[6] Batch [60-80]	Speed: 37599.36 samples/sec	accuracy=nan
2023-03-20 17:21:32,888 Node[0] Epoch[6] Batch [80-100]	Speed: 37595.52 samples/sec	accuracy=nan
2023-03-20 17:21:34,628 Node[0] Epoch[6] Batch [100-120]	Speed: 37529.33 samples/sec	accuracy=nan
2023-03-20 17:21:36,367 Node[0] Epoch[6] Batch [120-140]	Speed: 37529.50 samples/sec	accuracy=nan
2023-03-20 17:21:38,104 Node[0] Epoch[6] Batch [140-160]	Speed: 37586.79 samples/sec	accuracy=nan
2023-03-20 17:21:39,843 Node[0] Epoch[6] Batch [160-180]	Speed: 37542.33 samples/sec	accuracy=nan
2023-03-20 17:21:41,580 Node[0] Epoch[6] Batch [180-200]	Speed: 37570.11 samples/sec	accuracy=nan
2023-03-20 17:21:43,315 Node[0] Epoch[6] Batch [200-220]	Speed: 37622.63 samples/sec	accuracy=nan
2023-03-20 17:21:45,052 Node[0] Epoch[6] Batch [220-240]	Speed: 37584.66 samples/sec	accuracy=nan
2023-03-20 17:21:46,788 Node[0] Epoch[6] Batch [240-260]	Speed: 37601.08 samples/sec	accuracy=nan
2023-03-20 17:21:48,525 Node[0] Epoch[6] Batch [260-280]	Speed: 37585.08 samples/sec	accuracy=nan
2023-03-20 17:21:50,261 Node[0] Epoch[6] Batch [280-300]	Speed: 37612.26 samples/sec	accuracy=nan
2023-03-20 17:21:51,997 Node[0] Epoch[6] Batch [300-320]	Speed: 37603.71 samples/sec	accuracy=nan
2023-03-20 17:21:53,731 Node[0] Epoch[6] Batch [320-340]	Speed: 37633.99 samples/sec	accuracy=nan
2023-03-20 17:21:55,467 Node[0] Epoch[6] Batch [340-360]	Speed: 37617.26 samples/sec	accuracy=nan
2023-03-20 17:21:57,202 Node[0] Epoch[6] Batch [360-380]	Speed: 37625.42 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350918157, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 17:21:58,158 Node[0] Epoch[6] Time cost=34.040
:::MLLOG {"namespace": "", "time_ms": 1679350918158, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37636.69511790795}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679350918239, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 17:21:58,993 Node[0] Epoch[6] Validation-accuracy=0.477440
2023-03-20 17:21:58,993 Node[0] Epoch[6] Validation-correct-count=1492.000000
2023-03-20 17:21:58,993 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679350919080, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679350919080, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.46674, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-20 17:21:59,080 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350919081, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 17:21:59,080 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350919081, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 17:21:59,080 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:21:59,080 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350919081, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 17:21:59,081 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:00,824 Node[0] Epoch[7] Batch [0-20]	Speed: 37648.56 samples/sec	accuracy=nan
2023-03-20 17:22:02,556 Node[0] Epoch[7] Batch [20-40]	Speed: 37681.47 samples/sec	accuracy=nan
2023-03-20 17:22:04,289 Node[0] Epoch[7] Batch [40-60]	Speed: 37686.96 samples/sec	accuracy=nan
2023-03-20 17:22:06,022 Node[0] Epoch[7] Batch [60-80]	Speed: 37658.60 samples/sec	accuracy=nan
2023-03-20 17:22:07,757 Node[0] Epoch[7] Batch [80-100]	Speed: 37634.89 samples/sec	accuracy=nan
2023-03-20 17:22:09,491 Node[0] Epoch[7] Batch [100-120]	Speed: 37631.16 samples/sec	accuracy=nan
2023-03-20 17:22:11,223 Node[0] Epoch[7] Batch [120-140]	Speed: 37700.31 samples/sec	accuracy=nan
2023-03-20 17:22:12,956 Node[0] Epoch[7] Batch [140-160]	Speed: 37677.38 samples/sec	accuracy=nan
2023-03-20 17:22:14,689 Node[0] Epoch[7] Batch [160-180]	Speed: 37668.95 samples/sec	accuracy=nan
2023-03-20 17:22:16,423 Node[0] Epoch[7] Batch [180-200]	Speed: 37630.04 samples/sec	accuracy=nan
2023-03-20 17:22:18,158 Node[0] Epoch[7] Batch [200-220]	Speed: 37627.34 samples/sec	accuracy=nan
2023-03-20 17:22:19,894 Node[0] Epoch[7] Batch [220-240]	Speed: 37611.41 samples/sec	accuracy=nan
2023-03-20 17:22:21,628 Node[0] Epoch[7] Batch [240-260]	Speed: 37641.61 samples/sec	accuracy=nan
2023-03-20 17:22:23,363 Node[0] Epoch[7] Batch [260-280]	Speed: 37619.99 samples/sec	accuracy=nan
2023-03-20 17:22:25,097 Node[0] Epoch[7] Batch [280-300]	Speed: 37647.21 samples/sec	accuracy=nan
2023-03-20 17:22:26,830 Node[0] Epoch[7] Batch [300-320]	Speed: 37683.21 samples/sec	accuracy=nan
2023-03-20 17:22:28,562 Node[0] Epoch[7] Batch [320-340]	Speed: 37673.46 samples/sec	accuracy=nan
2023-03-20 17:22:30,297 Node[0] Epoch[7] Batch [340-360]	Speed: 37630.80 samples/sec	accuracy=nan
2023-03-20 17:22:32,032 Node[0] Epoch[7] Batch [360-380]	Speed: 37622.82 samples/sec	accuracy=nan
2023-03-20 17:22:33,072 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,072 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,072 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350953072, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 17:22:33,073 Node[0] Epoch[7] Time cost=33.992
:::MLLOG {"namespace": "", "time_ms": 1679350953073, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37690.686728699045}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679350953073, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 17:22:33,073 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,073 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,073 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,073 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,073 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,073 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,074 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,074 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,074 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,074 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,075 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,075 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:33,075 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:22:34,893 Node[0] Epoch[8] Batch [0-20]	Speed: 37671.30 samples/sec	accuracy=nan
2023-03-20 17:22:36,627 Node[0] Epoch[8] Batch [20-40]	Speed: 37645.35 samples/sec	accuracy=nan
2023-03-20 17:22:38,360 Node[0] Epoch[8] Batch [40-60]	Speed: 37675.45 samples/sec	accuracy=nan
2023-03-20 17:22:40,094 Node[0] Epoch[8] Batch [60-80]	Speed: 37646.39 samples/sec	accuracy=nan
2023-03-20 17:22:41,828 Node[0] Epoch[8] Batch [80-100]	Speed: 37633.39 samples/sec	accuracy=nan
2023-03-20 17:22:43,561 Node[0] Epoch[8] Batch [100-120]	Speed: 37677.72 samples/sec	accuracy=nan
2023-03-20 17:22:45,294 Node[0] Epoch[8] Batch [120-140]	Speed: 37657.44 samples/sec	accuracy=nan
2023-03-20 17:22:47,026 Node[0] Epoch[8] Batch [140-160]	Speed: 37694.20 samples/sec	accuracy=nan
2023-03-20 17:22:48,756 Node[0] Epoch[8] Batch [160-180]	Speed: 37731.47 samples/sec	accuracy=nan
2023-03-20 17:22:50,489 Node[0] Epoch[8] Batch [180-200]	Speed: 37669.54 samples/sec	accuracy=nan
2023-03-20 17:22:52,224 Node[0] Epoch[8] Batch [200-220]	Speed: 37640.89 samples/sec	accuracy=nan
2023-03-20 17:22:53,958 Node[0] Epoch[8] Batch [220-240]	Speed: 37629.88 samples/sec	accuracy=nan
2023-03-20 17:22:55,691 Node[0] Epoch[8] Batch [240-260]	Speed: 37676.51 samples/sec	accuracy=nan
2023-03-20 17:22:57,427 Node[0] Epoch[8] Batch [260-280]	Speed: 37606.39 samples/sec	accuracy=nan
2023-03-20 17:22:59,161 Node[0] Epoch[8] Batch [280-300]	Speed: 37653.25 samples/sec	accuracy=nan
2023-03-20 17:23:00,893 Node[0] Epoch[8] Batch [300-320]	Speed: 37683.03 samples/sec	accuracy=nan
2023-03-20 17:23:02,626 Node[0] Epoch[8] Batch [320-340]	Speed: 37672.47 samples/sec	accuracy=nan
2023-03-20 17:23:04,359 Node[0] Epoch[8] Batch [340-360]	Speed: 37669.13 samples/sec	accuracy=nan
2023-03-20 17:23:06,092 Node[0] Epoch[8] Batch [360-380]	Speed: 37658.73 samples/sec	accuracy=nan
2023-03-20 17:23:07,043 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,043 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,043 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,043 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350987043, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 17:23:07,044 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,044 Node[0] Epoch[8] Time cost=33.971
2023-03-20 17:23:07,044 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350987044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37713.61336565676}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-20 17:23:07,044 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,044 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350987045, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 17:23:07,044 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,045 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,045 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,045 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,045 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,045 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,046 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:07,046 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:08,866 Node[0] Epoch[9] Batch [0-20]	Speed: 37671.55 samples/sec	accuracy=nan
2023-03-20 17:23:10,602 Node[0] Epoch[9] Batch [20-40]	Speed: 37607.06 samples/sec	accuracy=nan
2023-03-20 17:23:12,337 Node[0] Epoch[9] Batch [40-60]	Speed: 37620.91 samples/sec	accuracy=nan
2023-03-20 17:23:14,068 Node[0] Epoch[9] Batch [60-80]	Speed: 37722.77 samples/sec	accuracy=nan
2023-03-20 17:23:15,799 Node[0] Epoch[9] Batch [80-100]	Speed: 37714.32 samples/sec	accuracy=nan
2023-03-20 17:23:17,531 Node[0] Epoch[9] Batch [100-120]	Speed: 37686.78 samples/sec	accuracy=nan
2023-03-20 17:23:19,265 Node[0] Epoch[9] Batch [120-140]	Speed: 37647.33 samples/sec	accuracy=nan
2023-03-20 17:23:20,996 Node[0] Epoch[9] Batch [140-160]	Speed: 37698.11 samples/sec	accuracy=nan
2023-03-20 17:23:22,729 Node[0] Epoch[9] Batch [160-180]	Speed: 37676.45 samples/sec	accuracy=nan
2023-03-20 17:23:24,465 Node[0] Epoch[9] Batch [180-200]	Speed: 37591.80 samples/sec	accuracy=nan
2023-03-20 17:23:26,198 Node[0] Epoch[9] Batch [200-220]	Speed: 37680.05 samples/sec	accuracy=nan
2023-03-20 17:23:27,931 Node[0] Epoch[9] Batch [220-240]	Speed: 37672.62 samples/sec	accuracy=nan
2023-03-20 17:23:29,664 Node[0] Epoch[9] Batch [240-260]	Speed: 37657.94 samples/sec	accuracy=nan
2023-03-20 17:23:31,397 Node[0] Epoch[9] Batch [260-280]	Speed: 37680.48 samples/sec	accuracy=nan
2023-03-20 17:23:33,127 Node[0] Epoch[9] Batch [280-300]	Speed: 37720.29 samples/sec	accuracy=nan
2023-03-20 17:23:34,862 Node[0] Epoch[9] Batch [300-320]	Speed: 37644.42 samples/sec	accuracy=nan
2023-03-20 17:23:36,596 Node[0] Epoch[9] Batch [320-340]	Speed: 37646.10 samples/sec	accuracy=nan
2023-03-20 17:23:38,329 Node[0] Epoch[9] Batch [340-360]	Speed: 37670.48 samples/sec	accuracy=nan
2023-03-20 17:23:40,062 Node[0] Epoch[9] Batch [360-380]	Speed: 37664.84 samples/sec	accuracy=nan
2023-03-20 17:23:41,100 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,100 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351021100, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 17:23:41,100 Node[0] Epoch[9] Time cost=34.056
:::MLLOG {"namespace": "", "time_ms": 1679351021100, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37619.822069683236}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 17:23:41,100 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351021101, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 17:23:41,101 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,102 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,101 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,102 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,102 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,103 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:41,103 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:23:42,922 Node[0] Epoch[10] Batch [0-20]	Speed: 37616.53 samples/sec	accuracy=nan
2023-03-20 17:23:44,654 Node[0] Epoch[10] Batch [20-40]	Speed: 37708.06 samples/sec	accuracy=nan
2023-03-20 17:23:46,387 Node[0] Epoch[10] Batch [40-60]	Speed: 37662.41 samples/sec	accuracy=nan
2023-03-20 17:23:48,117 Node[0] Epoch[10] Batch [60-80]	Speed: 37725.19 samples/sec	accuracy=nan
2023-03-20 17:23:49,852 Node[0] Epoch[10] Batch [80-100]	Speed: 37639.65 samples/sec	accuracy=nan
2023-03-20 17:23:51,582 Node[0] Epoch[10] Batch [100-120]	Speed: 37715.29 samples/sec	accuracy=nan
2023-03-20 17:23:53,314 Node[0] Epoch[10] Batch [120-140]	Speed: 37701.89 samples/sec	accuracy=nan
2023-03-20 17:23:55,047 Node[0] Epoch[10] Batch [140-160]	Speed: 37659.31 samples/sec	accuracy=nan
2023-03-20 17:23:56,780 Node[0] Epoch[10] Batch [160-180]	Speed: 37668.96 samples/sec	accuracy=nan
2023-03-20 17:23:58,514 Node[0] Epoch[10] Batch [180-200]	Speed: 37657.75 samples/sec	accuracy=nan
2023-03-20 17:24:00,245 Node[0] Epoch[10] Batch [200-220]	Speed: 37708.35 samples/sec	accuracy=nan
2023-03-20 17:24:01,976 Node[0] Epoch[10] Batch [220-240]	Speed: 37706.86 samples/sec	accuracy=nan
2023-03-20 17:24:03,711 Node[0] Epoch[10] Batch [240-260]	Speed: 37635.25 samples/sec	accuracy=nan
2023-03-20 17:24:05,443 Node[0] Epoch[10] Batch [260-280]	Speed: 37682.88 samples/sec	accuracy=nan
2023-03-20 17:24:07,178 Node[0] Epoch[10] Batch [280-300]	Speed: 37632.34 samples/sec	accuracy=nan
2023-03-20 17:24:08,911 Node[0] Epoch[10] Batch [300-320]	Speed: 37670.25 samples/sec	accuracy=nan
2023-03-20 17:24:10,646 Node[0] Epoch[10] Batch [320-340]	Speed: 37632.95 samples/sec	accuracy=nan
2023-03-20 17:24:12,378 Node[0] Epoch[10] Batch [340-360]	Speed: 37680.14 samples/sec	accuracy=nan
2023-03-20 17:24:14,112 Node[0] Epoch[10] Batch [360-380]	Speed: 37641.45 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351055063, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 17:24:15,064 Node[0] Epoch[10] Time cost=33.963
:::MLLOG {"namespace": "", "time_ms": 1679351055064, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37722.30367903953}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679351055145, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 17:24:15,938 Node[0] Epoch[10] Validation-accuracy=0.536960
2023-03-20 17:24:15,938 Node[0] Epoch[10] Validation-correct-count=1678.000000
2023-03-20 17:24:15,938 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351055986, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679351055986, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52556, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679351055986, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 17:24:15,986 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351055986, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 17:24:15,986 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351055987, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 17:24:15,986 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,986 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:15,987 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:17,728 Node[0] Epoch[11] Batch [0-20]	Speed: 37681.25 samples/sec	accuracy=nan
2023-03-20 17:24:19,462 Node[0] Epoch[11] Batch [20-40]	Speed: 37645.51 samples/sec	accuracy=nan
2023-03-20 17:24:21,196 Node[0] Epoch[11] Batch [40-60]	Speed: 37643.58 samples/sec	accuracy=nan
2023-03-20 17:24:22,930 Node[0] Epoch[11] Batch [60-80]	Speed: 37643.65 samples/sec	accuracy=nan
2023-03-20 17:24:24,665 Node[0] Epoch[11] Batch [80-100]	Speed: 37638.69 samples/sec	accuracy=nan
2023-03-20 17:24:26,396 Node[0] Epoch[11] Batch [100-120]	Speed: 37703.70 samples/sec	accuracy=nan
2023-03-20 17:24:28,128 Node[0] Epoch[11] Batch [120-140]	Speed: 37691.07 samples/sec	accuracy=nan
2023-03-20 17:24:29,862 Node[0] Epoch[11] Batch [140-160]	Speed: 37655.66 samples/sec	accuracy=nan
2023-03-20 17:24:31,594 Node[0] Epoch[11] Batch [160-180]	Speed: 37678.83 samples/sec	accuracy=nan
2023-03-20 17:24:33,327 Node[0] Epoch[11] Batch [180-200]	Speed: 37681.53 samples/sec	accuracy=nan
2023-03-20 17:24:35,060 Node[0] Epoch[11] Batch [200-220]	Speed: 37661.65 samples/sec	accuracy=nan
2023-03-20 17:24:36,792 Node[0] Epoch[11] Batch [220-240]	Speed: 37678.91 samples/sec	accuracy=nan
2023-03-20 17:24:38,523 Node[0] Epoch[11] Batch [240-260]	Speed: 37726.69 samples/sec	accuracy=nan
2023-03-20 17:24:40,259 Node[0] Epoch[11] Batch [260-280]	Speed: 37606.87 samples/sec	accuracy=nan
2023-03-20 17:24:41,994 Node[0] Epoch[11] Batch [280-300]	Speed: 37621.45 samples/sec	accuracy=nan
2023-03-20 17:24:43,726 Node[0] Epoch[11] Batch [300-320]	Speed: 37692.66 samples/sec	accuracy=nan
2023-03-20 17:24:45,456 Node[0] Epoch[11] Batch [320-340]	Speed: 37723.46 samples/sec	accuracy=nan
2023-03-20 17:24:47,191 Node[0] Epoch[11] Batch [340-360]	Speed: 37630.41 samples/sec	accuracy=nan
2023-03-20 17:24:48,924 Node[0] Epoch[11] Batch [360-380]	Speed: 37663.00 samples/sec	accuracy=nan
2023-03-20 17:24:49,963 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351089963, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 17:24:49,963 Node[0] Epoch[11] Time cost=33.976
2023-03-20 17:24:49,963 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351089963, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37707.47444862226}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 17:24:49,963 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351089964, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 17:24:49,964 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,964 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,965 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,965 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,965 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,965 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,966 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:49,966 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:24:51,783 Node[0] Epoch[12] Batch [0-20]	Speed: 37685.92 samples/sec	accuracy=nan
2023-03-20 17:24:53,517 Node[0] Epoch[12] Batch [20-40]	Speed: 37633.49 samples/sec	accuracy=nan
2023-03-20 17:24:55,248 Node[0] Epoch[12] Batch [40-60]	Speed: 37717.58 samples/sec	accuracy=nan
2023-03-20 17:24:56,981 Node[0] Epoch[12] Batch [60-80]	Speed: 37667.97 samples/sec	accuracy=nan
2023-03-20 17:24:58,716 Node[0] Epoch[12] Batch [80-100]	Speed: 37623.27 samples/sec	accuracy=nan
2023-03-20 17:25:00,448 Node[0] Epoch[12] Batch [100-120]	Speed: 37703.39 samples/sec	accuracy=nan
2023-03-20 17:25:02,180 Node[0] Epoch[12] Batch [120-140]	Speed: 37675.48 samples/sec	accuracy=nan
2023-03-20 17:25:03,912 Node[0] Epoch[12] Batch [140-160]	Speed: 37687.14 samples/sec	accuracy=nan
2023-03-20 17:25:05,648 Node[0] Epoch[12] Batch [160-180]	Speed: 37622.43 samples/sec	accuracy=nan
2023-03-20 17:25:07,382 Node[0] Epoch[12] Batch [180-200]	Speed: 37647.41 samples/sec	accuracy=nan
2023-03-20 17:25:09,114 Node[0] Epoch[12] Batch [200-220]	Speed: 37689.25 samples/sec	accuracy=nan
2023-03-20 17:25:10,848 Node[0] Epoch[12] Batch [220-240]	Speed: 37643.31 samples/sec	accuracy=nan
2023-03-20 17:25:12,578 Node[0] Epoch[12] Batch [240-260]	Speed: 37721.16 samples/sec	accuracy=nan
2023-03-20 17:25:14,313 Node[0] Epoch[12] Batch [260-280]	Speed: 37623.35 samples/sec	accuracy=nan
2023-03-20 17:25:16,046 Node[0] Epoch[12] Batch [280-300]	Speed: 37687.45 samples/sec	accuracy=nan
2023-03-20 17:25:17,778 Node[0] Epoch[12] Batch [300-320]	Speed: 37679.65 samples/sec	accuracy=nan
2023-03-20 17:25:19,509 Node[0] Epoch[12] Batch [320-340]	Speed: 37707.14 samples/sec	accuracy=nan
2023-03-20 17:25:21,259 Node[0] Epoch[12] Batch [340-360]	Speed: 37311.23 samples/sec	accuracy=nan
2023-03-20 17:25:22,995 Node[0] Epoch[12] Batch [360-380]	Speed: 37594.31 samples/sec	accuracy=nan
2023-03-20 17:25:23,947 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,947 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,947 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,947 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,948 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,949 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351123948, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 17:25:23,949 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,949 Node[0] Epoch[12] Time cost=33.985
:::MLLOG {"namespace": "", "time_ms": 1679351123949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37697.74736526532}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 17:25:23,949 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,949 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351123950, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 17:25:23,950 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:23,950 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:25,768 Node[0] Epoch[13] Batch [0-20]	Speed: 37720.44 samples/sec	accuracy=nan
2023-03-20 17:25:27,500 Node[0] Epoch[13] Batch [20-40]	Speed: 37699.14 samples/sec	accuracy=nan
2023-03-20 17:25:29,233 Node[0] Epoch[13] Batch [40-60]	Speed: 37659.84 samples/sec	accuracy=nan
2023-03-20 17:25:30,965 Node[0] Epoch[13] Batch [60-80]	Speed: 37696.80 samples/sec	accuracy=nan
2023-03-20 17:25:32,696 Node[0] Epoch[13] Batch [80-100]	Speed: 37710.40 samples/sec	accuracy=nan
2023-03-20 17:25:34,428 Node[0] Epoch[13] Batch [100-120]	Speed: 37688.39 samples/sec	accuracy=nan
2023-03-20 17:25:36,160 Node[0] Epoch[13] Batch [120-140]	Speed: 37693.74 samples/sec	accuracy=nan
2023-03-20 17:25:37,892 Node[0] Epoch[13] Batch [140-160]	Speed: 37688.96 samples/sec	accuracy=nan
2023-03-20 17:25:39,624 Node[0] Epoch[13] Batch [160-180]	Speed: 37682.62 samples/sec	accuracy=nan
2023-03-20 17:25:41,358 Node[0] Epoch[13] Batch [180-200]	Speed: 37656.93 samples/sec	accuracy=nan
2023-03-20 17:25:43,096 Node[0] Epoch[13] Batch [200-220]	Speed: 37569.28 samples/sec	accuracy=nan
2023-03-20 17:25:44,829 Node[0] Epoch[13] Batch [220-240]	Speed: 37663.59 samples/sec	accuracy=nan
2023-03-20 17:25:46,561 Node[0] Epoch[13] Batch [240-260]	Speed: 37677.61 samples/sec	accuracy=nan
2023-03-20 17:25:48,293 Node[0] Epoch[13] Batch [260-280]	Speed: 37698.65 samples/sec	accuracy=nan
2023-03-20 17:25:50,024 Node[0] Epoch[13] Batch [280-300]	Speed: 37706.10 samples/sec	accuracy=nan
2023-03-20 17:25:51,756 Node[0] Epoch[13] Batch [300-320]	Speed: 37692.47 samples/sec	accuracy=nan
2023-03-20 17:25:53,486 Node[0] Epoch[13] Batch [320-340]	Speed: 37740.78 samples/sec	accuracy=nan
2023-03-20 17:25:55,219 Node[0] Epoch[13] Batch [340-360]	Speed: 37660.96 samples/sec	accuracy=nan
2023-03-20 17:25:56,953 Node[0] Epoch[13] Batch [360-380]	Speed: 37649.52 samples/sec	accuracy=nan
2023-03-20 17:25:57,991 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,991 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,991 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351157991, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 17:25:57,992 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,992 Node[0] Epoch[13] Time cost=34.042
:::MLLOG {"namespace": "", "time_ms": 1679351157992, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37634.61932548356}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 17:25:57,992 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,992 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351157992, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 17:25:57,992 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,993 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,994 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,994 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:57,994 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:25:59,813 Node[0] Epoch[14] Batch [0-20]	Speed: 37638.40 samples/sec	accuracy=nan
2023-03-20 17:26:01,546 Node[0] Epoch[14] Batch [20-40]	Speed: 37669.49 samples/sec	accuracy=nan
2023-03-20 17:26:03,279 Node[0] Epoch[14] Batch [40-60]	Speed: 37671.40 samples/sec	accuracy=nan
2023-03-20 17:26:05,016 Node[0] Epoch[14] Batch [60-80]	Speed: 37587.27 samples/sec	accuracy=nan
2023-03-20 17:26:06,747 Node[0] Epoch[14] Batch [80-100]	Speed: 37711.19 samples/sec	accuracy=nan
2023-03-20 17:26:08,482 Node[0] Epoch[14] Batch [100-120]	Speed: 37618.44 samples/sec	accuracy=nan
2023-03-20 17:26:10,217 Node[0] Epoch[14] Batch [120-140]	Speed: 37614.75 samples/sec	accuracy=nan
2023-03-20 17:26:11,952 Node[0] Epoch[14] Batch [140-160]	Speed: 37645.03 samples/sec	accuracy=nan
2023-03-20 17:26:13,686 Node[0] Epoch[14] Batch [160-180]	Speed: 37644.66 samples/sec	accuracy=nan
2023-03-20 17:26:15,418 Node[0] Epoch[14] Batch [180-200]	Speed: 37679.14 samples/sec	accuracy=nan
2023-03-20 17:26:17,150 Node[0] Epoch[14] Batch [200-220]	Speed: 37699.86 samples/sec	accuracy=nan
2023-03-20 17:26:18,885 Node[0] Epoch[14] Batch [220-240]	Speed: 37623.55 samples/sec	accuracy=nan
2023-03-20 17:26:20,617 Node[0] Epoch[14] Batch [240-260]	Speed: 37692.07 samples/sec	accuracy=nan
2023-03-20 17:26:22,349 Node[0] Epoch[14] Batch [260-280]	Speed: 37676.41 samples/sec	accuracy=nan
2023-03-20 17:26:24,084 Node[0] Epoch[14] Batch [280-300]	Speed: 37643.65 samples/sec	accuracy=nan
2023-03-20 17:26:25,818 Node[0] Epoch[14] Batch [300-320]	Speed: 37631.75 samples/sec	accuracy=nan
2023-03-20 17:26:27,551 Node[0] Epoch[14] Batch [320-340]	Speed: 37670.33 samples/sec	accuracy=nan
2023-03-20 17:26:29,287 Node[0] Epoch[14] Batch [340-360]	Speed: 37610.64 samples/sec	accuracy=nan
2023-03-20 17:26:31,021 Node[0] Epoch[14] Batch [360-380]	Speed: 37646.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351191974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 17:26:31,975 Node[0] Epoch[14] Time cost=33.982
:::MLLOG {"namespace": "", "time_ms": 1679351191975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37701.04894777764}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679351192055, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 17:26:32,776 Node[0] Epoch[14] Validation-accuracy=0.596800
2023-03-20 17:26:32,777 Node[0] Epoch[14] Validation-correct-count=1865.000000
2023-03-20 17:26:32,777 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351192925, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679351192925, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59836, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679351192925, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679351192925, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 17:26:32,925 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:32,925 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351192925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 17:26:32,925 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:26:34,665 Node[0] Epoch[15] Batch [0-20]	Speed: 37758.94 samples/sec	accuracy=nan
2023-03-20 17:26:36,398 Node[0] Epoch[15] Batch [20-40]	Speed: 37671.60 samples/sec	accuracy=nan
2023-03-20 17:26:38,132 Node[0] Epoch[15] Batch [40-60]	Speed: 37651.91 samples/sec	accuracy=nan
2023-03-20 17:26:39,866 Node[0] Epoch[15] Batch [60-80]	Speed: 37643.36 samples/sec	accuracy=nan
2023-03-20 17:26:41,597 Node[0] Epoch[15] Batch [80-100]	Speed: 37707.90 samples/sec	accuracy=nan
2023-03-20 17:26:43,327 Node[0] Epoch[15] Batch [100-120]	Speed: 37726.67 samples/sec	accuracy=nan
2023-03-20 17:26:45,059 Node[0] Epoch[15] Batch [120-140]	Speed: 37700.08 samples/sec	accuracy=nan
2023-03-20 17:26:46,791 Node[0] Epoch[15] Batch [140-160]	Speed: 37681.26 samples/sec	accuracy=nan
2023-03-20 17:26:48,521 Node[0] Epoch[15] Batch [160-180]	Speed: 37731.54 samples/sec	accuracy=nan
2023-03-20 17:26:50,252 Node[0] Epoch[15] Batch [180-200]	Speed: 37718.37 samples/sec	accuracy=nan
2023-03-20 17:26:51,982 Node[0] Epoch[15] Batch [200-220]	Speed: 37731.81 samples/sec	accuracy=nan
2023-03-20 17:26:53,713 Node[0] Epoch[15] Batch [220-240]	Speed: 37715.23 samples/sec	accuracy=nan
2023-03-20 17:26:55,446 Node[0] Epoch[15] Batch [240-260]	Speed: 37677.26 samples/sec	accuracy=nan
2023-03-20 17:26:57,179 Node[0] Epoch[15] Batch [260-280]	Speed: 37666.66 samples/sec	accuracy=nan
2023-03-20 17:26:58,912 Node[0] Epoch[15] Batch [280-300]	Speed: 37670.00 samples/sec	accuracy=nan
2023-03-20 17:27:00,643 Node[0] Epoch[15] Batch [300-320]	Speed: 37700.73 samples/sec	accuracy=nan
2023-03-20 17:27:02,376 Node[0] Epoch[15] Batch [320-340]	Speed: 37679.56 samples/sec	accuracy=nan
2023-03-20 17:27:04,111 Node[0] Epoch[15] Batch [340-360]	Speed: 37620.02 samples/sec	accuracy=nan
2023-03-20 17:27:05,843 Node[0] Epoch[15] Batch [360-380]	Speed: 37696.74 samples/sec	accuracy=nan
2023-03-20 17:27:06,882 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,882 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351226882, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 17:27:06,883 Node[0] Epoch[15] Time cost=33.957
:::MLLOG {"namespace": "", "time_ms": 1679351226883, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37728.76556637292}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-20 17:27:06,883 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351226883, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 17:27:06,883 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,883 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,883 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,883 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,883 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,883 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,884 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,884 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,884 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,885 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,885 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,885 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:06,886 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:08,700 Node[0] Epoch[16] Batch [0-20]	Speed: 37719.76 samples/sec	accuracy=nan
2023-03-20 17:27:10,432 Node[0] Epoch[16] Batch [20-40]	Speed: 37690.37 samples/sec	accuracy=nan
2023-03-20 17:27:12,162 Node[0] Epoch[16] Batch [40-60]	Speed: 37725.27 samples/sec	accuracy=nan
2023-03-20 17:27:13,895 Node[0] Epoch[16] Batch [60-80]	Speed: 37670.20 samples/sec	accuracy=nan
2023-03-20 17:27:15,627 Node[0] Epoch[16] Batch [80-100]	Speed: 37695.14 samples/sec	accuracy=nan
2023-03-20 17:27:17,359 Node[0] Epoch[16] Batch [100-120]	Speed: 37680.89 samples/sec	accuracy=nan
2023-03-20 17:27:19,092 Node[0] Epoch[16] Batch [120-140]	Speed: 37677.41 samples/sec	accuracy=nan
2023-03-20 17:27:20,825 Node[0] Epoch[16] Batch [140-160]	Speed: 37669.12 samples/sec	accuracy=nan
2023-03-20 17:27:22,557 Node[0] Epoch[16] Batch [160-180]	Speed: 37695.95 samples/sec	accuracy=nan
2023-03-20 17:27:24,288 Node[0] Epoch[16] Batch [180-200]	Speed: 37709.76 samples/sec	accuracy=nan
2023-03-20 17:27:26,018 Node[0] Epoch[16] Batch [200-220]	Speed: 37718.85 samples/sec	accuracy=nan
2023-03-20 17:27:27,750 Node[0] Epoch[16] Batch [220-240]	Speed: 37693.67 samples/sec	accuracy=nan
2023-03-20 17:27:29,485 Node[0] Epoch[16] Batch [240-260]	Speed: 37637.06 samples/sec	accuracy=nan
2023-03-20 17:27:31,217 Node[0] Epoch[16] Batch [260-280]	Speed: 37680.59 samples/sec	accuracy=nan
2023-03-20 17:27:32,944 Node[0] Epoch[16] Batch [280-300]	Speed: 37799.37 samples/sec	accuracy=nan
2023-03-20 17:27:34,678 Node[0] Epoch[16] Batch [300-320]	Speed: 37655.82 samples/sec	accuracy=nan
2023-03-20 17:27:36,412 Node[0] Epoch[16] Batch [320-340]	Speed: 37639.06 samples/sec	accuracy=nan
2023-03-20 17:27:38,145 Node[0] Epoch[16] Batch [340-360]	Speed: 37679.73 samples/sec	accuracy=nan
2023-03-20 17:27:39,879 Node[0] Epoch[16] Batch [360-380]	Speed: 37644.95 samples/sec	accuracy=nan
2023-03-20 17:27:40,832 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,832 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,833 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,833 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,833 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351260832, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 17:27:40,833 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,834 Node[0] Epoch[16] Time cost=33.950
2023-03-20 17:27:40,833 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351260834, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37736.68186522559}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679351260834, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 17:27:40,834 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,834 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,834 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,834 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,834 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,835 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,835 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,835 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:40,836 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:27:42,653 Node[0] Epoch[17] Batch [0-20]	Speed: 37698.12 samples/sec	accuracy=nan
2023-03-20 17:27:44,382 Node[0] Epoch[17] Batch [20-40]	Speed: 37754.02 samples/sec	accuracy=nan
2023-03-20 17:27:46,117 Node[0] Epoch[17] Batch [40-60]	Speed: 37639.29 samples/sec	accuracy=nan
2023-03-20 17:27:47,846 Node[0] Epoch[17] Batch [60-80]	Speed: 37746.93 samples/sec	accuracy=nan
2023-03-20 17:27:49,582 Node[0] Epoch[17] Batch [80-100]	Speed: 37605.66 samples/sec	accuracy=nan
2023-03-20 17:27:51,311 Node[0] Epoch[17] Batch [100-120]	Speed: 37763.70 samples/sec	accuracy=nan
2023-03-20 17:27:53,043 Node[0] Epoch[17] Batch [120-140]	Speed: 37687.23 samples/sec	accuracy=nan
2023-03-20 17:27:54,776 Node[0] Epoch[17] Batch [140-160]	Speed: 37679.63 samples/sec	accuracy=nan
2023-03-20 17:27:56,508 Node[0] Epoch[17] Batch [160-180]	Speed: 37679.09 samples/sec	accuracy=nan
2023-03-20 17:27:58,241 Node[0] Epoch[17] Batch [180-200]	Speed: 37666.29 samples/sec	accuracy=nan
2023-03-20 17:27:59,974 Node[0] Epoch[17] Batch [200-220]	Speed: 37664.01 samples/sec	accuracy=nan
2023-03-20 17:28:01,707 Node[0] Epoch[17] Batch [220-240]	Speed: 37677.97 samples/sec	accuracy=nan
2023-03-20 17:28:03,443 Node[0] Epoch[17] Batch [240-260]	Speed: 37607.56 samples/sec	accuracy=nan
2023-03-20 17:28:05,174 Node[0] Epoch[17] Batch [260-280]	Speed: 37715.16 samples/sec	accuracy=nan
2023-03-20 17:28:06,905 Node[0] Epoch[17] Batch [280-300]	Speed: 37694.85 samples/sec	accuracy=nan
2023-03-20 17:28:08,636 Node[0] Epoch[17] Batch [300-320]	Speed: 37726.04 samples/sec	accuracy=nan
2023-03-20 17:28:10,371 Node[0] Epoch[17] Batch [320-340]	Speed: 37617.08 samples/sec	accuracy=nan
2023-03-20 17:28:12,104 Node[0] Epoch[17] Batch [340-360]	Speed: 37681.94 samples/sec	accuracy=nan
2023-03-20 17:28:13,838 Node[0] Epoch[17] Batch [360-380]	Speed: 37634.29 samples/sec	accuracy=nan
2023-03-20 17:28:14,874 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,874 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,875 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351294874, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 17:28:14,875 Node[0] Epoch[17] Time cost=34.041
:::MLLOG {"namespace": "", "time_ms": 1679351294875, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37636.282049915746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679351294875, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 17:28:14,875 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,875 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,875 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,876 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,875 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,876 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,876 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,876 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,876 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,877 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,877 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,877 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:14,877 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:16,694 Node[0] Epoch[18] Batch [0-20]	Speed: 37671.47 samples/sec	accuracy=nan
2023-03-20 17:28:18,427 Node[0] Epoch[18] Batch [20-40]	Speed: 37661.90 samples/sec	accuracy=nan
2023-03-20 17:28:20,164 Node[0] Epoch[18] Batch [40-60]	Speed: 37585.36 samples/sec	accuracy=nan
2023-03-20 17:28:21,897 Node[0] Epoch[18] Batch [60-80]	Speed: 37670.63 samples/sec	accuracy=nan
2023-03-20 17:28:23,632 Node[0] Epoch[18] Batch [80-100]	Speed: 37613.57 samples/sec	accuracy=nan
2023-03-20 17:28:25,364 Node[0] Epoch[18] Batch [100-120]	Speed: 37694.33 samples/sec	accuracy=nan
2023-03-20 17:28:27,094 Node[0] Epoch[18] Batch [120-140]	Speed: 37741.87 samples/sec	accuracy=nan
2023-03-20 17:28:28,827 Node[0] Epoch[18] Batch [140-160]	Speed: 37673.50 samples/sec	accuracy=nan
2023-03-20 17:28:30,557 Node[0] Epoch[18] Batch [160-180]	Speed: 37719.73 samples/sec	accuracy=nan
2023-03-20 17:28:32,288 Node[0] Epoch[18] Batch [180-200]	Speed: 37718.32 samples/sec	accuracy=nan
2023-03-20 17:28:34,020 Node[0] Epoch[18] Batch [200-220]	Speed: 37699.53 samples/sec	accuracy=nan
2023-03-20 17:28:35,755 Node[0] Epoch[18] Batch [220-240]	Speed: 37610.47 samples/sec	accuracy=nan
2023-03-20 17:28:37,489 Node[0] Epoch[18] Batch [240-260]	Speed: 37656.51 samples/sec	accuracy=nan
2023-03-20 17:28:39,220 Node[0] Epoch[18] Batch [260-280]	Speed: 37713.44 samples/sec	accuracy=nan
2023-03-20 17:28:40,951 Node[0] Epoch[18] Batch [280-300]	Speed: 37702.98 samples/sec	accuracy=nan
2023-03-20 17:28:42,686 Node[0] Epoch[18] Batch [300-320]	Speed: 37636.49 samples/sec	accuracy=nan
2023-03-20 17:28:44,420 Node[0] Epoch[18] Batch [320-340]	Speed: 37635.39 samples/sec	accuracy=nan
2023-03-20 17:28:46,152 Node[0] Epoch[18] Batch [340-360]	Speed: 37698.04 samples/sec	accuracy=nan
2023-03-20 17:28:47,883 Node[0] Epoch[18] Batch [360-380]	Speed: 37715.95 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351328834, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 17:28:48,835 Node[0] Epoch[18] Time cost=33.960
:::MLLOG {"namespace": "", "time_ms": 1679351328835, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37725.95175918852}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679351328917, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 17:28:49,640 Node[0] Epoch[18] Validation-accuracy=0.640320
2023-03-20 17:28:49,641 Node[0] Epoch[18] Validation-correct-count=2001.000000
2023-03-20 17:28:49,641 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351329755, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679351329756, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64556, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 17:28:49,756 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351329756, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 17:28:49,756 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351329756, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 17:28:49,756 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:49,756 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351329756, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 17:28:49,756 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:28:51,501 Node[0] Epoch[19] Batch [0-20]	Speed: 37596.07 samples/sec	accuracy=nan
2023-03-20 17:28:53,233 Node[0] Epoch[19] Batch [20-40]	Speed: 37686.84 samples/sec	accuracy=nan
2023-03-20 17:28:54,967 Node[0] Epoch[19] Batch [40-60]	Speed: 37649.17 samples/sec	accuracy=nan
2023-03-20 17:28:56,698 Node[0] Epoch[19] Batch [60-80]	Speed: 37718.98 samples/sec	accuracy=nan
2023-03-20 17:28:58,428 Node[0] Epoch[19] Batch [80-100]	Speed: 37714.65 samples/sec	accuracy=nan
2023-03-20 17:29:00,162 Node[0] Epoch[19] Batch [100-120]	Speed: 37666.26 samples/sec	accuracy=nan
2023-03-20 17:29:01,892 Node[0] Epoch[19] Batch [120-140]	Speed: 37717.59 samples/sec	accuracy=nan
2023-03-20 17:29:03,628 Node[0] Epoch[19] Batch [140-160]	Speed: 37605.82 samples/sec	accuracy=nan
2023-03-20 17:29:05,359 Node[0] Epoch[19] Batch [160-180]	Speed: 37723.26 samples/sec	accuracy=nan
2023-03-20 17:29:07,092 Node[0] Epoch[19] Batch [180-200]	Speed: 37656.82 samples/sec	accuracy=nan
2023-03-20 17:29:08,822 Node[0] Epoch[19] Batch [200-220]	Speed: 37733.10 samples/sec	accuracy=nan
2023-03-20 17:29:10,555 Node[0] Epoch[19] Batch [220-240]	Speed: 37671.34 samples/sec	accuracy=nan
2023-03-20 17:29:12,288 Node[0] Epoch[19] Batch [240-260]	Speed: 37669.10 samples/sec	accuracy=nan
2023-03-20 17:29:14,019 Node[0] Epoch[19] Batch [260-280]	Speed: 37708.40 samples/sec	accuracy=nan
2023-03-20 17:29:15,751 Node[0] Epoch[19] Batch [280-300]	Speed: 37692.79 samples/sec	accuracy=nan
2023-03-20 17:29:17,484 Node[0] Epoch[19] Batch [300-320]	Speed: 37669.66 samples/sec	accuracy=nan
2023-03-20 17:29:19,216 Node[0] Epoch[19] Batch [320-340]	Speed: 37686.18 samples/sec	accuracy=nan
2023-03-20 17:29:20,950 Node[0] Epoch[19] Batch [340-360]	Speed: 37661.75 samples/sec	accuracy=nan
2023-03-20 17:29:22,681 Node[0] Epoch[19] Batch [360-380]	Speed: 37715.51 samples/sec	accuracy=nan
2023-03-20 17:29:23,719 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,719 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351363719, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 17:29:23,720 Node[0] Epoch[19] Time cost=33.963
:::MLLOG {"namespace": "", "time_ms": 1679351363720, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37721.959432047086}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-20 17:29:23,720 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,720 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351363720, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 17:29:23,720 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,720 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,720 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,720 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,721 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,721 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,721 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,721 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,721 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,722 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,722 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:23,722 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:25,537 Node[0] Epoch[20] Batch [0-20]	Speed: 37701.04 samples/sec	accuracy=nan
2023-03-20 17:29:27,268 Node[0] Epoch[20] Batch [20-40]	Speed: 37709.22 samples/sec	accuracy=nan
2023-03-20 17:29:29,003 Node[0] Epoch[20] Batch [40-60]	Speed: 37635.48 samples/sec	accuracy=nan
2023-03-20 17:29:30,739 Node[0] Epoch[20] Batch [60-80]	Speed: 37601.17 samples/sec	accuracy=nan
2023-03-20 17:29:32,470 Node[0] Epoch[20] Batch [80-100]	Speed: 37704.80 samples/sec	accuracy=nan
2023-03-20 17:29:34,206 Node[0] Epoch[20] Batch [100-120]	Speed: 37609.24 samples/sec	accuracy=nan
2023-03-20 17:29:35,940 Node[0] Epoch[20] Batch [120-140]	Speed: 37643.42 samples/sec	accuracy=nan
2023-03-20 17:29:37,674 Node[0] Epoch[20] Batch [140-160]	Speed: 37659.62 samples/sec	accuracy=nan
2023-03-20 17:29:39,408 Node[0] Epoch[20] Batch [160-180]	Speed: 37637.53 samples/sec	accuracy=nan
2023-03-20 17:29:41,142 Node[0] Epoch[20] Batch [180-200]	Speed: 37639.50 samples/sec	accuracy=nan
2023-03-20 17:29:42,874 Node[0] Epoch[20] Batch [200-220]	Speed: 37693.75 samples/sec	accuracy=nan
2023-03-20 17:29:44,609 Node[0] Epoch[20] Batch [220-240]	Speed: 37634.92 samples/sec	accuracy=nan
2023-03-20 17:29:46,342 Node[0] Epoch[20] Batch [240-260]	Speed: 37669.96 samples/sec	accuracy=nan
2023-03-20 17:29:48,079 Node[0] Epoch[20] Batch [260-280]	Speed: 37576.94 samples/sec	accuracy=nan
2023-03-20 17:29:49,816 Node[0] Epoch[20] Batch [280-300]	Speed: 37580.97 samples/sec	accuracy=nan
2023-03-20 17:29:51,548 Node[0] Epoch[20] Batch [300-320]	Speed: 37691.50 samples/sec	accuracy=nan
2023-03-20 17:29:53,280 Node[0] Epoch[20] Batch [320-340]	Speed: 37686.86 samples/sec	accuracy=nan
2023-03-20 17:29:55,013 Node[0] Epoch[20] Batch [340-360]	Speed: 37671.90 samples/sec	accuracy=nan
2023-03-20 17:29:56,746 Node[0] Epoch[20] Batch [360-380]	Speed: 37677.20 samples/sec	accuracy=nan
2023-03-20 17:29:57,698 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,698 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,698 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351397697, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 17:29:57,698 Node[0] Epoch[20] Time cost=33.978
2023-03-20 17:29:57,698 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351397698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37706.172134193344}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 17:29:57,698 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,698 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,698 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,698 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351397698, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 17:29:57,699 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,699 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,699 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,699 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,699 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,699 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,700 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:57,700 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:29:59,519 Node[0] Epoch[21] Batch [0-20]	Speed: 37687.79 samples/sec	accuracy=nan
2023-03-20 17:30:01,256 Node[0] Epoch[21] Batch [20-40]	Speed: 37575.94 samples/sec	accuracy=nan
2023-03-20 17:30:02,989 Node[0] Epoch[21] Batch [40-60]	Speed: 37665.19 samples/sec	accuracy=nan
2023-03-20 17:30:04,723 Node[0] Epoch[21] Batch [60-80]	Speed: 37652.53 samples/sec	accuracy=nan
2023-03-20 17:30:06,457 Node[0] Epoch[21] Batch [80-100]	Speed: 37632.52 samples/sec	accuracy=nan
2023-03-20 17:30:08,189 Node[0] Epoch[21] Batch [100-120]	Speed: 37696.63 samples/sec	accuracy=nan
2023-03-20 17:30:09,921 Node[0] Epoch[21] Batch [120-140]	Speed: 37706.95 samples/sec	accuracy=nan
2023-03-20 17:30:11,652 Node[0] Epoch[21] Batch [140-160]	Speed: 37697.12 samples/sec	accuracy=nan
2023-03-20 17:30:13,385 Node[0] Epoch[21] Batch [160-180]	Speed: 37668.81 samples/sec	accuracy=nan
2023-03-20 17:30:15,119 Node[0] Epoch[21] Batch [180-200]	Speed: 37645.69 samples/sec	accuracy=nan
2023-03-20 17:30:16,853 Node[0] Epoch[21] Batch [200-220]	Speed: 37646.00 samples/sec	accuracy=nan
2023-03-20 17:30:18,588 Node[0] Epoch[21] Batch [220-240]	Speed: 37642.73 samples/sec	accuracy=nan
2023-03-20 17:30:20,320 Node[0] Epoch[21] Batch [240-260]	Speed: 37676.12 samples/sec	accuracy=nan
2023-03-20 17:30:22,052 Node[0] Epoch[21] Batch [260-280]	Speed: 37693.76 samples/sec	accuracy=nan
2023-03-20 17:30:23,787 Node[0] Epoch[21] Batch [280-300]	Speed: 37616.85 samples/sec	accuracy=nan
2023-03-20 17:30:25,520 Node[0] Epoch[21] Batch [300-320]	Speed: 37677.18 samples/sec	accuracy=nan
2023-03-20 17:30:27,252 Node[0] Epoch[21] Batch [320-340]	Speed: 37685.70 samples/sec	accuracy=nan
2023-03-20 17:30:28,984 Node[0] Epoch[21] Batch [340-360]	Speed: 37688.09 samples/sec	accuracy=nan
2023-03-20 17:30:30,718 Node[0] Epoch[21] Batch [360-380]	Speed: 37661.01 samples/sec	accuracy=nan
2023-03-20 17:30:31,753 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351431753, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 17:30:31,754 Node[0] Epoch[21] Time cost=34.055
:::MLLOG {"namespace": "", "time_ms": 1679351431754, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37620.21871047538}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-20 17:30:31,754 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351431754, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 17:30:31,754 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,755 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,756 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,756 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,756 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,757 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,757 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:31,757 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:30:33,572 Node[0] Epoch[22] Batch [0-20]	Speed: 37703.73 samples/sec	accuracy=nan
2023-03-20 17:30:35,303 Node[0] Epoch[22] Batch [20-40]	Speed: 37708.46 samples/sec	accuracy=nan
2023-03-20 17:30:37,036 Node[0] Epoch[22] Batch [40-60]	Speed: 37672.58 samples/sec	accuracy=nan
2023-03-20 17:30:38,766 Node[0] Epoch[22] Batch [60-80]	Speed: 37723.33 samples/sec	accuracy=nan
2023-03-20 17:30:40,497 Node[0] Epoch[22] Batch [80-100]	Speed: 37714.50 samples/sec	accuracy=nan
2023-03-20 17:30:42,231 Node[0] Epoch[22] Batch [100-120]	Speed: 37650.28 samples/sec	accuracy=nan
2023-03-20 17:30:43,962 Node[0] Epoch[22] Batch [120-140]	Speed: 37707.24 samples/sec	accuracy=nan
2023-03-20 17:30:45,695 Node[0] Epoch[22] Batch [140-160]	Speed: 37670.51 samples/sec	accuracy=nan
2023-03-20 17:30:47,427 Node[0] Epoch[22] Batch [160-180]	Speed: 37700.48 samples/sec	accuracy=nan
2023-03-20 17:30:49,158 Node[0] Epoch[22] Batch [180-200]	Speed: 37711.15 samples/sec	accuracy=nan
2023-03-20 17:30:50,891 Node[0] Epoch[22] Batch [200-220]	Speed: 37666.32 samples/sec	accuracy=nan
2023-03-20 17:30:52,624 Node[0] Epoch[22] Batch [220-240]	Speed: 37664.69 samples/sec	accuracy=nan
2023-03-20 17:30:54,359 Node[0] Epoch[22] Batch [240-260]	Speed: 37621.70 samples/sec	accuracy=nan
2023-03-20 17:30:56,092 Node[0] Epoch[22] Batch [260-280]	Speed: 37686.74 samples/sec	accuracy=nan
2023-03-20 17:30:57,822 Node[0] Epoch[22] Batch [280-300]	Speed: 37727.12 samples/sec	accuracy=nan
2023-03-20 17:30:59,557 Node[0] Epoch[22] Batch [300-320]	Speed: 37631.38 samples/sec	accuracy=nan
2023-03-20 17:31:01,288 Node[0] Epoch[22] Batch [320-340]	Speed: 37711.40 samples/sec	accuracy=nan
2023-03-20 17:31:03,021 Node[0] Epoch[22] Batch [340-360]	Speed: 37659.57 samples/sec	accuracy=nan
2023-03-20 17:31:04,753 Node[0] Epoch[22] Batch [360-380]	Speed: 37683.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351465704, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 17:31:05,705 Node[0] Epoch[22] Time cost=33.951
:::MLLOG {"namespace": "", "time_ms": 1679351465705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37736.19981873631}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679351465787, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 17:31:06,564 Node[0] Epoch[22] Validation-accuracy=0.696320
2023-03-20 17:31:06,564 Node[0] Epoch[22] Validation-correct-count=2176.000000
2023-03-20 17:31:06,564 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351466625, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679351466625, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.70376, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679351466625, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 17:31:06,625 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351466625, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 17:31:06,625 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351466626, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 17:31:06,625 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,626 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,626 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:06,625 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:08,370 Node[0] Epoch[23] Batch [0-20]	Speed: 37618.74 samples/sec	accuracy=nan
2023-03-20 17:31:10,106 Node[0] Epoch[23] Batch [20-40]	Speed: 37594.31 samples/sec	accuracy=nan
2023-03-20 17:31:11,838 Node[0] Epoch[23] Batch [40-60]	Speed: 37694.66 samples/sec	accuracy=nan
2023-03-20 17:31:13,569 Node[0] Epoch[23] Batch [60-80]	Speed: 37712.29 samples/sec	accuracy=nan
2023-03-20 17:31:15,302 Node[0] Epoch[23] Batch [80-100]	Speed: 37664.77 samples/sec	accuracy=nan
2023-03-20 17:31:17,034 Node[0] Epoch[23] Batch [100-120]	Speed: 37700.30 samples/sec	accuracy=nan
2023-03-20 17:31:18,767 Node[0] Epoch[23] Batch [120-140]	Speed: 37669.93 samples/sec	accuracy=nan
2023-03-20 17:31:20,500 Node[0] Epoch[23] Batch [140-160]	Speed: 37665.37 samples/sec	accuracy=nan
2023-03-20 17:31:22,232 Node[0] Epoch[23] Batch [160-180]	Speed: 37689.24 samples/sec	accuracy=nan
2023-03-20 17:31:23,965 Node[0] Epoch[23] Batch [180-200]	Speed: 37675.40 samples/sec	accuracy=nan
2023-03-20 17:31:25,697 Node[0] Epoch[23] Batch [200-220]	Speed: 37685.87 samples/sec	accuracy=nan
2023-03-20 17:31:27,428 Node[0] Epoch[23] Batch [220-240]	Speed: 37712.61 samples/sec	accuracy=nan
2023-03-20 17:31:29,162 Node[0] Epoch[23] Batch [240-260]	Speed: 37643.46 samples/sec	accuracy=nan
2023-03-20 17:31:30,895 Node[0] Epoch[23] Batch [260-280]	Speed: 37654.78 samples/sec	accuracy=nan
2023-03-20 17:31:32,628 Node[0] Epoch[23] Batch [280-300]	Speed: 37680.24 samples/sec	accuracy=nan
2023-03-20 17:31:34,361 Node[0] Epoch[23] Batch [300-320]	Speed: 37679.42 samples/sec	accuracy=nan
2023-03-20 17:31:36,091 Node[0] Epoch[23] Batch [320-340]	Speed: 37724.38 samples/sec	accuracy=nan
2023-03-20 17:31:37,824 Node[0] Epoch[23] Batch [340-360]	Speed: 37657.98 samples/sec	accuracy=nan
2023-03-20 17:31:39,558 Node[0] Epoch[23] Batch [360-380]	Speed: 37650.91 samples/sec	accuracy=nan
2023-03-20 17:31:40,595 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,595 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351500595, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 17:31:40,595 Node[0] Epoch[23] Time cost=33.970
:::MLLOG {"namespace": "", "time_ms": 1679351500595, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37715.06072314815}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-20 17:31:40,596 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351500596, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 17:31:40,596 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,596 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,596 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,596 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,596 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,596 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,597 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,597 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,597 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,597 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,597 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,598 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:40,598 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:31:42,414 Node[0] Epoch[24] Batch [0-20]	Speed: 37692.09 samples/sec	accuracy=nan
2023-03-20 17:31:44,147 Node[0] Epoch[24] Batch [20-40]	Speed: 37669.93 samples/sec	accuracy=nan
2023-03-20 17:31:45,880 Node[0] Epoch[24] Batch [40-60]	Speed: 37660.14 samples/sec	accuracy=nan
2023-03-20 17:31:47,613 Node[0] Epoch[24] Batch [60-80]	Speed: 37690.12 samples/sec	accuracy=nan
2023-03-20 17:31:49,348 Node[0] Epoch[24] Batch [80-100]	Speed: 37610.70 samples/sec	accuracy=nan
2023-03-20 17:31:51,080 Node[0] Epoch[24] Batch [100-120]	Speed: 37700.10 samples/sec	accuracy=nan
2023-03-20 17:31:52,813 Node[0] Epoch[24] Batch [120-140]	Speed: 37672.74 samples/sec	accuracy=nan
2023-03-20 17:31:54,544 Node[0] Epoch[24] Batch [140-160]	Speed: 37703.26 samples/sec	accuracy=nan
2023-03-20 17:31:56,277 Node[0] Epoch[24] Batch [160-180]	Speed: 37661.38 samples/sec	accuracy=nan
2023-03-20 17:31:58,013 Node[0] Epoch[24] Batch [180-200]	Speed: 37612.53 samples/sec	accuracy=nan
2023-03-20 17:31:59,748 Node[0] Epoch[24] Batch [200-220]	Speed: 37617.05 samples/sec	accuracy=nan
2023-03-20 17:32:01,482 Node[0] Epoch[24] Batch [220-240]	Speed: 37646.01 samples/sec	accuracy=nan
2023-03-20 17:32:03,217 Node[0] Epoch[24] Batch [240-260]	Speed: 37635.37 samples/sec	accuracy=nan
2023-03-20 17:32:04,951 Node[0] Epoch[24] Batch [260-280]	Speed: 37654.62 samples/sec	accuracy=nan
2023-03-20 17:32:06,685 Node[0] Epoch[24] Batch [280-300]	Speed: 37638.84 samples/sec	accuracy=nan
2023-03-20 17:32:08,416 Node[0] Epoch[24] Batch [300-320]	Speed: 37702.27 samples/sec	accuracy=nan
2023-03-20 17:32:10,147 Node[0] Epoch[24] Batch [320-340]	Speed: 37710.02 samples/sec	accuracy=nan
2023-03-20 17:32:11,883 Node[0] Epoch[24] Batch [340-360]	Speed: 37612.91 samples/sec	accuracy=nan
2023-03-20 17:32:13,616 Node[0] Epoch[24] Batch [360-380]	Speed: 37665.47 samples/sec	accuracy=nan
2023-03-20 17:32:14,568 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,568 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,569 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,569 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,569 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,569 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,570 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,570 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351534568, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 17:32:14,570 Node[0] Epoch[24] Time cost=33.974
:::MLLOG {"namespace": "", "time_ms": 1679351534570, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37710.29317463694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679351534570, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 17:32:14,570 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,570 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,571 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,570 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,571 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,571 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,571 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:14,572 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:16,388 Node[0] Epoch[25] Batch [0-20]	Speed: 37741.48 samples/sec	accuracy=nan
2023-03-20 17:32:18,120 Node[0] Epoch[25] Batch [20-40]	Speed: 37675.51 samples/sec	accuracy=nan
2023-03-20 17:32:19,854 Node[0] Epoch[25] Batch [40-60]	Speed: 37659.88 samples/sec	accuracy=nan
2023-03-20 17:32:21,587 Node[0] Epoch[25] Batch [60-80]	Speed: 37668.76 samples/sec	accuracy=nan
2023-03-20 17:32:23,318 Node[0] Epoch[25] Batch [80-100]	Speed: 37714.12 samples/sec	accuracy=nan
2023-03-20 17:32:25,054 Node[0] Epoch[25] Batch [100-120]	Speed: 37587.99 samples/sec	accuracy=nan
2023-03-20 17:32:26,789 Node[0] Epoch[25] Batch [120-140]	Speed: 37639.46 samples/sec	accuracy=nan
2023-03-20 17:32:28,522 Node[0] Epoch[25] Batch [140-160]	Speed: 37654.33 samples/sec	accuracy=nan
2023-03-20 17:32:30,254 Node[0] Epoch[25] Batch [160-180]	Speed: 37689.67 samples/sec	accuracy=nan
2023-03-20 17:32:31,987 Node[0] Epoch[25] Batch [180-200]	Speed: 37678.80 samples/sec	accuracy=nan
2023-03-20 17:32:33,721 Node[0] Epoch[25] Batch [200-220]	Speed: 37655.29 samples/sec	accuracy=nan
2023-03-20 17:32:35,455 Node[0] Epoch[25] Batch [220-240]	Speed: 37648.34 samples/sec	accuracy=nan
2023-03-20 17:32:37,187 Node[0] Epoch[25] Batch [240-260]	Speed: 37671.28 samples/sec	accuracy=nan
2023-03-20 17:32:38,918 Node[0] Epoch[25] Batch [260-280]	Speed: 37719.18 samples/sec	accuracy=nan
2023-03-20 17:32:40,651 Node[0] Epoch[25] Batch [280-300]	Speed: 37675.45 samples/sec	accuracy=nan
2023-03-20 17:32:42,382 Node[0] Epoch[25] Batch [300-320]	Speed: 37702.57 samples/sec	accuracy=nan
2023-03-20 17:32:44,117 Node[0] Epoch[25] Batch [320-340]	Speed: 37637.59 samples/sec	accuracy=nan
2023-03-20 17:32:45,849 Node[0] Epoch[25] Batch [340-360]	Speed: 37677.62 samples/sec	accuracy=nan
2023-03-20 17:32:47,583 Node[0] Epoch[25] Batch [360-380]	Speed: 37645.36 samples/sec	accuracy=nan
2023-03-20 17:32:48,621 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351568621, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 17:32:48,622 Node[0] Epoch[25] Time cost=34.051
2023-03-20 17:32:48,621 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351568622, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37624.9511274951}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-20 17:32:48,622 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,622 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,622 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351568622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 17:32:48,622 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,622 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,623 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,624 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,625 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:48,625 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:32:50,442 Node[0] Epoch[26] Batch [0-20]	Speed: 37678.22 samples/sec	accuracy=nan
2023-03-20 17:32:52,174 Node[0] Epoch[26] Batch [20-40]	Speed: 37672.97 samples/sec	accuracy=nan
2023-03-20 17:32:53,905 Node[0] Epoch[26] Batch [40-60]	Speed: 37720.83 samples/sec	accuracy=nan
2023-03-20 17:32:55,638 Node[0] Epoch[26] Batch [60-80]	Speed: 37677.47 samples/sec	accuracy=nan
2023-03-20 17:32:57,372 Node[0] Epoch[26] Batch [80-100]	Speed: 37647.01 samples/sec	accuracy=nan
2023-03-20 17:32:59,104 Node[0] Epoch[26] Batch [100-120]	Speed: 37675.04 samples/sec	accuracy=nan
2023-03-20 17:33:00,837 Node[0] Epoch[26] Batch [120-140]	Speed: 37682.83 samples/sec	accuracy=nan
2023-03-20 17:33:02,572 Node[0] Epoch[26] Batch [140-160]	Speed: 37626.70 samples/sec	accuracy=nan
2023-03-20 17:33:04,303 Node[0] Epoch[26] Batch [160-180]	Speed: 37708.86 samples/sec	accuracy=nan
2023-03-20 17:33:06,035 Node[0] Epoch[26] Batch [180-200]	Speed: 37687.27 samples/sec	accuracy=nan
2023-03-20 17:33:07,770 Node[0] Epoch[26] Batch [200-220]	Speed: 37623.54 samples/sec	accuracy=nan
2023-03-20 17:33:09,502 Node[0] Epoch[26] Batch [220-240]	Speed: 37681.44 samples/sec	accuracy=nan
2023-03-20 17:33:11,235 Node[0] Epoch[26] Batch [240-260]	Speed: 37689.05 samples/sec	accuracy=nan
2023-03-20 17:33:12,968 Node[0] Epoch[26] Batch [260-280]	Speed: 37650.55 samples/sec	accuracy=nan
2023-03-20 17:33:14,702 Node[0] Epoch[26] Batch [280-300]	Speed: 37662.66 samples/sec	accuracy=nan
2023-03-20 17:33:16,434 Node[0] Epoch[26] Batch [300-320]	Speed: 37690.33 samples/sec	accuracy=nan
2023-03-20 17:33:18,167 Node[0] Epoch[26] Batch [320-340]	Speed: 37651.20 samples/sec	accuracy=nan
2023-03-20 17:33:19,901 Node[0] Epoch[26] Batch [340-360]	Speed: 37654.45 samples/sec	accuracy=nan
2023-03-20 17:33:21,637 Node[0] Epoch[26] Batch [360-380]	Speed: 37602.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351602591, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 17:33:22,592 Node[0] Epoch[26] Time cost=33.970
:::MLLOG {"namespace": "", "time_ms": 1679351602592, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37714.42623326457}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679351602674, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 17:33:23,393 Node[0] Epoch[26] Validation-accuracy=0.727680
2023-03-20 17:33:23,393 Node[0] Epoch[26] Validation-correct-count=2274.000000
2023-03-20 17:33:23,393 Node[0] Epoch[26] Validation-total-count=3125.000000
2023-03-20 17:33:23,517 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351603516, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-20 17:33:23,517 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351603517, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72554, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-20 17:33:23,516 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,516 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351603517, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 17:33:23,517 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,516 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,516 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:23,517 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351603517, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 17:33:23,517 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351603517, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 17:33:23,517 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:25,263 Node[0] Epoch[27] Batch [0-20]	Speed: 37589.62 samples/sec	accuracy=nan
2023-03-20 17:33:26,998 Node[0] Epoch[27] Batch [20-40]	Speed: 37627.98 samples/sec	accuracy=nan
2023-03-20 17:33:28,734 Node[0] Epoch[27] Batch [40-60]	Speed: 37599.99 samples/sec	accuracy=nan
2023-03-20 17:33:30,467 Node[0] Epoch[27] Batch [60-80]	Speed: 37675.56 samples/sec	accuracy=nan
2023-03-20 17:33:32,201 Node[0] Epoch[27] Batch [80-100]	Speed: 37634.73 samples/sec	accuracy=nan
2023-03-20 17:33:33,934 Node[0] Epoch[27] Batch [100-120]	Speed: 37682.04 samples/sec	accuracy=nan
2023-03-20 17:33:35,669 Node[0] Epoch[27] Batch [120-140]	Speed: 37618.81 samples/sec	accuracy=nan
2023-03-20 17:33:37,403 Node[0] Epoch[27] Batch [140-160]	Speed: 37631.68 samples/sec	accuracy=nan
2023-03-20 17:33:39,135 Node[0] Epoch[27] Batch [160-180]	Speed: 37700.61 samples/sec	accuracy=nan
2023-03-20 17:33:40,868 Node[0] Epoch[27] Batch [180-200]	Speed: 37660.74 samples/sec	accuracy=nan
2023-03-20 17:33:42,600 Node[0] Epoch[27] Batch [200-220]	Speed: 37694.37 samples/sec	accuracy=nan
2023-03-20 17:33:44,333 Node[0] Epoch[27] Batch [220-240]	Speed: 37684.49 samples/sec	accuracy=nan
2023-03-20 17:33:46,067 Node[0] Epoch[27] Batch [240-260]	Speed: 37629.05 samples/sec	accuracy=nan
2023-03-20 17:33:47,800 Node[0] Epoch[27] Batch [260-280]	Speed: 37677.20 samples/sec	accuracy=nan
2023-03-20 17:33:49,533 Node[0] Epoch[27] Batch [280-300]	Speed: 37671.83 samples/sec	accuracy=nan
2023-03-20 17:33:51,266 Node[0] Epoch[27] Batch [300-320]	Speed: 37663.84 samples/sec	accuracy=nan
2023-03-20 17:33:52,999 Node[0] Epoch[27] Batch [320-340]	Speed: 37661.39 samples/sec	accuracy=nan
2023-03-20 17:33:54,736 Node[0] Epoch[27] Batch [340-360]	Speed: 37596.45 samples/sec	accuracy=nan
2023-03-20 17:33:56,470 Node[0] Epoch[27] Batch [360-380]	Speed: 37637.40 samples/sec	accuracy=nan
2023-03-20 17:33:57,509 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,509 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351637509, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 17:33:57,509 Node[0] Epoch[27] Time cost=33.992
:::MLLOG {"namespace": "", "time_ms": 1679351637509, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37690.22779823718}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-20 17:33:57,510 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,509 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351637510, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 17:33:57,510 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,510 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,510 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,510 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,510 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,510 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,511 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,511 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,511 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,511 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,512 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:57,512 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:33:59,331 Node[0] Epoch[28] Batch [0-20]	Speed: 37642.75 samples/sec	accuracy=nan
2023-03-20 17:34:01,065 Node[0] Epoch[28] Batch [20-40]	Speed: 37653.14 samples/sec	accuracy=nan
2023-03-20 17:34:02,800 Node[0] Epoch[28] Batch [40-60]	Speed: 37615.23 samples/sec	accuracy=nan
2023-03-20 17:34:04,536 Node[0] Epoch[28] Batch [60-80]	Speed: 37596.04 samples/sec	accuracy=nan
2023-03-20 17:34:06,270 Node[0] Epoch[28] Batch [80-100]	Speed: 37659.20 samples/sec	accuracy=nan
2023-03-20 17:34:08,002 Node[0] Epoch[28] Batch [100-120]	Speed: 37698.80 samples/sec	accuracy=nan
2023-03-20 17:34:09,734 Node[0] Epoch[28] Batch [120-140]	Speed: 37680.74 samples/sec	accuracy=nan
2023-03-20 17:34:11,468 Node[0] Epoch[28] Batch [140-160]	Speed: 37652.20 samples/sec	accuracy=nan
2023-03-20 17:34:13,202 Node[0] Epoch[28] Batch [160-180]	Speed: 37640.81 samples/sec	accuracy=nan
2023-03-20 17:34:14,934 Node[0] Epoch[28] Batch [180-200]	Speed: 37694.61 samples/sec	accuracy=nan
2023-03-20 17:34:16,667 Node[0] Epoch[28] Batch [200-220]	Speed: 37667.61 samples/sec	accuracy=nan
2023-03-20 17:34:18,400 Node[0] Epoch[28] Batch [220-240]	Speed: 37674.55 samples/sec	accuracy=nan
2023-03-20 17:34:20,131 Node[0] Epoch[28] Batch [240-260]	Speed: 37696.35 samples/sec	accuracy=nan
2023-03-20 17:34:21,863 Node[0] Epoch[28] Batch [260-280]	Speed: 37692.84 samples/sec	accuracy=nan
2023-03-20 17:34:23,595 Node[0] Epoch[28] Batch [280-300]	Speed: 37700.42 samples/sec	accuracy=nan
2023-03-20 17:34:25,327 Node[0] Epoch[28] Batch [300-320]	Speed: 37687.78 samples/sec	accuracy=nan
2023-03-20 17:34:27,059 Node[0] Epoch[28] Batch [320-340]	Speed: 37680.59 samples/sec	accuracy=nan
2023-03-20 17:34:28,806 Node[0] Epoch[28] Batch [340-360]	Speed: 37383.07 samples/sec	accuracy=nan
2023-03-20 17:34:30,539 Node[0] Epoch[28] Batch [360-380]	Speed: 37658.92 samples/sec	accuracy=nan
2023-03-20 17:34:31,490 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,491 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,491 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,491 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351671490, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 17:34:31,491 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,492 Node[0] Epoch[28] Time cost=33.982
2023-03-20 17:34:31,492 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,492 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351671492, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37701.4451871224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-20 17:34:31,492 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,492 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351671492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 17:34:31,493 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,492 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,492 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,493 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,493 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,493 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:31,494 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:34:33,316 Node[0] Epoch[29] Batch [0-20]	Speed: 37621.14 samples/sec	accuracy=nan
2023-03-20 17:34:35,051 Node[0] Epoch[29] Batch [20-40]	Speed: 37615.09 samples/sec	accuracy=nan
2023-03-20 17:34:36,785 Node[0] Epoch[29] Batch [40-60]	Speed: 37642.51 samples/sec	accuracy=nan
2023-03-20 17:34:38,520 Node[0] Epoch[29] Batch [60-80]	Speed: 37643.52 samples/sec	accuracy=nan
2023-03-20 17:34:40,251 Node[0] Epoch[29] Batch [80-100]	Speed: 37704.28 samples/sec	accuracy=nan
2023-03-20 17:34:41,980 Node[0] Epoch[29] Batch [100-120]	Speed: 37745.48 samples/sec	accuracy=nan
2023-03-20 17:34:43,715 Node[0] Epoch[29] Batch [120-140]	Speed: 37644.66 samples/sec	accuracy=nan
2023-03-20 17:34:45,448 Node[0] Epoch[29] Batch [140-160]	Speed: 37651.30 samples/sec	accuracy=nan
2023-03-20 17:34:47,181 Node[0] Epoch[29] Batch [160-180]	Speed: 37685.91 samples/sec	accuracy=nan
2023-03-20 17:34:48,916 Node[0] Epoch[29] Batch [180-200]	Speed: 37626.01 samples/sec	accuracy=nan
2023-03-20 17:34:50,648 Node[0] Epoch[29] Batch [200-220]	Speed: 37686.10 samples/sec	accuracy=nan
2023-03-20 17:34:52,380 Node[0] Epoch[29] Batch [220-240]	Speed: 37681.54 samples/sec	accuracy=nan
2023-03-20 17:34:54,115 Node[0] Epoch[29] Batch [240-260]	Speed: 37632.96 samples/sec	accuracy=nan
2023-03-20 17:34:55,848 Node[0] Epoch[29] Batch [260-280]	Speed: 37657.95 samples/sec	accuracy=nan
2023-03-20 17:34:57,580 Node[0] Epoch[29] Batch [280-300]	Speed: 37704.43 samples/sec	accuracy=nan
2023-03-20 17:34:59,313 Node[0] Epoch[29] Batch [300-320]	Speed: 37665.86 samples/sec	accuracy=nan
2023-03-20 17:35:01,047 Node[0] Epoch[29] Batch [320-340]	Speed: 37651.37 samples/sec	accuracy=nan
2023-03-20 17:35:02,782 Node[0] Epoch[29] Batch [340-360]	Speed: 37626.67 samples/sec	accuracy=nan
2023-03-20 17:35:04,516 Node[0] Epoch[29] Batch [360-380]	Speed: 37636.14 samples/sec	accuracy=nan
2023-03-20 17:35:05,553 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351705553, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 17:35:05,553 Node[0] Epoch[29] Time cost=34.061
2023-03-20 17:35:05,553 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351705553, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37614.06013316037}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-20 17:35:05,553 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351705554, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 17:35:05,554 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,554 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,555 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,555 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,555 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,555 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,556 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:05,556 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:07,376 Node[0] Epoch[30] Batch [0-20]	Speed: 37645.71 samples/sec	accuracy=nan
2023-03-20 17:35:09,107 Node[0] Epoch[30] Batch [20-40]	Speed: 37701.83 samples/sec	accuracy=nan
2023-03-20 17:35:10,842 Node[0] Epoch[30] Batch [40-60]	Speed: 37634.36 samples/sec	accuracy=nan
2023-03-20 17:35:12,575 Node[0] Epoch[30] Batch [60-80]	Speed: 37653.91 samples/sec	accuracy=nan
2023-03-20 17:35:14,309 Node[0] Epoch[30] Batch [80-100]	Speed: 37653.03 samples/sec	accuracy=nan
2023-03-20 17:35:16,041 Node[0] Epoch[30] Batch [100-120]	Speed: 37685.76 samples/sec	accuracy=nan
2023-03-20 17:35:17,775 Node[0] Epoch[30] Batch [120-140]	Speed: 37647.87 samples/sec	accuracy=nan
2023-03-20 17:35:19,513 Node[0] Epoch[30] Batch [140-160]	Speed: 37568.38 samples/sec	accuracy=nan
2023-03-20 17:35:21,246 Node[0] Epoch[30] Batch [160-180]	Speed: 37676.77 samples/sec	accuracy=nan
2023-03-20 17:35:22,978 Node[0] Epoch[30] Batch [180-200]	Speed: 37691.90 samples/sec	accuracy=nan
2023-03-20 17:35:24,710 Node[0] Epoch[30] Batch [200-220]	Speed: 37687.41 samples/sec	accuracy=nan
2023-03-20 17:35:26,442 Node[0] Epoch[30] Batch [220-240]	Speed: 37692.99 samples/sec	accuracy=nan
2023-03-20 17:35:28,175 Node[0] Epoch[30] Batch [240-260]	Speed: 37655.51 samples/sec	accuracy=nan
2023-03-20 17:35:29,907 Node[0] Epoch[30] Batch [260-280]	Speed: 37690.94 samples/sec	accuracy=nan
2023-03-20 17:35:31,639 Node[0] Epoch[30] Batch [280-300]	Speed: 37700.46 samples/sec	accuracy=nan
2023-03-20 17:35:33,375 Node[0] Epoch[30] Batch [300-320]	Speed: 37599.57 samples/sec	accuracy=nan
2023-03-20 17:35:35,108 Node[0] Epoch[30] Batch [320-340]	Speed: 37662.85 samples/sec	accuracy=nan
2023-03-20 17:35:36,843 Node[0] Epoch[30] Batch [340-360]	Speed: 37625.87 samples/sec	accuracy=nan
2023-03-20 17:35:38,578 Node[0] Epoch[30] Batch [360-380]	Speed: 37625.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351739529, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 17:35:39,530 Node[0] Epoch[30] Time cost=33.976
:::MLLOG {"namespace": "", "time_ms": 1679351739530, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37707.979311487434}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679351739612, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 17:35:40,353 Node[0] Epoch[30] Validation-accuracy=0.740800
2023-03-20 17:35:40,353 Node[0] Epoch[30] Validation-correct-count=2315.000000
2023-03-20 17:35:40,353 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351740450, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-20 17:35:40,451 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351740451, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74932, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-20 17:35:40,451 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351740451, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 17:35:40,451 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351740451, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 17:35:40,451 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:40,451 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351740451, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 17:35:40,451 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:35:42,195 Node[0] Epoch[31] Batch [0-20]	Speed: 37636.99 samples/sec	accuracy=nan
2023-03-20 17:35:43,928 Node[0] Epoch[31] Batch [20-40]	Speed: 37675.78 samples/sec	accuracy=nan
2023-03-20 17:35:45,660 Node[0] Epoch[31] Batch [40-60]	Speed: 37676.81 samples/sec	accuracy=nan
2023-03-20 17:35:47,394 Node[0] Epoch[31] Batch [60-80]	Speed: 37656.78 samples/sec	accuracy=nan
2023-03-20 17:35:49,129 Node[0] Epoch[31] Batch [80-100]	Speed: 37623.16 samples/sec	accuracy=nan
2023-03-20 17:35:50,860 Node[0] Epoch[31] Batch [100-120]	Speed: 37705.72 samples/sec	accuracy=nan
2023-03-20 17:35:52,599 Node[0] Epoch[31] Batch [120-140]	Speed: 37555.62 samples/sec	accuracy=nan
2023-03-20 17:35:54,332 Node[0] Epoch[31] Batch [140-160]	Speed: 37655.79 samples/sec	accuracy=nan
2023-03-20 17:35:56,064 Node[0] Epoch[31] Batch [160-180]	Speed: 37685.21 samples/sec	accuracy=nan
2023-03-20 17:35:57,797 Node[0] Epoch[31] Batch [180-200]	Speed: 37681.94 samples/sec	accuracy=nan
2023-03-20 17:35:59,529 Node[0] Epoch[31] Batch [200-220]	Speed: 37692.68 samples/sec	accuracy=nan
2023-03-20 17:36:01,263 Node[0] Epoch[31] Batch [220-240]	Speed: 37628.32 samples/sec	accuracy=nan
2023-03-20 17:36:03,001 Node[0] Epoch[31] Batch [240-260]	Speed: 37568.44 samples/sec	accuracy=nan
2023-03-20 17:36:04,735 Node[0] Epoch[31] Batch [260-280]	Speed: 37645.18 samples/sec	accuracy=nan
2023-03-20 17:36:06,469 Node[0] Epoch[31] Batch [280-300]	Speed: 37642.64 samples/sec	accuracy=nan
2023-03-20 17:36:08,202 Node[0] Epoch[31] Batch [300-320]	Speed: 37671.19 samples/sec	accuracy=nan
2023-03-20 17:36:09,935 Node[0] Epoch[31] Batch [320-340]	Speed: 37673.54 samples/sec	accuracy=nan
2023-03-20 17:36:11,668 Node[0] Epoch[31] Batch [340-360]	Speed: 37666.49 samples/sec	accuracy=nan
2023-03-20 17:36:13,400 Node[0] Epoch[31] Batch [360-380]	Speed: 37699.68 samples/sec	accuracy=nan
2023-03-20 17:36:14,441 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,441 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,442 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,442 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,442 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351774442, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 17:36:14,443 Node[0] Epoch[31] Time cost=33.991
2023-03-20 17:36:14,443 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,443 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351774443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37691.02009475761}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-20 17:36:14,443 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,443 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351774443, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 17:36:14,444 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,443 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,443 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,444 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,444 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,444 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:14,444 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:16,262 Node[0] Epoch[32] Batch [0-20]	Speed: 37686.05 samples/sec	accuracy=nan
2023-03-20 17:36:17,994 Node[0] Epoch[32] Batch [20-40]	Speed: 37673.20 samples/sec	accuracy=nan
2023-03-20 17:36:19,726 Node[0] Epoch[32] Batch [40-60]	Speed: 37695.46 samples/sec	accuracy=nan
2023-03-20 17:36:21,460 Node[0] Epoch[32] Batch [60-80]	Speed: 37654.33 samples/sec	accuracy=nan
2023-03-20 17:36:23,193 Node[0] Epoch[32] Batch [80-100]	Speed: 37665.06 samples/sec	accuracy=nan
2023-03-20 17:36:24,928 Node[0] Epoch[32] Batch [100-120]	Speed: 37623.46 samples/sec	accuracy=nan
2023-03-20 17:36:26,660 Node[0] Epoch[32] Batch [120-140]	Speed: 37700.48 samples/sec	accuracy=nan
2023-03-20 17:36:28,396 Node[0] Epoch[32] Batch [140-160]	Speed: 37588.30 samples/sec	accuracy=nan
2023-03-20 17:36:30,129 Node[0] Epoch[32] Batch [160-180]	Speed: 37683.35 samples/sec	accuracy=nan
2023-03-20 17:36:31,864 Node[0] Epoch[32] Batch [180-200]	Speed: 37621.45 samples/sec	accuracy=nan
2023-03-20 17:36:33,595 Node[0] Epoch[32] Batch [200-220]	Speed: 37706.35 samples/sec	accuracy=nan
2023-03-20 17:36:35,328 Node[0] Epoch[32] Batch [220-240]	Speed: 37666.54 samples/sec	accuracy=nan
2023-03-20 17:36:37,066 Node[0] Epoch[32] Batch [240-260]	Speed: 37575.94 samples/sec	accuracy=nan
2023-03-20 17:36:38,796 Node[0] Epoch[32] Batch [260-280]	Speed: 37718.45 samples/sec	accuracy=nan
2023-03-20 17:36:40,528 Node[0] Epoch[32] Batch [280-300]	Speed: 37694.91 samples/sec	accuracy=nan
2023-03-20 17:36:42,262 Node[0] Epoch[32] Batch [300-320]	Speed: 37657.11 samples/sec	accuracy=nan
2023-03-20 17:36:43,997 Node[0] Epoch[32] Batch [320-340]	Speed: 37620.75 samples/sec	accuracy=nan
2023-03-20 17:36:45,729 Node[0] Epoch[32] Batch [340-360]	Speed: 37681.70 samples/sec	accuracy=nan
2023-03-20 17:36:47,459 Node[0] Epoch[32] Batch [360-380]	Speed: 37744.77 samples/sec	accuracy=nan
2023-03-20 17:36:48,411 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,411 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,411 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,412 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,412 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351808411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 17:36:48,412 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,412 Node[0] Epoch[32] Time cost=33.969
2023-03-20 17:36:48,412 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351808413, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37715.80720916753}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-20 17:36:48,413 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351808413, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 17:36:48,413 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,413 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,413 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,413 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,413 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,413 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,414 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:48,414 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:36:50,233 Node[0] Epoch[33] Batch [0-20]	Speed: 37683.76 samples/sec	accuracy=nan
2023-03-20 17:36:51,967 Node[0] Epoch[33] Batch [20-40]	Speed: 37645.12 samples/sec	accuracy=nan
2023-03-20 17:36:53,702 Node[0] Epoch[33] Batch [40-60]	Speed: 37623.79 samples/sec	accuracy=nan
2023-03-20 17:36:55,435 Node[0] Epoch[33] Batch [60-80]	Speed: 37673.89 samples/sec	accuracy=nan
2023-03-20 17:36:57,168 Node[0] Epoch[33] Batch [80-100]	Speed: 37666.72 samples/sec	accuracy=nan
2023-03-20 17:36:58,899 Node[0] Epoch[33] Batch [100-120]	Speed: 37712.62 samples/sec	accuracy=nan
2023-03-20 17:37:00,632 Node[0] Epoch[33] Batch [120-140]	Speed: 37668.00 samples/sec	accuracy=nan
2023-03-20 17:37:02,365 Node[0] Epoch[33] Batch [140-160]	Speed: 37676.61 samples/sec	accuracy=nan
2023-03-20 17:37:04,100 Node[0] Epoch[33] Batch [160-180]	Speed: 37624.72 samples/sec	accuracy=nan
2023-03-20 17:37:05,832 Node[0] Epoch[33] Batch [180-200]	Speed: 37685.39 samples/sec	accuracy=nan
2023-03-20 17:37:07,564 Node[0] Epoch[33] Batch [200-220]	Speed: 37690.30 samples/sec	accuracy=nan
2023-03-20 17:37:09,296 Node[0] Epoch[33] Batch [220-240]	Speed: 37686.77 samples/sec	accuracy=nan
2023-03-20 17:37:11,030 Node[0] Epoch[33] Batch [240-260]	Speed: 37663.93 samples/sec	accuracy=nan
2023-03-20 17:37:12,766 Node[0] Epoch[33] Batch [260-280]	Speed: 37608.96 samples/sec	accuracy=nan
2023-03-20 17:37:14,498 Node[0] Epoch[33] Batch [280-300]	Speed: 37683.41 samples/sec	accuracy=nan
2023-03-20 17:37:16,231 Node[0] Epoch[33] Batch [300-320]	Speed: 37659.97 samples/sec	accuracy=nan
2023-03-20 17:37:17,964 Node[0] Epoch[33] Batch [320-340]	Speed: 37672.53 samples/sec	accuracy=nan
2023-03-20 17:37:19,700 Node[0] Epoch[33] Batch [340-360]	Speed: 37596.22 samples/sec	accuracy=nan
2023-03-20 17:37:21,433 Node[0] Epoch[33] Batch [360-380]	Speed: 37671.91 samples/sec	accuracy=nan
2023-03-20 17:37:22,472 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351842472, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 17:37:22,472 Node[0] Epoch[33] Time cost=34.059
2023-03-20 17:37:22,472 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351842472, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37615.87007744324}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 17:37:22,472 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,472 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679351842473, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 17:37:22,473 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,473 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,474 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,474 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:22,474 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:37:24,291 Node[0] Epoch[34] Batch [0-20]	Speed: 37712.20 samples/sec	accuracy=nan
2023-03-20 17:37:26,024 Node[0] Epoch[34] Batch [20-40]	Speed: 37664.81 samples/sec	accuracy=nan
2023-03-20 17:37:27,759 Node[0] Epoch[34] Batch [40-60]	Speed: 37616.07 samples/sec	accuracy=nan
2023-03-20 17:37:29,491 Node[0] Epoch[34] Batch [60-80]	Speed: 37702.04 samples/sec	accuracy=nan
2023-03-20 17:37:31,227 Node[0] Epoch[34] Batch [80-100]	Speed: 37597.16 samples/sec	accuracy=nan
2023-03-20 17:37:32,964 Node[0] Epoch[34] Batch [100-120]	Speed: 37596.81 samples/sec	accuracy=nan
2023-03-20 17:37:34,694 Node[0] Epoch[34] Batch [120-140]	Speed: 37717.67 samples/sec	accuracy=nan
2023-03-20 17:37:36,428 Node[0] Epoch[34] Batch [140-160]	Speed: 37655.11 samples/sec	accuracy=nan
2023-03-20 17:37:38,161 Node[0] Epoch[34] Batch [160-180]	Speed: 37661.72 samples/sec	accuracy=nan
2023-03-20 17:37:39,894 Node[0] Epoch[34] Batch [180-200]	Speed: 37670.38 samples/sec	accuracy=nan
2023-03-20 17:37:41,625 Node[0] Epoch[34] Batch [200-220]	Speed: 37722.37 samples/sec	accuracy=nan
2023-03-20 17:37:43,364 Node[0] Epoch[34] Batch [220-240]	Speed: 37538.08 samples/sec	accuracy=nan
2023-03-20 17:37:45,098 Node[0] Epoch[34] Batch [240-260]	Speed: 37632.39 samples/sec	accuracy=nan
2023-03-20 17:37:46,832 Node[0] Epoch[34] Batch [260-280]	Speed: 37666.03 samples/sec	accuracy=nan
2023-03-20 17:37:48,564 Node[0] Epoch[34] Batch [280-300]	Speed: 37676.47 samples/sec	accuracy=nan
2023-03-20 17:37:50,300 Node[0] Epoch[34] Batch [300-320]	Speed: 37607.24 samples/sec	accuracy=nan
2023-03-20 17:37:52,034 Node[0] Epoch[34] Batch [320-340]	Speed: 37638.68 samples/sec	accuracy=nan
2023-03-20 17:37:53,771 Node[0] Epoch[34] Batch [340-360]	Speed: 37587.04 samples/sec	accuracy=nan
2023-03-20 17:37:55,503 Node[0] Epoch[34] Batch [360-380]	Speed: 37694.65 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679351876540, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 17:37:56,541 Node[0] Epoch[34] Time cost=34.068
:::MLLOG {"namespace": "", "time_ms": 1679351876541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37606.24282753953}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679351876623, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 17:37:57,387 Node[0] Epoch[34] Validation-accuracy=0.762240
2023-03-20 17:37:57,387 Node[0] Epoch[34] Validation-correct-count=2382.000000
2023-03-20 17:37:57,387 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679351877432, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679351877432, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679351877432, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679351877432, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351892
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:12 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:12 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:12 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679351893
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:38:13 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:38:13 PM'
ENDING TIMING RUN AT 2023-03-20 05:38:13 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 05:15:33 PM'
+ export PROFILE=0
+ PROFILE=0
