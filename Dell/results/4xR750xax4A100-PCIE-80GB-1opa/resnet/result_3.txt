+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node043 node044 '
+ echo 'hosts=node040 node041 node043 node044 '
hosts=node040 node041 node043 node044 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349038776, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349038811, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349038813, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349038814, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349038815, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349051920, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349058000, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349058037, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349058038, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349058040, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349058041, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349068272, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349073182, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349073217, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349073219, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349073220, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349073221, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349084619, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349089549, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349089585, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349089586, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349089587, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349089589, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679349101063, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=15391
+ SEED=15391
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ date +%s
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679349102
+ start=1679349102
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start_fmt='2023-03-20 04:51:42 PM'
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ readonly local_rank=0
+ local_rank=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ SLURM_NTASKS_PER_NODE=4
+ KVSTORE=horovod
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LR=10.5
+ MOM=0.9
+ INPUT_BATCH_MULTIPLIER=1
+ LRSCHED=pow2
+ KVSTORE=horovod
+ WARMUP_EPOCHS=2
+ LR=10.5
+ LARSETA=0.001
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0
+ LRSCHED=pow2
+ WD=5.0e-05
+ WARMUP_EPOCHS=2
+ LABELSMOOTHING=0.1
+ LARSETA=0.001
+ SEED=15391
+ EVAL_OFFSET=2
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LABELSMOOTHING=0.1
+ DALI_NVJPEG_MEMPADDING=256
+ SEED=15391
+ DALI_THREADS=6
+ EVAL_OFFSET=2
+ DALI_CACHE_SIZE=0
+ EVAL_PERIOD=4
+ DALI_ROI_DECODE=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_THREADS=6
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CACHE_SIZE=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_ROI_DECODE=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ NUMEPOCHS=37
+ DALI_DECODER_BUFFER_HINT=1315942
+ NETWORK=resnet-v1b-stats-fl
+ DALI_CROP_BUFFER_HINT=165581
+ BN_GROUP=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE=0
+ DALI_DONT_USE_MMAP=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEPOCHS=37
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE_ALL_LOCAL_RANKS=0
+ BN_GROUP=1
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ [[ 0 == 1 ]]
+ NODALI=0
+ DATAROOT=/data
+ NUMEXAMPLES=
+ echo 'running benchmark'
+ export NGPUS=4
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NGPUS=4
running benchmark
+ [[ 0 == 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679349102
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly global_rank=0
+ global_rank=0
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679349102
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ sed 's/^config_//'
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+++ sed 's/\.sh$//'
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++++ readlink -f ./config_4xR750xax4A100.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start=1679349102
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ date '+%Y-%m-%d %r'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ source ./config_4xR750xax4A100.sh
++ date +%s
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679349102
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+++ dirname ./config_4xR750xax4A100.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start_fmt='2023-03-20 04:51:42 PM'
+++ sed 's/^config_//'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679349102
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
+ start_fmt='2023-03-20 04:51:42 PM'
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ dirname ./config_4xR750xax4A100.sh
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
+ readonly global_rank=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
++ export DGXNNODES=4
++ DGXNNODES=4
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/^config_//'
++ seq 0 3
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ tr '\n' ,
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ GPUS=0,1,2,3
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ [[ '' -ge 1 ]]
++ export DGXNNODES=4
++ DGXNNODES=4
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ GPUS=0,1,2,3
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXNNODES=4
++ DGXNNODES=4
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start=1679349102
++ date '+%Y-%m-%d %r'
++ date +%s
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679349102
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
++ export DGXSYSTEM=4xR750xax4A100
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ DGXSYSTEM=4xR750xax4A100
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ NETWORK=resnet-v1b-stats-fl
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
+ BN_GROUP=1
+ PROFILE=0
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ source ./config_4xR750xax4A100.sh
++ date +%s
++ seq 0 3
+++ dirname ./config_4xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679349102
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ tr '\n' ,
+ start=1679349102
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ sed 's/,$//'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ date '+%Y-%m-%d %r'
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
++++ readlink -f ./config_4xR750xax4A100.sh
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679349102
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
+++ sed 's/^config_//'
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ sed 's/^config_//'
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
+++ sed 's/\.sh$//'
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++++ readlink -f ./config_4xR750xax4A100.sh
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++++ readlink -f ./config_4xR750xax4A100.sh
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ sed 's/\.sh$//'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ date +%s
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679349102
+ start=1679349102
+ start=1679349102
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ start_fmt='2023-03-20 04:51:42 PM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ [[ 0 -ge 1 ]]
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679349102
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:51:42 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:51:42 PM'
STARTING TIMING RUN AT 2023-03-20 04:51:42 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15391
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15391 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:1184747] MCW rank 0 is not bound (or bound to all available processors)
[node040:1184730] MCW rank 3 is not bound (or bound to all available processors)
[node040:1184735] MCW rank 2 is not bound (or bound to all available processors)
[node041:915116] MCW rank 4 is not bound (or bound to all available processors)
[node040:1184731] MCW rank 1 is not bound (or bound to all available processors)
[node041:915115] MCW rank 7 is not bound (or bound to all available processors)
[node041:915113] MCW rank 6 is not bound (or bound to all available processors)
[node041:915114] MCW rank 5 is not bound (or bound to all available processors)
[node043:1059900] MCW rank 8 is not bound (or bound to all available processors)
[node043:1059891] MCW rank 10 is not bound (or bound to all available processors)
[node044:956215] MCW rank 15 is not bound (or bound to all available processors)
[node043:1059920] MCW rank 11 is not bound (or bound to all available processors)
[node043:1059927] MCW rank 9 is not bound (or bound to all available processors)
[node044:956220] MCW rank 13 is not bound (or bound to all available processors)
[node044:956200] MCW rank 14 is not bound (or bound to all available processors)
[node044:956219] MCW rank 12 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679349106890, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[16:51:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679349115186, "event_type": "POINT_IN_TIME", "key": "seed", "value": 15391, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[16:51:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:51:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679349116854, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:52:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679349121631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121664, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121664, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121664, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121664, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121665, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121665, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121665, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121666, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121666, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121666, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121666, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121667, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121668, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121669, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679349121670, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,207 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19616, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,207 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39718, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,207 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48609, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,208 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48445, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,208 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2676, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,208 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30949, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,208 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21334, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,208 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46360, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,209 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31290, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679349124208, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,209 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47808, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,210 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33781, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679349124210, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679349124211, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679349124211, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679349124211, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679349124211, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679349124211, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,211 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20385, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,212 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25051, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,212 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25224, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,213 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=690, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:52:04,213 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50125, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679349211229, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679349211230, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679349211231, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679349211802, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679349211881, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679349211882, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 16:53:33,634 Node[0] Epoch[0] Batch [0-20]	Speed: 37517.92 samples/sec	accuracy=nan
2023-03-20 16:53:35,363 Node[0] Epoch[0] Batch [20-40]	Speed: 37741.14 samples/sec	accuracy=nan
2023-03-20 16:53:37,094 Node[0] Epoch[0] Batch [40-60]	Speed: 37723.63 samples/sec	accuracy=nan
2023-03-20 16:53:38,824 Node[0] Epoch[0] Batch [60-80]	Speed: 37716.32 samples/sec	accuracy=nan
2023-03-20 16:53:40,553 Node[0] Epoch[0] Batch [80-100]	Speed: 37775.71 samples/sec	accuracy=nan
2023-03-20 16:53:42,285 Node[0] Epoch[0] Batch [100-120]	Speed: 37688.78 samples/sec	accuracy=nan
2023-03-20 16:53:44,013 Node[0] Epoch[0] Batch [120-140]	Speed: 37765.65 samples/sec	accuracy=nan
2023-03-20 16:53:45,741 Node[0] Epoch[0] Batch [140-160]	Speed: 37781.15 samples/sec	accuracy=nan
2023-03-20 16:53:47,471 Node[0] Epoch[0] Batch [160-180]	Speed: 37741.84 samples/sec	accuracy=nan
2023-03-20 16:53:49,202 Node[0] Epoch[0] Batch [180-200]	Speed: 37697.82 samples/sec	accuracy=nan
2023-03-20 16:53:50,932 Node[0] Epoch[0] Batch [200-220]	Speed: 37746.48 samples/sec	accuracy=nan
2023-03-20 16:53:52,668 Node[0] Epoch[0] Batch [220-240]	Speed: 37609.05 samples/sec	accuracy=nan
2023-03-20 16:53:54,401 Node[0] Epoch[0] Batch [240-260]	Speed: 37651.57 samples/sec	accuracy=nan
2023-03-20 16:53:56,136 Node[0] Epoch[0] Batch [260-280]	Speed: 37640.37 samples/sec	accuracy=nan
2023-03-20 16:53:57,869 Node[0] Epoch[0] Batch [280-300]	Speed: 37659.92 samples/sec	accuracy=nan
2023-03-20 16:53:59,605 Node[0] Epoch[0] Batch [300-320]	Speed: 37596.73 samples/sec	accuracy=nan
2023-03-20 16:54:01,340 Node[0] Epoch[0] Batch [320-340]	Speed: 37633.89 samples/sec	accuracy=nan
2023-03-20 16:54:03,082 Node[0] Epoch[0] Batch [340-360]	Speed: 37475.21 samples/sec	accuracy=nan
2023-03-20 16:54:04,823 Node[0] Epoch[0] Batch [360-380]	Speed: 37496.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349245866, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 16:54:05,867 Node[0] Epoch[0] Time cost=33.984
:::MLLOG {"namespace": "", "time_ms": 1679349245867, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37698.58493864044}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 16:54:05,867 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,867 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,867 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,867 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,867 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349245868, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 16:54:05,868 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,868 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,868 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,868 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,868 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,869 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,869 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,869 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,869 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,870 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:05,870 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:07,693 Node[0] Epoch[1] Batch [0-20]	Speed: 37532.71 samples/sec	accuracy=nan
2023-03-20 16:54:09,429 Node[0] Epoch[1] Batch [20-40]	Speed: 37586.77 samples/sec	accuracy=nan
2023-03-20 16:54:11,171 Node[0] Epoch[1] Batch [40-60]	Speed: 37492.13 samples/sec	accuracy=nan
2023-03-20 16:54:12,908 Node[0] Epoch[1] Batch [60-80]	Speed: 37566.23 samples/sec	accuracy=nan
2023-03-20 16:54:14,653 Node[0] Epoch[1] Batch [80-100]	Speed: 37422.77 samples/sec	accuracy=nan
2023-03-20 16:54:16,395 Node[0] Epoch[1] Batch [100-120]	Speed: 37472.10 samples/sec	accuracy=nan
2023-03-20 16:54:18,136 Node[0] Epoch[1] Batch [120-140]	Speed: 37492.71 samples/sec	accuracy=nan
2023-03-20 16:54:19,878 Node[0] Epoch[1] Batch [140-160]	Speed: 37464.81 samples/sec	accuracy=nan
2023-03-20 16:54:21,617 Node[0] Epoch[1] Batch [160-180]	Speed: 37554.54 samples/sec	accuracy=nan
2023-03-20 16:54:23,355 Node[0] Epoch[1] Batch [180-200]	Speed: 37548.67 samples/sec	accuracy=nan
2023-03-20 16:54:25,097 Node[0] Epoch[1] Batch [200-220]	Speed: 37470.56 samples/sec	accuracy=nan
2023-03-20 16:54:31,329 Node[0] Epoch[1] Batch [220-240]	Speed: 10475.16 samples/sec	accuracy=nan
2023-03-20 16:54:33,069 Node[0] Epoch[1] Batch [240-260]	Speed: 37528.25 samples/sec	accuracy=nan
2023-03-20 16:54:37,183 Node[0] Epoch[1] Batch [260-280]	Speed: 15866.49 samples/sec	accuracy=nan
2023-03-20 16:54:41,390 Node[0] Epoch[1] Batch [280-300]	Speed: 15516.91 samples/sec	accuracy=nan
2023-03-20 16:54:43,129 Node[0] Epoch[1] Batch [300-320]	Speed: 37549.58 samples/sec	accuracy=nan
2023-03-20 16:54:44,868 Node[0] Epoch[1] Batch [320-340]	Speed: 37537.31 samples/sec	accuracy=nan
2023-03-20 16:54:46,607 Node[0] Epoch[1] Batch [340-360]	Speed: 37520.32 samples/sec	accuracy=nan
2023-03-20 16:54:48,349 Node[0] Epoch[1] Batch [360-380]	Speed: 37488.61 samples/sec	accuracy=nan
2023-03-20 16:54:49,391 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,391 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,391 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349289391, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 16:54:49,392 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,392 Node[0] Epoch[1] Time cost=43.524
:::MLLOG {"namespace": "", "time_ms": 1679349289392, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 29435.571852663346}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-20 16:54:49,392 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,392 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349289393, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 16:54:49,393 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,393 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,393 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,393 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,393 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,393 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,394 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,394 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,394 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:49,394 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:54:51,218 Node[0] Epoch[2] Batch [0-20]	Speed: 37539.51 samples/sec	accuracy=nan
2023-03-20 16:54:52,960 Node[0] Epoch[2] Batch [20-40]	Speed: 37468.26 samples/sec	accuracy=nan
2023-03-20 16:54:54,704 Node[0] Epoch[2] Batch [40-60]	Speed: 37444.02 samples/sec	accuracy=nan
2023-03-20 16:54:56,443 Node[0] Epoch[2] Batch [60-80]	Speed: 37519.44 samples/sec	accuracy=nan
2023-03-20 16:54:58,181 Node[0] Epoch[2] Batch [80-100]	Speed: 37567.51 samples/sec	accuracy=nan
2023-03-20 16:54:59,921 Node[0] Epoch[2] Batch [100-120]	Speed: 37509.04 samples/sec	accuracy=nan
2023-03-20 16:55:01,662 Node[0] Epoch[2] Batch [120-140]	Speed: 37497.90 samples/sec	accuracy=nan
2023-03-20 16:55:10,153 Node[0] Epoch[2] Batch [140-160]	Speed: 7688.83 samples/sec	accuracy=nan
2023-03-20 16:55:18,917 Node[0] Epoch[2] Batch [160-180]	Speed: 7448.74 samples/sec	accuracy=nan
2023-03-20 16:55:23,032 Node[0] Epoch[2] Batch [180-200]	Speed: 15861.57 samples/sec	accuracy=nan
2023-03-20 16:55:29,514 Node[0] Epoch[2] Batch [200-220]	Speed: 10070.57 samples/sec	accuracy=nan
2023-03-20 16:55:31,245 Node[0] Epoch[2] Batch [220-240]	Speed: 37730.51 samples/sec	accuracy=nan
2023-03-20 16:55:32,978 Node[0] Epoch[2] Batch [240-260]	Speed: 37650.05 samples/sec	accuracy=nan
2023-03-20 16:55:34,709 Node[0] Epoch[2] Batch [260-280]	Speed: 37731.17 samples/sec	accuracy=nan
2023-03-20 16:55:38,815 Node[0] Epoch[2] Batch [280-300]	Speed: 15898.56 samples/sec	accuracy=nan
2023-03-20 16:55:40,548 Node[0] Epoch[2] Batch [300-320]	Speed: 37649.56 samples/sec	accuracy=nan
2023-03-20 16:55:42,281 Node[0] Epoch[2] Batch [320-340]	Speed: 37679.85 samples/sec	accuracy=nan
2023-03-20 16:55:44,012 Node[0] Epoch[2] Batch [340-360]	Speed: 37708.68 samples/sec	accuracy=nan
2023-03-20 16:55:45,747 Node[0] Epoch[2] Batch [360-380]	Speed: 37625.22 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349346697, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 16:55:46,698 Node[0] Epoch[2] Time cost=57.305
:::MLLOG {"namespace": "", "time_ms": 1679349346698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 22356.82221735981}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 16:55:46,780 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349346780, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 16:55:46,780 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,780 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,780 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,781 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,781 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,781 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,781 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,782 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,783 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:46,783 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,464 Node[0] Epoch[2] Validation-accuracy=0.267200
2023-03-20 16:55:47,464 Node[0] Epoch[2] Validation-correct-count=835.000000
2023-03-20 16:55:47,464 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349347579, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 16:55:47,580 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349347580, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.26138, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 16:55:47,580 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349347580, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 16:55:47,579 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,579 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,579 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349347580, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 16:55:47,579 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,579 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,579 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349347580, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 16:55:47,580 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:47,580 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:55:49,323 Node[0] Epoch[3] Batch [0-20]	Speed: 37632.00 samples/sec	accuracy=nan
2023-03-20 16:55:51,059 Node[0] Epoch[3] Batch [20-40]	Speed: 37589.31 samples/sec	accuracy=nan
2023-03-20 16:55:52,794 Node[0] Epoch[3] Batch [40-60]	Speed: 37624.27 samples/sec	accuracy=nan
2023-03-20 16:55:56,899 Node[0] Epoch[3] Batch [60-80]	Speed: 15905.01 samples/sec	accuracy=nan
2023-03-20 16:55:58,635 Node[0] Epoch[3] Batch [80-100]	Speed: 37606.59 samples/sec	accuracy=nan
2023-03-20 16:56:00,369 Node[0] Epoch[3] Batch [100-120]	Speed: 37647.42 samples/sec	accuracy=nan
2023-03-20 16:56:02,100 Node[0] Epoch[3] Batch [120-140]	Speed: 37697.50 samples/sec	accuracy=nan
2023-03-20 16:56:03,834 Node[0] Epoch[3] Batch [140-160]	Speed: 37651.20 samples/sec	accuracy=nan
2023-03-20 16:56:05,570 Node[0] Epoch[3] Batch [160-180]	Speed: 37611.30 samples/sec	accuracy=nan
2023-03-20 16:56:07,306 Node[0] Epoch[3] Batch [180-200]	Speed: 37597.22 samples/sec	accuracy=nan
2023-03-20 16:56:09,038 Node[0] Epoch[3] Batch [200-220]	Speed: 37685.72 samples/sec	accuracy=nan
2023-03-20 16:56:10,774 Node[0] Epoch[3] Batch [220-240]	Speed: 37610.95 samples/sec	accuracy=nan
2023-03-20 16:56:12,511 Node[0] Epoch[3] Batch [240-260]	Speed: 37586.59 samples/sec	accuracy=nan
2023-03-20 16:56:14,247 Node[0] Epoch[3] Batch [260-280]	Speed: 37595.80 samples/sec	accuracy=nan
2023-03-20 16:56:15,986 Node[0] Epoch[3] Batch [280-300]	Speed: 37537.80 samples/sec	accuracy=nan
2023-03-20 16:56:17,725 Node[0] Epoch[3] Batch [300-320]	Speed: 37535.37 samples/sec	accuracy=nan
2023-03-20 16:56:19,464 Node[0] Epoch[3] Batch [320-340]	Speed: 37550.82 samples/sec	accuracy=nan
2023-03-20 16:56:21,200 Node[0] Epoch[3] Batch [340-360]	Speed: 37596.73 samples/sec	accuracy=nan
2023-03-20 16:56:22,938 Node[0] Epoch[3] Batch [360-380]	Speed: 37559.93 samples/sec	accuracy=nan
2023-03-20 16:56:23,978 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,978 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,978 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,979 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349383978, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 16:56:23,979 Node[0] Epoch[3] Time cost=36.399
:::MLLOG {"namespace": "", "time_ms": 1679349383979, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 35197.86956341553}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-20 16:56:23,979 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,979 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349383980, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 16:56:23,980 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,979 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,979 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,980 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,980 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,980 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,980 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,980 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,981 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:23,981 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:25,807 Node[0] Epoch[4] Batch [0-20]	Speed: 37500.11 samples/sec	accuracy=nan
2023-03-20 16:56:27,546 Node[0] Epoch[4] Batch [20-40]	Speed: 37554.38 samples/sec	accuracy=nan
2023-03-20 16:56:29,283 Node[0] Epoch[4] Batch [40-60]	Speed: 37569.45 samples/sec	accuracy=nan
2023-03-20 16:56:31,022 Node[0] Epoch[4] Batch [60-80]	Speed: 37535.78 samples/sec	accuracy=nan
2023-03-20 16:56:32,762 Node[0] Epoch[4] Batch [80-100]	Speed: 37525.84 samples/sec	accuracy=nan
2023-03-20 16:56:34,504 Node[0] Epoch[4] Batch [100-120]	Speed: 37465.80 samples/sec	accuracy=nan
2023-03-20 16:56:36,242 Node[0] Epoch[4] Batch [120-140]	Speed: 37578.30 samples/sec	accuracy=nan
2023-03-20 16:56:37,983 Node[0] Epoch[4] Batch [140-160]	Speed: 37478.12 samples/sec	accuracy=nan
2023-03-20 16:56:39,723 Node[0] Epoch[4] Batch [160-180]	Speed: 37526.98 samples/sec	accuracy=nan
2023-03-20 16:56:41,464 Node[0] Epoch[4] Batch [180-200]	Speed: 37496.98 samples/sec	accuracy=nan
2023-03-20 16:56:43,204 Node[0] Epoch[4] Batch [200-220]	Speed: 37524.13 samples/sec	accuracy=nan
2023-03-20 16:56:44,946 Node[0] Epoch[4] Batch [220-240]	Speed: 37475.30 samples/sec	accuracy=nan
2023-03-20 16:56:46,685 Node[0] Epoch[4] Batch [240-260]	Speed: 37535.83 samples/sec	accuracy=nan
2023-03-20 16:56:48,426 Node[0] Epoch[4] Batch [260-280]	Speed: 37497.39 samples/sec	accuracy=nan
2023-03-20 16:56:50,167 Node[0] Epoch[4] Batch [280-300]	Speed: 37476.05 samples/sec	accuracy=nan
2023-03-20 16:56:51,906 Node[0] Epoch[4] Batch [300-320]	Speed: 37540.81 samples/sec	accuracy=nan
2023-03-20 16:56:53,643 Node[0] Epoch[4] Batch [320-340]	Speed: 37586.05 samples/sec	accuracy=nan
2023-03-20 16:56:55,383 Node[0] Epoch[4] Batch [340-360]	Speed: 37528.95 samples/sec	accuracy=nan
2023-03-20 16:56:57,121 Node[0] Epoch[4] Batch [360-380]	Speed: 37558.35 samples/sec	accuracy=nan
2023-03-20 16:56:58,076 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,076 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,076 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349418076, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 16:56:58,077 Node[0] Epoch[4] Time cost=34.097
2023-03-20 16:56:58,076 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349418077, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37574.20156709816}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-20 16:56:58,077 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,077 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349418077, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 16:56:58,077 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,077 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,077 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,077 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,078 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,078 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,078 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,078 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,079 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:58,079 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:56:59,904 Node[0] Epoch[5] Batch [0-20]	Speed: 37563.62 samples/sec	accuracy=nan
2023-03-20 16:57:01,644 Node[0] Epoch[5] Batch [20-40]	Speed: 37510.40 samples/sec	accuracy=nan
2023-03-20 16:57:03,385 Node[0] Epoch[5] Batch [40-60]	Speed: 37509.03 samples/sec	accuracy=nan
2023-03-20 16:57:05,125 Node[0] Epoch[5] Batch [60-80]	Speed: 37517.91 samples/sec	accuracy=nan
2023-03-20 16:57:06,864 Node[0] Epoch[5] Batch [80-100]	Speed: 37533.83 samples/sec	accuracy=nan
2023-03-20 16:57:08,605 Node[0] Epoch[5] Batch [100-120]	Speed: 37485.80 samples/sec	accuracy=nan
2023-03-20 16:57:10,344 Node[0] Epoch[5] Batch [120-140]	Speed: 37547.11 samples/sec	accuracy=nan
2023-03-20 16:57:12,083 Node[0] Epoch[5] Batch [140-160]	Speed: 37536.42 samples/sec	accuracy=nan
2023-03-20 16:57:13,823 Node[0] Epoch[5] Batch [160-180]	Speed: 37517.03 samples/sec	accuracy=nan
2023-03-20 16:57:15,561 Node[0] Epoch[5] Batch [180-200]	Speed: 37561.07 samples/sec	accuracy=nan
2023-03-20 16:57:17,298 Node[0] Epoch[5] Batch [200-220]	Speed: 37574.83 samples/sec	accuracy=nan
2023-03-20 16:57:19,041 Node[0] Epoch[5] Batch [220-240]	Speed: 37461.79 samples/sec	accuracy=nan
2023-03-20 16:57:20,779 Node[0] Epoch[5] Batch [240-260]	Speed: 37555.83 samples/sec	accuracy=nan
2023-03-20 16:57:22,516 Node[0] Epoch[5] Batch [260-280]	Speed: 37576.76 samples/sec	accuracy=nan
2023-03-20 16:57:24,254 Node[0] Epoch[5] Batch [280-300]	Speed: 37565.77 samples/sec	accuracy=nan
2023-03-20 16:57:25,995 Node[0] Epoch[5] Batch [300-320]	Speed: 37508.34 samples/sec	accuracy=nan
2023-03-20 16:57:27,731 Node[0] Epoch[5] Batch [320-340]	Speed: 37597.78 samples/sec	accuracy=nan
2023-03-20 16:57:29,469 Node[0] Epoch[5] Batch [340-360]	Speed: 37563.40 samples/sec	accuracy=nan
2023-03-20 16:57:31,207 Node[0] Epoch[5] Batch [360-380]	Speed: 37556.63 samples/sec	accuracy=nan
2023-03-20 16:57:32,248 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,248 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,248 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,248 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349452248, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 16:57:32,249 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,249 Node[0] Epoch[5] Time cost=34.172
2023-03-20 16:57:32,249 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349452249, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37491.7997929008}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679349452249, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 16:57:32,249 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,250 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,251 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:32,251 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:57:34,074 Node[0] Epoch[6] Batch [0-20]	Speed: 37575.54 samples/sec	accuracy=nan
2023-03-20 16:57:35,812 Node[0] Epoch[6] Batch [20-40]	Speed: 37557.15 samples/sec	accuracy=nan
2023-03-20 16:57:37,549 Node[0] Epoch[6] Batch [40-60]	Speed: 37586.14 samples/sec	accuracy=nan
2023-03-20 16:57:39,285 Node[0] Epoch[6] Batch [60-80]	Speed: 37596.92 samples/sec	accuracy=nan
2023-03-20 16:57:41,020 Node[0] Epoch[6] Batch [80-100]	Speed: 37621.09 samples/sec	accuracy=nan
2023-03-20 16:57:42,757 Node[0] Epoch[6] Batch [100-120]	Speed: 37583.18 samples/sec	accuracy=nan
2023-03-20 16:57:44,495 Node[0] Epoch[6] Batch [120-140]	Speed: 37570.73 samples/sec	accuracy=nan
2023-03-20 16:57:46,233 Node[0] Epoch[6] Batch [140-160]	Speed: 37558.65 samples/sec	accuracy=nan
2023-03-20 16:57:47,970 Node[0] Epoch[6] Batch [160-180]	Speed: 37587.20 samples/sec	accuracy=nan
2023-03-20 16:57:49,706 Node[0] Epoch[6] Batch [180-200]	Speed: 37597.77 samples/sec	accuracy=nan
2023-03-20 16:57:51,443 Node[0] Epoch[6] Batch [200-220]	Speed: 37578.48 samples/sec	accuracy=nan
2023-03-20 16:57:53,179 Node[0] Epoch[6] Batch [220-240]	Speed: 37595.95 samples/sec	accuracy=nan
2023-03-20 16:57:54,915 Node[0] Epoch[6] Batch [240-260]	Speed: 37607.26 samples/sec	accuracy=nan
2023-03-20 16:57:56,651 Node[0] Epoch[6] Batch [260-280]	Speed: 37612.03 samples/sec	accuracy=nan
2023-03-20 16:57:58,387 Node[0] Epoch[6] Batch [280-300]	Speed: 37594.32 samples/sec	accuracy=nan
2023-03-20 16:58:00,123 Node[0] Epoch[6] Batch [300-320]	Speed: 37605.91 samples/sec	accuracy=nan
2023-03-20 16:58:01,858 Node[0] Epoch[6] Batch [320-340]	Speed: 37627.97 samples/sec	accuracy=nan
2023-03-20 16:58:03,594 Node[0] Epoch[6] Batch [340-360]	Speed: 37599.17 samples/sec	accuracy=nan
2023-03-20 16:58:05,330 Node[0] Epoch[6] Batch [360-380]	Speed: 37606.22 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349486282, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 16:58:06,283 Node[0] Epoch[6] Time cost=34.033
:::MLLOG {"namespace": "", "time_ms": 1679349486283, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37644.36290515552}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679349486365, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 16:58:07,103 Node[0] Epoch[6] Validation-accuracy=0.426240
2023-03-20 16:58:07,103 Node[0] Epoch[6] Validation-correct-count=1332.000000
2023-03-20 16:58:07,103 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349487216, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679349487216, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43412, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679349487216, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 16:58:07,216 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349487216, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 16:58:07,216 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349487217, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 16:58:07,216 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,216 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:07,217 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:08,961 Node[0] Epoch[7] Batch [0-20]	Speed: 37606.56 samples/sec	accuracy=nan
2023-03-20 16:58:10,692 Node[0] Epoch[7] Batch [20-40]	Speed: 37697.52 samples/sec	accuracy=nan
2023-03-20 16:58:12,426 Node[0] Epoch[7] Batch [40-60]	Speed: 37644.46 samples/sec	accuracy=nan
2023-03-20 16:58:14,158 Node[0] Epoch[7] Batch [60-80]	Speed: 37698.00 samples/sec	accuracy=nan
2023-03-20 16:58:15,892 Node[0] Epoch[7] Batch [80-100]	Speed: 37654.45 samples/sec	accuracy=nan
2023-03-20 16:58:17,625 Node[0] Epoch[7] Batch [100-120]	Speed: 37669.18 samples/sec	accuracy=nan
2023-03-20 16:58:19,356 Node[0] Epoch[7] Batch [120-140]	Speed: 37699.59 samples/sec	accuracy=nan
2023-03-20 16:58:21,090 Node[0] Epoch[7] Batch [140-160]	Speed: 37661.96 samples/sec	accuracy=nan
2023-03-20 16:58:22,823 Node[0] Epoch[7] Batch [160-180]	Speed: 37653.96 samples/sec	accuracy=nan
2023-03-20 16:58:24,555 Node[0] Epoch[7] Batch [180-200]	Speed: 37704.64 samples/sec	accuracy=nan
2023-03-20 16:58:26,292 Node[0] Epoch[7] Batch [200-220]	Speed: 37575.96 samples/sec	accuracy=nan
2023-03-20 16:58:28,027 Node[0] Epoch[7] Batch [220-240]	Speed: 37617.27 samples/sec	accuracy=nan
2023-03-20 16:58:29,761 Node[0] Epoch[7] Batch [240-260]	Speed: 37658.59 samples/sec	accuracy=nan
2023-03-20 16:58:31,493 Node[0] Epoch[7] Batch [260-280]	Speed: 37694.60 samples/sec	accuracy=nan
2023-03-20 16:58:33,225 Node[0] Epoch[7] Batch [280-300]	Speed: 37689.23 samples/sec	accuracy=nan
2023-03-20 16:58:34,963 Node[0] Epoch[7] Batch [300-320]	Speed: 37555.88 samples/sec	accuracy=nan
2023-03-20 16:58:36,694 Node[0] Epoch[7] Batch [320-340]	Speed: 37703.87 samples/sec	accuracy=nan
2023-03-20 16:58:38,426 Node[0] Epoch[7] Batch [340-360]	Speed: 37688.27 samples/sec	accuracy=nan
2023-03-20 16:58:40,161 Node[0] Epoch[7] Batch [360-380]	Speed: 37622.80 samples/sec	accuracy=nan
2023-03-20 16:58:41,199 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,199 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,199 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,199 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349521199, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 16:58:41,200 Node[0] Epoch[7] Time cost=33.983
:::MLLOG {"namespace": "", "time_ms": 1679349521200, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37700.14857905776}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-20 16:58:41,200 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,200 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349521200, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 16:58:41,200 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,200 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,200 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,200 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,201 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,201 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,201 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,201 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,201 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:41,202 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:58:43,019 Node[0] Epoch[8] Batch [0-20]	Speed: 37674.01 samples/sec	accuracy=nan
2023-03-20 16:58:44,755 Node[0] Epoch[8] Batch [20-40]	Speed: 37588.76 samples/sec	accuracy=nan
2023-03-20 16:58:46,487 Node[0] Epoch[8] Batch [40-60]	Speed: 37701.02 samples/sec	accuracy=nan
2023-03-20 16:58:48,218 Node[0] Epoch[8] Batch [60-80]	Speed: 37721.17 samples/sec	accuracy=nan
2023-03-20 16:58:49,952 Node[0] Epoch[8] Batch [80-100]	Speed: 37641.14 samples/sec	accuracy=nan
2023-03-20 16:58:51,684 Node[0] Epoch[8] Batch [100-120]	Speed: 37688.31 samples/sec	accuracy=nan
2023-03-20 16:58:53,420 Node[0] Epoch[8] Batch [120-140]	Speed: 37593.58 samples/sec	accuracy=nan
2023-03-20 16:58:55,153 Node[0] Epoch[8] Batch [140-160]	Speed: 37682.03 samples/sec	accuracy=nan
2023-03-20 16:58:56,884 Node[0] Epoch[8] Batch [160-180]	Speed: 37715.42 samples/sec	accuracy=nan
2023-03-20 16:58:58,618 Node[0] Epoch[8] Batch [180-200]	Speed: 37632.25 samples/sec	accuracy=nan
2023-03-20 16:59:00,353 Node[0] Epoch[8] Batch [200-220]	Speed: 37634.27 samples/sec	accuracy=nan
2023-03-20 16:59:02,085 Node[0] Epoch[8] Batch [220-240]	Speed: 37681.84 samples/sec	accuracy=nan
2023-03-20 16:59:03,821 Node[0] Epoch[8] Batch [240-260]	Speed: 37610.46 samples/sec	accuracy=nan
2023-03-20 16:59:05,553 Node[0] Epoch[8] Batch [260-280]	Speed: 37686.80 samples/sec	accuracy=nan
2023-03-20 16:59:07,288 Node[0] Epoch[8] Batch [280-300]	Speed: 37634.87 samples/sec	accuracy=nan
2023-03-20 16:59:09,020 Node[0] Epoch[8] Batch [300-320]	Speed: 37681.93 samples/sec	accuracy=nan
2023-03-20 16:59:10,752 Node[0] Epoch[8] Batch [320-340]	Speed: 37704.18 samples/sec	accuracy=nan
2023-03-20 16:59:12,486 Node[0] Epoch[8] Batch [340-360]	Speed: 37634.86 samples/sec	accuracy=nan
2023-03-20 16:59:14,220 Node[0] Epoch[8] Batch [360-380]	Speed: 37648.22 samples/sec	accuracy=nan
2023-03-20 16:59:15,171 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,172 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349555171, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 16:59:15,172 Node[0] Epoch[8] Time cost=33.972
2023-03-20 16:59:15,172 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349555172, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37712.84473376288}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-20 16:59:15,172 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349555172, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 16:59:15,172 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,172 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,172 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,172 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,173 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,173 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,173 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,173 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,173 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,174 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,174 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:15,174 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:16,990 Node[0] Epoch[9] Batch [0-20]	Speed: 37743.72 samples/sec	accuracy=nan
2023-03-20 16:59:18,722 Node[0] Epoch[9] Batch [20-40]	Speed: 37694.21 samples/sec	accuracy=nan
2023-03-20 16:59:20,458 Node[0] Epoch[9] Batch [40-60]	Speed: 37608.54 samples/sec	accuracy=nan
2023-03-20 16:59:22,191 Node[0] Epoch[9] Batch [60-80]	Speed: 37672.80 samples/sec	accuracy=nan
2023-03-20 16:59:23,921 Node[0] Epoch[9] Batch [80-100]	Speed: 37720.97 samples/sec	accuracy=nan
2023-03-20 16:59:25,653 Node[0] Epoch[9] Batch [100-120]	Speed: 37690.21 samples/sec	accuracy=nan
2023-03-20 16:59:27,386 Node[0] Epoch[9] Batch [120-140]	Speed: 37680.66 samples/sec	accuracy=nan
2023-03-20 16:59:29,118 Node[0] Epoch[9] Batch [140-160]	Speed: 37692.69 samples/sec	accuracy=nan
2023-03-20 16:59:30,848 Node[0] Epoch[9] Batch [160-180]	Speed: 37723.45 samples/sec	accuracy=nan
2023-03-20 16:59:32,582 Node[0] Epoch[9] Batch [180-200]	Speed: 37661.82 samples/sec	accuracy=nan
2023-03-20 16:59:34,313 Node[0] Epoch[9] Batch [200-220]	Speed: 37695.83 samples/sec	accuracy=nan
2023-03-20 16:59:36,046 Node[0] Epoch[9] Batch [220-240]	Speed: 37684.21 samples/sec	accuracy=nan
2023-03-20 16:59:37,777 Node[0] Epoch[9] Batch [240-260]	Speed: 37702.85 samples/sec	accuracy=nan
2023-03-20 16:59:39,511 Node[0] Epoch[9] Batch [260-280]	Speed: 37657.26 samples/sec	accuracy=nan
2023-03-20 16:59:41,244 Node[0] Epoch[9] Batch [280-300]	Speed: 37669.63 samples/sec	accuracy=nan
2023-03-20 16:59:42,974 Node[0] Epoch[9] Batch [300-320]	Speed: 37723.28 samples/sec	accuracy=nan
2023-03-20 16:59:44,705 Node[0] Epoch[9] Batch [320-340]	Speed: 37707.00 samples/sec	accuracy=nan
2023-03-20 16:59:46,436 Node[0] Epoch[9] Batch [340-360]	Speed: 37714.95 samples/sec	accuracy=nan
2023-03-20 16:59:48,170 Node[0] Epoch[9] Batch [360-380]	Speed: 37651.18 samples/sec	accuracy=nan
2023-03-20 16:59:49,208 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,208 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349589207, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 16:59:49,209 Node[0] Epoch[9] Time cost=34.036
2023-03-20 16:59:49,208 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349589209, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37641.366290444974}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 16:59:49,209 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,209 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349589209, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 16:59:49,209 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,209 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,209 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,209 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,209 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,210 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,210 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,210 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,210 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,210 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:49,211 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:59:51,028 Node[0] Epoch[10] Batch [0-20]	Speed: 37666.86 samples/sec	accuracy=nan
2023-03-20 16:59:52,763 Node[0] Epoch[10] Batch [20-40]	Speed: 37622.43 samples/sec	accuracy=nan
2023-03-20 16:59:54,495 Node[0] Epoch[10] Batch [40-60]	Speed: 37702.01 samples/sec	accuracy=nan
2023-03-20 16:59:56,225 Node[0] Epoch[10] Batch [60-80]	Speed: 37723.26 samples/sec	accuracy=nan
2023-03-20 16:59:57,958 Node[0] Epoch[10] Batch [80-100]	Speed: 37666.34 samples/sec	accuracy=nan
2023-03-20 16:59:59,693 Node[0] Epoch[10] Batch [100-120]	Speed: 37636.11 samples/sec	accuracy=nan
2023-03-20 17:00:01,423 Node[0] Epoch[10] Batch [120-140]	Speed: 37727.61 samples/sec	accuracy=nan
2023-03-20 17:00:03,156 Node[0] Epoch[10] Batch [140-160]	Speed: 37675.89 samples/sec	accuracy=nan
2023-03-20 17:00:04,887 Node[0] Epoch[10] Batch [160-180]	Speed: 37713.36 samples/sec	accuracy=nan
2023-03-20 17:00:06,619 Node[0] Epoch[10] Batch [180-200]	Speed: 37682.17 samples/sec	accuracy=nan
2023-03-20 17:00:08,352 Node[0] Epoch[10] Batch [200-220]	Speed: 37664.83 samples/sec	accuracy=nan
2023-03-20 17:00:10,087 Node[0] Epoch[10] Batch [220-240]	Speed: 37637.57 samples/sec	accuracy=nan
2023-03-20 17:00:11,821 Node[0] Epoch[10] Batch [240-260]	Speed: 37644.74 samples/sec	accuracy=nan
2023-03-20 17:00:13,554 Node[0] Epoch[10] Batch [260-280]	Speed: 37660.83 samples/sec	accuracy=nan
2023-03-20 17:00:15,286 Node[0] Epoch[10] Batch [280-300]	Speed: 37690.95 samples/sec	accuracy=nan
2023-03-20 17:00:17,019 Node[0] Epoch[10] Batch [300-320]	Speed: 37672.09 samples/sec	accuracy=nan
2023-03-20 17:00:18,751 Node[0] Epoch[10] Batch [320-340]	Speed: 37687.41 samples/sec	accuracy=nan
2023-03-20 17:00:20,482 Node[0] Epoch[10] Batch [340-360]	Speed: 37710.84 samples/sec	accuracy=nan
2023-03-20 17:00:22,217 Node[0] Epoch[10] Batch [360-380]	Speed: 37643.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349623167, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 17:00:23,168 Node[0] Epoch[10] Time cost=33.959
:::MLLOG {"namespace": "", "time_ms": 1679349623168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37727.06525935791}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679349623250, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 17:00:24,041 Node[0] Epoch[10] Validation-accuracy=0.547200
2023-03-20 17:00:24,041 Node[0] Epoch[10] Validation-correct-count=1710.000000
2023-03-20 17:00:24,041 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349624094, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-20 17:00:24,094 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349624094, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.54552, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679349624094, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 17:00:24,094 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349624094, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 17:00:24,094 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:24,094 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349624094, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 17:00:24,095 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:25,836 Node[0] Epoch[11] Batch [0-20]	Speed: 37722.27 samples/sec	accuracy=nan
2023-03-20 17:00:27,566 Node[0] Epoch[11] Batch [20-40]	Speed: 37726.11 samples/sec	accuracy=nan
2023-03-20 17:00:29,299 Node[0] Epoch[11] Batch [40-60]	Speed: 37677.67 samples/sec	accuracy=nan
2023-03-20 17:00:31,030 Node[0] Epoch[11] Batch [60-80]	Speed: 37700.71 samples/sec	accuracy=nan
2023-03-20 17:00:32,765 Node[0] Epoch[11] Batch [80-100]	Speed: 37632.93 samples/sec	accuracy=nan
2023-03-20 17:00:34,497 Node[0] Epoch[11] Batch [100-120]	Speed: 37693.78 samples/sec	accuracy=nan
2023-03-20 17:00:36,227 Node[0] Epoch[11] Batch [120-140]	Speed: 37727.41 samples/sec	accuracy=nan
2023-03-20 17:00:37,960 Node[0] Epoch[11] Batch [140-160]	Speed: 37668.53 samples/sec	accuracy=nan
2023-03-20 17:00:39,692 Node[0] Epoch[11] Batch [160-180]	Speed: 37705.31 samples/sec	accuracy=nan
2023-03-20 17:00:41,428 Node[0] Epoch[11] Batch [180-200]	Speed: 37601.11 samples/sec	accuracy=nan
2023-03-20 17:00:43,160 Node[0] Epoch[11] Batch [200-220]	Speed: 37685.97 samples/sec	accuracy=nan
2023-03-20 17:00:44,891 Node[0] Epoch[11] Batch [220-240]	Speed: 37712.97 samples/sec	accuracy=nan
2023-03-20 17:00:46,623 Node[0] Epoch[11] Batch [240-260]	Speed: 37699.01 samples/sec	accuracy=nan
2023-03-20 17:00:48,357 Node[0] Epoch[11] Batch [260-280]	Speed: 37642.01 samples/sec	accuracy=nan
2023-03-20 17:00:50,090 Node[0] Epoch[11] Batch [280-300]	Speed: 37654.02 samples/sec	accuracy=nan
2023-03-20 17:00:51,821 Node[0] Epoch[11] Batch [300-320]	Speed: 37717.55 samples/sec	accuracy=nan
2023-03-20 17:00:53,554 Node[0] Epoch[11] Batch [320-340]	Speed: 37663.82 samples/sec	accuracy=nan
2023-03-20 17:00:55,297 Node[0] Epoch[11] Batch [340-360]	Speed: 37463.85 samples/sec	accuracy=nan
2023-03-20 17:00:57,032 Node[0] Epoch[11] Batch [360-380]	Speed: 37620.09 samples/sec	accuracy=nan
2023-03-20 17:00:58,070 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,070 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,070 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349658070, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 17:00:58,070 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[0] Epoch[11] Time cost=33.976
:::MLLOG {"namespace": "", "time_ms": 1679349658071, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37707.98328058867}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 17:00:58,071 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349658071, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 17:00:58,071 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,071 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,072 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,072 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,072 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,073 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:58,073 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:00:59,894 Node[0] Epoch[12] Batch [0-20]	Speed: 37601.98 samples/sec	accuracy=nan
2023-03-20 17:01:01,626 Node[0] Epoch[12] Batch [20-40]	Speed: 37702.71 samples/sec	accuracy=nan
2023-03-20 17:01:03,359 Node[0] Epoch[12] Batch [40-60]	Speed: 37666.33 samples/sec	accuracy=nan
2023-03-20 17:01:05,093 Node[0] Epoch[12] Batch [60-80]	Speed: 37654.30 samples/sec	accuracy=nan
2023-03-20 17:01:06,823 Node[0] Epoch[12] Batch [80-100]	Speed: 37728.75 samples/sec	accuracy=nan
2023-03-20 17:01:08,555 Node[0] Epoch[12] Batch [100-120]	Speed: 37692.02 samples/sec	accuracy=nan
2023-03-20 17:01:10,286 Node[0] Epoch[12] Batch [120-140]	Speed: 37712.19 samples/sec	accuracy=nan
2023-03-20 17:01:12,020 Node[0] Epoch[12] Batch [140-160]	Speed: 37637.42 samples/sec	accuracy=nan
2023-03-20 17:01:13,753 Node[0] Epoch[12] Batch [160-180]	Speed: 37666.95 samples/sec	accuracy=nan
2023-03-20 17:01:15,490 Node[0] Epoch[12] Batch [180-200]	Speed: 37590.72 samples/sec	accuracy=nan
2023-03-20 17:01:17,221 Node[0] Epoch[12] Batch [200-220]	Speed: 37703.84 samples/sec	accuracy=nan
2023-03-20 17:01:18,956 Node[0] Epoch[12] Batch [220-240]	Speed: 37626.24 samples/sec	accuracy=nan
2023-03-20 17:01:20,684 Node[0] Epoch[12] Batch [240-260]	Speed: 37790.80 samples/sec	accuracy=nan
2023-03-20 17:01:22,415 Node[0] Epoch[12] Batch [260-280]	Speed: 37694.66 samples/sec	accuracy=nan
2023-03-20 17:01:24,147 Node[0] Epoch[12] Batch [280-300]	Speed: 37690.64 samples/sec	accuracy=nan
2023-03-20 17:01:25,878 Node[0] Epoch[12] Batch [300-320]	Speed: 37713.87 samples/sec	accuracy=nan
2023-03-20 17:01:27,613 Node[0] Epoch[12] Batch [320-340]	Speed: 37628.55 samples/sec	accuracy=nan
2023-03-20 17:01:29,348 Node[0] Epoch[12] Batch [340-360]	Speed: 37632.56 samples/sec	accuracy=nan
2023-03-20 17:01:31,082 Node[0] Epoch[12] Batch [360-380]	Speed: 37651.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349692032, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 17:01:32,032 Node[0] Epoch[12] Time cost=33.961
2023-03-20 17:01:32,032 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349692033, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37724.29672780433}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 17:01:32,032 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,032 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349692033, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 17:01:32,033 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,033 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,034 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,034 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,034 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,034 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,035 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:32,035 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:01:33,854 Node[0] Epoch[13] Batch [0-20]	Speed: 37673.44 samples/sec	accuracy=nan
2023-03-20 17:01:35,587 Node[0] Epoch[13] Batch [20-40]	Speed: 37668.11 samples/sec	accuracy=nan
2023-03-20 17:01:37,318 Node[0] Epoch[13] Batch [40-60]	Speed: 37713.33 samples/sec	accuracy=nan
2023-03-20 17:01:39,054 Node[0] Epoch[13] Batch [60-80]	Speed: 37616.24 samples/sec	accuracy=nan
2023-03-20 17:01:40,785 Node[0] Epoch[13] Batch [80-100]	Speed: 37712.32 samples/sec	accuracy=nan
2023-03-20 17:01:42,517 Node[0] Epoch[13] Batch [100-120]	Speed: 37679.96 samples/sec	accuracy=nan
2023-03-20 17:01:44,249 Node[0] Epoch[13] Batch [120-140]	Speed: 37696.24 samples/sec	accuracy=nan
2023-03-20 17:01:45,982 Node[0] Epoch[13] Batch [140-160]	Speed: 37657.98 samples/sec	accuracy=nan
2023-03-20 17:01:47,716 Node[0] Epoch[13] Batch [160-180]	Speed: 37657.08 samples/sec	accuracy=nan
2023-03-20 17:01:49,451 Node[0] Epoch[13] Batch [180-200]	Speed: 37627.54 samples/sec	accuracy=nan
2023-03-20 17:01:51,182 Node[0] Epoch[13] Batch [200-220]	Speed: 37716.59 samples/sec	accuracy=nan
2023-03-20 17:01:52,918 Node[0] Epoch[13] Batch [220-240]	Speed: 37600.96 samples/sec	accuracy=nan
2023-03-20 17:01:54,649 Node[0] Epoch[13] Batch [240-260]	Speed: 37699.20 samples/sec	accuracy=nan
2023-03-20 17:01:56,381 Node[0] Epoch[13] Batch [260-280]	Speed: 37709.78 samples/sec	accuracy=nan
2023-03-20 17:01:58,114 Node[0] Epoch[13] Batch [280-300]	Speed: 37664.68 samples/sec	accuracy=nan
2023-03-20 17:01:59,846 Node[0] Epoch[13] Batch [300-320]	Speed: 37688.75 samples/sec	accuracy=nan
2023-03-20 17:02:01,580 Node[0] Epoch[13] Batch [320-340]	Speed: 37646.04 samples/sec	accuracy=nan
2023-03-20 17:02:03,317 Node[0] Epoch[13] Batch [340-360]	Speed: 37582.66 samples/sec	accuracy=nan
2023-03-20 17:02:05,048 Node[0] Epoch[13] Batch [360-380]	Speed: 37707.94 samples/sec	accuracy=nan
2023-03-20 17:02:06,084 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349726083, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 17:02:06,084 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,084 Node[0] Epoch[13] Time cost=34.052
2023-03-20 17:02:06,084 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,084 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349726085, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37624.3578637911}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 17:02:06,085 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349726085, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 17:02:06,085 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,085 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,086 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,086 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:06,087 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:07,907 Node[0] Epoch[14] Batch [0-20]	Speed: 37630.77 samples/sec	accuracy=nan
2023-03-20 17:02:09,641 Node[0] Epoch[14] Batch [20-40]	Speed: 37641.10 samples/sec	accuracy=nan
2023-03-20 17:02:11,374 Node[0] Epoch[14] Batch [40-60]	Speed: 37683.01 samples/sec	accuracy=nan
2023-03-20 17:02:13,108 Node[0] Epoch[14] Batch [60-80]	Speed: 37647.85 samples/sec	accuracy=nan
2023-03-20 17:02:14,838 Node[0] Epoch[14] Batch [80-100]	Speed: 37734.72 samples/sec	accuracy=nan
2023-03-20 17:02:16,568 Node[0] Epoch[14] Batch [100-120]	Speed: 37719.67 samples/sec	accuracy=nan
2023-03-20 17:02:18,303 Node[0] Epoch[14] Batch [120-140]	Speed: 37641.87 samples/sec	accuracy=nan
2023-03-20 17:02:20,034 Node[0] Epoch[14] Batch [140-160]	Speed: 37699.09 samples/sec	accuracy=nan
2023-03-20 17:02:21,765 Node[0] Epoch[14] Batch [160-180]	Speed: 37724.55 samples/sec	accuracy=nan
2023-03-20 17:02:23,496 Node[0] Epoch[14] Batch [180-200]	Speed: 37699.21 samples/sec	accuracy=nan
2023-03-20 17:02:25,228 Node[0] Epoch[14] Batch [200-220]	Speed: 37701.19 samples/sec	accuracy=nan
2023-03-20 17:02:26,958 Node[0] Epoch[14] Batch [220-240]	Speed: 37726.27 samples/sec	accuracy=nan
2023-03-20 17:02:28,690 Node[0] Epoch[14] Batch [240-260]	Speed: 37689.45 samples/sec	accuracy=nan
2023-03-20 17:02:30,422 Node[0] Epoch[14] Batch [260-280]	Speed: 37699.76 samples/sec	accuracy=nan
2023-03-20 17:02:32,156 Node[0] Epoch[14] Batch [280-300]	Speed: 37634.15 samples/sec	accuracy=nan
2023-03-20 17:02:33,893 Node[0] Epoch[14] Batch [300-320]	Speed: 37597.22 samples/sec	accuracy=nan
2023-03-20 17:02:35,625 Node[0] Epoch[14] Batch [320-340]	Speed: 37685.33 samples/sec	accuracy=nan
2023-03-20 17:02:37,358 Node[0] Epoch[14] Batch [340-360]	Speed: 37666.94 samples/sec	accuracy=nan
2023-03-20 17:02:39,091 Node[0] Epoch[14] Batch [360-380]	Speed: 37674.57 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349760048, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 17:02:40,049 Node[0] Epoch[14] Time cost=33.964
:::MLLOG {"namespace": "", "time_ms": 1679349760049, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37720.99636826164}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679349760132, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 17:02:40,851 Node[0] Epoch[14] Validation-accuracy=0.600960
2023-03-20 17:02:40,851 Node[0] Epoch[14] Validation-correct-count=1878.000000
2023-03-20 17:02:40,851 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349760980, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-20 17:02:40,980 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349760980, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60824, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 17:02:40,980 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349760980, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-20 17:02:40,980 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349760980, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 17:02:40,980 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:40,980 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349760980, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 17:02:40,981 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:02:42,724 Node[0] Epoch[15] Batch [0-20]	Speed: 37685.08 samples/sec	accuracy=nan
2023-03-20 17:02:44,456 Node[0] Epoch[15] Batch [20-40]	Speed: 37684.62 samples/sec	accuracy=nan
2023-03-20 17:02:46,190 Node[0] Epoch[15] Batch [40-60]	Speed: 37663.28 samples/sec	accuracy=nan
2023-03-20 17:02:47,922 Node[0] Epoch[15] Batch [60-80]	Speed: 37693.43 samples/sec	accuracy=nan
2023-03-20 17:02:49,655 Node[0] Epoch[15] Batch [80-100]	Speed: 37663.00 samples/sec	accuracy=nan
2023-03-20 17:02:51,387 Node[0] Epoch[15] Batch [100-120]	Speed: 37696.93 samples/sec	accuracy=nan
2023-03-20 17:02:53,118 Node[0] Epoch[15] Batch [120-140]	Speed: 37700.50 samples/sec	accuracy=nan
2023-03-20 17:02:54,850 Node[0] Epoch[15] Batch [140-160]	Speed: 37685.19 samples/sec	accuracy=nan
2023-03-20 17:02:56,583 Node[0] Epoch[15] Batch [160-180]	Speed: 37679.50 samples/sec	accuracy=nan
2023-03-20 17:02:58,317 Node[0] Epoch[15] Batch [180-200]	Speed: 37643.24 samples/sec	accuracy=nan
2023-03-20 17:03:00,045 Node[0] Epoch[15] Batch [200-220]	Speed: 37767.43 samples/sec	accuracy=nan
2023-03-20 17:03:01,776 Node[0] Epoch[15] Batch [220-240]	Speed: 37722.09 samples/sec	accuracy=nan
2023-03-20 17:03:03,510 Node[0] Epoch[15] Batch [240-260]	Speed: 37638.98 samples/sec	accuracy=nan
2023-03-20 17:03:05,242 Node[0] Epoch[15] Batch [260-280]	Speed: 37707.80 samples/sec	accuracy=nan
2023-03-20 17:03:06,974 Node[0] Epoch[15] Batch [280-300]	Speed: 37674.29 samples/sec	accuracy=nan
2023-03-20 17:03:08,708 Node[0] Epoch[15] Batch [300-320]	Speed: 37653.90 samples/sec	accuracy=nan
2023-03-20 17:03:10,439 Node[0] Epoch[15] Batch [320-340]	Speed: 37715.56 samples/sec	accuracy=nan
2023-03-20 17:03:12,173 Node[0] Epoch[15] Batch [340-360]	Speed: 37638.15 samples/sec	accuracy=nan
2023-03-20 17:03:13,903 Node[0] Epoch[15] Batch [360-380]	Speed: 37731.82 samples/sec	accuracy=nan
2023-03-20 17:03:14,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,940 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,940 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349794939, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 17:03:14,940 Node[0] Epoch[15] Time cost=33.960
:::MLLOG {"namespace": "", "time_ms": 1679349794940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37725.977715389985}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-20 17:03:14,941 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349794941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 17:03:14,941 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,941 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,942 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,942 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,942 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:14,944 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:16,761 Node[0] Epoch[16] Batch [0-20]	Speed: 37663.83 samples/sec	accuracy=nan
2023-03-20 17:03:18,492 Node[0] Epoch[16] Batch [20-40]	Speed: 37718.46 samples/sec	accuracy=nan
2023-03-20 17:03:20,223 Node[0] Epoch[16] Batch [40-60]	Speed: 37713.97 samples/sec	accuracy=nan
2023-03-20 17:03:21,954 Node[0] Epoch[16] Batch [60-80]	Speed: 37705.48 samples/sec	accuracy=nan
2023-03-20 17:03:23,688 Node[0] Epoch[16] Batch [80-100]	Speed: 37643.54 samples/sec	accuracy=nan
2023-03-20 17:03:25,421 Node[0] Epoch[16] Batch [100-120]	Speed: 37680.06 samples/sec	accuracy=nan
2023-03-20 17:03:27,156 Node[0] Epoch[16] Batch [120-140]	Speed: 37611.35 samples/sec	accuracy=nan
2023-03-20 17:03:28,891 Node[0] Epoch[16] Batch [140-160]	Speed: 37637.84 samples/sec	accuracy=nan
2023-03-20 17:03:30,623 Node[0] Epoch[16] Batch [160-180]	Speed: 37692.18 samples/sec	accuracy=nan
2023-03-20 17:03:32,354 Node[0] Epoch[16] Batch [180-200]	Speed: 37704.96 samples/sec	accuracy=nan
2023-03-20 17:03:34,084 Node[0] Epoch[16] Batch [200-220]	Speed: 37736.43 samples/sec	accuracy=nan
2023-03-20 17:03:35,816 Node[0] Epoch[16] Batch [220-240]	Speed: 37691.97 samples/sec	accuracy=nan
2023-03-20 17:03:37,548 Node[0] Epoch[16] Batch [240-260]	Speed: 37675.07 samples/sec	accuracy=nan
2023-03-20 17:03:39,281 Node[0] Epoch[16] Batch [260-280]	Speed: 37675.44 samples/sec	accuracy=nan
2023-03-20 17:03:41,011 Node[0] Epoch[16] Batch [280-300]	Speed: 37745.04 samples/sec	accuracy=nan
2023-03-20 17:03:42,741 Node[0] Epoch[16] Batch [300-320]	Speed: 37717.97 samples/sec	accuracy=nan
2023-03-20 17:03:44,471 Node[0] Epoch[16] Batch [320-340]	Speed: 37737.98 samples/sec	accuracy=nan
2023-03-20 17:03:46,204 Node[0] Epoch[16] Batch [340-360]	Speed: 37683.03 samples/sec	accuracy=nan
2023-03-20 17:03:47,937 Node[0] Epoch[16] Batch [360-380]	Speed: 37665.86 samples/sec	accuracy=nan
2023-03-20 17:03:48,888 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,888 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,889 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349828888, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 17:03:48,889 Node[0] Epoch[16] Time cost=33.948
:::MLLOG {"namespace": "", "time_ms": 1679349828889, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37738.91841464267}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-20 17:03:48,889 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,889 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,889 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349828890, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 17:03:48,890 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,890 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,890 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,890 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,890 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,890 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,891 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,891 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,892 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:48,892 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:03:50,708 Node[0] Epoch[17] Batch [0-20]	Speed: 37724.60 samples/sec	accuracy=nan
2023-03-20 17:03:52,440 Node[0] Epoch[17] Batch [20-40]	Speed: 37683.87 samples/sec	accuracy=nan
2023-03-20 17:03:54,173 Node[0] Epoch[17] Batch [40-60]	Speed: 37682.70 samples/sec	accuracy=nan
2023-03-20 17:03:55,905 Node[0] Epoch[17] Batch [60-80]	Speed: 37687.35 samples/sec	accuracy=nan
2023-03-20 17:03:57,636 Node[0] Epoch[17] Batch [80-100]	Speed: 37712.30 samples/sec	accuracy=nan
2023-03-20 17:03:59,367 Node[0] Epoch[17] Batch [100-120]	Speed: 37712.31 samples/sec	accuracy=nan
2023-03-20 17:04:01,100 Node[0] Epoch[17] Batch [120-140]	Speed: 37665.83 samples/sec	accuracy=nan
2023-03-20 17:04:02,834 Node[0] Epoch[17] Batch [140-160]	Speed: 37638.56 samples/sec	accuracy=nan
2023-03-20 17:04:04,567 Node[0] Epoch[17] Batch [160-180]	Speed: 37670.97 samples/sec	accuracy=nan
2023-03-20 17:04:06,299 Node[0] Epoch[17] Batch [180-200]	Speed: 37687.70 samples/sec	accuracy=nan
2023-03-20 17:04:08,033 Node[0] Epoch[17] Batch [200-220]	Speed: 37656.31 samples/sec	accuracy=nan
2023-03-20 17:04:09,765 Node[0] Epoch[17] Batch [220-240]	Speed: 37693.62 samples/sec	accuracy=nan
2023-03-20 17:04:11,497 Node[0] Epoch[17] Batch [240-260]	Speed: 37675.51 samples/sec	accuracy=nan
2023-03-20 17:04:13,228 Node[0] Epoch[17] Batch [260-280]	Speed: 37716.07 samples/sec	accuracy=nan
2023-03-20 17:04:14,959 Node[0] Epoch[17] Batch [280-300]	Speed: 37713.19 samples/sec	accuracy=nan
2023-03-20 17:04:16,690 Node[0] Epoch[17] Batch [300-320]	Speed: 37717.63 samples/sec	accuracy=nan
2023-03-20 17:04:18,423 Node[0] Epoch[17] Batch [320-340]	Speed: 37674.37 samples/sec	accuracy=nan
2023-03-20 17:04:20,155 Node[0] Epoch[17] Batch [340-360]	Speed: 37690.85 samples/sec	accuracy=nan
2023-03-20 17:04:21,886 Node[0] Epoch[17] Batch [360-380]	Speed: 37698.93 samples/sec	accuracy=nan
2023-03-20 17:04:22,925 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,926 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349862925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 17:04:22,926 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,926 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,926 Node[0] Epoch[17] Time cost=34.036
:::MLLOG {"namespace": "", "time_ms": 1679349862926, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37641.08073511459}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-20 17:04:22,926 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349862926, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 17:04:22,927 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,926 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,927 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,926 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,927 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,927 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,927 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,927 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,928 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,928 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:22,929 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:24,744 Node[0] Epoch[18] Batch [0-20]	Speed: 37704.38 samples/sec	accuracy=nan
2023-03-20 17:04:26,476 Node[0] Epoch[18] Batch [20-40]	Speed: 37703.30 samples/sec	accuracy=nan
2023-03-20 17:04:28,209 Node[0] Epoch[18] Batch [40-60]	Speed: 37665.25 samples/sec	accuracy=nan
2023-03-20 17:04:29,942 Node[0] Epoch[18] Batch [60-80]	Speed: 37667.33 samples/sec	accuracy=nan
2023-03-20 17:04:31,674 Node[0] Epoch[18] Batch [80-100]	Speed: 37690.67 samples/sec	accuracy=nan
2023-03-20 17:04:33,405 Node[0] Epoch[18] Batch [100-120]	Speed: 37705.23 samples/sec	accuracy=nan
2023-03-20 17:04:35,137 Node[0] Epoch[18] Batch [120-140]	Speed: 37694.62 samples/sec	accuracy=nan
2023-03-20 17:04:36,868 Node[0] Epoch[18] Batch [140-160]	Speed: 37723.48 samples/sec	accuracy=nan
2023-03-20 17:04:38,600 Node[0] Epoch[18] Batch [160-180]	Speed: 37685.88 samples/sec	accuracy=nan
2023-03-20 17:04:40,331 Node[0] Epoch[18] Batch [180-200]	Speed: 37697.86 samples/sec	accuracy=nan
2023-03-20 17:04:42,061 Node[0] Epoch[18] Batch [200-220]	Speed: 37737.59 samples/sec	accuracy=nan
2023-03-20 17:04:43,797 Node[0] Epoch[18] Batch [220-240]	Speed: 37607.13 samples/sec	accuracy=nan
2023-03-20 17:04:45,527 Node[0] Epoch[18] Batch [240-260]	Speed: 37729.10 samples/sec	accuracy=nan
2023-03-20 17:04:47,257 Node[0] Epoch[18] Batch [260-280]	Speed: 37737.00 samples/sec	accuracy=nan
2023-03-20 17:04:48,989 Node[0] Epoch[18] Batch [280-300]	Speed: 37694.46 samples/sec	accuracy=nan
2023-03-20 17:04:50,720 Node[0] Epoch[18] Batch [300-320]	Speed: 37711.01 samples/sec	accuracy=nan
2023-03-20 17:04:52,452 Node[0] Epoch[18] Batch [320-340]	Speed: 37681.49 samples/sec	accuracy=nan
2023-03-20 17:04:54,183 Node[0] Epoch[18] Batch [340-360]	Speed: 37712.57 samples/sec	accuracy=nan
2023-03-20 17:04:55,913 Node[0] Epoch[18] Batch [360-380]	Speed: 37745.47 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349896861, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 17:04:56,862 Node[0] Epoch[18] Time cost=33.936
:::MLLOG {"namespace": "", "time_ms": 1679349896862, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37752.801602910746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679349896944, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 17:04:57,667 Node[0] Epoch[18] Validation-accuracy=0.664640
2023-03-20 17:04:57,667 Node[0] Epoch[18] Validation-correct-count=2077.000000
2023-03-20 17:04:57,667 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349897785, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-20 17:04:57,785 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349897786, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65672, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679349897786, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 17:04:57,785 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,785 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,785 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349897786, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 17:04:57,786 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:57,786 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349897786, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 17:04:57,786 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:04:59,528 Node[0] Epoch[19] Batch [0-20]	Speed: 37687.89 samples/sec	accuracy=nan
2023-03-20 17:05:01,260 Node[0] Epoch[19] Batch [20-40]	Speed: 37696.39 samples/sec	accuracy=nan
2023-03-20 17:05:02,997 Node[0] Epoch[19] Batch [40-60]	Speed: 37591.23 samples/sec	accuracy=nan
2023-03-20 17:05:04,728 Node[0] Epoch[19] Batch [60-80]	Speed: 37706.05 samples/sec	accuracy=nan
2023-03-20 17:05:06,457 Node[0] Epoch[19] Batch [80-100]	Speed: 37746.01 samples/sec	accuracy=nan
2023-03-20 17:05:08,189 Node[0] Epoch[19] Batch [100-120]	Speed: 37703.51 samples/sec	accuracy=nan
2023-03-20 17:05:09,920 Node[0] Epoch[19] Batch [120-140]	Speed: 37710.58 samples/sec	accuracy=nan
2023-03-20 17:05:11,652 Node[0] Epoch[19] Batch [140-160]	Speed: 37699.41 samples/sec	accuracy=nan
2023-03-20 17:05:13,381 Node[0] Epoch[19] Batch [160-180]	Speed: 37752.16 samples/sec	accuracy=nan
2023-03-20 17:05:15,114 Node[0] Epoch[19] Batch [180-200]	Speed: 37653.53 samples/sec	accuracy=nan
2023-03-20 17:05:16,845 Node[0] Epoch[19] Batch [200-220]	Speed: 37711.40 samples/sec	accuracy=nan
2023-03-20 17:05:18,575 Node[0] Epoch[19] Batch [220-240]	Speed: 37751.23 samples/sec	accuracy=nan
2023-03-20 17:05:20,307 Node[0] Epoch[19] Batch [240-260]	Speed: 37685.37 samples/sec	accuracy=nan
2023-03-20 17:05:22,040 Node[0] Epoch[19] Batch [260-280]	Speed: 37673.77 samples/sec	accuracy=nan
2023-03-20 17:05:23,770 Node[0] Epoch[19] Batch [280-300]	Speed: 37725.75 samples/sec	accuracy=nan
2023-03-20 17:05:25,502 Node[0] Epoch[19] Batch [300-320]	Speed: 37685.39 samples/sec	accuracy=nan
2023-03-20 17:05:27,235 Node[0] Epoch[19] Batch [320-340]	Speed: 37684.83 samples/sec	accuracy=nan
2023-03-20 17:05:28,964 Node[0] Epoch[19] Batch [340-360]	Speed: 37755.17 samples/sec	accuracy=nan
2023-03-20 17:05:30,697 Node[0] Epoch[19] Batch [360-380]	Speed: 37666.71 samples/sec	accuracy=nan
2023-03-20 17:05:31,733 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,733 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,733 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,734 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349931733, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 17:05:31,734 Node[0] Epoch[19] Time cost=33.948
2023-03-20 17:05:31,734 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,734 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349931734, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37739.49038203783}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679349931734, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 17:05:31,734 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,734 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,734 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,735 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,735 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,735 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,735 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,735 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,736 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:31,736 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:05:33,556 Node[0] Epoch[20] Batch [0-20]	Speed: 37676.57 samples/sec	accuracy=nan
2023-03-20 17:05:35,288 Node[0] Epoch[20] Batch [20-40]	Speed: 37705.64 samples/sec	accuracy=nan
2023-03-20 17:05:37,020 Node[0] Epoch[20] Batch [40-60]	Speed: 37676.37 samples/sec	accuracy=nan
2023-03-20 17:05:38,750 Node[0] Epoch[20] Batch [60-80]	Speed: 37732.37 samples/sec	accuracy=nan
2023-03-20 17:05:40,484 Node[0] Epoch[20] Batch [80-100]	Speed: 37661.23 samples/sec	accuracy=nan
2023-03-20 17:05:42,216 Node[0] Epoch[20] Batch [100-120]	Speed: 37674.34 samples/sec	accuracy=nan
2023-03-20 17:05:43,950 Node[0] Epoch[20] Batch [120-140]	Speed: 37666.14 samples/sec	accuracy=nan
2023-03-20 17:05:45,682 Node[0] Epoch[20] Batch [140-160]	Speed: 37671.17 samples/sec	accuracy=nan
2023-03-20 17:05:47,417 Node[0] Epoch[20] Batch [160-180]	Speed: 37643.85 samples/sec	accuracy=nan
2023-03-20 17:05:49,147 Node[0] Epoch[20] Batch [180-200]	Speed: 37734.49 samples/sec	accuracy=nan
2023-03-20 17:05:50,881 Node[0] Epoch[20] Batch [200-220]	Speed: 37648.14 samples/sec	accuracy=nan
2023-03-20 17:05:52,617 Node[0] Epoch[20] Batch [220-240]	Speed: 37590.71 samples/sec	accuracy=nan
2023-03-20 17:05:54,350 Node[0] Epoch[20] Batch [240-260]	Speed: 37671.13 samples/sec	accuracy=nan
2023-03-20 17:05:56,082 Node[0] Epoch[20] Batch [260-280]	Speed: 37695.59 samples/sec	accuracy=nan
2023-03-20 17:05:57,814 Node[0] Epoch[20] Batch [280-300]	Speed: 37685.53 samples/sec	accuracy=nan
2023-03-20 17:05:59,545 Node[0] Epoch[20] Batch [300-320]	Speed: 37715.12 samples/sec	accuracy=nan
2023-03-20 17:06:01,281 Node[0] Epoch[20] Batch [320-340]	Speed: 37598.07 samples/sec	accuracy=nan
2023-03-20 17:06:03,015 Node[0] Epoch[20] Batch [340-360]	Speed: 37652.36 samples/sec	accuracy=nan
2023-03-20 17:06:04,750 Node[0] Epoch[20] Batch [360-380]	Speed: 37633.24 samples/sec	accuracy=nan
2023-03-20 17:06:05,700 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,700 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,700 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,701 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,700 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349965700, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 17:06:05,701 Node[0] Epoch[20] Time cost=33.967
2023-03-20 17:06:05,701 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349965701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37718.30338712591}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 17:06:05,701 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,701 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,701 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349965702, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 17:06:05,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,702 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,701 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,702 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,702 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,702 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:05,703 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:07,520 Node[0] Epoch[21] Batch [0-20]	Speed: 37713.92 samples/sec	accuracy=nan
2023-03-20 17:06:09,253 Node[0] Epoch[21] Batch [20-40]	Speed: 37673.72 samples/sec	accuracy=nan
2023-03-20 17:06:10,987 Node[0] Epoch[21] Batch [40-60]	Speed: 37650.80 samples/sec	accuracy=nan
2023-03-20 17:06:12,716 Node[0] Epoch[21] Batch [60-80]	Speed: 37741.23 samples/sec	accuracy=nan
2023-03-20 17:06:14,447 Node[0] Epoch[21] Batch [80-100]	Speed: 37716.44 samples/sec	accuracy=nan
2023-03-20 17:06:16,183 Node[0] Epoch[21] Batch [100-120]	Speed: 37618.94 samples/sec	accuracy=nan
2023-03-20 17:06:17,916 Node[0] Epoch[21] Batch [120-140]	Speed: 37656.83 samples/sec	accuracy=nan
2023-03-20 17:06:19,649 Node[0] Epoch[21] Batch [140-160]	Speed: 37663.70 samples/sec	accuracy=nan
2023-03-20 17:06:21,383 Node[0] Epoch[21] Batch [160-180]	Speed: 37662.37 samples/sec	accuracy=nan
2023-03-20 17:06:23,116 Node[0] Epoch[21] Batch [180-200]	Speed: 37651.86 samples/sec	accuracy=nan
2023-03-20 17:06:24,849 Node[0] Epoch[21] Batch [200-220]	Speed: 37679.73 samples/sec	accuracy=nan
2023-03-20 17:06:26,587 Node[0] Epoch[21] Batch [220-240]	Speed: 37559.91 samples/sec	accuracy=nan
2023-03-20 17:06:28,318 Node[0] Epoch[21] Batch [240-260]	Speed: 37704.97 samples/sec	accuracy=nan
2023-03-20 17:06:30,050 Node[0] Epoch[21] Batch [260-280]	Speed: 37705.38 samples/sec	accuracy=nan
2023-03-20 17:06:31,781 Node[0] Epoch[21] Batch [280-300]	Speed: 37693.41 samples/sec	accuracy=nan
2023-03-20 17:06:33,514 Node[0] Epoch[21] Batch [300-320]	Speed: 37670.57 samples/sec	accuracy=nan
2023-03-20 17:06:35,248 Node[0] Epoch[21] Batch [320-340]	Speed: 37649.60 samples/sec	accuracy=nan
2023-03-20 17:06:36,980 Node[0] Epoch[21] Batch [340-360]	Speed: 37697.62 samples/sec	accuracy=nan
2023-03-20 17:06:38,713 Node[0] Epoch[21] Batch [360-380]	Speed: 37665.71 samples/sec	accuracy=nan
2023-03-20 17:06:39,750 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,750 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,750 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349999750, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 17:06:39,751 Node[0] Epoch[21] Time cost=34.049
2023-03-20 17:06:39,751 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,751 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679349999751, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37626.78820343902}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679349999751, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 17:06:39,751 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,751 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,752 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,753 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:39,753 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:06:41,571 Node[0] Epoch[22] Batch [0-20]	Speed: 37658.46 samples/sec	accuracy=nan
2023-03-20 17:06:43,299 Node[0] Epoch[22] Batch [20-40]	Speed: 37772.20 samples/sec	accuracy=nan
2023-03-20 17:06:45,033 Node[0] Epoch[22] Batch [40-60]	Speed: 37654.97 samples/sec	accuracy=nan
2023-03-20 17:06:46,763 Node[0] Epoch[22] Batch [60-80]	Speed: 37733.25 samples/sec	accuracy=nan
2023-03-20 17:06:48,495 Node[0] Epoch[22] Batch [80-100]	Speed: 37700.29 samples/sec	accuracy=nan
2023-03-20 17:06:50,229 Node[0] Epoch[22] Batch [100-120]	Speed: 37641.46 samples/sec	accuracy=nan
2023-03-20 17:06:51,962 Node[0] Epoch[22] Batch [120-140]	Speed: 37665.81 samples/sec	accuracy=nan
2023-03-20 17:06:53,698 Node[0] Epoch[22] Batch [140-160]	Speed: 37608.89 samples/sec	accuracy=nan
2023-03-20 17:06:55,431 Node[0] Epoch[22] Batch [160-180]	Speed: 37659.36 samples/sec	accuracy=nan
2023-03-20 17:06:57,163 Node[0] Epoch[22] Batch [180-200]	Speed: 37703.85 samples/sec	accuracy=nan
2023-03-20 17:06:58,897 Node[0] Epoch[22] Batch [200-220]	Speed: 37646.74 samples/sec	accuracy=nan
2023-03-20 17:07:00,628 Node[0] Epoch[22] Batch [220-240]	Speed: 37696.18 samples/sec	accuracy=nan
2023-03-20 17:07:02,360 Node[0] Epoch[22] Batch [240-260]	Speed: 37701.39 samples/sec	accuracy=nan
2023-03-20 17:07:04,094 Node[0] Epoch[22] Batch [260-280]	Speed: 37651.12 samples/sec	accuracy=nan
2023-03-20 17:07:05,824 Node[0] Epoch[22] Batch [280-300]	Speed: 37720.17 samples/sec	accuracy=nan
2023-03-20 17:07:07,557 Node[0] Epoch[22] Batch [300-320]	Speed: 37672.95 samples/sec	accuracy=nan
2023-03-20 17:07:09,289 Node[0] Epoch[22] Batch [320-340]	Speed: 37684.22 samples/sec	accuracy=nan
2023-03-20 17:07:11,022 Node[0] Epoch[22] Batch [340-360]	Speed: 37672.30 samples/sec	accuracy=nan
2023-03-20 17:07:12,755 Node[0] Epoch[22] Batch [360-380]	Speed: 37672.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350033706, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 17:07:13,707 Node[0] Epoch[22] Time cost=33.955
:::MLLOG {"namespace": "", "time_ms": 1679350033707, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37730.81864167353}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679350033789, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 17:07:14,552 Node[0] Epoch[22] Validation-accuracy=0.687680
2023-03-20 17:07:14,552 Node[0] Epoch[22] Validation-correct-count=2149.000000
2023-03-20 17:07:14,552 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679350034626, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679350034626, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69392, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679350034626, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 17:07:14,626 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350034626, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 17:07:14,626 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350034626, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 17:07:14,626 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,627 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:14,626 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:16,367 Node[0] Epoch[23] Batch [0-20]	Speed: 37745.31 samples/sec	accuracy=nan
2023-03-20 17:07:18,099 Node[0] Epoch[23] Batch [20-40]	Speed: 37690.44 samples/sec	accuracy=nan
2023-03-20 17:07:19,833 Node[0] Epoch[23] Batch [40-60]	Speed: 37632.36 samples/sec	accuracy=nan
2023-03-20 17:07:21,564 Node[0] Epoch[23] Batch [60-80]	Speed: 37718.22 samples/sec	accuracy=nan
2023-03-20 17:07:23,297 Node[0] Epoch[23] Batch [80-100]	Speed: 37662.70 samples/sec	accuracy=nan
2023-03-20 17:07:25,027 Node[0] Epoch[23] Batch [100-120]	Speed: 37741.56 samples/sec	accuracy=nan
2023-03-20 17:07:26,759 Node[0] Epoch[23] Batch [120-140]	Speed: 37682.29 samples/sec	accuracy=nan
2023-03-20 17:07:28,495 Node[0] Epoch[23] Batch [140-160]	Speed: 37613.37 samples/sec	accuracy=nan
2023-03-20 17:07:30,226 Node[0] Epoch[23] Batch [160-180]	Speed: 37702.88 samples/sec	accuracy=nan
2023-03-20 17:07:31,958 Node[0] Epoch[23] Batch [180-200]	Speed: 37707.59 samples/sec	accuracy=nan
2023-03-20 17:07:33,691 Node[0] Epoch[23] Batch [200-220]	Speed: 37668.78 samples/sec	accuracy=nan
2023-03-20 17:07:35,423 Node[0] Epoch[23] Batch [220-240]	Speed: 37681.01 samples/sec	accuracy=nan
2023-03-20 17:07:37,155 Node[0] Epoch[23] Batch [240-260]	Speed: 37688.51 samples/sec	accuracy=nan
2023-03-20 17:07:38,887 Node[0] Epoch[23] Batch [260-280]	Speed: 37693.67 samples/sec	accuracy=nan
2023-03-20 17:07:40,620 Node[0] Epoch[23] Batch [280-300]	Speed: 37665.88 samples/sec	accuracy=nan
2023-03-20 17:07:42,353 Node[0] Epoch[23] Batch [300-320]	Speed: 37666.09 samples/sec	accuracy=nan
2023-03-20 17:07:44,086 Node[0] Epoch[23] Batch [320-340]	Speed: 37662.22 samples/sec	accuracy=nan
2023-03-20 17:07:45,819 Node[0] Epoch[23] Batch [340-360]	Speed: 37675.42 samples/sec	accuracy=nan
2023-03-20 17:07:47,555 Node[0] Epoch[23] Batch [360-380]	Speed: 37612.26 samples/sec	accuracy=nan
2023-03-20 17:07:48,593 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,593 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,594 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,594 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350068594, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 17:07:48,595 Node[0] Epoch[23] Time cost=33.968
2023-03-20 17:07:48,594 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350068595, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37716.82242463095}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-20 17:07:48,595 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,595 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,595 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350068595, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 17:07:48,595 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,595 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,595 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,595 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,596 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,597 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,596 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:48,597 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:07:50,413 Node[0] Epoch[24] Batch [0-20]	Speed: 37685.47 samples/sec	accuracy=nan
2023-03-20 17:07:52,146 Node[0] Epoch[24] Batch [20-40]	Speed: 37676.39 samples/sec	accuracy=nan
2023-03-20 17:07:53,880 Node[0] Epoch[24] Batch [40-60]	Speed: 37648.63 samples/sec	accuracy=nan
2023-03-20 17:07:55,610 Node[0] Epoch[24] Batch [60-80]	Speed: 37728.63 samples/sec	accuracy=nan
2023-03-20 17:07:57,345 Node[0] Epoch[24] Batch [80-100]	Speed: 37632.94 samples/sec	accuracy=nan
2023-03-20 17:07:59,077 Node[0] Epoch[24] Batch [100-120]	Speed: 37690.88 samples/sec	accuracy=nan
2023-03-20 17:08:00,813 Node[0] Epoch[24] Batch [120-140]	Speed: 37605.57 samples/sec	accuracy=nan
2023-03-20 17:08:02,543 Node[0] Epoch[24] Batch [140-160]	Speed: 37716.89 samples/sec	accuracy=nan
2023-03-20 17:08:04,276 Node[0] Epoch[24] Batch [160-180]	Speed: 37685.46 samples/sec	accuracy=nan
2023-03-20 17:08:06,011 Node[0] Epoch[24] Batch [180-200]	Speed: 37621.45 samples/sec	accuracy=nan
2023-03-20 17:08:07,743 Node[0] Epoch[24] Batch [200-220]	Speed: 37679.10 samples/sec	accuracy=nan
2023-03-20 17:08:09,478 Node[0] Epoch[24] Batch [220-240]	Speed: 37643.19 samples/sec	accuracy=nan
2023-03-20 17:08:11,211 Node[0] Epoch[24] Batch [240-260]	Speed: 37668.40 samples/sec	accuracy=nan
2023-03-20 17:08:12,941 Node[0] Epoch[24] Batch [260-280]	Speed: 37719.76 samples/sec	accuracy=nan
2023-03-20 17:08:14,675 Node[0] Epoch[24] Batch [280-300]	Speed: 37656.15 samples/sec	accuracy=nan
2023-03-20 17:08:16,407 Node[0] Epoch[24] Batch [300-320]	Speed: 37687.35 samples/sec	accuracy=nan
2023-03-20 17:08:18,139 Node[0] Epoch[24] Batch [320-340]	Speed: 37688.56 samples/sec	accuracy=nan
2023-03-20 17:08:19,871 Node[0] Epoch[24] Batch [340-360]	Speed: 37700.61 samples/sec	accuracy=nan
2023-03-20 17:08:21,605 Node[0] Epoch[24] Batch [360-380]	Speed: 37632.26 samples/sec	accuracy=nan
2023-03-20 17:08:22,558 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,558 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,559 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,559 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350102558, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 17:08:22,559 Node[0] Epoch[24] Time cost=33.964
2023-03-20 17:08:22,559 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350102560, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37720.994249946234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-20 17:08:22,559 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350102560, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 17:08:22,560 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,560 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,560 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,560 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,560 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,560 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,561 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,561 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,561 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:22,562 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:24,378 Node[0] Epoch[25] Batch [0-20]	Speed: 37738.07 samples/sec	accuracy=nan
2023-03-20 17:08:26,111 Node[0] Epoch[25] Batch [20-40]	Speed: 37656.35 samples/sec	accuracy=nan
2023-03-20 17:08:27,846 Node[0] Epoch[25] Batch [40-60]	Speed: 37632.75 samples/sec	accuracy=nan
2023-03-20 17:08:29,577 Node[0] Epoch[25] Batch [60-80]	Speed: 37710.40 samples/sec	accuracy=nan
2023-03-20 17:08:31,311 Node[0] Epoch[25] Batch [80-100]	Speed: 37648.10 samples/sec	accuracy=nan
2023-03-20 17:08:33,043 Node[0] Epoch[25] Batch [100-120]	Speed: 37688.22 samples/sec	accuracy=nan
2023-03-20 17:08:34,776 Node[0] Epoch[25] Batch [120-140]	Speed: 37660.93 samples/sec	accuracy=nan
2023-03-20 17:08:36,513 Node[0] Epoch[25] Batch [140-160]	Speed: 37583.18 samples/sec	accuracy=nan
2023-03-20 17:08:38,246 Node[0] Epoch[25] Batch [160-180]	Speed: 37672.15 samples/sec	accuracy=nan
2023-03-20 17:08:39,977 Node[0] Epoch[25] Batch [180-200]	Speed: 37724.37 samples/sec	accuracy=nan
2023-03-20 17:08:41,710 Node[0] Epoch[25] Batch [200-220]	Speed: 37661.60 samples/sec	accuracy=nan
2023-03-20 17:08:43,446 Node[0] Epoch[25] Batch [220-240]	Speed: 37591.38 samples/sec	accuracy=nan
2023-03-20 17:08:45,180 Node[0] Epoch[25] Batch [240-260]	Speed: 37666.36 samples/sec	accuracy=nan
2023-03-20 17:08:46,911 Node[0] Epoch[25] Batch [260-280]	Speed: 37700.06 samples/sec	accuracy=nan
2023-03-20 17:08:48,644 Node[0] Epoch[25] Batch [280-300]	Speed: 37673.76 samples/sec	accuracy=nan
2023-03-20 17:08:50,375 Node[0] Epoch[25] Batch [300-320]	Speed: 37713.10 samples/sec	accuracy=nan
2023-03-20 17:08:52,110 Node[0] Epoch[25] Batch [320-340]	Speed: 37614.23 samples/sec	accuracy=nan
2023-03-20 17:08:53,843 Node[0] Epoch[25] Batch [340-360]	Speed: 37666.68 samples/sec	accuracy=nan
2023-03-20 17:08:55,576 Node[0] Epoch[25] Batch [360-380]	Speed: 37672.88 samples/sec	accuracy=nan
2023-03-20 17:08:56,615 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,615 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,616 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,616 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350136615, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 17:08:56,617 Node[0] Epoch[25] Time cost=34.057
:::MLLOG {"namespace": "", "time_ms": 1679350136617, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37618.82260358398}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-20 17:08:56,617 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,617 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350136617, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 17:08:56,617 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,617 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,617 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,617 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,617 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,618 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,618 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,618 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,618 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:56,620 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:08:58,438 Node[0] Epoch[26] Batch [0-20]	Speed: 37611.80 samples/sec	accuracy=nan
2023-03-20 17:09:00,171 Node[0] Epoch[26] Batch [20-40]	Speed: 37665.11 samples/sec	accuracy=nan
2023-03-20 17:09:01,905 Node[0] Epoch[26] Batch [40-60]	Speed: 37654.61 samples/sec	accuracy=nan
2023-03-20 17:09:03,636 Node[0] Epoch[26] Batch [60-80]	Speed: 37707.96 samples/sec	accuracy=nan
2023-03-20 17:09:05,371 Node[0] Epoch[26] Batch [80-100]	Speed: 37630.19 samples/sec	accuracy=nan
2023-03-20 17:09:07,105 Node[0] Epoch[26] Batch [100-120]	Speed: 37639.91 samples/sec	accuracy=nan
2023-03-20 17:09:08,839 Node[0] Epoch[26] Batch [120-140]	Speed: 37662.07 samples/sec	accuracy=nan
2023-03-20 17:09:10,571 Node[0] Epoch[26] Batch [140-160]	Speed: 37692.85 samples/sec	accuracy=nan
2023-03-20 17:09:12,304 Node[0] Epoch[26] Batch [160-180]	Speed: 37654.06 samples/sec	accuracy=nan
2023-03-20 17:09:14,036 Node[0] Epoch[26] Batch [180-200]	Speed: 37698.51 samples/sec	accuracy=nan
2023-03-20 17:09:15,770 Node[0] Epoch[26] Batch [200-220]	Speed: 37649.76 samples/sec	accuracy=nan
2023-03-20 17:09:17,505 Node[0] Epoch[26] Batch [220-240]	Speed: 37623.75 samples/sec	accuracy=nan
2023-03-20 17:09:19,239 Node[0] Epoch[26] Batch [240-260]	Speed: 37645.56 samples/sec	accuracy=nan
2023-03-20 17:09:20,971 Node[0] Epoch[26] Batch [260-280]	Speed: 37697.43 samples/sec	accuracy=nan
2023-03-20 17:09:22,704 Node[0] Epoch[26] Batch [280-300]	Speed: 37656.90 samples/sec	accuracy=nan
2023-03-20 17:09:24,436 Node[0] Epoch[26] Batch [300-320]	Speed: 37694.75 samples/sec	accuracy=nan
2023-03-20 17:09:26,169 Node[0] Epoch[26] Batch [320-340]	Speed: 37662.44 samples/sec	accuracy=nan
2023-03-20 17:09:27,899 Node[0] Epoch[26] Batch [340-360]	Speed: 37727.94 samples/sec	accuracy=nan
2023-03-20 17:09:29,635 Node[0] Epoch[26] Batch [360-380]	Speed: 37620.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350170587, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 17:09:30,588 Node[0] Epoch[26] Time cost=33.971
:::MLLOG {"namespace": "", "time_ms": 1679350170588, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37713.586103039204}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679350170669, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 17:09:31,385 Node[0] Epoch[26] Validation-accuracy=0.733440
2023-03-20 17:09:31,385 Node[0] Epoch[26] Validation-correct-count=2292.000000
2023-03-20 17:09:31,385 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679350171511, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679350171511, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73138, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679350171512, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 17:09:31,511 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350171512, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 17:09:31,511 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,511 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350171512, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 17:09:31,512 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:31,512 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:09:33,257 Node[0] Epoch[27] Batch [0-20]	Speed: 37577.61 samples/sec	accuracy=nan
2023-03-20 17:09:34,992 Node[0] Epoch[27] Batch [20-40]	Speed: 37628.60 samples/sec	accuracy=nan
2023-03-20 17:09:36,726 Node[0] Epoch[27] Batch [40-60]	Speed: 37647.72 samples/sec	accuracy=nan
2023-03-20 17:09:38,457 Node[0] Epoch[27] Batch [60-80]	Speed: 37699.81 samples/sec	accuracy=nan
2023-03-20 17:09:40,191 Node[0] Epoch[27] Batch [80-100]	Speed: 37653.57 samples/sec	accuracy=nan
2023-03-20 17:09:41,926 Node[0] Epoch[27] Batch [100-120]	Speed: 37631.39 samples/sec	accuracy=nan
2023-03-20 17:09:43,658 Node[0] Epoch[27] Batch [120-140]	Speed: 37686.62 samples/sec	accuracy=nan
2023-03-20 17:09:45,391 Node[0] Epoch[27] Batch [140-160]	Speed: 37670.50 samples/sec	accuracy=nan
2023-03-20 17:09:47,125 Node[0] Epoch[27] Batch [160-180]	Speed: 37649.33 samples/sec	accuracy=nan
2023-03-20 17:09:48,860 Node[0] Epoch[27] Batch [180-200]	Speed: 37626.97 samples/sec	accuracy=nan
2023-03-20 17:09:50,594 Node[0] Epoch[27] Batch [200-220]	Speed: 37629.20 samples/sec	accuracy=nan
2023-03-20 17:09:52,327 Node[0] Epoch[27] Batch [220-240]	Speed: 37674.78 samples/sec	accuracy=nan
2023-03-20 17:09:54,059 Node[0] Epoch[27] Batch [240-260]	Speed: 37688.17 samples/sec	accuracy=nan
2023-03-20 17:09:55,792 Node[0] Epoch[27] Batch [260-280]	Speed: 37675.78 samples/sec	accuracy=nan
2023-03-20 17:09:57,522 Node[0] Epoch[27] Batch [280-300]	Speed: 37725.28 samples/sec	accuracy=nan
2023-03-20 17:09:59,254 Node[0] Epoch[27] Batch [300-320]	Speed: 37695.18 samples/sec	accuracy=nan
2023-03-20 17:10:00,988 Node[0] Epoch[27] Batch [320-340]	Speed: 37649.68 samples/sec	accuracy=nan
2023-03-20 17:10:02,722 Node[0] Epoch[27] Batch [340-360]	Speed: 37654.57 samples/sec	accuracy=nan
2023-03-20 17:10:04,454 Node[0] Epoch[27] Batch [360-380]	Speed: 37674.08 samples/sec	accuracy=nan
2023-03-20 17:10:05,495 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,495 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,495 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,496 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350205495, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 17:10:05,496 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,496 Node[0] Epoch[27] Time cost=33.984
2023-03-20 17:10:05,496 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350205496, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37698.97134041881}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-20 17:10:05,496 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,496 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,496 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350205497, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 17:10:05,496 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,497 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,497 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,497 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,497 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,498 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:05,498 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:07,316 Node[0] Epoch[28] Batch [0-20]	Speed: 37652.32 samples/sec	accuracy=nan
2023-03-20 17:10:09,049 Node[0] Epoch[28] Batch [20-40]	Speed: 37673.21 samples/sec	accuracy=nan
2023-03-20 17:10:10,784 Node[0] Epoch[28] Batch [40-60]	Speed: 37623.48 samples/sec	accuracy=nan
2023-03-20 17:10:12,522 Node[0] Epoch[28] Batch [60-80]	Speed: 37573.64 samples/sec	accuracy=nan
2023-03-20 17:10:14,257 Node[0] Epoch[28] Batch [80-100]	Speed: 37619.04 samples/sec	accuracy=nan
2023-03-20 17:10:15,987 Node[0] Epoch[28] Batch [100-120]	Speed: 37724.72 samples/sec	accuracy=nan
2023-03-20 17:10:17,719 Node[0] Epoch[28] Batch [120-140]	Speed: 37700.10 samples/sec	accuracy=nan
2023-03-20 17:10:19,453 Node[0] Epoch[28] Batch [140-160]	Speed: 37651.98 samples/sec	accuracy=nan
2023-03-20 17:10:21,186 Node[0] Epoch[28] Batch [160-180]	Speed: 37669.52 samples/sec	accuracy=nan
2023-03-20 17:10:22,920 Node[0] Epoch[28] Batch [180-200]	Speed: 37648.01 samples/sec	accuracy=nan
2023-03-20 17:10:24,654 Node[0] Epoch[28] Batch [200-220]	Speed: 37648.56 samples/sec	accuracy=nan
2023-03-20 17:10:26,387 Node[0] Epoch[28] Batch [220-240]	Speed: 37650.49 samples/sec	accuracy=nan
2023-03-20 17:10:28,120 Node[0] Epoch[28] Batch [240-260]	Speed: 37677.59 samples/sec	accuracy=nan
2023-03-20 17:10:29,856 Node[0] Epoch[28] Batch [260-280]	Speed: 37597.50 samples/sec	accuracy=nan
2023-03-20 17:10:31,588 Node[0] Epoch[28] Batch [280-300]	Speed: 37704.44 samples/sec	accuracy=nan
2023-03-20 17:10:33,319 Node[0] Epoch[28] Batch [300-320]	Speed: 37701.41 samples/sec	accuracy=nan
2023-03-20 17:10:35,053 Node[0] Epoch[28] Batch [320-340]	Speed: 37647.18 samples/sec	accuracy=nan
2023-03-20 17:10:36,788 Node[0] Epoch[28] Batch [340-360]	Speed: 37632.46 samples/sec	accuracy=nan
2023-03-20 17:10:38,524 Node[0] Epoch[28] Batch [360-380]	Speed: 37606.23 samples/sec	accuracy=nan
2023-03-20 17:10:39,477 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,477 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350239477, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 17:10:39,478 Node[0] Epoch[28] Time cost=33.981
:::MLLOG {"namespace": "", "time_ms": 1679350239478, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37702.70088177289}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-20 17:10:39,478 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350239478, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 17:10:39,478 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,478 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,479 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,479 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,479 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,479 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:39,480 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:10:41,302 Node[0] Epoch[29] Batch [0-20]	Speed: 37619.21 samples/sec	accuracy=nan
2023-03-20 17:10:43,039 Node[0] Epoch[29] Batch [20-40]	Speed: 37586.95 samples/sec	accuracy=nan
2023-03-20 17:10:44,772 Node[0] Epoch[29] Batch [40-60]	Speed: 37666.19 samples/sec	accuracy=nan
2023-03-20 17:10:46,508 Node[0] Epoch[29] Batch [60-80]	Speed: 37593.35 samples/sec	accuracy=nan
2023-03-20 17:10:48,240 Node[0] Epoch[29] Batch [80-100]	Speed: 37701.32 samples/sec	accuracy=nan
2023-03-20 17:10:49,975 Node[0] Epoch[29] Batch [100-120]	Speed: 37619.20 samples/sec	accuracy=nan
2023-03-20 17:10:51,710 Node[0] Epoch[29] Batch [120-140]	Speed: 37623.28 samples/sec	accuracy=nan
2023-03-20 17:10:53,444 Node[0] Epoch[29] Batch [140-160]	Speed: 37648.49 samples/sec	accuracy=nan
2023-03-20 17:10:55,178 Node[0] Epoch[29] Batch [160-180]	Speed: 37653.77 samples/sec	accuracy=nan
2023-03-20 17:10:56,913 Node[0] Epoch[29] Batch [180-200]	Speed: 37622.00 samples/sec	accuracy=nan
2023-03-20 17:10:58,644 Node[0] Epoch[29] Batch [200-220]	Speed: 37703.25 samples/sec	accuracy=nan
2023-03-20 17:11:00,378 Node[0] Epoch[29] Batch [220-240]	Speed: 37647.61 samples/sec	accuracy=nan
2023-03-20 17:11:02,111 Node[0] Epoch[29] Batch [240-260]	Speed: 37678.60 samples/sec	accuracy=nan
2023-03-20 17:11:03,847 Node[0] Epoch[29] Batch [260-280]	Speed: 37610.73 samples/sec	accuracy=nan
2023-03-20 17:11:05,579 Node[0] Epoch[29] Batch [280-300]	Speed: 37670.03 samples/sec	accuracy=nan
2023-03-20 17:11:07,312 Node[0] Epoch[29] Batch [300-320]	Speed: 37689.93 samples/sec	accuracy=nan
2023-03-20 17:11:09,048 Node[0] Epoch[29] Batch [320-340]	Speed: 37596.51 samples/sec	accuracy=nan
2023-03-20 17:11:10,783 Node[0] Epoch[29] Batch [340-360]	Speed: 37617.64 samples/sec	accuracy=nan
2023-03-20 17:11:12,514 Node[0] Epoch[29] Batch [360-380]	Speed: 37722.23 samples/sec	accuracy=nan
2023-03-20 17:11:13,553 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,553 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,553 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,554 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350273554, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 17:11:13,555 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,555 Node[0] Epoch[29] Time cost=34.077
:::MLLOG {"namespace": "", "time_ms": 1679350273555, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37596.380344680256}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-20 17:11:13,555 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,555 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350273555, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 17:11:13,555 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,555 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:13,557 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:15,377 Node[0] Epoch[30] Batch [0-20]	Speed: 37573.43 samples/sec	accuracy=nan
2023-03-20 17:11:17,111 Node[0] Epoch[30] Batch [20-40]	Speed: 37659.84 samples/sec	accuracy=nan
2023-03-20 17:11:18,842 Node[0] Epoch[30] Batch [40-60]	Speed: 37720.14 samples/sec	accuracy=nan
2023-03-20 17:11:20,579 Node[0] Epoch[30] Batch [60-80]	Speed: 37570.87 samples/sec	accuracy=nan
2023-03-20 17:11:22,312 Node[0] Epoch[30] Batch [80-100]	Speed: 37669.89 samples/sec	accuracy=nan
2023-03-20 17:11:24,047 Node[0] Epoch[30] Batch [100-120]	Speed: 37635.37 samples/sec	accuracy=nan
2023-03-20 17:11:25,780 Node[0] Epoch[30] Batch [120-140]	Speed: 37649.58 samples/sec	accuracy=nan
2023-03-20 17:11:27,515 Node[0] Epoch[30] Batch [140-160]	Speed: 37627.02 samples/sec	accuracy=nan
2023-03-20 17:11:29,249 Node[0] Epoch[30] Batch [160-180]	Speed: 37656.15 samples/sec	accuracy=nan
2023-03-20 17:11:30,982 Node[0] Epoch[30] Batch [180-200]	Speed: 37664.12 samples/sec	accuracy=nan
2023-03-20 17:11:32,716 Node[0] Epoch[30] Batch [200-220]	Speed: 37649.20 samples/sec	accuracy=nan
2023-03-20 17:11:34,451 Node[0] Epoch[30] Batch [220-240]	Speed: 37633.74 samples/sec	accuracy=nan
2023-03-20 17:11:36,186 Node[0] Epoch[30] Batch [240-260]	Speed: 37627.67 samples/sec	accuracy=nan
2023-03-20 17:11:37,917 Node[0] Epoch[30] Batch [260-280]	Speed: 37703.33 samples/sec	accuracy=nan
2023-03-20 17:11:39,654 Node[0] Epoch[30] Batch [280-300]	Speed: 37587.32 samples/sec	accuracy=nan
2023-03-20 17:11:41,387 Node[0] Epoch[30] Batch [300-320]	Speed: 37661.10 samples/sec	accuracy=nan
2023-03-20 17:11:43,119 Node[0] Epoch[30] Batch [320-340]	Speed: 37682.15 samples/sec	accuracy=nan
2023-03-20 17:11:44,862 Node[0] Epoch[30] Batch [340-360]	Speed: 37472.92 samples/sec	accuracy=nan
2023-03-20 17:11:46,595 Node[0] Epoch[30] Batch [360-380]	Speed: 37663.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350307549, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 17:11:47,550 Node[0] Epoch[30] Time cost=33.994
:::MLLOG {"namespace": "", "time_ms": 1679350307550, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37687.85375176331}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679350307632, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 17:11:48,372 Node[0] Epoch[30] Validation-accuracy=0.741120
2023-03-20 17:11:48,372 Node[0] Epoch[30] Validation-correct-count=2316.000000
2023-03-20 17:11:48,372 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679350308473, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-20 17:11:48,473 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350308473, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7525, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679350308473, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 17:11:48,473 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350308473, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 17:11:48,473 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:48,473 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350308474, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 17:11:48,474 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:11:50,220 Node[0] Epoch[31] Batch [0-20]	Speed: 37594.96 samples/sec	accuracy=nan
2023-03-20 17:11:51,953 Node[0] Epoch[31] Batch [20-40]	Speed: 37669.74 samples/sec	accuracy=nan
2023-03-20 17:11:53,690 Node[0] Epoch[31] Batch [40-60]	Speed: 37570.90 samples/sec	accuracy=nan
2023-03-20 17:11:55,427 Node[0] Epoch[31] Batch [60-80]	Speed: 37587.82 samples/sec	accuracy=nan
2023-03-20 17:11:57,164 Node[0] Epoch[31] Batch [80-100]	Speed: 37590.39 samples/sec	accuracy=nan
2023-03-20 17:11:58,898 Node[0] Epoch[31] Batch [100-120]	Speed: 37647.49 samples/sec	accuracy=nan
2023-03-20 17:12:00,633 Node[0] Epoch[31] Batch [120-140]	Speed: 37625.76 samples/sec	accuracy=nan
2023-03-20 17:12:02,371 Node[0] Epoch[31] Batch [140-160]	Speed: 37539.80 samples/sec	accuracy=nan
2023-03-20 17:12:04,103 Node[0] Epoch[31] Batch [160-180]	Speed: 37700.16 samples/sec	accuracy=nan
2023-03-20 17:12:05,839 Node[0] Epoch[31] Batch [180-200]	Speed: 37611.77 samples/sec	accuracy=nan
2023-03-20 17:12:07,571 Node[0] Epoch[31] Batch [200-220]	Speed: 37688.16 samples/sec	accuracy=nan
2023-03-20 17:12:09,303 Node[0] Epoch[31] Batch [220-240]	Speed: 37689.94 samples/sec	accuracy=nan
2023-03-20 17:12:11,035 Node[0] Epoch[31] Batch [240-260]	Speed: 37679.77 samples/sec	accuracy=nan
2023-03-20 17:12:12,768 Node[0] Epoch[31] Batch [260-280]	Speed: 37674.99 samples/sec	accuracy=nan
2023-03-20 17:12:14,502 Node[0] Epoch[31] Batch [280-300]	Speed: 37648.41 samples/sec	accuracy=nan
2023-03-20 17:12:16,237 Node[0] Epoch[31] Batch [300-320]	Speed: 37634.94 samples/sec	accuracy=nan
2023-03-20 17:12:17,972 Node[0] Epoch[31] Batch [320-340]	Speed: 37608.48 samples/sec	accuracy=nan
2023-03-20 17:12:19,710 Node[0] Epoch[31] Batch [340-360]	Speed: 37574.99 samples/sec	accuracy=nan
2023-03-20 17:12:21,444 Node[0] Epoch[31] Batch [360-380]	Speed: 37646.36 samples/sec	accuracy=nan
2023-03-20 17:12:22,480 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,480 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,481 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,481 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350342480, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 17:12:22,481 Node[0] Epoch[31] Time cost=34.008
2023-03-20 17:12:22,481 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,481 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350342482, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37672.82920428481}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-20 17:12:22,482 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,482 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350342482, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 17:12:22,482 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,482 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,482 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,482 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,483 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,483 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,483 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:22,484 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:24,304 Node[0] Epoch[32] Batch [0-20]	Speed: 37612.81 samples/sec	accuracy=nan
2023-03-20 17:12:26,037 Node[0] Epoch[32] Batch [20-40]	Speed: 37673.08 samples/sec	accuracy=nan
2023-03-20 17:12:27,772 Node[0] Epoch[32] Batch [40-60]	Speed: 37619.60 samples/sec	accuracy=nan
2023-03-20 17:12:29,506 Node[0] Epoch[32] Batch [60-80]	Speed: 37655.60 samples/sec	accuracy=nan
2023-03-20 17:12:31,243 Node[0] Epoch[32] Batch [80-100]	Speed: 37574.86 samples/sec	accuracy=nan
2023-03-20 17:12:32,979 Node[0] Epoch[32] Batch [100-120]	Speed: 37611.83 samples/sec	accuracy=nan
2023-03-20 17:12:34,714 Node[0] Epoch[32] Batch [120-140]	Speed: 37621.36 samples/sec	accuracy=nan
2023-03-20 17:12:36,449 Node[0] Epoch[32] Batch [140-160]	Speed: 37623.38 samples/sec	accuracy=nan
2023-03-20 17:12:38,183 Node[0] Epoch[32] Batch [160-180]	Speed: 37636.13 samples/sec	accuracy=nan
2023-03-20 17:12:39,917 Node[0] Epoch[32] Batch [180-200]	Speed: 37656.60 samples/sec	accuracy=nan
2023-03-20 17:12:41,649 Node[0] Epoch[32] Batch [200-220]	Speed: 37679.77 samples/sec	accuracy=nan
2023-03-20 17:12:43,385 Node[0] Epoch[32] Batch [220-240]	Speed: 37623.21 samples/sec	accuracy=nan
2023-03-20 17:12:45,118 Node[0] Epoch[32] Batch [240-260]	Speed: 37647.83 samples/sec	accuracy=nan
2023-03-20 17:12:46,853 Node[0] Epoch[32] Batch [260-280]	Speed: 37629.94 samples/sec	accuracy=nan
2023-03-20 17:12:48,588 Node[0] Epoch[32] Batch [280-300]	Speed: 37635.26 samples/sec	accuracy=nan
2023-03-20 17:12:50,323 Node[0] Epoch[32] Batch [300-320]	Speed: 37628.22 samples/sec	accuracy=nan
2023-03-20 17:12:52,056 Node[0] Epoch[32] Batch [320-340]	Speed: 37660.41 samples/sec	accuracy=nan
2023-03-20 17:12:53,792 Node[0] Epoch[32] Batch [340-360]	Speed: 37615.31 samples/sec	accuracy=nan
2023-03-20 17:12:55,526 Node[0] Epoch[32] Batch [360-380]	Speed: 37637.00 samples/sec	accuracy=nan
2023-03-20 17:12:56,480 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,480 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,481 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,481 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,481 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,481 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,482 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,482 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,482 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350376482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 17:12:56,482 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,483 Node[0] Epoch[32] Time cost=34.001
2023-03-20 17:12:56,482 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350376483, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37680.78651564547}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-20 17:12:56,483 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350376483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 17:12:56,483 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,483 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,483 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:56,484 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:12:58,304 Node[0] Epoch[33] Batch [0-20]	Speed: 37643.34 samples/sec	accuracy=nan
2023-03-20 17:13:00,036 Node[0] Epoch[33] Batch [20-40]	Speed: 37690.81 samples/sec	accuracy=nan
2023-03-20 17:13:01,773 Node[0] Epoch[33] Batch [40-60]	Speed: 37584.04 samples/sec	accuracy=nan
2023-03-20 17:13:03,505 Node[0] Epoch[33] Batch [60-80]	Speed: 37688.44 samples/sec	accuracy=nan
2023-03-20 17:13:05,237 Node[0] Epoch[33] Batch [80-100]	Speed: 37683.64 samples/sec	accuracy=nan
2023-03-20 17:13:06,968 Node[0] Epoch[33] Batch [100-120]	Speed: 37712.24 samples/sec	accuracy=nan
2023-03-20 17:13:08,702 Node[0] Epoch[33] Batch [120-140]	Speed: 37654.20 samples/sec	accuracy=nan
2023-03-20 17:13:10,438 Node[0] Epoch[33] Batch [140-160]	Speed: 37609.34 samples/sec	accuracy=nan
2023-03-20 17:13:12,171 Node[0] Epoch[33] Batch [160-180]	Speed: 37676.38 samples/sec	accuracy=nan
2023-03-20 17:13:13,903 Node[0] Epoch[33] Batch [180-200]	Speed: 37684.75 samples/sec	accuracy=nan
2023-03-20 17:13:15,634 Node[0] Epoch[33] Batch [200-220]	Speed: 37701.15 samples/sec	accuracy=nan
2023-03-20 17:13:17,366 Node[0] Epoch[33] Batch [220-240]	Speed: 37705.88 samples/sec	accuracy=nan
2023-03-20 17:13:19,101 Node[0] Epoch[33] Batch [240-260]	Speed: 37612.94 samples/sec	accuracy=nan
2023-03-20 17:13:20,836 Node[0] Epoch[33] Batch [260-280]	Speed: 37621.15 samples/sec	accuracy=nan
2023-03-20 17:13:22,570 Node[0] Epoch[33] Batch [280-300]	Speed: 37660.06 samples/sec	accuracy=nan
2023-03-20 17:13:24,303 Node[0] Epoch[33] Batch [300-320]	Speed: 37664.94 samples/sec	accuracy=nan
2023-03-20 17:13:26,040 Node[0] Epoch[33] Batch [320-340]	Speed: 37578.17 samples/sec	accuracy=nan
2023-03-20 17:13:27,776 Node[0] Epoch[33] Batch [340-360]	Speed: 37611.26 samples/sec	accuracy=nan
2023-03-20 17:13:29,511 Node[0] Epoch[33] Batch [360-380]	Speed: 37629.66 samples/sec	accuracy=nan
2023-03-20 17:13:30,547 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,547 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,547 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350410547, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 17:13:30,548 Node[0] Epoch[33] Time cost=34.065
:::MLLOG {"namespace": "", "time_ms": 1679350410548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37609.604473507214}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 17:13:30,548 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,548 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,548 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679350410548, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 17:13:30,549 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,548 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,548 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,549 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,549 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,549 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,549 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,550 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,550 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:30,550 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 17:13:32,370 Node[0] Epoch[34] Batch [0-20]	Speed: 37620.65 samples/sec	accuracy=nan
2023-03-20 17:13:34,106 Node[0] Epoch[34] Batch [20-40]	Speed: 37616.37 samples/sec	accuracy=nan
2023-03-20 17:13:35,841 Node[0] Epoch[34] Batch [40-60]	Speed: 37609.50 samples/sec	accuracy=nan
2023-03-20 17:13:37,575 Node[0] Epoch[34] Batch [60-80]	Speed: 37648.02 samples/sec	accuracy=nan
2023-03-20 17:13:39,309 Node[0] Epoch[34] Batch [80-100]	Speed: 37650.65 samples/sec	accuracy=nan
2023-03-20 17:13:41,042 Node[0] Epoch[34] Batch [100-120]	Speed: 37671.99 samples/sec	accuracy=nan
2023-03-20 17:13:42,776 Node[0] Epoch[34] Batch [120-140]	Speed: 37657.91 samples/sec	accuracy=nan
2023-03-20 17:13:44,510 Node[0] Epoch[34] Batch [140-160]	Speed: 37642.23 samples/sec	accuracy=nan
2023-03-20 17:13:46,242 Node[0] Epoch[34] Batch [160-180]	Speed: 37679.62 samples/sec	accuracy=nan
2023-03-20 17:13:47,976 Node[0] Epoch[34] Batch [180-200]	Speed: 37661.18 samples/sec	accuracy=nan
2023-03-20 17:13:49,708 Node[0] Epoch[34] Batch [200-220]	Speed: 37679.30 samples/sec	accuracy=nan
2023-03-20 17:13:51,446 Node[0] Epoch[34] Batch [220-240]	Speed: 37560.01 samples/sec	accuracy=nan
2023-03-20 17:13:53,178 Node[0] Epoch[34] Batch [240-260]	Speed: 37698.72 samples/sec	accuracy=nan
2023-03-20 17:13:54,911 Node[0] Epoch[34] Batch [260-280]	Speed: 37669.20 samples/sec	accuracy=nan
2023-03-20 17:13:56,643 Node[0] Epoch[34] Batch [280-300]	Speed: 37679.41 samples/sec	accuracy=nan
2023-03-20 17:13:58,374 Node[0] Epoch[34] Batch [300-320]	Speed: 37720.08 samples/sec	accuracy=nan
2023-03-20 17:14:00,110 Node[0] Epoch[34] Batch [320-340]	Speed: 37593.92 samples/sec	accuracy=nan
2023-03-20 17:14:01,843 Node[0] Epoch[34] Batch [340-360]	Speed: 37672.91 samples/sec	accuracy=nan
2023-03-20 17:14:03,576 Node[0] Epoch[34] Batch [360-380]	Speed: 37681.74 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679350444613, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 17:14:04,614 Node[0] Epoch[34] Time cost=34.065
:::MLLOG {"namespace": "", "time_ms": 1679350444614, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37609.29676263458}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679350444695, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 17:14:05,458 Node[0] Epoch[34] Validation-accuracy=0.767680
2023-03-20 17:14:05,458 Node[0] Epoch[34] Validation-correct-count=2399.000000
2023-03-20 17:14:05,458 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679350445488, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679350445488, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76062, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679350445488, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679350445488, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350460
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:20 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:20 PM
+ result=1358
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1358,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350461
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:21 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:21 PM
+ result=1359
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1359,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679350462
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 05:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 05:14:22 PM'
ENDING TIMING RUN AT 2023-03-20 05:14:22 PM
+ result=1360
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 04:51:42 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1360,root,2023-03-20 04:51:42 PM'
+ export PROFILE=0
+ PROFILE=0
