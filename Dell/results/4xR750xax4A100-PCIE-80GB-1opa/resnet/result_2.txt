+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node043 node044 '
+ echo 'hosts=node040 node041 node043 node044 '
hosts=node040 node041 node043 node044 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347603019, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347603055, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347603056, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347603057, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347603059, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347616167, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347621254, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347621289, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347621291, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347621292, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347621293, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347632516, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
srun: Job 61 step creation temporarily disabled, retrying (Requested nodes are busy)
srun: Step created for job 61
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347639730, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347639765, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347639767, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347639768, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347639769, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347652144, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347657061, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347657096, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347657098, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347657099, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347657100, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679347668589, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=13411
+ SEED=13411
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ source ./config_4xR750xax4A100.sh
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ date +%s
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679347669
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date '+%Y-%m-%d %r'
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start_fmt='2023-03-20 04:27:49 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:49 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:49 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start=1679347669
++ date +%s
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:27:49 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:49 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:49 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ source ./config_4xR750xax4A100.sh
++ seq 0 3
+++ dirname ./config_4xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679347669
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-20 04:27:49 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:49 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:49 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 -lt 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ PARAMS+=(--use-dali)
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ [[ '' -ge 1 ]]
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ seq 0 3
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ tr '\n' ,
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ sed 's/,$//'
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679347669
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:27:49 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:49 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:49 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ date +%s
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ date +%s
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ date +%s
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ source ./config_4xR750xax4A100.sh
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start=1679347670
+ start=1679347670
+ start=1679347670
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-20 04:27:50 PM'
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ readonly global_rank=2
+ global_rank=2
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
running benchmark
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
running benchmark
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+ [[ 0 -ge 1 ]]
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
running benchmark
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 -ge 1 ]]
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ seq 0 3
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ seq 0 3
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ seq 0 3
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ tr '\n' ,
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ tr '\n' ,
++ export DGXNNODES=4
++ DGXNNODES=4
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679347670
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ export NGPUS=1
+ NGPUS=1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start=1679347670
+ start=1679347670
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ start_fmt='2023-03-20 04:27:50 PM'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ [[ '' -ge 1 ]]
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ THR=0.759
+ [[ 0 == 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679347670
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679347670
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679347670
+ start=1679347670
+ start=1679347670
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ date '+%Y-%m-%d %r'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start_fmt='2023-03-20 04:27:50 PM'
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ start_fmt='2023-03-20 04:27:50 PM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
running benchmark
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679347670
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:27:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:27:50 PM'
STARTING TIMING RUN AT 2023-03-20 04:27:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13411
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13411 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:1181775] MCW rank 1 is not bound (or bound to all available processors)
[node040:1181767] MCW rank 2 is not bound (or bound to all available processors)
[node040:1181761] MCW rank 0 is not bound (or bound to all available processors)
[node040:1181768] MCW rank 3 is not bound (or bound to all available processors)
[node041:913070] MCW rank 6 is not bound (or bound to all available processors)
[node041:913069] MCW rank 5 is not bound (or bound to all available processors)
[node041:913072] MCW rank 4 is not bound (or bound to all available processors)
[node041:913071] MCW rank 7 is not bound (or bound to all available processors)
[node043:1057876] MCW rank 8 is not bound (or bound to all available processors)
[node044:953862] MCW rank 13 is not bound (or bound to all available processors)
[node044:953856] MCW rank 14 is not bound (or bound to all available processors)
[node043:1057855] MCW rank 9 is not bound (or bound to all available processors)
[node044:953855] MCW rank 15 is not bound (or bound to all available processors)
[node044:953857] MCW rank 12 is not bound (or bound to all available processors)
[node043:1057854] MCW rank 10 is not bound (or bound to all available processors)
[node043:1057863] MCW rank 11 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679347674438, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:01] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:28:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679347682348, "event_type": "POINT_IN_TIME", "key": "seed", "value": 13411, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[16:28:02] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679347685058, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[[16:28:09] ../src/storage/storage.cc16:28:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679347689970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689975, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689975, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689975, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689975, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689977, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689977, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689977, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689977, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689978, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689978, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689978, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689978, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689979, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689979, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689979, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689979, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689981, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689981, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689981, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689981, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689982, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689982, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689982, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689982, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689983, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689983, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689983, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689983, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689983, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689984, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689984, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689984, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689984, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689985, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689985, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689985, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689985, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689986, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689986, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689986, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689986, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689988, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689988, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689988, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689988, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689989, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689989, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689989, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689989, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689990, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689990, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689990, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689990, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689990, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689991, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689991, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689991, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689991, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689992, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689992, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689992, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689992, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689993, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689993, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689993, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689993, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689993, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689995, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689995, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689995, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689995, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689996, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689996, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689996, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689996, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689997, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689997, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689997, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689997, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689998, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689998, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689998, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689998, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689999, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689999, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689999, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347689999, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690000, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690000, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690000, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690001, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690001, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690001, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690001, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690002, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690002, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690002, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690002, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690003, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690003, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690003, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690003, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690003, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690004, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690004, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690004, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690004, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690005, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690005, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690005, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690005, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690006, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690006, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690006, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690006, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690006, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690007, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690007, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690007, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690007, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690008, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690008, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690008, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690008, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679347690008, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,353 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54692, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,356 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27886, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679347692356, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679347692358, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679347692358, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679347692358, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679347692358, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679347692358, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679347692359, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,362 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57493, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,364 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11187, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,368 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12772, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,368 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21698, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,368 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53418, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,368 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32980, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,369 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56977, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,369 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62191, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,372 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63158, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,374 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46244, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,376 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39978, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,377 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12943, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,377 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25858, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:28:12,386 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41707, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679347779872, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679347779873, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679347779873, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679347780443, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679347780531, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679347780531, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 16:29:42,275 Node[0] Epoch[0] Batch [0-20]	Speed: 37679.42 samples/sec	accuracy=nan
2023-03-20 16:29:44,009 Node[0] Epoch[0] Batch [20-40]	Speed: 37648.66 samples/sec	accuracy=nan
2023-03-20 16:29:45,738 Node[0] Epoch[0] Batch [40-60]	Speed: 37755.96 samples/sec	accuracy=nan
2023-03-20 16:29:47,464 Node[0] Epoch[0] Batch [60-80]	Speed: 37811.42 samples/sec	accuracy=nan
2023-03-20 16:29:49,194 Node[0] Epoch[0] Batch [80-100]	Speed: 37754.55 samples/sec	accuracy=nan
2023-03-20 16:29:50,923 Node[0] Epoch[0] Batch [100-120]	Speed: 37741.80 samples/sec	accuracy=nan
2023-03-20 16:29:52,651 Node[0] Epoch[0] Batch [120-140]	Speed: 37780.25 samples/sec	accuracy=nan
2023-03-20 16:29:54,381 Node[0] Epoch[0] Batch [140-160]	Speed: 37740.74 samples/sec	accuracy=nan
2023-03-20 16:29:56,113 Node[0] Epoch[0] Batch [160-180]	Speed: 37675.79 samples/sec	accuracy=nan
2023-03-20 16:29:57,844 Node[0] Epoch[0] Batch [180-200]	Speed: 37712.68 samples/sec	accuracy=nan
2023-03-20 16:29:59,574 Node[0] Epoch[0] Batch [200-220]	Speed: 37741.97 samples/sec	accuracy=nan
2023-03-20 16:30:01,308 Node[0] Epoch[0] Batch [220-240]	Speed: 37638.16 samples/sec	accuracy=nan
2023-03-20 16:30:03,045 Node[0] Epoch[0] Batch [240-260]	Speed: 37597.75 samples/sec	accuracy=nan
2023-03-20 16:30:04,780 Node[0] Epoch[0] Batch [260-280]	Speed: 37614.22 samples/sec	accuracy=nan
2023-03-20 16:30:06,514 Node[0] Epoch[0] Batch [280-300]	Speed: 37645.38 samples/sec	accuracy=nan
2023-03-20 16:30:08,254 Node[0] Epoch[0] Batch [300-320]	Speed: 37527.96 samples/sec	accuracy=nan
2023-03-20 16:30:09,996 Node[0] Epoch[0] Batch [320-340]	Speed: 37476.49 samples/sec	accuracy=nan
2023-03-20 16:30:11,744 Node[0] Epoch[0] Batch [340-360]	Speed: 37334.02 samples/sec	accuracy=nan
2023-03-20 16:30:13,481 Node[0] Epoch[0] Batch [360-380]	Speed: 37588.21 samples/sec	accuracy=nan
2023-03-20 16:30:14,522 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,522 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347814521, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 16:30:14,522 Node[0] Epoch[0] Time cost=33.991
:::MLLOG {"namespace": "", "time_ms": 1679347814522, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37691.84679400408}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 16:30:14,522 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,523 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,523 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347814523, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 16:30:14,523 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,523 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,523 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,524 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,523 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,524 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,524 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,524 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,524 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,525 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:14,525 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:16,349 Node[0] Epoch[1] Batch [0-20]	Speed: 37517.28 samples/sec	accuracy=nan
2023-03-20 16:30:18,087 Node[0] Epoch[1] Batch [20-40]	Speed: 37559.46 samples/sec	accuracy=nan
2023-03-20 16:30:19,828 Node[0] Epoch[1] Batch [40-60]	Speed: 37510.92 samples/sec	accuracy=nan
2023-03-20 16:30:21,569 Node[0] Epoch[1] Batch [60-80]	Speed: 37495.80 samples/sec	accuracy=nan
2023-03-20 16:30:23,306 Node[0] Epoch[1] Batch [80-100]	Speed: 37564.01 samples/sec	accuracy=nan
2023-03-20 16:30:25,046 Node[0] Epoch[1] Batch [100-120]	Speed: 37521.40 samples/sec	accuracy=nan
2023-03-20 16:30:26,788 Node[0] Epoch[1] Batch [120-140]	Speed: 37476.09 samples/sec	accuracy=nan
2023-03-20 16:30:28,529 Node[0] Epoch[1] Batch [140-160]	Speed: 37488.17 samples/sec	accuracy=nan
2023-03-20 16:30:30,274 Node[0] Epoch[1] Batch [160-180]	Speed: 37425.37 samples/sec	accuracy=nan
2023-03-20 16:30:32,017 Node[0] Epoch[1] Batch [180-200]	Speed: 37451.14 samples/sec	accuracy=nan
2023-03-20 16:30:38,315 Node[0] Epoch[1] Batch [200-220]	Speed: 10364.20 samples/sec	accuracy=nan
2023-03-20 16:30:42,489 Node[0] Epoch[1] Batch [220-240]	Speed: 15642.77 samples/sec	accuracy=nan
2023-03-20 16:30:44,227 Node[0] Epoch[1] Batch [240-260]	Speed: 37551.04 samples/sec	accuracy=nan
2023-03-20 16:30:45,964 Node[0] Epoch[1] Batch [260-280]	Speed: 37572.05 samples/sec	accuracy=nan
2023-03-20 16:30:47,703 Node[0] Epoch[1] Batch [280-300]	Speed: 37557.39 samples/sec	accuracy=nan
2023-03-20 16:30:49,443 Node[0] Epoch[1] Batch [300-320]	Speed: 37505.54 samples/sec	accuracy=nan
2023-03-20 16:30:51,185 Node[0] Epoch[1] Batch [320-340]	Speed: 37477.85 samples/sec	accuracy=nan
2023-03-20 16:30:55,285 Node[0] Epoch[1] Batch [340-360]	Speed: 15920.95 samples/sec	accuracy=nan
2023-03-20 16:30:57,026 Node[0] Epoch[1] Batch [360-380]	Speed: 37499.56 samples/sec	accuracy=nan
2023-03-20 16:30:58,069 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,069 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,069 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,069 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347858069, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 16:30:58,070 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[0] Epoch[1] Time cost=43.546
:::MLLOG {"namespace": "", "time_ms": 1679347858070, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 29420.66705964275}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-20 16:30:58,070 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347858070, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 16:30:58,070 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,070 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,071 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,071 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,071 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:58,072 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:30:59,895 Node[0] Epoch[2] Batch [0-20]	Speed: 37559.33 samples/sec	accuracy=nan
2023-03-20 16:31:01,633 Node[0] Epoch[2] Batch [20-40]	Speed: 37548.51 samples/sec	accuracy=nan
2023-03-20 16:31:03,377 Node[0] Epoch[2] Batch [40-60]	Speed: 37443.35 samples/sec	accuracy=nan
2023-03-20 16:31:05,116 Node[0] Epoch[2] Batch [60-80]	Speed: 37532.94 samples/sec	accuracy=nan
2023-03-20 16:31:06,856 Node[0] Epoch[2] Batch [80-100]	Speed: 37526.31 samples/sec	accuracy=nan
2023-03-20 16:31:08,595 Node[0] Epoch[2] Batch [100-120]	Speed: 37528.70 samples/sec	accuracy=nan
2023-03-20 16:31:10,335 Node[0] Epoch[2] Batch [120-140]	Speed: 37509.77 samples/sec	accuracy=nan
2023-03-20 16:31:16,889 Node[0] Epoch[2] Batch [140-160]	Speed: 9960.90 samples/sec	accuracy=nan
2023-03-20 16:31:23,606 Node[0] Epoch[2] Batch [160-180]	Speed: 9718.51 samples/sec	accuracy=nan
2023-03-20 16:31:27,783 Node[0] Epoch[2] Batch [180-200]	Speed: 15627.76 samples/sec	accuracy=nan
2023-03-20 16:31:32,067 Node[0] Epoch[2] Batch [200-220]	Speed: 15239.01 samples/sec	accuracy=nan
2023-03-20 16:31:33,801 Node[0] Epoch[2] Batch [220-240]	Speed: 37651.52 samples/sec	accuracy=nan
2023-03-20 16:31:37,932 Node[0] Epoch[2] Batch [240-260]	Speed: 15803.37 samples/sec	accuracy=nan
2023-03-20 16:31:41,768 Node[0] Epoch[2] Batch [260-280]	Speed: 17014.25 samples/sec	accuracy=nan
2023-03-20 16:31:43,502 Node[0] Epoch[2] Batch [280-300]	Speed: 37653.03 samples/sec	accuracy=nan
2023-03-20 16:31:45,235 Node[0] Epoch[2] Batch [300-320]	Speed: 37674.25 samples/sec	accuracy=nan
2023-03-20 16:31:46,967 Node[0] Epoch[2] Batch [320-340]	Speed: 37697.25 samples/sec	accuracy=nan
2023-03-20 16:31:48,699 Node[0] Epoch[2] Batch [340-360]	Speed: 37680.77 samples/sec	accuracy=nan
2023-03-20 16:31:52,820 Node[0] Epoch[2] Batch [360-380]	Speed: 15841.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347913772, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 16:31:53,773 Node[0] Epoch[2] Time cost=55.702
:::MLLOG {"namespace": "", "time_ms": 1679347913773, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 23000.262158833113}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 16:31:53,855 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,855 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347913855, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 16:31:53,855 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,855 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,855 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,856 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,856 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,856 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,857 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:53,858 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,553 Node[0] Epoch[2] Validation-accuracy=0.286400
2023-03-20 16:31:54,553 Node[0] Epoch[2] Validation-correct-count=895.000000
2023-03-20 16:31:54,553 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347914654, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 16:31:54,654 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347914654, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.28998, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 16:31:54,654 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347914654, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 16:31:54,654 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347914654, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 16:31:54,654 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:54,654 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347914655, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 16:31:54,655 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:31:56,396 Node[0] Epoch[3] Batch [0-20]	Speed: 37673.63 samples/sec	accuracy=nan
2023-03-20 16:31:58,132 Node[0] Epoch[3] Batch [20-40]	Speed: 37610.17 samples/sec	accuracy=nan
2023-03-20 16:31:59,868 Node[0] Epoch[3] Batch [40-60]	Speed: 37602.38 samples/sec	accuracy=nan
2023-03-20 16:32:01,600 Node[0] Epoch[3] Batch [60-80]	Speed: 37693.91 samples/sec	accuracy=nan
2023-03-20 16:32:03,332 Node[0] Epoch[3] Batch [80-100]	Speed: 37677.71 samples/sec	accuracy=nan
2023-03-20 16:32:05,064 Node[0] Epoch[3] Batch [100-120]	Speed: 37713.17 samples/sec	accuracy=nan
2023-03-20 16:32:06,797 Node[0] Epoch[3] Batch [120-140]	Speed: 37646.31 samples/sec	accuracy=nan
2023-03-20 16:32:08,532 Node[0] Epoch[3] Batch [140-160]	Speed: 37634.91 samples/sec	accuracy=nan
2023-03-20 16:32:10,266 Node[0] Epoch[3] Batch [160-180]	Speed: 37648.21 samples/sec	accuracy=nan
2023-03-20 16:32:12,001 Node[0] Epoch[3] Batch [180-200]	Speed: 37620.84 samples/sec	accuracy=nan
2023-03-20 16:32:13,734 Node[0] Epoch[3] Batch [200-220]	Speed: 37684.99 samples/sec	accuracy=nan
2023-03-20 16:32:15,466 Node[0] Epoch[3] Batch [220-240]	Speed: 37685.18 samples/sec	accuracy=nan
2023-03-20 16:32:17,203 Node[0] Epoch[3] Batch [240-260]	Speed: 37578.96 samples/sec	accuracy=nan
2023-03-20 16:32:18,936 Node[0] Epoch[3] Batch [260-280]	Speed: 37654.63 samples/sec	accuracy=nan
2023-03-20 16:32:20,670 Node[0] Epoch[3] Batch [280-300]	Speed: 37652.26 samples/sec	accuracy=nan
2023-03-20 16:32:22,407 Node[0] Epoch[3] Batch [300-320]	Speed: 37596.86 samples/sec	accuracy=nan
2023-03-20 16:32:24,141 Node[0] Epoch[3] Batch [320-340]	Speed: 37643.97 samples/sec	accuracy=nan
2023-03-20 16:32:25,876 Node[0] Epoch[3] Batch [340-360]	Speed: 37621.12 samples/sec	accuracy=nan
2023-03-20 16:32:27,610 Node[0] Epoch[3] Batch [360-380]	Speed: 37652.17 samples/sec	accuracy=nan
2023-03-20 16:32:28,649 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,650 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,650 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,650 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,650 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,650 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,651 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,651 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347948650, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 16:32:28,651 Node[0] Epoch[3] Time cost=33.997
2023-03-20 16:32:28,651 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347948652, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37685.17924353215}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-20 16:32:28,651 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347948652, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 16:32:28,652 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,652 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,652 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,652 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,652 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:28,653 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:32:30,474 Node[0] Epoch[4] Batch [0-20]	Speed: 37577.35 samples/sec	accuracy=nan
2023-03-20 16:32:32,210 Node[0] Epoch[4] Batch [20-40]	Speed: 37622.68 samples/sec	accuracy=nan
2023-03-20 16:32:33,945 Node[0] Epoch[4] Batch [40-60]	Speed: 37614.53 samples/sec	accuracy=nan
2023-03-20 16:32:35,680 Node[0] Epoch[4] Batch [60-80]	Speed: 37614.08 samples/sec	accuracy=nan
2023-03-20 16:32:37,414 Node[0] Epoch[4] Batch [80-100]	Speed: 37653.61 samples/sec	accuracy=nan
2023-03-20 16:32:39,152 Node[0] Epoch[4] Batch [100-120]	Speed: 37561.58 samples/sec	accuracy=nan
2023-03-20 16:32:40,889 Node[0] Epoch[4] Batch [120-140]	Speed: 37584.59 samples/sec	accuracy=nan
2023-03-20 16:32:42,624 Node[0] Epoch[4] Batch [140-160]	Speed: 37628.79 samples/sec	accuracy=nan
2023-03-20 16:32:44,364 Node[0] Epoch[4] Batch [160-180]	Speed: 37524.18 samples/sec	accuracy=nan
2023-03-20 16:32:46,102 Node[0] Epoch[4] Batch [180-200]	Speed: 37545.77 samples/sec	accuracy=nan
2023-03-20 16:32:47,837 Node[0] Epoch[4] Batch [200-220]	Speed: 37637.48 samples/sec	accuracy=nan
2023-03-20 16:32:49,576 Node[0] Epoch[4] Batch [220-240]	Speed: 37539.37 samples/sec	accuracy=nan
2023-03-20 16:32:51,311 Node[0] Epoch[4] Batch [240-260]	Speed: 37621.00 samples/sec	accuracy=nan
2023-03-20 16:32:53,048 Node[0] Epoch[4] Batch [260-280]	Speed: 37576.62 samples/sec	accuracy=nan
2023-03-20 16:32:54,784 Node[0] Epoch[4] Batch [280-300]	Speed: 37600.12 samples/sec	accuracy=nan
2023-03-20 16:32:56,517 Node[0] Epoch[4] Batch [300-320]	Speed: 37668.90 samples/sec	accuracy=nan
2023-03-20 16:32:58,253 Node[0] Epoch[4] Batch [320-340]	Speed: 37598.18 samples/sec	accuracy=nan
2023-03-20 16:32:59,990 Node[0] Epoch[4] Batch [340-360]	Speed: 37599.11 samples/sec	accuracy=nan
2023-03-20 16:33:01,724 Node[0] Epoch[4] Batch [360-380]	Speed: 37635.44 samples/sec	accuracy=nan
2023-03-20 16:33:02,677 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,677 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347982677, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 16:33:02,678 Node[0] Epoch[4] Time cost=34.026
2023-03-20 16:33:02,678 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,678 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347982678, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37652.61977546453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-20 16:33:02,678 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,678 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347982678, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 16:33:02,679 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,678 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,679 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,679 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,679 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,679 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,679 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,680 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,680 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:02,680 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:04,504 Node[0] Epoch[5] Batch [0-20]	Speed: 37591.87 samples/sec	accuracy=nan
2023-03-20 16:33:06,239 Node[0] Epoch[5] Batch [20-40]	Speed: 37608.32 samples/sec	accuracy=nan
2023-03-20 16:33:07,977 Node[0] Epoch[5] Batch [40-60]	Speed: 37570.65 samples/sec	accuracy=nan
2023-03-20 16:33:09,714 Node[0] Epoch[5] Batch [60-80]	Speed: 37588.31 samples/sec	accuracy=nan
2023-03-20 16:33:11,451 Node[0] Epoch[5] Batch [80-100]	Speed: 37584.10 samples/sec	accuracy=nan
2023-03-20 16:33:13,190 Node[0] Epoch[5] Batch [100-120]	Speed: 37523.06 samples/sec	accuracy=nan
2023-03-20 16:33:14,926 Node[0] Epoch[5] Batch [120-140]	Speed: 37621.24 samples/sec	accuracy=nan
2023-03-20 16:33:16,666 Node[0] Epoch[5] Batch [140-160]	Speed: 37515.20 samples/sec	accuracy=nan
2023-03-20 16:33:18,401 Node[0] Epoch[5] Batch [160-180]	Speed: 37626.76 samples/sec	accuracy=nan
2023-03-20 16:33:20,137 Node[0] Epoch[5] Batch [180-200]	Speed: 37599.80 samples/sec	accuracy=nan
2023-03-20 16:33:21,874 Node[0] Epoch[5] Batch [200-220]	Speed: 37579.99 samples/sec	accuracy=nan
2023-03-20 16:33:23,611 Node[0] Epoch[5] Batch [220-240]	Speed: 37590.58 samples/sec	accuracy=nan
2023-03-20 16:33:25,344 Node[0] Epoch[5] Batch [240-260]	Speed: 37654.51 samples/sec	accuracy=nan
2023-03-20 16:33:27,079 Node[0] Epoch[5] Batch [260-280]	Speed: 37640.02 samples/sec	accuracy=nan
2023-03-20 16:33:28,815 Node[0] Epoch[5] Batch [280-300]	Speed: 37593.52 samples/sec	accuracy=nan
2023-03-20 16:33:30,548 Node[0] Epoch[5] Batch [300-320]	Speed: 37659.32 samples/sec	accuracy=nan
2023-03-20 16:33:32,286 Node[0] Epoch[5] Batch [320-340]	Speed: 37572.86 samples/sec	accuracy=nan
2023-03-20 16:33:34,022 Node[0] Epoch[5] Batch [340-360]	Speed: 37601.50 samples/sec	accuracy=nan
2023-03-20 16:33:35,757 Node[0] Epoch[5] Batch [360-380]	Speed: 37627.48 samples/sec	accuracy=nan
2023-03-20 16:33:36,797 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,797 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,798 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,798 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348016797, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 16:33:36,798 Node[0] Epoch[5] Time cost=34.120
2023-03-20 16:33:36,798 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348016798, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37549.20974097465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-20 16:33:36,798 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348016799, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 16:33:36,799 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,798 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,798 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,799 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,799 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,799 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,799 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,800 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,800 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:36,800 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:33:38,619 Node[0] Epoch[6] Batch [0-20]	Speed: 37650.43 samples/sec	accuracy=nan
2023-03-20 16:33:40,353 Node[0] Epoch[6] Batch [20-40]	Speed: 37656.46 samples/sec	accuracy=nan
2023-03-20 16:33:42,088 Node[0] Epoch[6] Batch [40-60]	Speed: 37623.57 samples/sec	accuracy=nan
2023-03-20 16:33:43,822 Node[0] Epoch[6] Batch [60-80]	Speed: 37628.98 samples/sec	accuracy=nan
2023-03-20 16:33:45,558 Node[0] Epoch[6] Batch [80-100]	Speed: 37609.41 samples/sec	accuracy=nan
2023-03-20 16:33:47,294 Node[0] Epoch[6] Batch [100-120]	Speed: 37601.20 samples/sec	accuracy=nan
2023-03-20 16:33:49,031 Node[0] Epoch[6] Batch [120-140]	Speed: 37593.26 samples/sec	accuracy=nan
2023-03-20 16:33:50,767 Node[0] Epoch[6] Batch [140-160]	Speed: 37597.00 samples/sec	accuracy=nan
2023-03-20 16:33:52,505 Node[0] Epoch[6] Batch [160-180]	Speed: 37571.61 samples/sec	accuracy=nan
2023-03-20 16:33:54,241 Node[0] Epoch[6] Batch [180-200]	Speed: 37599.80 samples/sec	accuracy=nan
2023-03-20 16:33:55,975 Node[0] Epoch[6] Batch [200-220]	Speed: 37630.12 samples/sec	accuracy=nan
2023-03-20 16:33:57,708 Node[0] Epoch[6] Batch [220-240]	Speed: 37681.78 samples/sec	accuracy=nan
2023-03-20 16:33:59,442 Node[0] Epoch[6] Batch [240-260]	Speed: 37641.71 samples/sec	accuracy=nan
2023-03-20 16:34:01,177 Node[0] Epoch[6] Batch [260-280]	Speed: 37630.42 samples/sec	accuracy=nan
2023-03-20 16:34:02,915 Node[0] Epoch[6] Batch [280-300]	Speed: 37555.16 samples/sec	accuracy=nan
2023-03-20 16:34:04,650 Node[0] Epoch[6] Batch [300-320]	Speed: 37622.09 samples/sec	accuracy=nan
2023-03-20 16:34:06,384 Node[0] Epoch[6] Batch [320-340]	Speed: 37660.74 samples/sec	accuracy=nan
2023-03-20 16:34:08,118 Node[0] Epoch[6] Batch [340-360]	Speed: 37648.68 samples/sec	accuracy=nan
2023-03-20 16:34:09,851 Node[0] Epoch[6] Batch [360-380]	Speed: 37667.81 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348050801, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 16:34:10,802 Node[0] Epoch[6] Time cost=34.003
:::MLLOG {"namespace": "", "time_ms": 1679348050802, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37677.62532609956}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679348050884, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 16:34:11,638 Node[0] Epoch[6] Validation-accuracy=0.451200
2023-03-20 16:34:11,638 Node[0] Epoch[6] Validation-correct-count=1410.000000
2023-03-20 16:34:11,638 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348051730, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679348051730, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45988, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679348051730, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 16:34:11,730 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348051731, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 16:34:11,730 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:11,730 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348051731, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 16:34:11,731 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:13,472 Node[0] Epoch[7] Batch [0-20]	Speed: 37642.87 samples/sec	accuracy=nan
2023-03-20 16:34:15,205 Node[0] Epoch[7] Batch [20-40]	Speed: 37659.84 samples/sec	accuracy=nan
2023-03-20 16:34:16,939 Node[0] Epoch[7] Batch [40-60]	Speed: 37658.00 samples/sec	accuracy=nan
2023-03-20 16:34:18,674 Node[0] Epoch[7] Batch [60-80]	Speed: 37617.13 samples/sec	accuracy=nan
2023-03-20 16:34:20,408 Node[0] Epoch[7] Batch [80-100]	Speed: 37653.37 samples/sec	accuracy=nan
2023-03-20 16:34:22,146 Node[0] Epoch[7] Batch [100-120]	Speed: 37551.35 samples/sec	accuracy=nan
2023-03-20 16:34:23,879 Node[0] Epoch[7] Batch [120-140]	Speed: 37676.34 samples/sec	accuracy=nan
2023-03-20 16:34:25,611 Node[0] Epoch[7] Batch [140-160]	Speed: 37683.52 samples/sec	accuracy=nan
2023-03-20 16:34:27,345 Node[0] Epoch[7] Batch [160-180]	Speed: 37664.02 samples/sec	accuracy=nan
2023-03-20 16:34:29,078 Node[0] Epoch[7] Batch [180-200]	Speed: 37652.01 samples/sec	accuracy=nan
2023-03-20 16:34:30,812 Node[0] Epoch[7] Batch [200-220]	Speed: 37655.71 samples/sec	accuracy=nan
2023-03-20 16:34:32,547 Node[0] Epoch[7] Batch [220-240]	Speed: 37619.83 samples/sec	accuracy=nan
2023-03-20 16:34:34,285 Node[0] Epoch[7] Batch [240-260]	Speed: 37565.82 samples/sec	accuracy=nan
2023-03-20 16:34:36,020 Node[0] Epoch[7] Batch [260-280]	Speed: 37623.95 samples/sec	accuracy=nan
2023-03-20 16:34:37,753 Node[0] Epoch[7] Batch [280-300]	Speed: 37676.80 samples/sec	accuracy=nan
2023-03-20 16:34:39,487 Node[0] Epoch[7] Batch [300-320]	Speed: 37638.86 samples/sec	accuracy=nan
2023-03-20 16:34:41,219 Node[0] Epoch[7] Batch [320-340]	Speed: 37702.36 samples/sec	accuracy=nan
2023-03-20 16:34:42,953 Node[0] Epoch[7] Batch [340-360]	Speed: 37644.63 samples/sec	accuracy=nan
2023-03-20 16:34:44,687 Node[0] Epoch[7] Batch [360-380]	Speed: 37631.20 samples/sec	accuracy=nan
2023-03-20 16:34:45,726 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,726 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,727 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,727 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,727 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348085726, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 16:34:45,727 Node[0] Epoch[7] Time cost=33.996
:::MLLOG {"namespace": "", "time_ms": 1679348085727, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37685.38776699504}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679348085728, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 16:34:45,728 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,728 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,729 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:45,729 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:34:47,547 Node[0] Epoch[8] Batch [0-20]	Speed: 37658.32 samples/sec	accuracy=nan
2023-03-20 16:34:49,278 Node[0] Epoch[8] Batch [20-40]	Speed: 37710.62 samples/sec	accuracy=nan
2023-03-20 16:34:51,011 Node[0] Epoch[8] Batch [40-60]	Speed: 37660.49 samples/sec	accuracy=nan
2023-03-20 16:34:52,745 Node[0] Epoch[8] Batch [60-80]	Speed: 37659.02 samples/sec	accuracy=nan
2023-03-20 16:34:54,482 Node[0] Epoch[8] Batch [80-100]	Speed: 37580.71 samples/sec	accuracy=nan
2023-03-20 16:34:56,220 Node[0] Epoch[8] Batch [100-120]	Speed: 37555.71 samples/sec	accuracy=nan
2023-03-20 16:34:57,953 Node[0] Epoch[8] Batch [120-140]	Speed: 37660.46 samples/sec	accuracy=nan
2023-03-20 16:34:59,685 Node[0] Epoch[8] Batch [140-160]	Speed: 37692.95 samples/sec	accuracy=nan
2023-03-20 16:35:01,418 Node[0] Epoch[8] Batch [160-180]	Speed: 37680.41 samples/sec	accuracy=nan
2023-03-20 16:35:03,153 Node[0] Epoch[8] Batch [180-200]	Speed: 37620.66 samples/sec	accuracy=nan
2023-03-20 16:35:04,887 Node[0] Epoch[8] Batch [200-220]	Speed: 37654.43 samples/sec	accuracy=nan
2023-03-20 16:35:06,620 Node[0] Epoch[8] Batch [220-240]	Speed: 37670.86 samples/sec	accuracy=nan
2023-03-20 16:35:08,354 Node[0] Epoch[8] Batch [240-260]	Speed: 37630.55 samples/sec	accuracy=nan
2023-03-20 16:35:10,086 Node[0] Epoch[8] Batch [260-280]	Speed: 37694.97 samples/sec	accuracy=nan
2023-03-20 16:35:11,819 Node[0] Epoch[8] Batch [280-300]	Speed: 37674.67 samples/sec	accuracy=nan
2023-03-20 16:35:13,553 Node[0] Epoch[8] Batch [300-320]	Speed: 37646.54 samples/sec	accuracy=nan
2023-03-20 16:35:15,287 Node[0] Epoch[8] Batch [320-340]	Speed: 37637.66 samples/sec	accuracy=nan
2023-03-20 16:35:17,020 Node[0] Epoch[8] Batch [340-360]	Speed: 37675.77 samples/sec	accuracy=nan
2023-03-20 16:35:18,751 Node[0] Epoch[8] Batch [360-380]	Speed: 37709.78 samples/sec	accuracy=nan
2023-03-20 16:35:19,702 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,703 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,703 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348119702, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 16:35:19,703 Node[0] Epoch[8] Time cost=33.975
:::MLLOG {"namespace": "", "time_ms": 1679348119703, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37708.887992866024}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-20 16:35:19,703 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,703 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348119703, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 16:35:19,704 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,703 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,703 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,704 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,704 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,704 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,704 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,704 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,705 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,705 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:19,705 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:21,525 Node[0] Epoch[9] Batch [0-20]	Speed: 37685.32 samples/sec	accuracy=nan
2023-03-20 16:35:23,258 Node[0] Epoch[9] Batch [20-40]	Speed: 37661.95 samples/sec	accuracy=nan
2023-03-20 16:35:24,991 Node[0] Epoch[9] Batch [40-60]	Speed: 37663.05 samples/sec	accuracy=nan
2023-03-20 16:35:26,722 Node[0] Epoch[9] Batch [60-80]	Speed: 37710.29 samples/sec	accuracy=nan
2023-03-20 16:35:28,457 Node[0] Epoch[9] Batch [80-100]	Speed: 37630.88 samples/sec	accuracy=nan
2023-03-20 16:35:30,190 Node[0] Epoch[9] Batch [100-120]	Speed: 37669.22 samples/sec	accuracy=nan
2023-03-20 16:35:31,922 Node[0] Epoch[9] Batch [120-140]	Speed: 37686.43 samples/sec	accuracy=nan
2023-03-20 16:35:33,656 Node[0] Epoch[9] Batch [140-160]	Speed: 37640.23 samples/sec	accuracy=nan
2023-03-20 16:35:35,392 Node[0] Epoch[9] Batch [160-180]	Speed: 37617.12 samples/sec	accuracy=nan
2023-03-20 16:35:37,125 Node[0] Epoch[9] Batch [180-200]	Speed: 37654.56 samples/sec	accuracy=nan
2023-03-20 16:35:38,858 Node[0] Epoch[9] Batch [200-220]	Speed: 37686.09 samples/sec	accuracy=nan
2023-03-20 16:35:40,595 Node[0] Epoch[9] Batch [220-240]	Speed: 37564.78 samples/sec	accuracy=nan
2023-03-20 16:35:42,329 Node[0] Epoch[9] Batch [240-260]	Speed: 37663.55 samples/sec	accuracy=nan
2023-03-20 16:35:44,063 Node[0] Epoch[9] Batch [260-280]	Speed: 37651.24 samples/sec	accuracy=nan
2023-03-20 16:35:45,797 Node[0] Epoch[9] Batch [280-300]	Speed: 37628.95 samples/sec	accuracy=nan
2023-03-20 16:35:47,531 Node[0] Epoch[9] Batch [300-320]	Speed: 37649.45 samples/sec	accuracy=nan
2023-03-20 16:35:49,264 Node[0] Epoch[9] Batch [320-340]	Speed: 37678.27 samples/sec	accuracy=nan
2023-03-20 16:35:50,999 Node[0] Epoch[9] Batch [340-360]	Speed: 37628.36 samples/sec	accuracy=nan
2023-03-20 16:35:52,732 Node[0] Epoch[9] Batch [360-380]	Speed: 37654.39 samples/sec	accuracy=nan
2023-03-20 16:35:53,768 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,769 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,769 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348153769, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 16:35:53,769 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,770 Node[0] Epoch[9] Time cost=34.066
:::MLLOG {"namespace": "", "time_ms": 1679348153770, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37608.31522755359}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 16:35:53,770 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,770 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348153770, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 16:35:53,770 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,770 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,771 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,772 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:53,772 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:35:55,590 Node[0] Epoch[10] Batch [0-20]	Speed: 37665.72 samples/sec	accuracy=nan
2023-03-20 16:35:57,325 Node[0] Epoch[10] Batch [20-40]	Speed: 37625.31 samples/sec	accuracy=nan
2023-03-20 16:35:59,058 Node[0] Epoch[10] Batch [40-60]	Speed: 37671.06 samples/sec	accuracy=nan
2023-03-20 16:36:00,788 Node[0] Epoch[10] Batch [60-80]	Speed: 37728.44 samples/sec	accuracy=nan
2023-03-20 16:36:02,526 Node[0] Epoch[10] Batch [80-100]	Speed: 37572.79 samples/sec	accuracy=nan
2023-03-20 16:36:04,261 Node[0] Epoch[10] Batch [100-120]	Speed: 37613.01 samples/sec	accuracy=nan
2023-03-20 16:36:05,992 Node[0] Epoch[10] Batch [120-140]	Speed: 37711.15 samples/sec	accuracy=nan
2023-03-20 16:36:07,724 Node[0] Epoch[10] Batch [140-160]	Speed: 37694.44 samples/sec	accuracy=nan
2023-03-20 16:36:09,456 Node[0] Epoch[10] Batch [160-180]	Speed: 37681.22 samples/sec	accuracy=nan
2023-03-20 16:36:11,190 Node[0] Epoch[10] Batch [180-200]	Speed: 37651.10 samples/sec	accuracy=nan
2023-03-20 16:36:12,922 Node[0] Epoch[10] Batch [200-220]	Speed: 37694.89 samples/sec	accuracy=nan
2023-03-20 16:36:14,653 Node[0] Epoch[10] Batch [220-240]	Speed: 37712.12 samples/sec	accuracy=nan
2023-03-20 16:36:16,392 Node[0] Epoch[10] Batch [240-260]	Speed: 37551.22 samples/sec	accuracy=nan
2023-03-20 16:36:18,125 Node[0] Epoch[10] Batch [260-280]	Speed: 37649.17 samples/sec	accuracy=nan
2023-03-20 16:36:19,856 Node[0] Epoch[10] Batch [280-300]	Speed: 37711.53 samples/sec	accuracy=nan
2023-03-20 16:36:21,589 Node[0] Epoch[10] Batch [300-320]	Speed: 37678.98 samples/sec	accuracy=nan
2023-03-20 16:36:23,323 Node[0] Epoch[10] Batch [320-340]	Speed: 37655.90 samples/sec	accuracy=nan
2023-03-20 16:36:25,055 Node[0] Epoch[10] Batch [340-360]	Speed: 37677.27 samples/sec	accuracy=nan
2023-03-20 16:36:26,788 Node[0] Epoch[10] Batch [360-380]	Speed: 37673.93 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348187741, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 16:36:27,743 Node[0] Epoch[10] Time cost=33.972
:::MLLOG {"namespace": "", "time_ms": 1679348187743, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37712.062899992525}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679348187823, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 16:36:28,629 Node[0] Epoch[10] Validation-accuracy=0.518720
2023-03-20 16:36:28,629 Node[0] Epoch[10] Validation-correct-count=1621.000000
2023-03-20 16:36:28,629 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348188673, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679348188674, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52006, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679348188674, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 16:36:28,674 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348188674, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 16:36:28,674 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348188674, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 16:36:28,674 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:28,674 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:36:30,413 Node[0] Epoch[11] Batch [0-20]	Speed: 37878.20 samples/sec	accuracy=nan
2023-03-20 16:36:32,147 Node[0] Epoch[11] Batch [20-40]	Speed: 37639.52 samples/sec	accuracy=nan
2023-03-20 16:36:33,881 Node[0] Epoch[11] Batch [40-60]	Speed: 37664.55 samples/sec	accuracy=nan
2023-03-20 16:36:35,614 Node[0] Epoch[11] Batch [60-80]	Speed: 37667.58 samples/sec	accuracy=nan
2023-03-20 16:36:37,346 Node[0] Epoch[11] Batch [80-100]	Speed: 37676.10 samples/sec	accuracy=nan
2023-03-20 16:36:39,079 Node[0] Epoch[11] Batch [100-120]	Speed: 37675.30 samples/sec	accuracy=nan
2023-03-20 16:36:40,811 Node[0] Epoch[11] Batch [120-140]	Speed: 37684.00 samples/sec	accuracy=nan
2023-03-20 16:36:42,543 Node[0] Epoch[11] Batch [140-160]	Speed: 37689.99 samples/sec	accuracy=nan
2023-03-20 16:36:44,276 Node[0] Epoch[11] Batch [160-180]	Speed: 37672.12 samples/sec	accuracy=nan
2023-03-20 16:36:46,007 Node[0] Epoch[11] Batch [180-200]	Speed: 37708.76 samples/sec	accuracy=nan
2023-03-20 16:36:47,737 Node[0] Epoch[11] Batch [200-220]	Speed: 37736.94 samples/sec	accuracy=nan
2023-03-20 16:36:49,471 Node[0] Epoch[11] Batch [220-240]	Speed: 37659.71 samples/sec	accuracy=nan
2023-03-20 16:36:51,203 Node[0] Epoch[11] Batch [240-260]	Speed: 37693.79 samples/sec	accuracy=nan
2023-03-20 16:36:52,933 Node[0] Epoch[11] Batch [260-280]	Speed: 37712.26 samples/sec	accuracy=nan
2023-03-20 16:36:54,665 Node[0] Epoch[11] Batch [280-300]	Speed: 37701.39 samples/sec	accuracy=nan
2023-03-20 16:36:56,397 Node[0] Epoch[11] Batch [300-320]	Speed: 37686.12 samples/sec	accuracy=nan
2023-03-20 16:36:58,128 Node[0] Epoch[11] Batch [320-340]	Speed: 37708.55 samples/sec	accuracy=nan
2023-03-20 16:36:59,862 Node[0] Epoch[11] Batch [340-360]	Speed: 37647.17 samples/sec	accuracy=nan
2023-03-20 16:37:01,595 Node[0] Epoch[11] Batch [360-380]	Speed: 37676.53 samples/sec	accuracy=nan
2023-03-20 16:37:02,633 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,633 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,634 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,634 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,634 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348222633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 16:37:02,634 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,634 Node[0] Epoch[11] Time cost=33.960
:::MLLOG {"namespace": "", "time_ms": 1679348222634, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37725.975596515054}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 16:37:02,634 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348222634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 16:37:02,635 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,634 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,635 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,635 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,635 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,635 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,635 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,636 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:02,636 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:04,455 Node[0] Epoch[12] Batch [0-20]	Speed: 37635.37 samples/sec	accuracy=nan
2023-03-20 16:37:06,186 Node[0] Epoch[12] Batch [20-40]	Speed: 37708.76 samples/sec	accuracy=nan
2023-03-20 16:37:07,919 Node[0] Epoch[12] Batch [40-60]	Speed: 37669.12 samples/sec	accuracy=nan
2023-03-20 16:37:09,652 Node[0] Epoch[12] Batch [60-80]	Speed: 37660.84 samples/sec	accuracy=nan
2023-03-20 16:37:11,383 Node[0] Epoch[12] Batch [80-100]	Speed: 37712.94 samples/sec	accuracy=nan
2023-03-20 16:37:13,116 Node[0] Epoch[12] Batch [100-120]	Speed: 37676.57 samples/sec	accuracy=nan
2023-03-20 16:37:14,848 Node[0] Epoch[12] Batch [120-140]	Speed: 37696.27 samples/sec	accuracy=nan
2023-03-20 16:37:16,581 Node[0] Epoch[12] Batch [140-160]	Speed: 37666.77 samples/sec	accuracy=nan
2023-03-20 16:37:18,312 Node[0] Epoch[12] Batch [160-180]	Speed: 37711.09 samples/sec	accuracy=nan
2023-03-20 16:37:20,045 Node[0] Epoch[12] Batch [180-200]	Speed: 37676.13 samples/sec	accuracy=nan
2023-03-20 16:37:21,776 Node[0] Epoch[12] Batch [200-220]	Speed: 37702.75 samples/sec	accuracy=nan
2023-03-20 16:37:23,507 Node[0] Epoch[12] Batch [220-240]	Speed: 37712.60 samples/sec	accuracy=nan
2023-03-20 16:37:25,238 Node[0] Epoch[12] Batch [240-260]	Speed: 37711.26 samples/sec	accuracy=nan
2023-03-20 16:37:26,969 Node[0] Epoch[12] Batch [260-280]	Speed: 37705.07 samples/sec	accuracy=nan
2023-03-20 16:37:28,703 Node[0] Epoch[12] Batch [280-300]	Speed: 37656.60 samples/sec	accuracy=nan
2023-03-20 16:37:30,434 Node[0] Epoch[12] Batch [300-320]	Speed: 37714.67 samples/sec	accuracy=nan
2023-03-20 16:37:32,165 Node[0] Epoch[12] Batch [320-340]	Speed: 37701.70 samples/sec	accuracy=nan
2023-03-20 16:37:33,898 Node[0] Epoch[12] Batch [340-360]	Speed: 37671.93 samples/sec	accuracy=nan
2023-03-20 16:37:35,633 Node[0] Epoch[12] Batch [360-380]	Speed: 37627.63 samples/sec	accuracy=nan
2023-03-20 16:37:36,585 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348256585, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 16:37:36,585 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[0] Epoch[12] Time cost=33.951
:::MLLOG {"namespace": "", "time_ms": 1679348256586, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37735.7053297467}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 16:37:36,586 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348256586, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 16:37:36,586 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,586 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,587 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,587 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,587 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,587 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,587 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,588 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:36,589 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:37:38,405 Node[0] Epoch[13] Batch [0-20]	Speed: 37723.99 samples/sec	accuracy=nan
2023-03-20 16:37:40,140 Node[0] Epoch[13] Batch [20-40]	Speed: 37636.63 samples/sec	accuracy=nan
2023-03-20 16:37:41,875 Node[0] Epoch[13] Batch [40-60]	Speed: 37618.10 samples/sec	accuracy=nan
2023-03-20 16:37:43,608 Node[0] Epoch[13] Batch [60-80]	Speed: 37664.27 samples/sec	accuracy=nan
2023-03-20 16:37:45,338 Node[0] Epoch[13] Batch [80-100]	Speed: 37744.74 samples/sec	accuracy=nan
2023-03-20 16:37:47,071 Node[0] Epoch[13] Batch [100-120]	Speed: 37665.20 samples/sec	accuracy=nan
2023-03-20 16:37:48,802 Node[0] Epoch[13] Batch [120-140]	Speed: 37704.99 samples/sec	accuracy=nan
2023-03-20 16:37:50,533 Node[0] Epoch[13] Batch [140-160]	Speed: 37709.24 samples/sec	accuracy=nan
2023-03-20 16:37:52,262 Node[0] Epoch[13] Batch [160-180]	Speed: 37769.20 samples/sec	accuracy=nan
2023-03-20 16:37:53,994 Node[0] Epoch[13] Batch [180-200]	Speed: 37672.18 samples/sec	accuracy=nan
2023-03-20 16:37:55,727 Node[0] Epoch[13] Batch [200-220]	Speed: 37683.37 samples/sec	accuracy=nan
2023-03-20 16:37:57,460 Node[0] Epoch[13] Batch [220-240]	Speed: 37674.37 samples/sec	accuracy=nan
2023-03-20 16:37:59,192 Node[0] Epoch[13] Batch [240-260]	Speed: 37679.23 samples/sec	accuracy=nan
2023-03-20 16:38:00,924 Node[0] Epoch[13] Batch [260-280]	Speed: 37701.63 samples/sec	accuracy=nan
2023-03-20 16:38:02,656 Node[0] Epoch[13] Batch [280-300]	Speed: 37678.12 samples/sec	accuracy=nan
2023-03-20 16:38:04,385 Node[0] Epoch[13] Batch [300-320]	Speed: 37757.42 samples/sec	accuracy=nan
2023-03-20 16:38:06,122 Node[0] Epoch[13] Batch [320-340]	Speed: 37580.33 samples/sec	accuracy=nan
2023-03-20 16:38:07,854 Node[0] Epoch[13] Batch [340-360]	Speed: 37694.46 samples/sec	accuracy=nan
2023-03-20 16:38:09,594 Node[0] Epoch[13] Batch [360-380]	Speed: 37509.15 samples/sec	accuracy=nan
2023-03-20 16:38:10,632 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,633 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,633 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,633 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348290632, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 16:38:10,634 Node[0] Epoch[13] Time cost=34.047
:::MLLOG {"namespace": "", "time_ms": 1679348290634, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37628.85575412616}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 16:38:10,634 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,634 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348290634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 16:38:10,634 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,634 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,634 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,634 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,634 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,635 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,635 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,635 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,636 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:10,636 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:12,453 Node[0] Epoch[14] Batch [0-20]	Speed: 37662.68 samples/sec	accuracy=nan
2023-03-20 16:38:14,186 Node[0] Epoch[14] Batch [20-40]	Speed: 37680.31 samples/sec	accuracy=nan
2023-03-20 16:38:15,917 Node[0] Epoch[14] Batch [40-60]	Speed: 37709.57 samples/sec	accuracy=nan
2023-03-20 16:38:17,651 Node[0] Epoch[14] Batch [60-80]	Speed: 37647.32 samples/sec	accuracy=nan
2023-03-20 16:38:19,382 Node[0] Epoch[14] Batch [80-100]	Speed: 37703.37 samples/sec	accuracy=nan
2023-03-20 16:38:21,115 Node[0] Epoch[14] Batch [100-120]	Speed: 37676.02 samples/sec	accuracy=nan
2023-03-20 16:38:22,846 Node[0] Epoch[14] Batch [120-140]	Speed: 37710.07 samples/sec	accuracy=nan
2023-03-20 16:38:24,579 Node[0] Epoch[14] Batch [140-160]	Speed: 37669.29 samples/sec	accuracy=nan
2023-03-20 16:38:26,311 Node[0] Epoch[14] Batch [160-180]	Speed: 37688.47 samples/sec	accuracy=nan
2023-03-20 16:38:28,041 Node[0] Epoch[14] Batch [180-200]	Speed: 37732.94 samples/sec	accuracy=nan
2023-03-20 16:38:29,773 Node[0] Epoch[14] Batch [200-220]	Speed: 37687.92 samples/sec	accuracy=nan
2023-03-20 16:38:31,503 Node[0] Epoch[14] Batch [220-240]	Speed: 37733.68 samples/sec	accuracy=nan
2023-03-20 16:38:33,239 Node[0] Epoch[14] Batch [240-260]	Speed: 37605.98 samples/sec	accuracy=nan
2023-03-20 16:38:34,970 Node[0] Epoch[14] Batch [260-280]	Speed: 37720.36 samples/sec	accuracy=nan
2023-03-20 16:38:36,701 Node[0] Epoch[14] Batch [280-300]	Speed: 37709.33 samples/sec	accuracy=nan
2023-03-20 16:38:38,434 Node[0] Epoch[14] Batch [300-320]	Speed: 37665.34 samples/sec	accuracy=nan
2023-03-20 16:38:40,166 Node[0] Epoch[14] Batch [320-340]	Speed: 37699.38 samples/sec	accuracy=nan
2023-03-20 16:38:41,898 Node[0] Epoch[14] Batch [340-360]	Speed: 37678.94 samples/sec	accuracy=nan
2023-03-20 16:38:43,629 Node[0] Epoch[14] Batch [360-380]	Speed: 37724.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348324582, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 16:38:44,583 Node[0] Epoch[14] Time cost=33.949
:::MLLOG {"namespace": "", "time_ms": 1679348324583, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37738.32817731057}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679348324665, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 16:38:45,385 Node[0] Epoch[14] Validation-accuracy=0.567680
2023-03-20 16:38:45,385 Node[0] Epoch[14] Validation-correct-count=1774.000000
2023-03-20 16:38:45,385 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348325525, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-20 16:38:45,526 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348325526, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56384, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 16:38:45,526 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348325526, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-20 16:38:45,526 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:45,526 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348325526, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 16:38:45,526 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348325526, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 16:38:45,526 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:38:47,268 Node[0] Epoch[15] Batch [0-20]	Speed: 37674.50 samples/sec	accuracy=nan
2023-03-20 16:38:49,001 Node[0] Epoch[15] Batch [20-40]	Speed: 37656.52 samples/sec	accuracy=nan
2023-03-20 16:38:50,733 Node[0] Epoch[15] Batch [40-60]	Speed: 37705.07 samples/sec	accuracy=nan
2023-03-20 16:38:52,467 Node[0] Epoch[15] Batch [60-80]	Speed: 37636.38 samples/sec	accuracy=nan
2023-03-20 16:38:54,201 Node[0] Epoch[15] Batch [80-100]	Speed: 37648.87 samples/sec	accuracy=nan
2023-03-20 16:38:55,931 Node[0] Epoch[15] Batch [100-120]	Speed: 37724.87 samples/sec	accuracy=nan
2023-03-20 16:38:57,665 Node[0] Epoch[15] Batch [120-140]	Speed: 37662.08 samples/sec	accuracy=nan
2023-03-20 16:38:59,398 Node[0] Epoch[15] Batch [140-160]	Speed: 37666.69 samples/sec	accuracy=nan
2023-03-20 16:39:01,129 Node[0] Epoch[15] Batch [160-180]	Speed: 37712.29 samples/sec	accuracy=nan
2023-03-20 16:39:02,861 Node[0] Epoch[15] Batch [180-200]	Speed: 37684.71 samples/sec	accuracy=nan
2023-03-20 16:39:04,594 Node[0] Epoch[15] Batch [200-220]	Speed: 37679.83 samples/sec	accuracy=nan
2023-03-20 16:39:06,328 Node[0] Epoch[15] Batch [220-240]	Speed: 37638.31 samples/sec	accuracy=nan
2023-03-20 16:39:08,059 Node[0] Epoch[15] Batch [240-260]	Speed: 37702.87 samples/sec	accuracy=nan
2023-03-20 16:39:09,790 Node[0] Epoch[15] Batch [260-280]	Speed: 37723.48 samples/sec	accuracy=nan
2023-03-20 16:39:11,521 Node[0] Epoch[15] Batch [280-300]	Speed: 37709.18 samples/sec	accuracy=nan
2023-03-20 16:39:13,253 Node[0] Epoch[15] Batch [300-320]	Speed: 37696.57 samples/sec	accuracy=nan
2023-03-20 16:39:14,983 Node[0] Epoch[15] Batch [320-340]	Speed: 37721.12 samples/sec	accuracy=nan
2023-03-20 16:39:16,731 Node[0] Epoch[15] Batch [340-360]	Speed: 37351.10 samples/sec	accuracy=nan
2023-03-20 16:39:18,466 Node[0] Epoch[15] Batch [360-380]	Speed: 37627.48 samples/sec	accuracy=nan
2023-03-20 16:39:19,504 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,504 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,504 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,504 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,505 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348359504, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 16:39:19,505 Node[0] Epoch[15] Time cost=33.979
:::MLLOG {"namespace": "", "time_ms": 1679348359505, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37705.16225419311}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-20 16:39:19,505 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,505 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,505 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348359505, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 16:39:19,506 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,505 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,506 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,506 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,506 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,507 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,507 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:19,507 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:21,323 Node[0] Epoch[16] Batch [0-20]	Speed: 37687.26 samples/sec	accuracy=nan
2023-03-20 16:39:23,052 Node[0] Epoch[16] Batch [20-40]	Speed: 37749.44 samples/sec	accuracy=nan
2023-03-20 16:39:24,784 Node[0] Epoch[16] Batch [40-60]	Speed: 37691.41 samples/sec	accuracy=nan
2023-03-20 16:39:26,514 Node[0] Epoch[16] Batch [60-80]	Speed: 37736.67 samples/sec	accuracy=nan
2023-03-20 16:39:28,249 Node[0] Epoch[16] Batch [80-100]	Speed: 37628.17 samples/sec	accuracy=nan
2023-03-20 16:39:29,981 Node[0] Epoch[16] Batch [100-120]	Speed: 37684.36 samples/sec	accuracy=nan
2023-03-20 16:39:31,713 Node[0] Epoch[16] Batch [120-140]	Speed: 37699.78 samples/sec	accuracy=nan
2023-03-20 16:39:33,446 Node[0] Epoch[16] Batch [140-160]	Speed: 37651.10 samples/sec	accuracy=nan
2023-03-20 16:39:35,179 Node[0] Epoch[16] Batch [160-180]	Speed: 37675.35 samples/sec	accuracy=nan
2023-03-20 16:39:36,910 Node[0] Epoch[16] Batch [180-200]	Speed: 37717.89 samples/sec	accuracy=nan
2023-03-20 16:39:38,639 Node[0] Epoch[16] Batch [200-220]	Speed: 37744.35 samples/sec	accuracy=nan
2023-03-20 16:39:40,373 Node[0] Epoch[16] Batch [220-240]	Speed: 37654.05 samples/sec	accuracy=nan
2023-03-20 16:39:42,107 Node[0] Epoch[16] Batch [240-260]	Speed: 37640.17 samples/sec	accuracy=nan
2023-03-20 16:39:43,839 Node[0] Epoch[16] Batch [260-280]	Speed: 37699.25 samples/sec	accuracy=nan
2023-03-20 16:39:45,569 Node[0] Epoch[16] Batch [280-300]	Speed: 37736.14 samples/sec	accuracy=nan
2023-03-20 16:39:47,299 Node[0] Epoch[16] Batch [300-320]	Speed: 37730.59 samples/sec	accuracy=nan
2023-03-20 16:39:49,031 Node[0] Epoch[16] Batch [320-340]	Speed: 37698.49 samples/sec	accuracy=nan
2023-03-20 16:39:50,764 Node[0] Epoch[16] Batch [340-360]	Speed: 37659.40 samples/sec	accuracy=nan
2023-03-20 16:39:52,495 Node[0] Epoch[16] Batch [360-380]	Speed: 37706.18 samples/sec	accuracy=nan
2023-03-20 16:39:53,446 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,446 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,447 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348393447, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 16:39:53,447 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[0] Epoch[16] Time cost=33.942
2023-03-20 16:39:53,447 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348393448, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37745.88498093401}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-20 16:39:53,447 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348393448, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 16:39:53,448 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,448 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,449 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,450 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,450 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:53,450 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:39:55,266 Node[0] Epoch[17] Batch [0-20]	Speed: 37742.71 samples/sec	accuracy=nan
2023-03-20 16:39:56,999 Node[0] Epoch[17] Batch [20-40]	Speed: 37657.19 samples/sec	accuracy=nan
2023-03-20 16:39:58,736 Node[0] Epoch[17] Batch [40-60]	Speed: 37589.71 samples/sec	accuracy=nan
2023-03-20 16:40:00,468 Node[0] Epoch[17] Batch [60-80]	Speed: 37677.09 samples/sec	accuracy=nan
2023-03-20 16:40:02,201 Node[0] Epoch[17] Batch [80-100]	Speed: 37677.06 samples/sec	accuracy=nan
2023-03-20 16:40:03,930 Node[0] Epoch[17] Batch [100-120]	Speed: 37749.80 samples/sec	accuracy=nan
2023-03-20 16:40:05,662 Node[0] Epoch[17] Batch [120-140]	Speed: 37697.86 samples/sec	accuracy=nan
2023-03-20 16:40:07,394 Node[0] Epoch[17] Batch [140-160]	Speed: 37680.47 samples/sec	accuracy=nan
2023-03-20 16:40:09,128 Node[0] Epoch[17] Batch [160-180]	Speed: 37647.60 samples/sec	accuracy=nan
2023-03-20 16:40:10,861 Node[0] Epoch[17] Batch [180-200]	Speed: 37668.93 samples/sec	accuracy=nan
2023-03-20 16:40:12,592 Node[0] Epoch[17] Batch [200-220]	Speed: 37727.29 samples/sec	accuracy=nan
2023-03-20 16:40:14,327 Node[0] Epoch[17] Batch [220-240]	Speed: 37622.96 samples/sec	accuracy=nan
2023-03-20 16:40:16,058 Node[0] Epoch[17] Batch [240-260]	Speed: 37704.54 samples/sec	accuracy=nan
2023-03-20 16:40:17,790 Node[0] Epoch[17] Batch [260-280]	Speed: 37693.43 samples/sec	accuracy=nan
2023-03-20 16:40:19,523 Node[0] Epoch[17] Batch [280-300]	Speed: 37666.63 samples/sec	accuracy=nan
2023-03-20 16:40:21,254 Node[0] Epoch[17] Batch [300-320]	Speed: 37713.98 samples/sec	accuracy=nan
2023-03-20 16:40:22,986 Node[0] Epoch[17] Batch [320-340]	Speed: 37689.61 samples/sec	accuracy=nan
2023-03-20 16:40:24,720 Node[0] Epoch[17] Batch [340-360]	Speed: 37657.13 samples/sec	accuracy=nan
2023-03-20 16:40:26,450 Node[0] Epoch[17] Batch [360-380]	Speed: 37726.56 samples/sec	accuracy=nan
2023-03-20 16:40:27,488 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,488 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348427488, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 16:40:27,489 Node[0] Epoch[17] Time cost=34.041
:::MLLOG {"namespace": "", "time_ms": 1679348427489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37636.07486032338}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-20 16:40:27,489 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348427489, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 16:40:27,490 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,489 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,490 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,490 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,490 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,490 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,491 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:27,491 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:40:29,308 Node[0] Epoch[18] Batch [0-20]	Speed: 37671.69 samples/sec	accuracy=nan
2023-03-20 16:40:31,039 Node[0] Epoch[18] Batch [20-40]	Speed: 37709.02 samples/sec	accuracy=nan
2023-03-20 16:40:32,772 Node[0] Epoch[18] Batch [40-60]	Speed: 37660.09 samples/sec	accuracy=nan
2023-03-20 16:40:34,505 Node[0] Epoch[18] Batch [60-80]	Speed: 37674.07 samples/sec	accuracy=nan
2023-03-20 16:40:36,238 Node[0] Epoch[18] Batch [80-100]	Speed: 37665.92 samples/sec	accuracy=nan
2023-03-20 16:40:37,971 Node[0] Epoch[18] Batch [100-120]	Speed: 37674.14 samples/sec	accuracy=nan
2023-03-20 16:40:39,702 Node[0] Epoch[18] Batch [120-140]	Speed: 37698.18 samples/sec	accuracy=nan
2023-03-20 16:40:41,437 Node[0] Epoch[18] Batch [140-160]	Speed: 37644.29 samples/sec	accuracy=nan
2023-03-20 16:40:43,167 Node[0] Epoch[18] Batch [160-180]	Speed: 37736.37 samples/sec	accuracy=nan
2023-03-20 16:40:44,901 Node[0] Epoch[18] Batch [180-200]	Speed: 37637.86 samples/sec	accuracy=nan
2023-03-20 16:40:46,632 Node[0] Epoch[18] Batch [200-220]	Speed: 37703.79 samples/sec	accuracy=nan
2023-03-20 16:40:48,366 Node[0] Epoch[18] Batch [220-240]	Speed: 37659.26 samples/sec	accuracy=nan
2023-03-20 16:40:50,097 Node[0] Epoch[18] Batch [240-260]	Speed: 37712.24 samples/sec	accuracy=nan
2023-03-20 16:40:51,827 Node[0] Epoch[18] Batch [260-280]	Speed: 37725.21 samples/sec	accuracy=nan
2023-03-20 16:40:53,557 Node[0] Epoch[18] Batch [280-300]	Speed: 37738.33 samples/sec	accuracy=nan
2023-03-20 16:40:55,291 Node[0] Epoch[18] Batch [300-320]	Speed: 37645.56 samples/sec	accuracy=nan
2023-03-20 16:40:57,022 Node[0] Epoch[18] Batch [320-340]	Speed: 37703.24 samples/sec	accuracy=nan
2023-03-20 16:40:58,751 Node[0] Epoch[18] Batch [340-360]	Speed: 37755.15 samples/sec	accuracy=nan
2023-03-20 16:41:00,484 Node[0] Epoch[18] Batch [360-380]	Speed: 37678.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348461435, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 16:41:01,437 Node[0] Epoch[18] Time cost=33.947
:::MLLOG {"namespace": "", "time_ms": 1679348461437, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37740.313377592815}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679348461518, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 16:41:02,252 Node[0] Epoch[18] Validation-accuracy=0.630720
2023-03-20 16:41:02,252 Node[0] Epoch[18] Validation-correct-count=1971.000000
2023-03-20 16:41:02,252 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348462360, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679348462360, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63074, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 16:41:02,360 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348462360, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679348462360, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 16:41:02,360 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:02,360 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348462360, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 16:41:02,361 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:04,099 Node[0] Epoch[19] Batch [0-20]	Speed: 37719.56 samples/sec	accuracy=nan
2023-03-20 16:41:05,832 Node[0] Epoch[19] Batch [20-40]	Speed: 37686.13 samples/sec	accuracy=nan
2023-03-20 16:41:07,563 Node[0] Epoch[19] Batch [40-60]	Speed: 37712.07 samples/sec	accuracy=nan
2023-03-20 16:41:09,295 Node[0] Epoch[19] Batch [60-80]	Speed: 37686.61 samples/sec	accuracy=nan
2023-03-20 16:41:11,025 Node[0] Epoch[19] Batch [80-100]	Speed: 37722.19 samples/sec	accuracy=nan
2023-03-20 16:41:12,757 Node[0] Epoch[19] Batch [100-120]	Speed: 37695.95 samples/sec	accuracy=nan
2023-03-20 16:41:14,488 Node[0] Epoch[19] Batch [120-140]	Speed: 37723.88 samples/sec	accuracy=nan
2023-03-20 16:41:16,218 Node[0] Epoch[19] Batch [140-160]	Speed: 37713.74 samples/sec	accuracy=nan
2023-03-20 16:41:17,948 Node[0] Epoch[19] Batch [160-180]	Speed: 37740.01 samples/sec	accuracy=nan
2023-03-20 16:41:19,682 Node[0] Epoch[19] Batch [180-200]	Speed: 37660.25 samples/sec	accuracy=nan
2023-03-20 16:41:21,413 Node[0] Epoch[19] Batch [200-220]	Speed: 37712.58 samples/sec	accuracy=nan
2023-03-20 16:41:23,145 Node[0] Epoch[19] Batch [220-240]	Speed: 37682.34 samples/sec	accuracy=nan
2023-03-20 16:41:24,879 Node[0] Epoch[19] Batch [240-260]	Speed: 37642.22 samples/sec	accuracy=nan
2023-03-20 16:41:26,609 Node[0] Epoch[19] Batch [260-280]	Speed: 37738.33 samples/sec	accuracy=nan
2023-03-20 16:41:28,342 Node[0] Epoch[19] Batch [280-300]	Speed: 37677.68 samples/sec	accuracy=nan
2023-03-20 16:41:30,073 Node[0] Epoch[19] Batch [300-320]	Speed: 37697.31 samples/sec	accuracy=nan
2023-03-20 16:41:31,803 Node[0] Epoch[19] Batch [320-340]	Speed: 37736.52 samples/sec	accuracy=nan
2023-03-20 16:41:33,538 Node[0] Epoch[19] Batch [340-360]	Speed: 37634.16 samples/sec	accuracy=nan
2023-03-20 16:41:35,271 Node[0] Epoch[19] Batch [360-380]	Speed: 37663.14 samples/sec	accuracy=nan
2023-03-20 16:41:36,309 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,310 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348496309, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 16:41:36,311 Node[0] Epoch[19] Time cost=33.950
2023-03-20 16:41:36,310 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348496311, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37736.88088856105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-20 16:41:36,310 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348496311, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 16:41:36,311 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,311 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,312 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,312 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,312 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,313 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:36,313 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:41:38,129 Node[0] Epoch[20] Batch [0-20]	Speed: 37687.93 samples/sec	accuracy=nan
2023-03-20 16:41:39,864 Node[0] Epoch[20] Batch [20-40]	Speed: 37634.13 samples/sec	accuracy=nan
2023-03-20 16:41:41,596 Node[0] Epoch[20] Batch [40-60]	Speed: 37677.86 samples/sec	accuracy=nan
2023-03-20 16:41:43,329 Node[0] Epoch[20] Batch [60-80]	Speed: 37678.53 samples/sec	accuracy=nan
2023-03-20 16:41:45,059 Node[0] Epoch[20] Batch [80-100]	Speed: 37733.84 samples/sec	accuracy=nan
2023-03-20 16:41:46,790 Node[0] Epoch[20] Batch [100-120]	Speed: 37710.71 samples/sec	accuracy=nan
2023-03-20 16:41:48,522 Node[0] Epoch[20] Batch [120-140]	Speed: 37685.04 samples/sec	accuracy=nan
2023-03-20 16:41:50,254 Node[0] Epoch[20] Batch [140-160]	Speed: 37706.05 samples/sec	accuracy=nan
2023-03-20 16:41:51,987 Node[0] Epoch[20] Batch [160-180]	Speed: 37662.49 samples/sec	accuracy=nan
2023-03-20 16:41:53,718 Node[0] Epoch[20] Batch [180-200]	Speed: 37703.18 samples/sec	accuracy=nan
2023-03-20 16:41:55,453 Node[0] Epoch[20] Batch [200-220]	Speed: 37633.09 samples/sec	accuracy=nan
2023-03-20 16:41:57,185 Node[0] Epoch[20] Batch [220-240]	Speed: 37696.66 samples/sec	accuracy=nan
2023-03-20 16:41:58,916 Node[0] Epoch[20] Batch [240-260]	Speed: 37696.52 samples/sec	accuracy=nan
2023-03-20 16:42:00,648 Node[0] Epoch[20] Batch [260-280]	Speed: 37699.20 samples/sec	accuracy=nan
2023-03-20 16:42:02,379 Node[0] Epoch[20] Batch [280-300]	Speed: 37705.94 samples/sec	accuracy=nan
2023-03-20 16:42:04,113 Node[0] Epoch[20] Batch [300-320]	Speed: 37656.05 samples/sec	accuracy=nan
2023-03-20 16:42:05,843 Node[0] Epoch[20] Batch [320-340]	Speed: 37722.47 samples/sec	accuracy=nan
2023-03-20 16:42:07,576 Node[0] Epoch[20] Batch [340-360]	Speed: 37670.57 samples/sec	accuracy=nan
2023-03-20 16:42:09,307 Node[0] Epoch[20] Batch [360-380]	Speed: 37726.69 samples/sec	accuracy=nan
2023-03-20 16:42:10,257 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,257 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348530257, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 16:42:10,258 Node[0] Epoch[20] Time cost=33.947
2023-03-20 16:42:10,258 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348530258, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37740.379907948125}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 16:42:10,258 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,258 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348530258, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 16:42:10,258 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,258 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,258 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,259 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,260 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:10,260 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:12,079 Node[0] Epoch[21] Batch [0-20]	Speed: 37672.75 samples/sec	accuracy=nan
2023-03-20 16:42:13,811 Node[0] Epoch[21] Batch [20-40]	Speed: 37690.09 samples/sec	accuracy=nan
2023-03-20 16:42:15,545 Node[0] Epoch[21] Batch [40-60]	Speed: 37641.87 samples/sec	accuracy=nan
2023-03-20 16:42:17,278 Node[0] Epoch[21] Batch [60-80]	Speed: 37686.54 samples/sec	accuracy=nan
2023-03-20 16:42:19,010 Node[0] Epoch[21] Batch [80-100]	Speed: 37679.05 samples/sec	accuracy=nan
2023-03-20 16:42:20,745 Node[0] Epoch[21] Batch [100-120]	Speed: 37638.39 samples/sec	accuracy=nan
2023-03-20 16:42:22,478 Node[0] Epoch[21] Batch [120-140]	Speed: 37667.08 samples/sec	accuracy=nan
2023-03-20 16:42:24,212 Node[0] Epoch[21] Batch [140-160]	Speed: 37649.26 samples/sec	accuracy=nan
2023-03-20 16:42:25,946 Node[0] Epoch[21] Batch [160-180]	Speed: 37646.53 samples/sec	accuracy=nan
2023-03-20 16:42:27,677 Node[0] Epoch[21] Batch [180-200]	Speed: 37693.60 samples/sec	accuracy=nan
2023-03-20 16:42:29,413 Node[0] Epoch[21] Batch [200-220]	Speed: 37622.13 samples/sec	accuracy=nan
2023-03-20 16:42:31,145 Node[0] Epoch[21] Batch [220-240]	Speed: 37689.14 samples/sec	accuracy=nan
2023-03-20 16:42:32,878 Node[0] Epoch[21] Batch [240-260]	Speed: 37660.23 samples/sec	accuracy=nan
2023-03-20 16:42:34,611 Node[0] Epoch[21] Batch [260-280]	Speed: 37676.77 samples/sec	accuracy=nan
2023-03-20 16:42:36,343 Node[0] Epoch[21] Batch [280-300]	Speed: 37686.39 samples/sec	accuracy=nan
2023-03-20 16:42:38,079 Node[0] Epoch[21] Batch [300-320]	Speed: 37602.63 samples/sec	accuracy=nan
2023-03-20 16:42:39,809 Node[0] Epoch[21] Batch [320-340]	Speed: 37737.15 samples/sec	accuracy=nan
2023-03-20 16:42:41,540 Node[0] Epoch[21] Batch [340-360]	Speed: 37701.55 samples/sec	accuracy=nan
2023-03-20 16:42:43,276 Node[0] Epoch[21] Batch [360-380]	Speed: 37619.25 samples/sec	accuracy=nan
2023-03-20 16:42:44,312 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,312 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,312 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,313 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,313 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348564312, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 16:42:44,313 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,313 Node[0] Epoch[21] Time cost=34.055
:::MLLOG {"namespace": "", "time_ms": 1679348564313, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37621.02676686238}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-20 16:42:44,313 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,313 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348564313, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 16:42:44,314 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,313 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,314 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,314 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,314 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,314 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,315 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:44,315 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:42:46,131 Node[0] Epoch[22] Batch [0-20]	Speed: 37716.26 samples/sec	accuracy=nan
2023-03-20 16:42:47,863 Node[0] Epoch[22] Batch [20-40]	Speed: 37698.33 samples/sec	accuracy=nan
2023-03-20 16:42:49,594 Node[0] Epoch[22] Batch [40-60]	Speed: 37710.63 samples/sec	accuracy=nan
2023-03-20 16:42:51,325 Node[0] Epoch[22] Batch [60-80]	Speed: 37718.96 samples/sec	accuracy=nan
2023-03-20 16:42:53,056 Node[0] Epoch[22] Batch [80-100]	Speed: 37703.01 samples/sec	accuracy=nan
2023-03-20 16:42:54,790 Node[0] Epoch[22] Batch [100-120]	Speed: 37649.16 samples/sec	accuracy=nan
2023-03-20 16:42:56,523 Node[0] Epoch[22] Batch [120-140]	Speed: 37661.80 samples/sec	accuracy=nan
2023-03-20 16:42:58,255 Node[0] Epoch[22] Batch [140-160]	Speed: 37685.25 samples/sec	accuracy=nan
2023-03-20 16:42:59,986 Node[0] Epoch[22] Batch [160-180]	Speed: 37714.85 samples/sec	accuracy=nan
2023-03-20 16:43:01,720 Node[0] Epoch[22] Batch [180-200]	Speed: 37645.94 samples/sec	accuracy=nan
2023-03-20 16:43:03,455 Node[0] Epoch[22] Batch [200-220]	Speed: 37639.22 samples/sec	accuracy=nan
2023-03-20 16:43:05,190 Node[0] Epoch[22] Batch [220-240]	Speed: 37626.22 samples/sec	accuracy=nan
2023-03-20 16:43:06,919 Node[0] Epoch[22] Batch [240-260]	Speed: 37743.84 samples/sec	accuracy=nan
2023-03-20 16:43:08,651 Node[0] Epoch[22] Batch [260-280]	Speed: 37700.57 samples/sec	accuracy=nan
2023-03-20 16:43:10,382 Node[0] Epoch[22] Batch [280-300]	Speed: 37716.79 samples/sec	accuracy=nan
2023-03-20 16:43:12,114 Node[0] Epoch[22] Batch [300-320]	Speed: 37688.83 samples/sec	accuracy=nan
2023-03-20 16:43:13,845 Node[0] Epoch[22] Batch [320-340]	Speed: 37715.38 samples/sec	accuracy=nan
2023-03-20 16:43:15,579 Node[0] Epoch[22] Batch [340-360]	Speed: 37645.74 samples/sec	accuracy=nan
2023-03-20 16:43:17,315 Node[0] Epoch[22] Batch [360-380]	Speed: 37601.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348598265, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 16:43:18,266 Node[0] Epoch[22] Time cost=33.952
:::MLLOG {"namespace": "", "time_ms": 1679348598266, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37734.13290909008}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679348598348, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 16:43:19,114 Node[0] Epoch[22] Validation-accuracy=0.682560
2023-03-20 16:43:19,114 Node[0] Epoch[22] Validation-correct-count=2133.000000
2023-03-20 16:43:19,114 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348599188, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-20 16:43:19,189 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348599189, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69462, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679348599189, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 16:43:19,189 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348599189, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 16:43:19,189 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:19,189 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348599189, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 16:43:19,189 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:20,933 Node[0] Epoch[23] Batch [0-20]	Speed: 37658.03 samples/sec	accuracy=nan
2023-03-20 16:43:22,664 Node[0] Epoch[23] Batch [20-40]	Speed: 37694.03 samples/sec	accuracy=nan
2023-03-20 16:43:24,395 Node[0] Epoch[23] Batch [40-60]	Speed: 37708.73 samples/sec	accuracy=nan
2023-03-20 16:43:26,126 Node[0] Epoch[23] Batch [60-80]	Speed: 37726.78 samples/sec	accuracy=nan
2023-03-20 16:43:27,863 Node[0] Epoch[23] Batch [80-100]	Speed: 37580.59 samples/sec	accuracy=nan
2023-03-20 16:43:29,593 Node[0] Epoch[23] Batch [100-120]	Speed: 37733.79 samples/sec	accuracy=nan
2023-03-20 16:43:31,324 Node[0] Epoch[23] Batch [120-140]	Speed: 37720.77 samples/sec	accuracy=nan
2023-03-20 16:43:33,055 Node[0] Epoch[23] Batch [140-160]	Speed: 37707.55 samples/sec	accuracy=nan
2023-03-20 16:43:34,786 Node[0] Epoch[23] Batch [160-180]	Speed: 37703.71 samples/sec	accuracy=nan
2023-03-20 16:43:36,518 Node[0] Epoch[23] Batch [180-200]	Speed: 37701.12 samples/sec	accuracy=nan
2023-03-20 16:43:38,251 Node[0] Epoch[23] Batch [200-220]	Speed: 37654.71 samples/sec	accuracy=nan
2023-03-20 16:43:39,987 Node[0] Epoch[23] Batch [220-240]	Speed: 37611.93 samples/sec	accuracy=nan
2023-03-20 16:43:41,719 Node[0] Epoch[23] Batch [240-260]	Speed: 37698.94 samples/sec	accuracy=nan
2023-03-20 16:43:43,452 Node[0] Epoch[23] Batch [260-280]	Speed: 37663.49 samples/sec	accuracy=nan
2023-03-20 16:43:45,184 Node[0] Epoch[23] Batch [280-300]	Speed: 37676.76 samples/sec	accuracy=nan
2023-03-20 16:43:46,916 Node[0] Epoch[23] Batch [300-320]	Speed: 37700.00 samples/sec	accuracy=nan
2023-03-20 16:43:48,647 Node[0] Epoch[23] Batch [320-340]	Speed: 37711.55 samples/sec	accuracy=nan
2023-03-20 16:43:50,379 Node[0] Epoch[23] Batch [340-360]	Speed: 37682.35 samples/sec	accuracy=nan
2023-03-20 16:43:52,113 Node[0] Epoch[23] Batch [360-380]	Speed: 37647.52 samples/sec	accuracy=nan
2023-03-20 16:43:53,157 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,157 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,157 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,157 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348633157, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 16:43:53,158 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,158 Node[0] Epoch[23] Time cost=33.969
2023-03-20 16:43:53,158 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348633158, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37716.140225582865}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-20 16:43:53,158 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348633159, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 16:43:53,159 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,158 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,159 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,159 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,159 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,159 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,160 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,160 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:53,161 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:43:54,976 Node[0] Epoch[24] Batch [0-20]	Speed: 37697.35 samples/sec	accuracy=nan
2023-03-20 16:43:56,711 Node[0] Epoch[24] Batch [20-40]	Speed: 37610.66 samples/sec	accuracy=nan
2023-03-20 16:43:58,442 Node[0] Epoch[24] Batch [40-60]	Speed: 37709.09 samples/sec	accuracy=nan
2023-03-20 16:44:00,173 Node[0] Epoch[24] Batch [60-80]	Speed: 37709.48 samples/sec	accuracy=nan
2023-03-20 16:44:01,907 Node[0] Epoch[24] Batch [80-100]	Speed: 37657.26 samples/sec	accuracy=nan
2023-03-20 16:44:03,640 Node[0] Epoch[24] Batch [100-120]	Speed: 37675.87 samples/sec	accuracy=nan
2023-03-20 16:44:05,373 Node[0] Epoch[24] Batch [120-140]	Speed: 37660.28 samples/sec	accuracy=nan
2023-03-20 16:44:07,105 Node[0] Epoch[24] Batch [140-160]	Speed: 37700.60 samples/sec	accuracy=nan
2023-03-20 16:44:08,833 Node[0] Epoch[24] Batch [160-180]	Speed: 37769.85 samples/sec	accuracy=nan
2023-03-20 16:44:10,566 Node[0] Epoch[24] Batch [180-200]	Speed: 37677.52 samples/sec	accuracy=nan
2023-03-20 16:44:12,301 Node[0] Epoch[24] Batch [200-220]	Speed: 37618.62 samples/sec	accuracy=nan
2023-03-20 16:44:14,033 Node[0] Epoch[24] Batch [220-240]	Speed: 37678.30 samples/sec	accuracy=nan
2023-03-20 16:44:15,764 Node[0] Epoch[24] Batch [240-260]	Speed: 37715.94 samples/sec	accuracy=nan
2023-03-20 16:44:17,495 Node[0] Epoch[24] Batch [260-280]	Speed: 37728.62 samples/sec	accuracy=nan
2023-03-20 16:44:19,228 Node[0] Epoch[24] Batch [280-300]	Speed: 37652.20 samples/sec	accuracy=nan
2023-03-20 16:44:20,961 Node[0] Epoch[24] Batch [300-320]	Speed: 37672.47 samples/sec	accuracy=nan
2023-03-20 16:44:22,692 Node[0] Epoch[24] Batch [320-340]	Speed: 37721.27 samples/sec	accuracy=nan
2023-03-20 16:44:24,422 Node[0] Epoch[24] Batch [340-360]	Speed: 37719.25 samples/sec	accuracy=nan
2023-03-20 16:44:26,158 Node[0] Epoch[24] Batch [360-380]	Speed: 37609.76 samples/sec	accuracy=nan
2023-03-20 16:44:27,107 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348667107, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 16:44:27,108 Node[0] Epoch[24] Time cost=33.949
:::MLLOG {"namespace": "", "time_ms": 1679348667108, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37737.73424809771}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-20 16:44:27,108 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,108 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,108 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,108 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348667108, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 16:44:27,108 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,108 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,108 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,109 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,110 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:27,110 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:44:28,927 Node[0] Epoch[25] Batch [0-20]	Speed: 37715.72 samples/sec	accuracy=nan
2023-03-20 16:44:30,658 Node[0] Epoch[25] Batch [20-40]	Speed: 37709.38 samples/sec	accuracy=nan
2023-03-20 16:44:32,397 Node[0] Epoch[25] Batch [40-60]	Speed: 37547.38 samples/sec	accuracy=nan
2023-03-20 16:44:34,130 Node[0] Epoch[25] Batch [60-80]	Speed: 37669.27 samples/sec	accuracy=nan
2023-03-20 16:44:35,863 Node[0] Epoch[25] Batch [80-100]	Speed: 37664.36 samples/sec	accuracy=nan
2023-03-20 16:44:37,597 Node[0] Epoch[25] Batch [100-120]	Speed: 37660.56 samples/sec	accuracy=nan
2023-03-20 16:44:39,327 Node[0] Epoch[25] Batch [120-140]	Speed: 37731.46 samples/sec	accuracy=nan
2023-03-20 16:44:41,059 Node[0] Epoch[25] Batch [140-160]	Speed: 37681.67 samples/sec	accuracy=nan
2023-03-20 16:44:42,790 Node[0] Epoch[25] Batch [160-180]	Speed: 37705.40 samples/sec	accuracy=nan
2023-03-20 16:44:44,521 Node[0] Epoch[25] Batch [180-200]	Speed: 37714.76 samples/sec	accuracy=nan
2023-03-20 16:44:46,254 Node[0] Epoch[25] Batch [200-220]	Speed: 37671.46 samples/sec	accuracy=nan
2023-03-20 16:44:47,990 Node[0] Epoch[25] Batch [220-240]	Speed: 37607.78 samples/sec	accuracy=nan
2023-03-20 16:44:49,723 Node[0] Epoch[25] Batch [240-260]	Speed: 37667.85 samples/sec	accuracy=nan
2023-03-20 16:44:51,458 Node[0] Epoch[25] Batch [260-280]	Speed: 37629.64 samples/sec	accuracy=nan
2023-03-20 16:44:53,192 Node[0] Epoch[25] Batch [280-300]	Speed: 37653.56 samples/sec	accuracy=nan
2023-03-20 16:44:54,922 Node[0] Epoch[25] Batch [300-320]	Speed: 37724.81 samples/sec	accuracy=nan
2023-03-20 16:44:56,661 Node[0] Epoch[25] Batch [320-340]	Speed: 37534.54 samples/sec	accuracy=nan
2023-03-20 16:44:58,393 Node[0] Epoch[25] Batch [340-360]	Speed: 37690.93 samples/sec	accuracy=nan
2023-03-20 16:45:00,127 Node[0] Epoch[25] Batch [360-380]	Speed: 37647.75 samples/sec	accuracy=nan
2023-03-20 16:45:01,167 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,167 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,167 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,167 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348701167, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 16:45:01,167 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,168 Node[0] Epoch[25] Time cost=34.059
:::MLLOG {"namespace": "", "time_ms": 1679348701168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37615.77660064058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-20 16:45:01,168 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,168 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348701168, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 16:45:01,168 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,168 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,168 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,169 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,169 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,169 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,169 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,169 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:01,170 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:02,987 Node[0] Epoch[26] Batch [0-20]	Speed: 37664.16 samples/sec	accuracy=nan
2023-03-20 16:45:04,721 Node[0] Epoch[26] Batch [20-40]	Speed: 37646.18 samples/sec	accuracy=nan
2023-03-20 16:45:06,452 Node[0] Epoch[26] Batch [40-60]	Speed: 37703.83 samples/sec	accuracy=nan
2023-03-20 16:45:08,184 Node[0] Epoch[26] Batch [60-80]	Speed: 37702.10 samples/sec	accuracy=nan
2023-03-20 16:45:09,917 Node[0] Epoch[26] Batch [80-100]	Speed: 37655.07 samples/sec	accuracy=nan
2023-03-20 16:45:11,651 Node[0] Epoch[26] Batch [100-120]	Speed: 37642.72 samples/sec	accuracy=nan
2023-03-20 16:45:13,384 Node[0] Epoch[26] Batch [120-140]	Speed: 37673.42 samples/sec	accuracy=nan
2023-03-20 16:45:15,116 Node[0] Epoch[26] Batch [140-160]	Speed: 37696.70 samples/sec	accuracy=nan
2023-03-20 16:45:16,850 Node[0] Epoch[26] Batch [160-180]	Speed: 37651.29 samples/sec	accuracy=nan
2023-03-20 16:45:18,581 Node[0] Epoch[26] Batch [180-200]	Speed: 37706.45 samples/sec	accuracy=nan
2023-03-20 16:45:20,311 Node[0] Epoch[26] Batch [200-220]	Speed: 37731.73 samples/sec	accuracy=nan
2023-03-20 16:45:22,041 Node[0] Epoch[26] Batch [220-240]	Speed: 37734.13 samples/sec	accuracy=nan
2023-03-20 16:45:23,775 Node[0] Epoch[26] Batch [240-260]	Speed: 37661.07 samples/sec	accuracy=nan
2023-03-20 16:45:25,507 Node[0] Epoch[26] Batch [260-280]	Speed: 37680.33 samples/sec	accuracy=nan
2023-03-20 16:45:27,238 Node[0] Epoch[26] Batch [280-300]	Speed: 37718.92 samples/sec	accuracy=nan
2023-03-20 16:45:28,970 Node[0] Epoch[26] Batch [300-320]	Speed: 37684.79 samples/sec	accuracy=nan
2023-03-20 16:45:30,704 Node[0] Epoch[26] Batch [320-340]	Speed: 37652.90 samples/sec	accuracy=nan
2023-03-20 16:45:32,436 Node[0] Epoch[26] Batch [340-360]	Speed: 37677.66 samples/sec	accuracy=nan
2023-03-20 16:45:34,170 Node[0] Epoch[26] Batch [360-380]	Speed: 37653.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348735122, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 16:45:35,123 Node[0] Epoch[26] Time cost=33.955
:::MLLOG {"namespace": "", "time_ms": 1679348735123, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37731.1707334175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679348735205, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 16:45:35,942 Node[0] Epoch[26] Validation-accuracy=0.724160
2023-03-20 16:45:35,942 Node[0] Epoch[26] Validation-correct-count=2263.000000
2023-03-20 16:45:35,942 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348736046, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679348736046, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72192, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679348736046, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 16:45:36,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348736046, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 16:45:36,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:36,046 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348736046, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 16:45:36,047 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:45:37,787 Node[0] Epoch[27] Batch [0-20]	Speed: 37679.47 samples/sec	accuracy=nan
2023-03-20 16:45:39,519 Node[0] Epoch[27] Batch [20-40]	Speed: 37672.41 samples/sec	accuracy=nan
2023-03-20 16:45:41,252 Node[0] Epoch[27] Batch [40-60]	Speed: 37670.80 samples/sec	accuracy=nan
2023-03-20 16:45:42,988 Node[0] Epoch[27] Batch [60-80]	Speed: 37619.07 samples/sec	accuracy=nan
2023-03-20 16:45:44,721 Node[0] Epoch[27] Batch [80-100]	Speed: 37651.76 samples/sec	accuracy=nan
2023-03-20 16:45:46,453 Node[0] Epoch[27] Batch [100-120]	Speed: 37702.50 samples/sec	accuracy=nan
2023-03-20 16:45:48,185 Node[0] Epoch[27] Batch [120-140]	Speed: 37681.93 samples/sec	accuracy=nan
2023-03-20 16:45:49,915 Node[0] Epoch[27] Batch [140-160]	Speed: 37739.05 samples/sec	accuracy=nan
2023-03-20 16:45:51,647 Node[0] Epoch[27] Batch [160-180]	Speed: 37692.71 samples/sec	accuracy=nan
2023-03-20 16:45:53,381 Node[0] Epoch[27] Batch [180-200]	Speed: 37639.36 samples/sec	accuracy=nan
2023-03-20 16:45:55,115 Node[0] Epoch[27] Batch [200-220]	Speed: 37648.01 samples/sec	accuracy=nan
2023-03-20 16:45:56,850 Node[0] Epoch[27] Batch [220-240]	Speed: 37622.13 samples/sec	accuracy=nan
2023-03-20 16:45:58,583 Node[0] Epoch[27] Batch [240-260]	Speed: 37684.96 samples/sec	accuracy=nan
2023-03-20 16:46:00,314 Node[0] Epoch[27] Batch [260-280]	Speed: 37698.18 samples/sec	accuracy=nan
2023-03-20 16:46:02,049 Node[0] Epoch[27] Batch [280-300]	Speed: 37636.60 samples/sec	accuracy=nan
2023-03-20 16:46:03,785 Node[0] Epoch[27] Batch [300-320]	Speed: 37590.60 samples/sec	accuracy=nan
2023-03-20 16:46:05,515 Node[0] Epoch[27] Batch [320-340]	Speed: 37745.42 samples/sec	accuracy=nan
2023-03-20 16:46:07,248 Node[0] Epoch[27] Batch [340-360]	Speed: 37666.52 samples/sec	accuracy=nan
2023-03-20 16:46:08,981 Node[0] Epoch[27] Batch [360-380]	Speed: 37675.94 samples/sec	accuracy=nan
2023-03-20 16:46:10,019 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,019 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,020 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,020 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348770019, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 16:46:10,020 Node[0] Epoch[27] Time cost=33.973
2023-03-20 16:46:10,020 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348770020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37710.88862223112}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679348770020, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 16:46:10,020 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,020 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,020 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,020 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,021 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,021 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,021 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,021 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,021 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,022 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:10,022 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:11,840 Node[0] Epoch[28] Batch [0-20]	Speed: 37659.92 samples/sec	accuracy=nan
2023-03-20 16:46:13,571 Node[0] Epoch[28] Batch [20-40]	Speed: 37710.49 samples/sec	accuracy=nan
2023-03-20 16:46:15,304 Node[0] Epoch[28] Batch [40-60]	Speed: 37682.64 samples/sec	accuracy=nan
2023-03-20 16:46:17,037 Node[0] Epoch[28] Batch [60-80]	Speed: 37655.87 samples/sec	accuracy=nan
2023-03-20 16:46:18,773 Node[0] Epoch[28] Batch [80-100]	Speed: 37617.70 samples/sec	accuracy=nan
2023-03-20 16:46:20,505 Node[0] Epoch[28] Batch [100-120]	Speed: 37690.82 samples/sec	accuracy=nan
2023-03-20 16:46:22,236 Node[0] Epoch[28] Batch [120-140]	Speed: 37703.79 samples/sec	accuracy=nan
2023-03-20 16:46:23,970 Node[0] Epoch[28] Batch [140-160]	Speed: 37646.07 samples/sec	accuracy=nan
2023-03-20 16:46:25,702 Node[0] Epoch[28] Batch [160-180]	Speed: 37691.33 samples/sec	accuracy=nan
2023-03-20 16:46:27,435 Node[0] Epoch[28] Batch [180-200]	Speed: 37673.65 samples/sec	accuracy=nan
2023-03-20 16:46:29,167 Node[0] Epoch[28] Batch [200-220]	Speed: 37681.33 samples/sec	accuracy=nan
2023-03-20 16:46:30,899 Node[0] Epoch[28] Batch [220-240]	Speed: 37701.52 samples/sec	accuracy=nan
2023-03-20 16:46:32,631 Node[0] Epoch[28] Batch [240-260]	Speed: 37687.41 samples/sec	accuracy=nan
2023-03-20 16:46:34,364 Node[0] Epoch[28] Batch [260-280]	Speed: 37665.37 samples/sec	accuracy=nan
2023-03-20 16:46:36,095 Node[0] Epoch[28] Batch [280-300]	Speed: 37711.51 samples/sec	accuracy=nan
2023-03-20 16:46:37,827 Node[0] Epoch[28] Batch [300-320]	Speed: 37682.89 samples/sec	accuracy=nan
2023-03-20 16:46:39,560 Node[0] Epoch[28] Batch [320-340]	Speed: 37677.18 samples/sec	accuracy=nan
2023-03-20 16:46:41,300 Node[0] Epoch[28] Batch [340-360]	Speed: 37505.91 samples/sec	accuracy=nan
2023-03-20 16:46:43,036 Node[0] Epoch[28] Batch [360-380]	Speed: 37618.80 samples/sec	accuracy=nan
2023-03-20 16:46:43,988 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,988 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,989 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348803988, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 16:46:43,989 Node[0] Epoch[28] Time cost=33.969
:::MLLOG {"namespace": "", "time_ms": 1679348803989, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37716.23049575147}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-20 16:46:43,989 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,989 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348803989, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 16:46:43,990 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,989 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,990 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,991 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,991 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:43,992 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:46:45,811 Node[0] Epoch[29] Batch [0-20]	Speed: 37670.91 samples/sec	accuracy=nan
2023-03-20 16:46:47,546 Node[0] Epoch[29] Batch [20-40]	Speed: 37632.14 samples/sec	accuracy=nan
2023-03-20 16:46:49,278 Node[0] Epoch[29] Batch [40-60]	Speed: 37673.86 samples/sec	accuracy=nan
2023-03-20 16:46:51,013 Node[0] Epoch[29] Batch [60-80]	Speed: 37628.05 samples/sec	accuracy=nan
2023-03-20 16:46:52,746 Node[0] Epoch[29] Batch [80-100]	Speed: 37680.49 samples/sec	accuracy=nan
2023-03-20 16:46:54,478 Node[0] Epoch[29] Batch [100-120]	Speed: 37679.40 samples/sec	accuracy=nan
2023-03-20 16:46:56,214 Node[0] Epoch[29] Batch [120-140]	Speed: 37615.55 samples/sec	accuracy=nan
2023-03-20 16:46:57,947 Node[0] Epoch[29] Batch [140-160]	Speed: 37661.03 samples/sec	accuracy=nan
2023-03-20 16:46:59,680 Node[0] Epoch[29] Batch [160-180]	Speed: 37680.17 samples/sec	accuracy=nan
2023-03-20 16:47:01,412 Node[0] Epoch[29] Batch [180-200]	Speed: 37678.74 samples/sec	accuracy=nan
2023-03-20 16:47:03,143 Node[0] Epoch[29] Batch [200-220]	Speed: 37715.47 samples/sec	accuracy=nan
2023-03-20 16:47:04,876 Node[0] Epoch[29] Batch [220-240]	Speed: 37662.66 samples/sec	accuracy=nan
2023-03-20 16:47:06,609 Node[0] Epoch[29] Batch [240-260]	Speed: 37667.76 samples/sec	accuracy=nan
2023-03-20 16:47:08,342 Node[0] Epoch[29] Batch [260-280]	Speed: 37680.24 samples/sec	accuracy=nan
2023-03-20 16:47:10,073 Node[0] Epoch[29] Batch [280-300]	Speed: 37705.39 samples/sec	accuracy=nan
2023-03-20 16:47:11,806 Node[0] Epoch[29] Batch [300-320]	Speed: 37673.21 samples/sec	accuracy=nan
2023-03-20 16:47:13,539 Node[0] Epoch[29] Batch [320-340]	Speed: 37664.90 samples/sec	accuracy=nan
2023-03-20 16:47:15,274 Node[0] Epoch[29] Batch [340-360]	Speed: 37620.83 samples/sec	accuracy=nan
2023-03-20 16:47:17,007 Node[0] Epoch[29] Batch [360-380]	Speed: 37678.08 samples/sec	accuracy=nan
2023-03-20 16:47:18,045 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,045 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348838045, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 16:47:18,046 Node[0] Epoch[29] Time cost=34.056
:::MLLOG {"namespace": "", "time_ms": 1679348838046, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37619.13415741132}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-20 16:47:18,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348838046, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 16:47:18,046 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,046 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,046 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,047 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,047 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,047 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,047 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,047 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,048 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:18,048 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:19,870 Node[0] Epoch[30] Batch [0-20]	Speed: 37564.28 samples/sec	accuracy=nan
2023-03-20 16:47:21,603 Node[0] Epoch[30] Batch [20-40]	Speed: 37668.46 samples/sec	accuracy=nan
2023-03-20 16:47:23,334 Node[0] Epoch[30] Batch [40-60]	Speed: 37699.22 samples/sec	accuracy=nan
2023-03-20 16:47:25,074 Node[0] Epoch[30] Batch [60-80]	Speed: 37526.81 samples/sec	accuracy=nan
2023-03-20 16:47:26,807 Node[0] Epoch[30] Batch [80-100]	Speed: 37664.25 samples/sec	accuracy=nan
2023-03-20 16:47:28,542 Node[0] Epoch[30] Batch [100-120]	Speed: 37626.61 samples/sec	accuracy=nan
2023-03-20 16:47:30,278 Node[0] Epoch[30] Batch [120-140]	Speed: 37605.54 samples/sec	accuracy=nan
2023-03-20 16:47:32,012 Node[0] Epoch[30] Batch [140-160]	Speed: 37652.10 samples/sec	accuracy=nan
2023-03-20 16:47:33,749 Node[0] Epoch[30] Batch [160-180]	Speed: 37577.78 samples/sec	accuracy=nan
2023-03-20 16:47:35,484 Node[0] Epoch[30] Batch [180-200]	Speed: 37633.46 samples/sec	accuracy=nan
2023-03-20 16:47:37,216 Node[0] Epoch[30] Batch [200-220]	Speed: 37690.62 samples/sec	accuracy=nan
2023-03-20 16:47:38,952 Node[0] Epoch[30] Batch [220-240]	Speed: 37594.45 samples/sec	accuracy=nan
2023-03-20 16:47:40,686 Node[0] Epoch[30] Batch [240-260]	Speed: 37648.41 samples/sec	accuracy=nan
2023-03-20 16:47:42,419 Node[0] Epoch[30] Batch [260-280]	Speed: 37669.63 samples/sec	accuracy=nan
2023-03-20 16:47:44,152 Node[0] Epoch[30] Batch [280-300]	Speed: 37660.56 samples/sec	accuracy=nan
2023-03-20 16:47:45,888 Node[0] Epoch[30] Batch [300-320]	Speed: 37615.70 samples/sec	accuracy=nan
2023-03-20 16:47:47,621 Node[0] Epoch[30] Batch [320-340]	Speed: 37661.97 samples/sec	accuracy=nan
2023-03-20 16:47:49,356 Node[0] Epoch[30] Batch [340-360]	Speed: 37635.11 samples/sec	accuracy=nan
2023-03-20 16:47:51,085 Node[0] Epoch[30] Batch [360-380]	Speed: 37745.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679348872036, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 16:47:52,037 Node[0] Epoch[30] Time cost=33.991
:::MLLOG {"namespace": "", "time_ms": 1679348872038, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37691.23026909426}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679348872119, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 16:47:52,885 Node[0] Epoch[30] Validation-accuracy=0.746240
2023-03-20 16:47:52,885 Node[0] Epoch[30] Validation-correct-count=2332.000000
2023-03-20 16:47:52,885 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679348872960, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679348872960, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75192, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679348872960, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 16:47:52,960 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348872961, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 16:47:52,961 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,961 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,961 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,960 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348872961, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 16:47:52,961 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:52,961 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:47:54,706 Node[0] Epoch[31] Batch [0-20]	Speed: 37581.22 samples/sec	accuracy=nan
2023-03-20 16:47:56,437 Node[0] Epoch[31] Batch [20-40]	Speed: 37703.21 samples/sec	accuracy=nan
2023-03-20 16:47:58,171 Node[0] Epoch[31] Batch [40-60]	Speed: 37651.36 samples/sec	accuracy=nan
2023-03-20 16:47:59,906 Node[0] Epoch[31] Batch [60-80]	Speed: 37612.17 samples/sec	accuracy=nan
2023-03-20 16:48:01,642 Node[0] Epoch[31] Batch [80-100]	Speed: 37605.81 samples/sec	accuracy=nan
2023-03-20 16:48:03,374 Node[0] Epoch[31] Batch [100-120]	Speed: 37694.24 samples/sec	accuracy=nan
2023-03-20 16:48:05,106 Node[0] Epoch[31] Batch [120-140]	Speed: 37698.31 samples/sec	accuracy=nan
2023-03-20 16:48:06,844 Node[0] Epoch[31] Batch [140-160]	Speed: 37563.77 samples/sec	accuracy=nan
2023-03-20 16:48:08,574 Node[0] Epoch[31] Batch [160-180]	Speed: 37724.39 samples/sec	accuracy=nan
2023-03-20 16:48:10,305 Node[0] Epoch[31] Batch [180-200]	Speed: 37720.64 samples/sec	accuracy=nan
2023-03-20 16:48:12,036 Node[0] Epoch[31] Batch [200-220]	Speed: 37700.44 samples/sec	accuracy=nan
2023-03-20 16:48:13,767 Node[0] Epoch[31] Batch [220-240]	Speed: 37713.21 samples/sec	accuracy=nan
2023-03-20 16:48:15,500 Node[0] Epoch[31] Batch [240-260]	Speed: 37672.03 samples/sec	accuracy=nan
2023-03-20 16:48:17,233 Node[0] Epoch[31] Batch [260-280]	Speed: 37670.69 samples/sec	accuracy=nan
2023-03-20 16:48:18,967 Node[0] Epoch[31] Batch [280-300]	Speed: 37654.90 samples/sec	accuracy=nan
2023-03-20 16:48:20,698 Node[0] Epoch[31] Batch [300-320]	Speed: 37701.74 samples/sec	accuracy=nan
2023-03-20 16:48:22,428 Node[0] Epoch[31] Batch [320-340]	Speed: 37735.35 samples/sec	accuracy=nan
2023-03-20 16:48:24,163 Node[0] Epoch[31] Batch [340-360]	Speed: 37628.03 samples/sec	accuracy=nan
2023-03-20 16:48:25,895 Node[0] Epoch[31] Batch [360-380]	Speed: 37691.43 samples/sec	accuracy=nan
2023-03-20 16:48:26,932 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,932 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,932 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,932 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,933 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,933 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348906932, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 16:48:26,933 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,933 Node[0] Epoch[31] Time cost=33.972
:::MLLOG {"namespace": "", "time_ms": 1679348906934, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37711.8948390787}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-20 16:48:26,933 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,933 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,934 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348906934, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 16:48:26,934 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,934 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,934 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,934 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,935 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:26,935 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:48:28,753 Node[0] Epoch[32] Batch [0-20]	Speed: 37646.04 samples/sec	accuracy=nan
2023-03-20 16:48:30,487 Node[0] Epoch[32] Batch [20-40]	Speed: 37636.88 samples/sec	accuracy=nan
2023-03-20 16:48:32,224 Node[0] Epoch[32] Batch [40-60]	Speed: 37593.87 samples/sec	accuracy=nan
2023-03-20 16:48:33,956 Node[0] Epoch[32] Batch [60-80]	Speed: 37693.81 samples/sec	accuracy=nan
2023-03-20 16:48:35,689 Node[0] Epoch[32] Batch [80-100]	Speed: 37670.68 samples/sec	accuracy=nan
2023-03-20 16:48:37,424 Node[0] Epoch[32] Batch [100-120]	Speed: 37626.53 samples/sec	accuracy=nan
2023-03-20 16:48:39,158 Node[0] Epoch[32] Batch [120-140]	Speed: 37636.80 samples/sec	accuracy=nan
2023-03-20 16:48:40,896 Node[0] Epoch[32] Batch [140-160]	Speed: 37550.70 samples/sec	accuracy=nan
2023-03-20 16:48:42,631 Node[0] Epoch[32] Batch [160-180]	Speed: 37640.69 samples/sec	accuracy=nan
2023-03-20 16:48:44,367 Node[0] Epoch[32] Batch [180-200]	Speed: 37608.48 samples/sec	accuracy=nan
2023-03-20 16:48:46,101 Node[0] Epoch[32] Batch [200-220]	Speed: 37648.08 samples/sec	accuracy=nan
2023-03-20 16:48:47,834 Node[0] Epoch[32] Batch [220-240]	Speed: 37660.25 samples/sec	accuracy=nan
2023-03-20 16:48:49,569 Node[0] Epoch[32] Batch [240-260]	Speed: 37630.89 samples/sec	accuracy=nan
2023-03-20 16:48:51,302 Node[0] Epoch[32] Batch [260-280]	Speed: 37660.75 samples/sec	accuracy=nan
2023-03-20 16:48:53,032 Node[0] Epoch[32] Batch [280-300]	Speed: 37727.34 samples/sec	accuracy=nan
2023-03-20 16:48:54,764 Node[0] Epoch[32] Batch [300-320]	Speed: 37695.83 samples/sec	accuracy=nan
2023-03-20 16:48:56,499 Node[0] Epoch[32] Batch [320-340]	Speed: 37633.96 samples/sec	accuracy=nan
2023-03-20 16:48:58,233 Node[0] Epoch[32] Batch [340-360]	Speed: 37641.00 samples/sec	accuracy=nan
2023-03-20 16:48:59,970 Node[0] Epoch[32] Batch [360-380]	Speed: 37571.09 samples/sec	accuracy=nan
2023-03-20 16:49:00,921 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348940922, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 16:49:00,922 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[0] Epoch[32] Time cost=33.989
:::MLLOG {"namespace": "", "time_ms": 1679348940923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37694.1184869456}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-20 16:49:00,923 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348940923, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 16:49:00,923 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,923 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,924 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,924 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,924 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,925 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:00,926 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:02,744 Node[0] Epoch[33] Batch [0-20]	Speed: 37672.90 samples/sec	accuracy=nan
2023-03-20 16:49:04,475 Node[0] Epoch[33] Batch [20-40]	Speed: 37709.44 samples/sec	accuracy=nan
2023-03-20 16:49:06,210 Node[0] Epoch[33] Batch [40-60]	Speed: 37617.57 samples/sec	accuracy=nan
2023-03-20 16:49:07,944 Node[0] Epoch[33] Batch [60-80]	Speed: 37648.51 samples/sec	accuracy=nan
2023-03-20 16:49:09,678 Node[0] Epoch[33] Batch [80-100]	Speed: 37653.62 samples/sec	accuracy=nan
2023-03-20 16:49:11,412 Node[0] Epoch[33] Batch [100-120]	Speed: 37641.43 samples/sec	accuracy=nan
2023-03-20 16:49:13,143 Node[0] Epoch[33] Batch [120-140]	Speed: 37721.56 samples/sec	accuracy=nan
2023-03-20 16:49:14,877 Node[0] Epoch[33] Batch [140-160]	Speed: 37636.09 samples/sec	accuracy=nan
2023-03-20 16:49:16,609 Node[0] Epoch[33] Batch [160-180]	Speed: 37683.89 samples/sec	accuracy=nan
2023-03-20 16:49:18,342 Node[0] Epoch[33] Batch [180-200]	Speed: 37678.73 samples/sec	accuracy=nan
2023-03-20 16:49:20,075 Node[0] Epoch[33] Batch [200-220]	Speed: 37662.08 samples/sec	accuracy=nan
2023-03-20 16:49:21,808 Node[0] Epoch[33] Batch [220-240]	Speed: 37669.72 samples/sec	accuracy=nan
2023-03-20 16:49:23,539 Node[0] Epoch[33] Batch [240-260]	Speed: 37717.19 samples/sec	accuracy=nan
2023-03-20 16:49:25,273 Node[0] Epoch[33] Batch [260-280]	Speed: 37639.10 samples/sec	accuracy=nan
2023-03-20 16:49:27,005 Node[0] Epoch[33] Batch [280-300]	Speed: 37697.41 samples/sec	accuracy=nan
2023-03-20 16:49:28,738 Node[0] Epoch[33] Batch [300-320]	Speed: 37679.50 samples/sec	accuracy=nan
2023-03-20 16:49:30,470 Node[0] Epoch[33] Batch [320-340]	Speed: 37689.50 samples/sec	accuracy=nan
2023-03-20 16:49:32,204 Node[0] Epoch[33] Batch [340-360]	Speed: 37645.90 samples/sec	accuracy=nan
2023-03-20 16:49:33,936 Node[0] Epoch[33] Batch [360-380]	Speed: 37692.06 samples/sec	accuracy=nan
2023-03-20 16:49:34,974 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348974974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 16:49:34,975 Node[0] Epoch[33] Time cost=34.052
:::MLLOG {"namespace": "", "time_ms": 1679348974975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37624.239582101254}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 16:49:34,975 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679348974975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 16:49:34,975 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,975 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,976 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,976 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,976 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,977 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,977 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:34,977 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:49:36,794 Node[0] Epoch[34] Batch [0-20]	Speed: 37687.31 samples/sec	accuracy=nan
2023-03-20 16:49:38,529 Node[0] Epoch[34] Batch [20-40]	Speed: 37625.46 samples/sec	accuracy=nan
2023-03-20 16:49:40,266 Node[0] Epoch[34] Batch [40-60]	Speed: 37576.50 samples/sec	accuracy=nan
2023-03-20 16:49:42,000 Node[0] Epoch[34] Batch [60-80]	Speed: 37641.99 samples/sec	accuracy=nan
2023-03-20 16:49:43,732 Node[0] Epoch[34] Batch [80-100]	Speed: 37684.52 samples/sec	accuracy=nan
2023-03-20 16:49:45,465 Node[0] Epoch[34] Batch [100-120]	Speed: 37676.89 samples/sec	accuracy=nan
2023-03-20 16:49:47,198 Node[0] Epoch[34] Batch [120-140]	Speed: 37678.54 samples/sec	accuracy=nan
2023-03-20 16:49:48,930 Node[0] Epoch[34] Batch [140-160]	Speed: 37683.97 samples/sec	accuracy=nan
2023-03-20 16:49:50,663 Node[0] Epoch[34] Batch [160-180]	Speed: 37661.23 samples/sec	accuracy=nan
2023-03-20 16:49:52,394 Node[0] Epoch[34] Batch [180-200]	Speed: 37712.87 samples/sec	accuracy=nan
2023-03-20 16:49:54,127 Node[0] Epoch[34] Batch [200-220]	Speed: 37670.36 samples/sec	accuracy=nan
2023-03-20 16:49:55,863 Node[0] Epoch[34] Batch [220-240]	Speed: 37607.25 samples/sec	accuracy=nan
2023-03-20 16:49:57,595 Node[0] Epoch[34] Batch [240-260]	Speed: 37690.21 samples/sec	accuracy=nan
2023-03-20 16:49:59,326 Node[0] Epoch[34] Batch [260-280]	Speed: 37711.28 samples/sec	accuracy=nan
2023-03-20 16:50:01,060 Node[0] Epoch[34] Batch [280-300]	Speed: 37652.62 samples/sec	accuracy=nan
2023-03-20 16:50:02,794 Node[0] Epoch[34] Batch [300-320]	Speed: 37649.87 samples/sec	accuracy=nan
2023-03-20 16:50:04,528 Node[0] Epoch[34] Batch [320-340]	Speed: 37632.76 samples/sec	accuracy=nan
2023-03-20 16:50:06,262 Node[0] Epoch[34] Batch [340-360]	Speed: 37642.47 samples/sec	accuracy=nan
2023-03-20 16:50:07,997 Node[0] Epoch[34] Batch [360-380]	Speed: 37643.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679349009034, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 16:50:09,035 Node[0] Epoch[34] Time cost=34.060
:::MLLOG {"namespace": "", "time_ms": 1679349009035, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37615.44219447447}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679349009117, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 16:50:09,892 Node[0] Epoch[34] Validation-accuracy=0.766720
2023-03-20 16:50:09,892 Node[0] Epoch[34] Validation-correct-count=2396.000000
2023-03-20 16:50:09,892 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679349009911, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679349009911, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75996, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679349009912, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679349009912, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1363
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:49 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:49 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349032
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:32 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:32 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:32 PM
+ result=1362
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1362,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:33 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:33 PM
+ result=1364
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:33 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:33 PM
+ result=1363
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:33 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:33 PM
+ result=1363
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1363,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:33 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:33 PM
+ result=1364
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349033
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:33 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:33 PM
+ result=1364
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:49 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679349034
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:50:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:50:34 PM'
ENDING TIMING RUN AT 2023-03-20 04:50:34 PM
+ result=1364
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1364,root,2023-03-20 04:27:50 PM'
+ export PROFILE=0
+ PROFILE=0
