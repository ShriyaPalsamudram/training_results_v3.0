+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node043 node044 '
+ echo 'hosts=node040 node041 node043 node044 '
hosts=node040 node041 node043 node044 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346164590, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346164627, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346164628, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346164629, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346164631, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346177802, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346183888, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346183924, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346183925, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346183927, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346183928, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346194121, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346199031, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346199067, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346199068, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346199070, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346199071, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346210466, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346215396, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346215431, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346215433, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346215434, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346215435, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679346226904, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=27912
+ SEED=27912
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+++ export DGXHT=1
+++ DGXHT=1
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export LARSETA=0.001
++ LARSETA=0.001
++ MOM=0.9
+++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+++ dirname ./config_4xR750xax4A100.sh
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export LR=10.5
++ LR=10.5
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MOM=0.9
++ MOM=0.9
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679346228
+ start=1679346228
+ start=1679346228
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679346228
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ start_fmt='2023-03-20 04:03:48 PM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ readonly global_rank=0
+ global_rank=0
+ BATCHSIZE=204
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ WARMUP_EPOCHS=2
+ OPTIMIZER=sgdwfastlars
+ LARSETA=0.001
+ BATCHSIZE=204
++ date '+%Y-%m-%d %r'
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ LABELSMOOTHING=0.1
+ KVSTORE=horovod
+ SEED=27912
+ LR=10.5
+ MOM=0.9
+ SLURM_NTASKS_PER_NODE=4
+ EVAL_OFFSET=2
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ EVAL_PERIOD=4
+ WARMUP_EPOCHS=2
+ BATCHSIZE=204
+ DALI_PREFETCH_QUEUE=5
+ LARSETA=0.001
+ DALI_NVJPEG_MEMPADDING=256
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_HW_DECODER_LOAD=0
+ DALI_THREADS=6
+ KVSTORE=horovod
+ WD=5.0e-05
+ LR=10.5
+ MOM=0.9
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ LABELSMOOTHING=0.1
+ LRSCHED=pow2
+ DALI_PREALLOCATE_WIDTH=5980
+ SEED=27912
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_HEIGHT=6430
+ WARMUP_EPOCHS=2
+ EVAL_PERIOD=4
+ LARSETA=0.001
+ DALI_PREFETCH_QUEUE=5
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_HW_DECODER_LOAD=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CROP_BUFFER_HINT=165581
+ LABELSMOOTHING=0.1
+ DALI_CACHE_SIZE=0
+ SEED=27912
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_ROI_DECODE=1
+ DALI_DONT_USE_MMAP=0
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_WIDTH=5980
+ NUMEPOCHS=37
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREFETCH_QUEUE=5
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_TMP_BUFFER_HINT=355568328
+ BN_GROUP=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_THREADS=6
+ PROFILE=0
+ DALI_CACHE_SIZE=0
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE_EXCEL=0
+ DALI_ROI_DECODE=1
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_PREALLOCATE_WIDTH=5980
+ NUMEXAMPLES=
+ DALI_PREALLOCATE_HEIGHT=6430
+ PROFILE_ALL_LOCAL_RANKS=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ THR=0.759
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE=0
+ DATAROOT=/data
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_EXCEL=0
+ NODALI=0
+ echo 'running benchmark'
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEXAMPLES=
+ export NGPUS=4
+ NGPUS=4
+ PROFILE_ALL_LOCAL_RANKS=0
running benchmark
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ PROFILE=0
+ NCCL_DEBUG=WARN
+ PROFILE_EXCEL=0
+ [[ 0 == 1 ]]
+ [[ 0 -ge 1 ]]
+ NODALI=0
+ DATAROOT=/data
+ NUMEXAMPLES=
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-20 04:03:48 PM'
++ tr '\n' ,
++ sed 's/,$//'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
++ sed 's/,$//'
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+++ dirname ./config_4xR750xax4A100.sh
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ sed 's/^config_//'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
+ start=1679346228
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679346228
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679346228
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679346228
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679346228
+ start=1679346228
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:03:48 PM'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=1
+ global_rank=1
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679346228
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+++ sed 's/^config_//'
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679346228
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679346228
+ start=1679346228
+ start=1679346228
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
+ start_fmt='2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ readonly global_rank=0
+ global_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly global_rank=0
+ global_rank=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 -ge 1 ]]
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679346228
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 04:03:48 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 04:03:48 PM'
STARTING TIMING RUN AT 2023-03-20 04:03:48 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=27912
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 27912 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node040:1178810] MCW rank 1 is not bound (or bound to all available processors)
[node040:1178811] MCW rank 0 is not bound (or bound to all available processors)
[node040:1178812] MCW rank 2 is not bound (or bound to all available processors)
[node040:1178813] MCW rank 3 is not bound (or bound to all available processors)
[node041:911038] MCW rank 4 is not bound (or bound to all available processors)
[node041:911037] MCW rank 6 is not bound (or bound to all available processors)
[node041:911039] MCW rank 5 is not bound (or bound to all available processors)
[node041:911036] MCW rank 7 is not bound (or bound to all available processors)
[node044:951480] MCW rank 14 is not bound (or bound to all available processors)
[node044:951482] MCW rank 15 is not bound (or bound to all available processors)
[node044:951490] MCW rank 12 is not bound (or bound to all available processors)
[node044:951502] MCW rank 13 is not bound (or bound to all available processors)
[node043:1055794] MCW rank 10 is not bound (or bound to all available processors)
[node043:1055812] MCW rank 11 is not bound (or bound to all available processors)
[node043:1055795] MCW rank 8 is not bound (or bound to all available processors)
[node043:1055806] MCW rank 9 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679346232890, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679346240787, "event_type": "POINT_IN_TIME", "key": "seed", "value": 27912, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[16:04:00] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679346242652, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[16:04:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679346247310, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247311, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247311, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247312, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247312, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247312, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247313, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247313, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247313, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247313, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247314, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247314, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247314, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247314, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247314, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247315, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247315, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247315, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247315, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247316, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247316, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247316, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247316, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247317, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247317, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247317, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247317, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247318, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247318, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247318, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247318, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247319, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247319, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247319, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247319, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247319, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247320, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247320, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247320, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247320, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247321, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247321, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247321, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247321, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679346247349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[16:04:07] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,967 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59450, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,968 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48475, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,968 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20892, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,968 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41989, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,968 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51363, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,969 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26879, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,969 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13329, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,969 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9939, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,969 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16289, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,969 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28922, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679346249969, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679346249971, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679346249972, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,973 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62359, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,974 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15746, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,977 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49516, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,977 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62934, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,977 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53692, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 16:04:09,979 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7848, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679346343283, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679346343284, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679346343284, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679346343848, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679346343927, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346343927, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 16:05:45,671 Node[0] Epoch[0] Batch [0-20]	Speed: 37811.56 samples/sec	accuracy=nan
2023-03-20 16:05:47,405 Node[0] Epoch[0] Batch [20-40]	Speed: 37642.63 samples/sec	accuracy=nan
2023-03-20 16:05:49,134 Node[0] Epoch[0] Batch [40-60]	Speed: 37772.35 samples/sec	accuracy=nan
2023-03-20 16:05:50,864 Node[0] Epoch[0] Batch [60-80]	Speed: 37726.05 samples/sec	accuracy=nan
2023-03-20 16:05:52,593 Node[0] Epoch[0] Batch [80-100]	Speed: 37752.53 samples/sec	accuracy=nan
2023-03-20 16:05:54,324 Node[0] Epoch[0] Batch [100-120]	Speed: 37707.10 samples/sec	accuracy=nan
2023-03-20 16:05:56,055 Node[0] Epoch[0] Batch [120-140]	Speed: 37720.64 samples/sec	accuracy=nan
2023-03-20 16:05:57,790 Node[0] Epoch[0] Batch [140-160]	Speed: 37617.64 samples/sec	accuracy=nan
2023-03-20 16:05:59,523 Node[0] Epoch[0] Batch [160-180]	Speed: 37676.10 samples/sec	accuracy=nan
2023-03-20 16:06:01,256 Node[0] Epoch[0] Batch [180-200]	Speed: 37658.52 samples/sec	accuracy=nan
2023-03-20 16:06:02,988 Node[0] Epoch[0] Batch [200-220]	Speed: 37695.24 samples/sec	accuracy=nan
2023-03-20 16:06:04,724 Node[0] Epoch[0] Batch [220-240]	Speed: 37599.32 samples/sec	accuracy=nan
2023-03-20 16:06:06,458 Node[0] Epoch[0] Batch [240-260]	Speed: 37661.26 samples/sec	accuracy=nan
2023-03-20 16:06:08,192 Node[0] Epoch[0] Batch [260-280]	Speed: 37634.54 samples/sec	accuracy=nan
2023-03-20 16:06:09,925 Node[0] Epoch[0] Batch [280-300]	Speed: 37670.48 samples/sec	accuracy=nan
2023-03-20 16:06:11,663 Node[0] Epoch[0] Batch [300-320]	Speed: 37553.38 samples/sec	accuracy=nan
2023-03-20 16:06:13,403 Node[0] Epoch[0] Batch [320-340]	Speed: 37516.88 samples/sec	accuracy=nan
2023-03-20 16:06:15,147 Node[0] Epoch[0] Batch [340-360]	Speed: 37447.71 samples/sec	accuracy=nan
2023-03-20 16:06:16,884 Node[0] Epoch[0] Batch [360-380]	Speed: 37578.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346377926, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 16:06:17,926 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,926 Node[0] Epoch[0] Time cost=33.999
:::MLLOG {"namespace": "", "time_ms": 1679346377926, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37682.54977305424}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 16:06:17,927 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,927 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,927 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,927 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346377928, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 16:06:17,927 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,928 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,929 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,929 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:17,929 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:06:19,752 Node[0] Epoch[1] Batch [0-20]	Speed: 37537.30 samples/sec	accuracy=nan
2023-03-20 16:06:21,494 Node[0] Epoch[1] Batch [20-40]	Speed: 37471.76 samples/sec	accuracy=nan
2023-03-20 16:06:23,234 Node[0] Epoch[1] Batch [40-60]	Speed: 37523.51 samples/sec	accuracy=nan
2023-03-20 16:06:24,973 Node[0] Epoch[1] Batch [60-80]	Speed: 37526.66 samples/sec	accuracy=nan
2023-03-20 16:06:26,713 Node[0] Epoch[1] Batch [80-100]	Speed: 37525.19 samples/sec	accuracy=nan
2023-03-20 16:06:28,452 Node[0] Epoch[1] Batch [100-120]	Speed: 37536.96 samples/sec	accuracy=nan
2023-03-20 16:06:30,193 Node[0] Epoch[1] Batch [120-140]	Speed: 37497.98 samples/sec	accuracy=nan
2023-03-20 16:06:31,938 Node[0] Epoch[1] Batch [140-160]	Speed: 37406.15 samples/sec	accuracy=nan
2023-03-20 16:06:33,679 Node[0] Epoch[1] Batch [160-180]	Speed: 37508.70 samples/sec	accuracy=nan
2023-03-20 16:06:35,420 Node[0] Epoch[1] Batch [180-200]	Speed: 37488.62 samples/sec	accuracy=nan
2023-03-20 16:06:37,160 Node[0] Epoch[1] Batch [200-220]	Speed: 37508.90 samples/sec	accuracy=nan
2023-03-20 16:06:41,292 Node[0] Epoch[1] Batch [220-240]	Speed: 15801.18 samples/sec	accuracy=nan
2023-03-20 16:06:45,293 Node[0] Epoch[1] Batch [240-260]	Speed: 16315.66 samples/sec	accuracy=nan
2023-03-20 16:06:51,811 Node[0] Epoch[1] Batch [260-280]	Speed: 10014.80 samples/sec	accuracy=nan
2023-03-20 16:06:53,548 Node[0] Epoch[1] Batch [280-300]	Speed: 37589.35 samples/sec	accuracy=nan
2023-03-20 16:06:55,286 Node[0] Epoch[1] Batch [300-320]	Speed: 37556.57 samples/sec	accuracy=nan
2023-03-20 16:06:59,389 Node[0] Epoch[1] Batch [320-340]	Speed: 15911.35 samples/sec	accuracy=nan
2023-03-20 16:07:01,128 Node[0] Epoch[1] Batch [340-360]	Speed: 37520.64 samples/sec	accuracy=nan
2023-03-20 16:07:02,866 Node[0] Epoch[1] Batch [360-380]	Speed: 37564.71 samples/sec	accuracy=nan
2023-03-20 16:07:03,906 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,907 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,907 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346423906, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 16:07:03,908 Node[0] Epoch[1] Time cost=45.980
:::MLLOG {"namespace": "", "time_ms": 1679346423908, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 27863.698393830786}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-20 16:07:03,907 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346423908, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 16:07:03,908 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,908 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,909 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,909 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,909 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:03,910 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:05,733 Node[0] Epoch[2] Batch [0-20]	Speed: 37540.06 samples/sec	accuracy=nan
2023-03-20 16:07:07,472 Node[0] Epoch[2] Batch [20-40]	Speed: 37539.56 samples/sec	accuracy=nan
2023-03-20 16:07:09,214 Node[0] Epoch[2] Batch [40-60]	Speed: 37489.69 samples/sec	accuracy=nan
2023-03-20 16:07:10,957 Node[0] Epoch[2] Batch [60-80]	Speed: 37433.76 samples/sec	accuracy=nan
2023-03-20 16:07:12,696 Node[0] Epoch[2] Batch [80-100]	Speed: 37539.05 samples/sec	accuracy=nan
2023-03-20 16:07:14,439 Node[0] Epoch[2] Batch [100-120]	Speed: 37470.47 samples/sec	accuracy=nan
2023-03-20 16:07:20,894 Node[0] Epoch[2] Batch [120-140]	Speed: 10113.24 samples/sec	accuracy=nan
2023-03-20 16:07:27,093 Node[0] Epoch[2] Batch [140-160]	Speed: 10529.78 samples/sec	accuracy=nan
2023-03-20 16:07:28,829 Node[0] Epoch[2] Batch [160-180]	Speed: 37600.85 samples/sec	accuracy=nan
2023-03-20 16:07:35,420 Node[0] Epoch[2] Batch [180-200]	Speed: 9904.65 samples/sec	accuracy=nan
2023-03-20 16:07:37,153 Node[0] Epoch[2] Batch [200-220]	Speed: 37670.88 samples/sec	accuracy=nan
2023-03-20 16:07:43,385 Node[0] Epoch[2] Batch [220-240]	Speed: 10474.52 samples/sec	accuracy=nan
2023-03-20 16:07:45,119 Node[0] Epoch[2] Batch [240-260]	Speed: 37642.27 samples/sec	accuracy=nan
2023-03-20 16:07:46,853 Node[0] Epoch[2] Batch [260-280]	Speed: 37665.91 samples/sec	accuracy=nan
2023-03-20 16:07:48,589 Node[0] Epoch[2] Batch [280-300]	Speed: 37602.44 samples/sec	accuracy=nan
2023-03-20 16:07:50,324 Node[0] Epoch[2] Batch [300-320]	Speed: 37616.95 samples/sec	accuracy=nan
2023-03-20 16:07:52,059 Node[0] Epoch[2] Batch [320-340]	Speed: 37614.37 samples/sec	accuracy=nan
2023-03-20 16:07:53,798 Node[0] Epoch[2] Batch [340-360]	Speed: 37540.51 samples/sec	accuracy=nan
2023-03-20 16:07:55,535 Node[0] Epoch[2] Batch [360-380]	Speed: 37581.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346476488, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 16:07:56,489 Node[0] Epoch[2] Time cost=52.581
:::MLLOG {"namespace": "", "time_ms": 1679346476489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 24365.67612166912}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 16:07:56,571 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,571 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346476571, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 16:07:56,572 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,572 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,572 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,572 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,573 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,574 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,574 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,574 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:56,574 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,255 Node[0] Epoch[2] Validation-accuracy=0.322880
2023-03-20 16:07:57,255 Node[0] Epoch[2] Validation-correct-count=1009.000000
2023-03-20 16:07:57,255 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679346477369, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 16:07:57,369 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346477369, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32594, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679346477369, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 16:07:57,369 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346477369, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 16:07:57,369 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346477369, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 16:07:57,369 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:57,369 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:07:59,118 Node[0] Epoch[3] Batch [0-20]	Speed: 37572.47 samples/sec	accuracy=nan
2023-03-20 16:08:00,857 Node[0] Epoch[3] Batch [20-40]	Speed: 37531.59 samples/sec	accuracy=nan
2023-03-20 16:08:02,602 Node[0] Epoch[3] Batch [40-60]	Speed: 37426.99 samples/sec	accuracy=nan
2023-03-20 16:08:06,768 Node[0] Epoch[3] Batch [60-80]	Speed: 15668.18 samples/sec	accuracy=nan
2023-03-20 16:08:08,506 Node[0] Epoch[3] Batch [80-100]	Speed: 37571.77 samples/sec	accuracy=nan
2023-03-20 16:08:10,246 Node[0] Epoch[3] Batch [100-120]	Speed: 37496.88 samples/sec	accuracy=nan
2023-03-20 16:08:11,984 Node[0] Epoch[3] Batch [120-140]	Speed: 37571.25 samples/sec	accuracy=nan
2023-03-20 16:08:13,725 Node[0] Epoch[3] Batch [140-160]	Speed: 37495.44 samples/sec	accuracy=nan
2023-03-20 16:08:15,466 Node[0] Epoch[3] Batch [160-180]	Speed: 37503.25 samples/sec	accuracy=nan
2023-03-20 16:08:17,208 Node[0] Epoch[3] Batch [180-200]	Speed: 37462.21 samples/sec	accuracy=nan
2023-03-20 16:08:18,949 Node[0] Epoch[3] Batch [200-220]	Speed: 37496.67 samples/sec	accuracy=nan
2023-03-20 16:08:20,688 Node[0] Epoch[3] Batch [220-240]	Speed: 37535.82 samples/sec	accuracy=nan
2023-03-20 16:08:22,432 Node[0] Epoch[3] Batch [240-260]	Speed: 37444.86 samples/sec	accuracy=nan
2023-03-20 16:08:24,171 Node[0] Epoch[3] Batch [260-280]	Speed: 37532.35 samples/sec	accuracy=nan
2023-03-20 16:08:25,913 Node[0] Epoch[3] Batch [280-300]	Speed: 37471.89 samples/sec	accuracy=nan
2023-03-20 16:08:27,653 Node[0] Epoch[3] Batch [300-320]	Speed: 37514.65 samples/sec	accuracy=nan
2023-03-20 16:08:29,393 Node[0] Epoch[3] Batch [320-340]	Speed: 37513.77 samples/sec	accuracy=nan
2023-03-20 16:08:31,137 Node[0] Epoch[3] Batch [340-360]	Speed: 37433.51 samples/sec	accuracy=nan
2023-03-20 16:08:32,879 Node[0] Epoch[3] Batch [360-380]	Speed: 37487.91 samples/sec	accuracy=nan
2023-03-20 16:08:33,922 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,922 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,922 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346513922, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 16:08:33,923 Node[0] Epoch[3] Time cost=36.553
:::MLLOG {"namespace": "", "time_ms": 1679346513923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 35049.34464091758}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-20 16:08:33,922 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346513923, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 16:08:33,923 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,923 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,923 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,923 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,923 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,924 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,924 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,924 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,924 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,924 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,925 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:33,925 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:08:35,756 Node[0] Epoch[4] Batch [0-20]	Speed: 37382.31 samples/sec	accuracy=nan
2023-03-20 16:08:37,497 Node[0] Epoch[4] Batch [20-40]	Speed: 37500.97 samples/sec	accuracy=nan
2023-03-20 16:08:39,238 Node[0] Epoch[4] Batch [40-60]	Speed: 37504.09 samples/sec	accuracy=nan
2023-03-20 16:08:40,977 Node[0] Epoch[4] Batch [60-80]	Speed: 37531.69 samples/sec	accuracy=nan
2023-03-20 16:08:42,716 Node[0] Epoch[4] Batch [80-100]	Speed: 37534.75 samples/sec	accuracy=nan
2023-03-20 16:08:44,461 Node[0] Epoch[4] Batch [100-120]	Speed: 37422.22 samples/sec	accuracy=nan
2023-03-20 16:08:46,201 Node[0] Epoch[4] Batch [120-140]	Speed: 37506.05 samples/sec	accuracy=nan
2023-03-20 16:08:47,941 Node[0] Epoch[4] Batch [140-160]	Speed: 37523.44 samples/sec	accuracy=nan
2023-03-20 16:08:49,684 Node[0] Epoch[4] Batch [160-180]	Speed: 37451.10 samples/sec	accuracy=nan
2023-03-20 16:08:51,426 Node[0] Epoch[4] Batch [180-200]	Speed: 37471.66 samples/sec	accuracy=nan
2023-03-20 16:08:53,171 Node[0] Epoch[4] Batch [200-220]	Speed: 37414.90 samples/sec	accuracy=nan
2023-03-20 16:08:54,913 Node[0] Epoch[4] Batch [220-240]	Speed: 37472.41 samples/sec	accuracy=nan
2023-03-20 16:08:56,656 Node[0] Epoch[4] Batch [240-260]	Speed: 37440.59 samples/sec	accuracy=nan
2023-03-20 16:08:58,398 Node[0] Epoch[4] Batch [260-280]	Speed: 37486.00 samples/sec	accuracy=nan
2023-03-20 16:09:00,138 Node[0] Epoch[4] Batch [280-300]	Speed: 37516.80 samples/sec	accuracy=nan
2023-03-20 16:09:01,881 Node[0] Epoch[4] Batch [300-320]	Speed: 37438.78 samples/sec	accuracy=nan
2023-03-20 16:09:03,625 Node[0] Epoch[4] Batch [320-340]	Speed: 37437.94 samples/sec	accuracy=nan
2023-03-20 16:09:05,366 Node[0] Epoch[4] Batch [340-360]	Speed: 37489.48 samples/sec	accuracy=nan
2023-03-20 16:09:07,106 Node[0] Epoch[4] Batch [360-380]	Speed: 37531.89 samples/sec	accuracy=nan
2023-03-20 16:09:08,062 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,062 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,062 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346548062, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 16:09:08,063 Node[0] Epoch[4] Time cost=34.140
:::MLLOG {"namespace": "", "time_ms": 1679346548063, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37527.247479839316}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679346548063, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 16:09:08,063 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,063 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,063 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,063 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,063 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,064 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,064 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,064 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,064 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,064 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,065 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,065 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:08,066 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:09,889 Node[0] Epoch[5] Batch [0-20]	Speed: 37573.16 samples/sec	accuracy=nan
2023-03-20 16:09:11,632 Node[0] Epoch[5] Batch [20-40]	Speed: 37456.38 samples/sec	accuracy=nan
2023-03-20 16:09:13,373 Node[0] Epoch[5] Batch [40-60]	Speed: 37507.09 samples/sec	accuracy=nan
2023-03-20 16:09:15,114 Node[0] Epoch[5] Batch [60-80]	Speed: 37478.04 samples/sec	accuracy=nan
2023-03-20 16:09:16,855 Node[0] Epoch[5] Batch [80-100]	Speed: 37509.14 samples/sec	accuracy=nan
2023-03-20 16:09:18,595 Node[0] Epoch[5] Batch [100-120]	Speed: 37504.99 samples/sec	accuracy=nan
2023-03-20 16:09:20,335 Node[0] Epoch[5] Batch [120-140]	Speed: 37524.20 samples/sec	accuracy=nan
2023-03-20 16:09:22,074 Node[0] Epoch[5] Batch [140-160]	Speed: 37546.13 samples/sec	accuracy=nan
2023-03-20 16:09:23,816 Node[0] Epoch[5] Batch [160-180]	Speed: 37466.38 samples/sec	accuracy=nan
2023-03-20 16:09:25,559 Node[0] Epoch[5] Batch [180-200]	Speed: 37458.16 samples/sec	accuracy=nan
2023-03-20 16:09:27,297 Node[0] Epoch[5] Batch [200-220]	Speed: 37551.34 samples/sec	accuracy=nan
2023-03-20 16:09:29,037 Node[0] Epoch[5] Batch [220-240]	Speed: 37532.27 samples/sec	accuracy=nan
2023-03-20 16:09:30,775 Node[0] Epoch[5] Batch [240-260]	Speed: 37542.16 samples/sec	accuracy=nan
2023-03-20 16:09:32,516 Node[0] Epoch[5] Batch [260-280]	Speed: 37500.33 samples/sec	accuracy=nan
2023-03-20 16:09:34,253 Node[0] Epoch[5] Batch [280-300]	Speed: 37577.35 samples/sec	accuracy=nan
2023-03-20 16:09:35,991 Node[0] Epoch[5] Batch [300-320]	Speed: 37565.21 samples/sec	accuracy=nan
2023-03-20 16:09:37,731 Node[0] Epoch[5] Batch [320-340]	Speed: 37514.08 samples/sec	accuracy=nan
2023-03-20 16:09:39,470 Node[0] Epoch[5] Batch [340-360]	Speed: 37545.15 samples/sec	accuracy=nan
2023-03-20 16:09:41,206 Node[0] Epoch[5] Batch [360-380]	Speed: 37602.34 samples/sec	accuracy=nan
2023-03-20 16:09:42,246 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,246 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,246 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346582246, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 16:09:42,247 Node[0] Epoch[5] Time cost=34.184
2023-03-20 16:09:42,247 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346582247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37478.93675485593}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-20 16:09:42,247 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346582247, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 16:09:42,247 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,247 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,247 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,248 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,249 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:42,250 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:09:44,073 Node[0] Epoch[6] Batch [0-20]	Speed: 37534.61 samples/sec	accuracy=nan
2023-03-20 16:09:45,810 Node[0] Epoch[6] Batch [20-40]	Speed: 37602.17 samples/sec	accuracy=nan
2023-03-20 16:09:47,548 Node[0] Epoch[6] Batch [40-60]	Speed: 37537.90 samples/sec	accuracy=nan
2023-03-20 16:09:49,284 Node[0] Epoch[6] Batch [60-80]	Speed: 37615.47 samples/sec	accuracy=nan
2023-03-20 16:09:51,020 Node[0] Epoch[6] Batch [80-100]	Speed: 37593.77 samples/sec	accuracy=nan
2023-03-20 16:09:52,759 Node[0] Epoch[6] Batch [100-120]	Speed: 37556.02 samples/sec	accuracy=nan
2023-03-20 16:09:54,498 Node[0] Epoch[6] Batch [120-140]	Speed: 37541.93 samples/sec	accuracy=nan
2023-03-20 16:09:56,235 Node[0] Epoch[6] Batch [140-160]	Speed: 37577.68 samples/sec	accuracy=nan
2023-03-20 16:09:57,973 Node[0] Epoch[6] Batch [160-180]	Speed: 37560.82 samples/sec	accuracy=nan
2023-03-20 16:09:59,708 Node[0] Epoch[6] Batch [180-200]	Speed: 37610.41 samples/sec	accuracy=nan
2023-03-20 16:10:01,444 Node[0] Epoch[6] Batch [200-220]	Speed: 37603.44 samples/sec	accuracy=nan
2023-03-20 16:10:03,184 Node[0] Epoch[6] Batch [220-240]	Speed: 37525.23 samples/sec	accuracy=nan
2023-03-20 16:10:04,920 Node[0] Epoch[6] Batch [240-260]	Speed: 37605.16 samples/sec	accuracy=nan
2023-03-20 16:10:06,655 Node[0] Epoch[6] Batch [260-280]	Speed: 37631.14 samples/sec	accuracy=nan
2023-03-20 16:10:08,390 Node[0] Epoch[6] Batch [280-300]	Speed: 37627.06 samples/sec	accuracy=nan
2023-03-20 16:10:10,126 Node[0] Epoch[6] Batch [300-320]	Speed: 37585.85 samples/sec	accuracy=nan
2023-03-20 16:10:11,862 Node[0] Epoch[6] Batch [320-340]	Speed: 37603.41 samples/sec	accuracy=nan
2023-03-20 16:10:13,599 Node[0] Epoch[6] Batch [340-360]	Speed: 37592.25 samples/sec	accuracy=nan
2023-03-20 16:10:15,338 Node[0] Epoch[6] Batch [360-380]	Speed: 37533.61 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346616291, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 16:10:16,292 Node[0] Epoch[6] Time cost=34.045
:::MLLOG {"namespace": "", "time_ms": 1679346616293, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37631.570500444344}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679346616375, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 16:10:17,112 Node[0] Epoch[6] Validation-accuracy=0.447680
2023-03-20 16:10:17,113 Node[0] Epoch[6] Validation-correct-count=1399.000000
2023-03-20 16:10:17,113 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679346617216, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679346617216, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4453, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679346617216, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679346617216, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 16:10:17,216 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346617216, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 16:10:17,216 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:17,216 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:18,960 Node[0] Epoch[7] Batch [0-20]	Speed: 37608.36 samples/sec	accuracy=nan
2023-03-20 16:10:20,694 Node[0] Epoch[7] Batch [20-40]	Speed: 37665.42 samples/sec	accuracy=nan
2023-03-20 16:10:22,426 Node[0] Epoch[7] Batch [40-60]	Speed: 37684.63 samples/sec	accuracy=nan
2023-03-20 16:10:24,160 Node[0] Epoch[7] Batch [60-80]	Speed: 37648.71 samples/sec	accuracy=nan
2023-03-20 16:10:25,893 Node[0] Epoch[7] Batch [80-100]	Speed: 37663.49 samples/sec	accuracy=nan
2023-03-20 16:10:27,623 Node[0] Epoch[7] Batch [100-120]	Speed: 37737.09 samples/sec	accuracy=nan
2023-03-20 16:10:29,358 Node[0] Epoch[7] Batch [120-140]	Speed: 37614.56 samples/sec	accuracy=nan
2023-03-20 16:10:31,094 Node[0] Epoch[7] Batch [140-160]	Speed: 37622.33 samples/sec	accuracy=nan
2023-03-20 16:10:32,829 Node[0] Epoch[7] Batch [160-180]	Speed: 37612.96 samples/sec	accuracy=nan
2023-03-20 16:10:34,562 Node[0] Epoch[7] Batch [180-200]	Speed: 37660.67 samples/sec	accuracy=nan
2023-03-20 16:10:36,297 Node[0] Epoch[7] Batch [200-220]	Speed: 37643.03 samples/sec	accuracy=nan
2023-03-20 16:10:38,030 Node[0] Epoch[7] Batch [220-240]	Speed: 37658.46 samples/sec	accuracy=nan
2023-03-20 16:10:39,763 Node[0] Epoch[7] Batch [240-260]	Speed: 37671.50 samples/sec	accuracy=nan
2023-03-20 16:10:41,497 Node[0] Epoch[7] Batch [260-280]	Speed: 37649.51 samples/sec	accuracy=nan
2023-03-20 16:10:43,231 Node[0] Epoch[7] Batch [280-300]	Speed: 37650.05 samples/sec	accuracy=nan
2023-03-20 16:10:44,962 Node[0] Epoch[7] Batch [300-320]	Speed: 37704.04 samples/sec	accuracy=nan
2023-03-20 16:10:46,693 Node[0] Epoch[7] Batch [320-340]	Speed: 37724.96 samples/sec	accuracy=nan
2023-03-20 16:10:48,427 Node[0] Epoch[7] Batch [340-360]	Speed: 37631.23 samples/sec	accuracy=nan
2023-03-20 16:10:50,163 Node[0] Epoch[7] Batch [360-380]	Speed: 37608.76 samples/sec	accuracy=nan
2023-03-20 16:10:51,200 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,200 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,201 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,201 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346651200, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 16:10:51,201 Node[0] Epoch[7] Time cost=33.985
:::MLLOG {"namespace": "", "time_ms": 1679346651201, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37698.11285686913}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-20 16:10:51,201 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,201 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,201 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346651202, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 16:10:51,202 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,202 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,202 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,202 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,202 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,202 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,203 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,203 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:51,204 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:10:53,021 Node[0] Epoch[8] Batch [0-20]	Speed: 37659.51 samples/sec	accuracy=nan
2023-03-20 16:10:54,753 Node[0] Epoch[8] Batch [20-40]	Speed: 37690.63 samples/sec	accuracy=nan
2023-03-20 16:10:56,486 Node[0] Epoch[8] Batch [40-60]	Speed: 37672.30 samples/sec	accuracy=nan
2023-03-20 16:10:58,217 Node[0] Epoch[8] Batch [60-80]	Speed: 37717.22 samples/sec	accuracy=nan
2023-03-20 16:10:59,951 Node[0] Epoch[8] Batch [80-100]	Speed: 37647.71 samples/sec	accuracy=nan
2023-03-20 16:11:01,685 Node[0] Epoch[8] Batch [100-120]	Speed: 37649.50 samples/sec	accuracy=nan
2023-03-20 16:11:03,423 Node[0] Epoch[8] Batch [120-140]	Speed: 37562.67 samples/sec	accuracy=nan
2023-03-20 16:11:05,155 Node[0] Epoch[8] Batch [140-160]	Speed: 37671.89 samples/sec	accuracy=nan
2023-03-20 16:11:06,888 Node[0] Epoch[8] Batch [160-180]	Speed: 37675.12 samples/sec	accuracy=nan
2023-03-20 16:11:08,621 Node[0] Epoch[8] Batch [180-200]	Speed: 37667.71 samples/sec	accuracy=nan
2023-03-20 16:11:10,355 Node[0] Epoch[8] Batch [200-220]	Speed: 37656.44 samples/sec	accuracy=nan
2023-03-20 16:11:12,090 Node[0] Epoch[8] Batch [220-240]	Speed: 37611.45 samples/sec	accuracy=nan
2023-03-20 16:11:13,822 Node[0] Epoch[8] Batch [240-260]	Speed: 37693.54 samples/sec	accuracy=nan
2023-03-20 16:11:15,555 Node[0] Epoch[8] Batch [260-280]	Speed: 37665.79 samples/sec	accuracy=nan
2023-03-20 16:11:17,287 Node[0] Epoch[8] Batch [280-300]	Speed: 37688.12 samples/sec	accuracy=nan
2023-03-20 16:11:19,019 Node[0] Epoch[8] Batch [300-320]	Speed: 37689.43 samples/sec	accuracy=nan
2023-03-20 16:11:20,751 Node[0] Epoch[8] Batch [320-340]	Speed: 37699.93 samples/sec	accuracy=nan
2023-03-20 16:11:22,484 Node[0] Epoch[8] Batch [340-360]	Speed: 37666.56 samples/sec	accuracy=nan
2023-03-20 16:11:24,220 Node[0] Epoch[8] Batch [360-380]	Speed: 37597.13 samples/sec	accuracy=nan
2023-03-20 16:11:25,170 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,170 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,170 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346685170, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 16:11:25,171 Node[0] Epoch[8] Time cost=33.969
2023-03-20 16:11:25,170 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346685171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37716.02957241728}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-20 16:11:25,171 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346685171, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 16:11:25,171 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,171 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,171 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,171 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,171 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,172 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,172 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,172 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,172 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,173 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:25,173 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:26,990 Node[0] Epoch[9] Batch [0-20]	Speed: 37707.95 samples/sec	accuracy=nan
2023-03-20 16:11:28,722 Node[0] Epoch[9] Batch [20-40]	Speed: 37687.58 samples/sec	accuracy=nan
2023-03-20 16:11:30,458 Node[0] Epoch[9] Batch [40-60]	Speed: 37609.69 samples/sec	accuracy=nan
2023-03-20 16:11:32,188 Node[0] Epoch[9] Batch [60-80]	Speed: 37734.42 samples/sec	accuracy=nan
2023-03-20 16:11:33,923 Node[0] Epoch[9] Batch [80-100]	Speed: 37618.92 samples/sec	accuracy=nan
2023-03-20 16:11:35,655 Node[0] Epoch[9] Batch [100-120]	Speed: 37694.41 samples/sec	accuracy=nan
2023-03-20 16:11:37,388 Node[0] Epoch[9] Batch [120-140]	Speed: 37661.76 samples/sec	accuracy=nan
2023-03-20 16:11:39,120 Node[0] Epoch[9] Batch [140-160]	Speed: 37687.19 samples/sec	accuracy=nan
2023-03-20 16:11:40,852 Node[0] Epoch[9] Batch [160-180]	Speed: 37687.58 samples/sec	accuracy=nan
2023-03-20 16:11:42,585 Node[0] Epoch[9] Batch [180-200]	Speed: 37669.90 samples/sec	accuracy=nan
2023-03-20 16:11:44,316 Node[0] Epoch[9] Batch [200-220]	Speed: 37709.18 samples/sec	accuracy=nan
2023-03-20 16:11:46,048 Node[0] Epoch[9] Batch [220-240]	Speed: 37690.77 samples/sec	accuracy=nan
2023-03-20 16:11:47,780 Node[0] Epoch[9] Batch [240-260]	Speed: 37708.87 samples/sec	accuracy=nan
2023-03-20 16:11:49,513 Node[0] Epoch[9] Batch [260-280]	Speed: 37669.64 samples/sec	accuracy=nan
2023-03-20 16:11:51,246 Node[0] Epoch[9] Batch [280-300]	Speed: 37659.80 samples/sec	accuracy=nan
2023-03-20 16:11:52,979 Node[0] Epoch[9] Batch [300-320]	Speed: 37668.21 samples/sec	accuracy=nan
2023-03-20 16:11:54,712 Node[0] Epoch[9] Batch [320-340]	Speed: 37676.11 samples/sec	accuracy=nan
2023-03-20 16:11:56,443 Node[0] Epoch[9] Batch [340-360]	Speed: 37703.57 samples/sec	accuracy=nan
2023-03-20 16:11:58,175 Node[0] Epoch[9] Batch [360-380]	Speed: 37694.20 samples/sec	accuracy=nan
2023-03-20 16:11:59,210 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,210 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,210 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,210 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346719210, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 16:11:59,211 Node[0] Epoch[9] Time cost=34.040
2023-03-20 16:11:59,211 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346719211, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37637.07946117071}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 16:11:59,211 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,211 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346719211, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 16:11:59,212 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,211 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,212 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,212 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,212 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,213 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,213 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,213 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:11:59,213 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:01,028 Node[0] Epoch[10] Batch [0-20]	Speed: 37705.20 samples/sec	accuracy=nan
2023-03-20 16:12:02,762 Node[0] Epoch[10] Batch [20-40]	Speed: 37662.63 samples/sec	accuracy=nan
2023-03-20 16:12:04,497 Node[0] Epoch[10] Batch [40-60]	Speed: 37609.29 samples/sec	accuracy=nan
2023-03-20 16:12:06,228 Node[0] Epoch[10] Batch [60-80]	Speed: 37730.28 samples/sec	accuracy=nan
2023-03-20 16:12:07,960 Node[0] Epoch[10] Batch [80-100]	Speed: 37677.05 samples/sec	accuracy=nan
2023-03-20 16:12:09,692 Node[0] Epoch[10] Batch [100-120]	Speed: 37687.12 samples/sec	accuracy=nan
2023-03-20 16:12:11,424 Node[0] Epoch[10] Batch [120-140]	Speed: 37700.54 samples/sec	accuracy=nan
2023-03-20 16:12:13,156 Node[0] Epoch[10] Batch [140-160]	Speed: 37677.28 samples/sec	accuracy=nan
2023-03-20 16:12:14,890 Node[0] Epoch[10] Batch [160-180]	Speed: 37660.39 samples/sec	accuracy=nan
2023-03-20 16:12:16,622 Node[0] Epoch[10] Batch [180-200]	Speed: 37684.64 samples/sec	accuracy=nan
2023-03-20 16:12:18,353 Node[0] Epoch[10] Batch [200-220]	Speed: 37716.92 samples/sec	accuracy=nan
2023-03-20 16:12:20,088 Node[0] Epoch[10] Batch [220-240]	Speed: 37629.30 samples/sec	accuracy=nan
2023-03-20 16:12:21,820 Node[0] Epoch[10] Batch [240-260]	Speed: 37678.33 samples/sec	accuracy=nan
2023-03-20 16:12:23,552 Node[0] Epoch[10] Batch [260-280]	Speed: 37699.35 samples/sec	accuracy=nan
2023-03-20 16:12:25,283 Node[0] Epoch[10] Batch [280-300]	Speed: 37714.31 samples/sec	accuracy=nan
2023-03-20 16:12:27,015 Node[0] Epoch[10] Batch [300-320]	Speed: 37687.00 samples/sec	accuracy=nan
2023-03-20 16:12:28,748 Node[0] Epoch[10] Batch [320-340]	Speed: 37657.55 samples/sec	accuracy=nan
2023-03-20 16:12:30,481 Node[0] Epoch[10] Batch [340-360]	Speed: 37679.42 samples/sec	accuracy=nan
2023-03-20 16:12:32,217 Node[0] Epoch[10] Batch [360-380]	Speed: 37605.03 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346753168, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 16:12:33,169 Node[0] Epoch[10] Time cost=33.957
:::MLLOG {"namespace": "", "time_ms": 1679346753169, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37728.56424456658}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679346753250, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 16:12:34,042 Node[0] Epoch[10] Validation-accuracy=0.534080
2023-03-20 16:12:34,042 Node[0] Epoch[10] Validation-correct-count=1669.000000
2023-03-20 16:12:34,043 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679346754092, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679346754093, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53218, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679346754093, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 16:12:34,093 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346754093, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 16:12:34,093 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346754093, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 16:12:34,093 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:34,093 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:12:35,835 Node[0] Epoch[11] Batch [0-20]	Speed: 37776.60 samples/sec	accuracy=nan
2023-03-20 16:12:37,566 Node[0] Epoch[11] Batch [20-40]	Speed: 37699.96 samples/sec	accuracy=nan
2023-03-20 16:12:39,301 Node[0] Epoch[11] Batch [40-60]	Speed: 37636.18 samples/sec	accuracy=nan
2023-03-20 16:12:41,033 Node[0] Epoch[11] Batch [60-80]	Speed: 37698.21 samples/sec	accuracy=nan
2023-03-20 16:12:42,765 Node[0] Epoch[11] Batch [80-100]	Speed: 37682.96 samples/sec	accuracy=nan
2023-03-20 16:12:44,495 Node[0] Epoch[11] Batch [100-120]	Speed: 37731.74 samples/sec	accuracy=nan
2023-03-20 16:12:46,225 Node[0] Epoch[11] Batch [120-140]	Speed: 37726.54 samples/sec	accuracy=nan
2023-03-20 16:12:47,958 Node[0] Epoch[11] Batch [140-160]	Speed: 37686.10 samples/sec	accuracy=nan
2023-03-20 16:12:49,687 Node[0] Epoch[11] Batch [160-180]	Speed: 37742.13 samples/sec	accuracy=nan
2023-03-20 16:12:51,421 Node[0] Epoch[11] Batch [180-200]	Speed: 37660.98 samples/sec	accuracy=nan
2023-03-20 16:12:53,152 Node[0] Epoch[11] Batch [200-220]	Speed: 37710.21 samples/sec	accuracy=nan
2023-03-20 16:12:54,885 Node[0] Epoch[11] Batch [220-240]	Speed: 37658.59 samples/sec	accuracy=nan
2023-03-20 16:12:56,616 Node[0] Epoch[11] Batch [240-260]	Speed: 37714.79 samples/sec	accuracy=nan
2023-03-20 16:12:58,351 Node[0] Epoch[11] Batch [260-280]	Speed: 37634.58 samples/sec	accuracy=nan
2023-03-20 16:13:00,081 Node[0] Epoch[11] Batch [280-300]	Speed: 37720.85 samples/sec	accuracy=nan
2023-03-20 16:13:01,814 Node[0] Epoch[11] Batch [300-320]	Speed: 37663.61 samples/sec	accuracy=nan
2023-03-20 16:13:03,549 Node[0] Epoch[11] Batch [320-340]	Speed: 37643.95 samples/sec	accuracy=nan
2023-03-20 16:13:05,283 Node[0] Epoch[11] Batch [340-360]	Speed: 37639.46 samples/sec	accuracy=nan
2023-03-20 16:13:07,016 Node[0] Epoch[11] Batch [360-380]	Speed: 37676.04 samples/sec	accuracy=nan
2023-03-20 16:13:08,053 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,053 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,053 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,053 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,054 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346788054, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 16:13:08,055 Node[0] Epoch[11] Time cost=33.962
:::MLLOG {"namespace": "", "time_ms": 1679346788055, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37723.99852507528}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 16:13:08,055 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,055 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346788055, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 16:13:08,055 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,055 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,055 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:08,056 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:09,872 Node[0] Epoch[12] Batch [0-20]	Speed: 37707.09 samples/sec	accuracy=nan
2023-03-20 16:13:11,603 Node[0] Epoch[12] Batch [20-40]	Speed: 37703.06 samples/sec	accuracy=nan
2023-03-20 16:13:13,335 Node[0] Epoch[12] Batch [40-60]	Speed: 37683.93 samples/sec	accuracy=nan
2023-03-20 16:13:15,066 Node[0] Epoch[12] Batch [60-80]	Speed: 37725.98 samples/sec	accuracy=nan
2023-03-20 16:13:16,797 Node[0] Epoch[12] Batch [80-100]	Speed: 37699.02 samples/sec	accuracy=nan
2023-03-20 16:13:18,528 Node[0] Epoch[12] Batch [100-120]	Speed: 37717.01 samples/sec	accuracy=nan
2023-03-20 16:13:20,262 Node[0] Epoch[12] Batch [120-140]	Speed: 37655.34 samples/sec	accuracy=nan
2023-03-20 16:13:21,994 Node[0] Epoch[12] Batch [140-160]	Speed: 37681.63 samples/sec	accuracy=nan
2023-03-20 16:13:23,727 Node[0] Epoch[12] Batch [160-180]	Speed: 37667.75 samples/sec	accuracy=nan
2023-03-20 16:13:25,460 Node[0] Epoch[12] Batch [180-200]	Speed: 37667.29 samples/sec	accuracy=nan
2023-03-20 16:13:27,191 Node[0] Epoch[12] Batch [200-220]	Speed: 37714.49 samples/sec	accuracy=nan
2023-03-20 16:13:28,925 Node[0] Epoch[12] Batch [220-240]	Speed: 37652.74 samples/sec	accuracy=nan
2023-03-20 16:13:30,659 Node[0] Epoch[12] Batch [240-260]	Speed: 37645.93 samples/sec	accuracy=nan
2023-03-20 16:13:32,395 Node[0] Epoch[12] Batch [260-280]	Speed: 37607.47 samples/sec	accuracy=nan
2023-03-20 16:13:34,126 Node[0] Epoch[12] Batch [280-300]	Speed: 37707.78 samples/sec	accuracy=nan
2023-03-20 16:13:35,858 Node[0] Epoch[12] Batch [300-320]	Speed: 37686.22 samples/sec	accuracy=nan
2023-03-20 16:13:37,590 Node[0] Epoch[12] Batch [320-340]	Speed: 37697.87 samples/sec	accuracy=nan
2023-03-20 16:13:39,321 Node[0] Epoch[12] Batch [340-360]	Speed: 37701.96 samples/sec	accuracy=nan
2023-03-20 16:13:41,056 Node[0] Epoch[12] Batch [360-380]	Speed: 37633.62 samples/sec	accuracy=nan
2023-03-20 16:13:42,009 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,009 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,009 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,009 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346822009, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 16:13:42,010 Node[0] Epoch[12] Time cost=33.954
2023-03-20 16:13:42,009 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346822010, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37732.008467956504}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 16:13:42,010 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346822010, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 16:13:42,010 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,010 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,010 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,010 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,011 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,011 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,011 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,011 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,011 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:42,012 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:13:43,828 Node[0] Epoch[13] Batch [0-20]	Speed: 37747.71 samples/sec	accuracy=nan
2023-03-20 16:13:45,561 Node[0] Epoch[13] Batch [20-40]	Speed: 37650.19 samples/sec	accuracy=nan
2023-03-20 16:13:47,291 Node[0] Epoch[13] Batch [40-60]	Speed: 37737.41 samples/sec	accuracy=nan
2023-03-20 16:13:49,022 Node[0] Epoch[13] Batch [60-80]	Speed: 37712.80 samples/sec	accuracy=nan
2023-03-20 16:13:50,752 Node[0] Epoch[13] Batch [80-100]	Speed: 37741.86 samples/sec	accuracy=nan
2023-03-20 16:13:52,484 Node[0] Epoch[13] Batch [100-120]	Speed: 37687.08 samples/sec	accuracy=nan
2023-03-20 16:13:54,217 Node[0] Epoch[13] Batch [120-140]	Speed: 37671.91 samples/sec	accuracy=nan
2023-03-20 16:13:55,948 Node[0] Epoch[13] Batch [140-160]	Speed: 37698.59 samples/sec	accuracy=nan
2023-03-20 16:13:57,678 Node[0] Epoch[13] Batch [160-180]	Speed: 37735.58 samples/sec	accuracy=nan
2023-03-20 16:13:59,413 Node[0] Epoch[13] Batch [180-200]	Speed: 37634.13 samples/sec	accuracy=nan
2023-03-20 16:14:01,143 Node[0] Epoch[13] Batch [200-220]	Speed: 37737.23 samples/sec	accuracy=nan
2023-03-20 16:14:02,877 Node[0] Epoch[13] Batch [220-240]	Speed: 37637.00 samples/sec	accuracy=nan
2023-03-20 16:14:04,612 Node[0] Epoch[13] Batch [240-260]	Speed: 37641.86 samples/sec	accuracy=nan
2023-03-20 16:14:06,343 Node[0] Epoch[13] Batch [260-280]	Speed: 37692.79 samples/sec	accuracy=nan
2023-03-20 16:14:08,074 Node[0] Epoch[13] Batch [280-300]	Speed: 37718.43 samples/sec	accuracy=nan
2023-03-20 16:14:09,807 Node[0] Epoch[13] Batch [300-320]	Speed: 37672.19 samples/sec	accuracy=nan
2023-03-20 16:14:11,538 Node[0] Epoch[13] Batch [320-340]	Speed: 37709.49 samples/sec	accuracy=nan
2023-03-20 16:14:13,282 Node[0] Epoch[13] Batch [340-360]	Speed: 37425.80 samples/sec	accuracy=nan
2023-03-20 16:14:15,017 Node[0] Epoch[13] Batch [360-380]	Speed: 37637.55 samples/sec	accuracy=nan
2023-03-20 16:14:16,055 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,055 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,056 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,056 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346856055, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 16:14:16,057 Node[0] Epoch[13] Time cost=34.046
2023-03-20 16:14:16,056 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346856057, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37630.08053002297}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 16:14:16,057 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346856057, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 16:14:16,057 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,057 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,057 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,057 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,057 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,058 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,058 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,058 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,058 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:16,059 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:17,877 Node[0] Epoch[14] Batch [0-20]	Speed: 37636.47 samples/sec	accuracy=nan
2023-03-20 16:14:19,610 Node[0] Epoch[14] Batch [20-40]	Speed: 37659.03 samples/sec	accuracy=nan
2023-03-20 16:14:21,342 Node[0] Epoch[14] Batch [40-60]	Speed: 37702.07 samples/sec	accuracy=nan
2023-03-20 16:14:23,077 Node[0] Epoch[14] Batch [60-80]	Speed: 37618.79 samples/sec	accuracy=nan
2023-03-20 16:14:24,807 Node[0] Epoch[14] Batch [80-100]	Speed: 37725.18 samples/sec	accuracy=nan
2023-03-20 16:14:26,542 Node[0] Epoch[14] Batch [100-120]	Speed: 37632.48 samples/sec	accuracy=nan
2023-03-20 16:14:28,277 Node[0] Epoch[14] Batch [120-140]	Speed: 37623.12 samples/sec	accuracy=nan
2023-03-20 16:14:30,008 Node[0] Epoch[14] Batch [140-160]	Speed: 37725.48 samples/sec	accuracy=nan
2023-03-20 16:14:31,741 Node[0] Epoch[14] Batch [160-180]	Speed: 37668.11 samples/sec	accuracy=nan
2023-03-20 16:14:33,475 Node[0] Epoch[14] Batch [180-200]	Speed: 37644.32 samples/sec	accuracy=nan
2023-03-20 16:14:35,204 Node[0] Epoch[14] Batch [200-220]	Speed: 37741.10 samples/sec	accuracy=nan
2023-03-20 16:14:36,938 Node[0] Epoch[14] Batch [220-240]	Speed: 37660.51 samples/sec	accuracy=nan
2023-03-20 16:14:38,668 Node[0] Epoch[14] Batch [240-260]	Speed: 37724.42 samples/sec	accuracy=nan
2023-03-20 16:14:40,400 Node[0] Epoch[14] Batch [260-280]	Speed: 37706.21 samples/sec	accuracy=nan
2023-03-20 16:14:42,129 Node[0] Epoch[14] Batch [280-300]	Speed: 37739.23 samples/sec	accuracy=nan
2023-03-20 16:14:43,864 Node[0] Epoch[14] Batch [300-320]	Speed: 37622.16 samples/sec	accuracy=nan
2023-03-20 16:14:45,598 Node[0] Epoch[14] Batch [320-340]	Speed: 37647.18 samples/sec	accuracy=nan
2023-03-20 16:14:47,332 Node[0] Epoch[14] Batch [340-360]	Speed: 37665.97 samples/sec	accuracy=nan
2023-03-20 16:14:49,063 Node[0] Epoch[14] Batch [360-380]	Speed: 37694.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679346890014, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 16:14:50,015 Node[0] Epoch[14] Time cost=33.958
:::MLLOG {"namespace": "", "time_ms": 1679346890015, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37728.09220633494}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679346890096, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 16:14:50,814 Node[0] Epoch[14] Validation-accuracy=0.611840
2023-03-20 16:14:50,814 Node[0] Epoch[14] Validation-correct-count=1912.000000
2023-03-20 16:14:50,814 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679346890938, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-20 16:14:50,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346890939, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.61044, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 16:14:50,939 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346890939, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-20 16:14:50,939 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346890939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 16:14:50,939 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:50,939 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346890939, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 16:14:50,939 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:14:52,680 Node[0] Epoch[15] Batch [0-20]	Speed: 37757.77 samples/sec	accuracy=nan
2023-03-20 16:14:54,410 Node[0] Epoch[15] Batch [20-40]	Speed: 37726.16 samples/sec	accuracy=nan
2023-03-20 16:14:56,144 Node[0] Epoch[15] Batch [40-60]	Speed: 37663.09 samples/sec	accuracy=nan
2023-03-20 16:14:57,878 Node[0] Epoch[15] Batch [60-80]	Speed: 37647.50 samples/sec	accuracy=nan
2023-03-20 16:14:59,612 Node[0] Epoch[15] Batch [80-100]	Speed: 37637.97 samples/sec	accuracy=nan
2023-03-20 16:15:01,343 Node[0] Epoch[15] Batch [100-120]	Speed: 37719.75 samples/sec	accuracy=nan
2023-03-20 16:15:03,076 Node[0] Epoch[15] Batch [120-140]	Speed: 37665.52 samples/sec	accuracy=nan
2023-03-20 16:15:04,810 Node[0] Epoch[15] Batch [140-160]	Speed: 37635.14 samples/sec	accuracy=nan
2023-03-20 16:15:06,539 Node[0] Epoch[15] Batch [160-180]	Speed: 37753.26 samples/sec	accuracy=nan
2023-03-20 16:15:08,273 Node[0] Epoch[15] Batch [180-200]	Speed: 37649.90 samples/sec	accuracy=nan
2023-03-20 16:15:10,004 Node[0] Epoch[15] Batch [200-220]	Speed: 37726.03 samples/sec	accuracy=nan
2023-03-20 16:15:11,737 Node[0] Epoch[15] Batch [220-240]	Speed: 37654.03 samples/sec	accuracy=nan
2023-03-20 16:15:13,470 Node[0] Epoch[15] Batch [240-260]	Speed: 37683.11 samples/sec	accuracy=nan
2023-03-20 16:15:15,198 Node[0] Epoch[15] Batch [260-280]	Speed: 37763.41 samples/sec	accuracy=nan
2023-03-20 16:15:16,929 Node[0] Epoch[15] Batch [280-300]	Speed: 37723.17 samples/sec	accuracy=nan
2023-03-20 16:15:18,662 Node[0] Epoch[15] Batch [300-320]	Speed: 37661.24 samples/sec	accuracy=nan
2023-03-20 16:15:20,398 Node[0] Epoch[15] Batch [320-340]	Speed: 37611.04 samples/sec	accuracy=nan
2023-03-20 16:15:22,131 Node[0] Epoch[15] Batch [340-360]	Speed: 37676.52 samples/sec	accuracy=nan
2023-03-20 16:15:23,862 Node[0] Epoch[15] Batch [360-380]	Speed: 37708.72 samples/sec	accuracy=nan
2023-03-20 16:15:24,898 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,898 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,898 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,898 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346924898, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 16:15:24,899 Node[0] Epoch[15] Time cost=33.960
2023-03-20 16:15:24,899 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,899 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346924899, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37726.299257418825}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-20 16:15:24,899 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,899 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346924899, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 16:15:24,899 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,899 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,900 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,900 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,900 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,900 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,901 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:24,901 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:26,716 Node[0] Epoch[16] Batch [0-20]	Speed: 37728.90 samples/sec	accuracy=nan
2023-03-20 16:15:28,449 Node[0] Epoch[16] Batch [20-40]	Speed: 37678.99 samples/sec	accuracy=nan
2023-03-20 16:15:30,179 Node[0] Epoch[16] Batch [40-60]	Speed: 37724.13 samples/sec	accuracy=nan
2023-03-20 16:15:31,911 Node[0] Epoch[16] Batch [60-80]	Speed: 37682.22 samples/sec	accuracy=nan
2023-03-20 16:15:33,647 Node[0] Epoch[16] Batch [80-100]	Speed: 37622.29 samples/sec	accuracy=nan
2023-03-20 16:15:35,376 Node[0] Epoch[16] Batch [100-120]	Speed: 37739.66 samples/sec	accuracy=nan
2023-03-20 16:15:37,111 Node[0] Epoch[16] Batch [120-140]	Speed: 37637.39 samples/sec	accuracy=nan
2023-03-20 16:15:38,842 Node[0] Epoch[16] Batch [140-160]	Speed: 37714.88 samples/sec	accuracy=nan
2023-03-20 16:15:40,572 Node[0] Epoch[16] Batch [160-180]	Speed: 37729.60 samples/sec	accuracy=nan
2023-03-20 16:15:42,301 Node[0] Epoch[16] Batch [180-200]	Speed: 37758.31 samples/sec	accuracy=nan
2023-03-20 16:15:44,031 Node[0] Epoch[16] Batch [200-220]	Speed: 37728.03 samples/sec	accuracy=nan
2023-03-20 16:15:45,766 Node[0] Epoch[16] Batch [220-240]	Speed: 37632.10 samples/sec	accuracy=nan
2023-03-20 16:15:47,497 Node[0] Epoch[16] Batch [240-260]	Speed: 37704.69 samples/sec	accuracy=nan
2023-03-20 16:15:49,231 Node[0] Epoch[16] Batch [260-280]	Speed: 37647.73 samples/sec	accuracy=nan
2023-03-20 16:15:50,960 Node[0] Epoch[16] Batch [280-300]	Speed: 37745.94 samples/sec	accuracy=nan
2023-03-20 16:15:52,695 Node[0] Epoch[16] Batch [300-320]	Speed: 37629.45 samples/sec	accuracy=nan
2023-03-20 16:15:54,434 Node[0] Epoch[16] Batch [320-340]	Speed: 37554.55 samples/sec	accuracy=nan
2023-03-20 16:15:56,182 Node[0] Epoch[16] Batch [340-360]	Speed: 37326.21 samples/sec	accuracy=nan
2023-03-20 16:15:57,918 Node[0] Epoch[16] Batch [360-380]	Speed: 37618.02 samples/sec	accuracy=nan
2023-03-20 16:15:58,867 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,867 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,867 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,867 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346958867, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 16:15:58,868 Node[0] Epoch[16] Time cost=33.969
2023-03-20 16:15:58,868 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346958868, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37716.28370505621}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-20 16:15:58,868 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,868 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346958868, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 16:15:58,869 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,869 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,870 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:15:58,871 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:00,688 Node[0] Epoch[17] Batch [0-20]	Speed: 37693.75 samples/sec	accuracy=nan
2023-03-20 16:16:02,417 Node[0] Epoch[17] Batch [20-40]	Speed: 37756.64 samples/sec	accuracy=nan
2023-03-20 16:16:04,153 Node[0] Epoch[17] Batch [40-60]	Speed: 37603.58 samples/sec	accuracy=nan
2023-03-20 16:16:05,886 Node[0] Epoch[17] Batch [60-80]	Speed: 37670.54 samples/sec	accuracy=nan
2023-03-20 16:16:07,617 Node[0] Epoch[17] Batch [80-100]	Speed: 37714.33 samples/sec	accuracy=nan
2023-03-20 16:16:09,346 Node[0] Epoch[17] Batch [100-120]	Speed: 37760.49 samples/sec	accuracy=nan
2023-03-20 16:16:11,078 Node[0] Epoch[17] Batch [120-140]	Speed: 37695.34 samples/sec	accuracy=nan
2023-03-20 16:16:12,813 Node[0] Epoch[17] Batch [140-160]	Speed: 37624.68 samples/sec	accuracy=nan
2023-03-20 16:16:14,544 Node[0] Epoch[17] Batch [160-180]	Speed: 37696.84 samples/sec	accuracy=nan
2023-03-20 16:16:16,277 Node[0] Epoch[17] Batch [180-200]	Speed: 37673.61 samples/sec	accuracy=nan
2023-03-20 16:16:18,007 Node[0] Epoch[17] Batch [200-220]	Speed: 37738.34 samples/sec	accuracy=nan
2023-03-20 16:16:19,740 Node[0] Epoch[17] Batch [220-240]	Speed: 37665.99 samples/sec	accuracy=nan
2023-03-20 16:16:21,469 Node[0] Epoch[17] Batch [240-260]	Speed: 37748.94 samples/sec	accuracy=nan
2023-03-20 16:16:23,203 Node[0] Epoch[17] Batch [260-280]	Speed: 37647.09 samples/sec	accuracy=nan
2023-03-20 16:16:24,935 Node[0] Epoch[17] Batch [280-300]	Speed: 37700.27 samples/sec	accuracy=nan
2023-03-20 16:16:26,666 Node[0] Epoch[17] Batch [300-320]	Speed: 37716.84 samples/sec	accuracy=nan
2023-03-20 16:16:28,401 Node[0] Epoch[17] Batch [320-340]	Speed: 37621.61 samples/sec	accuracy=nan
2023-03-20 16:16:30,139 Node[0] Epoch[17] Batch [340-360]	Speed: 37555.77 samples/sec	accuracy=nan
2023-03-20 16:16:31,870 Node[0] Epoch[17] Batch [360-380]	Speed: 37722.35 samples/sec	accuracy=nan
2023-03-20 16:16:32,908 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,909 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,909 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,909 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,909 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,910 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,910 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,910 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,910 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346992909, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 16:16:32,911 Node[0] Epoch[17] Time cost=34.042
2023-03-20 16:16:32,910 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346992911, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37634.87868817133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-20 16:16:32,911 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,911 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679346992911, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 16:16:32,911 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,911 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,912 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:32,913 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:16:34,729 Node[0] Epoch[18] Batch [0-20]	Speed: 37666.90 samples/sec	accuracy=nan
2023-03-20 16:16:36,461 Node[0] Epoch[18] Batch [20-40]	Speed: 37698.71 samples/sec	accuracy=nan
2023-03-20 16:16:38,193 Node[0] Epoch[18] Batch [40-60]	Speed: 37687.08 samples/sec	accuracy=nan
2023-03-20 16:16:39,926 Node[0] Epoch[18] Batch [60-80]	Speed: 37666.85 samples/sec	accuracy=nan
2023-03-20 16:16:41,659 Node[0] Epoch[18] Batch [80-100]	Speed: 37659.63 samples/sec	accuracy=nan
2023-03-20 16:16:43,391 Node[0] Epoch[18] Batch [100-120]	Speed: 37697.54 samples/sec	accuracy=nan
2023-03-20 16:16:45,120 Node[0] Epoch[18] Batch [120-140]	Speed: 37752.54 samples/sec	accuracy=nan
2023-03-20 16:16:46,853 Node[0] Epoch[18] Batch [140-160]	Speed: 37670.36 samples/sec	accuracy=nan
2023-03-20 16:16:48,583 Node[0] Epoch[18] Batch [160-180]	Speed: 37745.46 samples/sec	accuracy=nan
2023-03-20 16:16:50,313 Node[0] Epoch[18] Batch [180-200]	Speed: 37715.35 samples/sec	accuracy=nan
2023-03-20 16:16:52,044 Node[0] Epoch[18] Batch [200-220]	Speed: 37724.14 samples/sec	accuracy=nan
2023-03-20 16:16:53,779 Node[0] Epoch[18] Batch [220-240]	Speed: 37615.78 samples/sec	accuracy=nan
2023-03-20 16:16:55,511 Node[0] Epoch[18] Batch [240-260]	Speed: 37689.06 samples/sec	accuracy=nan
2023-03-20 16:16:57,242 Node[0] Epoch[18] Batch [260-280]	Speed: 37715.09 samples/sec	accuracy=nan
2023-03-20 16:16:58,977 Node[0] Epoch[18] Batch [280-300]	Speed: 37632.39 samples/sec	accuracy=nan
2023-03-20 16:17:00,709 Node[0] Epoch[18] Batch [300-320]	Speed: 37692.54 samples/sec	accuracy=nan
2023-03-20 16:17:02,441 Node[0] Epoch[18] Batch [320-340]	Speed: 37680.45 samples/sec	accuracy=nan
2023-03-20 16:17:04,174 Node[0] Epoch[18] Batch [340-360]	Speed: 37683.82 samples/sec	accuracy=nan
2023-03-20 16:17:05,903 Node[0] Epoch[18] Batch [360-380]	Speed: 37737.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347026856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 16:17:06,857 Node[0] Epoch[18] Time cost=33.946
:::MLLOG {"namespace": "", "time_ms": 1679347026857, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37741.6562229243}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679347026938, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 16:17:07,657 Node[0] Epoch[18] Validation-accuracy=0.636800
2023-03-20 16:17:07,657 Node[0] Epoch[18] Validation-correct-count=1990.000000
2023-03-20 16:17:07,657 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347027778, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679347027778, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64194, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679347027778, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 16:17:07,778 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347027778, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 16:17:07,778 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:07,778 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347027778, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 16:17:07,778 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:09,518 Node[0] Epoch[19] Batch [0-20]	Speed: 37677.41 samples/sec	accuracy=nan
2023-03-20 16:17:11,251 Node[0] Epoch[19] Batch [20-40]	Speed: 37663.77 samples/sec	accuracy=nan
2023-03-20 16:17:12,983 Node[0] Epoch[19] Batch [40-60]	Speed: 37694.88 samples/sec	accuracy=nan
2023-03-20 16:17:14,714 Node[0] Epoch[19] Batch [60-80]	Speed: 37707.68 samples/sec	accuracy=nan
2023-03-20 16:17:16,447 Node[0] Epoch[19] Batch [80-100]	Speed: 37667.91 samples/sec	accuracy=nan
2023-03-20 16:17:18,180 Node[0] Epoch[19] Batch [100-120]	Speed: 37673.11 samples/sec	accuracy=nan
2023-03-20 16:17:19,911 Node[0] Epoch[19] Batch [120-140]	Speed: 37709.64 samples/sec	accuracy=nan
2023-03-20 16:17:21,642 Node[0] Epoch[19] Batch [140-160]	Speed: 37713.79 samples/sec	accuracy=nan
2023-03-20 16:17:23,374 Node[0] Epoch[19] Batch [160-180]	Speed: 37699.97 samples/sec	accuracy=nan
2023-03-20 16:17:25,109 Node[0] Epoch[19] Batch [180-200]	Speed: 37628.64 samples/sec	accuracy=nan
2023-03-20 16:17:26,840 Node[0] Epoch[19] Batch [200-220]	Speed: 37696.29 samples/sec	accuracy=nan
2023-03-20 16:17:28,571 Node[0] Epoch[19] Batch [220-240]	Speed: 37715.01 samples/sec	accuracy=nan
2023-03-20 16:17:30,305 Node[0] Epoch[19] Batch [240-260]	Speed: 37644.80 samples/sec	accuracy=nan
2023-03-20 16:17:32,037 Node[0] Epoch[19] Batch [260-280]	Speed: 37692.36 samples/sec	accuracy=nan
2023-03-20 16:17:33,769 Node[0] Epoch[19] Batch [280-300]	Speed: 37695.42 samples/sec	accuracy=nan
2023-03-20 16:17:35,506 Node[0] Epoch[19] Batch [300-320]	Speed: 37586.11 samples/sec	accuracy=nan
2023-03-20 16:17:37,237 Node[0] Epoch[19] Batch [320-340]	Speed: 37710.39 samples/sec	accuracy=nan
2023-03-20 16:17:38,971 Node[0] Epoch[19] Batch [340-360]	Speed: 37654.30 samples/sec	accuracy=nan
2023-03-20 16:17:40,701 Node[0] Epoch[19] Batch [360-380]	Speed: 37724.66 samples/sec	accuracy=nan
2023-03-20 16:17:41,738 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,738 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347061738, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 16:17:41,739 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[0] Epoch[19] Time cost=33.960
:::MLLOG {"namespace": "", "time_ms": 1679347061739, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37725.231621269726}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-20 16:17:41,739 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347061739, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 16:17:41,739 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,739 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,740 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,740 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,740 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,741 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,741 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:41,741 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:17:43,558 Node[0] Epoch[20] Batch [0-20]	Speed: 37676.24 samples/sec	accuracy=nan
2023-03-20 16:17:45,288 Node[0] Epoch[20] Batch [20-40]	Speed: 37743.86 samples/sec	accuracy=nan
2023-03-20 16:17:47,020 Node[0] Epoch[20] Batch [40-60]	Speed: 37693.38 samples/sec	accuracy=nan
2023-03-20 16:17:48,751 Node[0] Epoch[20] Batch [60-80]	Speed: 37706.76 samples/sec	accuracy=nan
2023-03-20 16:17:50,483 Node[0] Epoch[20] Batch [80-100]	Speed: 37696.82 samples/sec	accuracy=nan
2023-03-20 16:17:52,217 Node[0] Epoch[20] Batch [100-120]	Speed: 37637.11 samples/sec	accuracy=nan
2023-03-20 16:17:53,946 Node[0] Epoch[20] Batch [120-140]	Speed: 37764.10 samples/sec	accuracy=nan
2023-03-20 16:17:55,680 Node[0] Epoch[20] Batch [140-160]	Speed: 37637.98 samples/sec	accuracy=nan
2023-03-20 16:17:57,413 Node[0] Epoch[20] Batch [160-180]	Speed: 37661.16 samples/sec	accuracy=nan
2023-03-20 16:17:59,145 Node[0] Epoch[20] Batch [180-200]	Speed: 37700.20 samples/sec	accuracy=nan
2023-03-20 16:18:00,881 Node[0] Epoch[20] Batch [200-220]	Speed: 37593.75 samples/sec	accuracy=nan
2023-03-20 16:18:02,613 Node[0] Epoch[20] Batch [220-240]	Speed: 37693.97 samples/sec	accuracy=nan
2023-03-20 16:18:04,345 Node[0] Epoch[20] Batch [240-260]	Speed: 37697.26 samples/sec	accuracy=nan
2023-03-20 16:18:06,079 Node[0] Epoch[20] Batch [260-280]	Speed: 37651.87 samples/sec	accuracy=nan
2023-03-20 16:18:07,812 Node[0] Epoch[20] Batch [280-300]	Speed: 37659.89 samples/sec	accuracy=nan
2023-03-20 16:18:09,543 Node[0] Epoch[20] Batch [300-320]	Speed: 37718.09 samples/sec	accuracy=nan
2023-03-20 16:18:11,278 Node[0] Epoch[20] Batch [320-340]	Speed: 37623.61 samples/sec	accuracy=nan
2023-03-20 16:18:13,011 Node[0] Epoch[20] Batch [340-360]	Speed: 37677.40 samples/sec	accuracy=nan
2023-03-20 16:18:14,744 Node[0] Epoch[20] Batch [360-380]	Speed: 37652.37 samples/sec	accuracy=nan
2023-03-20 16:18:15,696 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,696 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347095695, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 16:18:15,696 Node[0] Epoch[20] Time cost=33.957
:::MLLOG {"namespace": "", "time_ms": 1679347095696, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37729.29378143105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 16:18:15,696 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347095697, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 16:18:15,697 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,697 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,697 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,697 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,697 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,697 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,698 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:15,699 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:17,513 Node[0] Epoch[21] Batch [0-20]	Speed: 37767.77 samples/sec	accuracy=nan
2023-03-20 16:18:19,244 Node[0] Epoch[21] Batch [20-40]	Speed: 37712.86 samples/sec	accuracy=nan
2023-03-20 16:18:20,977 Node[0] Epoch[21] Batch [40-60]	Speed: 37686.55 samples/sec	accuracy=nan
2023-03-20 16:18:22,707 Node[0] Epoch[21] Batch [60-80]	Speed: 37721.50 samples/sec	accuracy=nan
2023-03-20 16:18:24,441 Node[0] Epoch[21] Batch [80-100]	Speed: 37659.72 samples/sec	accuracy=nan
2023-03-20 16:18:26,173 Node[0] Epoch[21] Batch [100-120]	Speed: 37679.27 samples/sec	accuracy=nan
2023-03-20 16:18:27,906 Node[0] Epoch[21] Batch [120-140]	Speed: 37673.04 samples/sec	accuracy=nan
2023-03-20 16:18:29,638 Node[0] Epoch[21] Batch [140-160]	Speed: 37676.04 samples/sec	accuracy=nan
2023-03-20 16:18:31,373 Node[0] Epoch[21] Batch [160-180]	Speed: 37638.33 samples/sec	accuracy=nan
2023-03-20 16:18:33,105 Node[0] Epoch[21] Batch [180-200]	Speed: 37680.36 samples/sec	accuracy=nan
2023-03-20 16:18:34,838 Node[0] Epoch[21] Batch [200-220]	Speed: 37670.36 samples/sec	accuracy=nan
2023-03-20 16:18:36,570 Node[0] Epoch[21] Batch [220-240]	Speed: 37691.02 samples/sec	accuracy=nan
2023-03-20 16:18:38,303 Node[0] Epoch[21] Batch [240-260]	Speed: 37683.66 samples/sec	accuracy=nan
2023-03-20 16:18:40,033 Node[0] Epoch[21] Batch [260-280]	Speed: 37726.63 samples/sec	accuracy=nan
2023-03-20 16:18:41,764 Node[0] Epoch[21] Batch [280-300]	Speed: 37700.36 samples/sec	accuracy=nan
2023-03-20 16:18:43,497 Node[0] Epoch[21] Batch [300-320]	Speed: 37670.23 samples/sec	accuracy=nan
2023-03-20 16:18:45,226 Node[0] Epoch[21] Batch [320-340]	Speed: 37767.89 samples/sec	accuracy=nan
2023-03-20 16:18:46,957 Node[0] Epoch[21] Batch [340-360]	Speed: 37706.40 samples/sec	accuracy=nan
2023-03-20 16:18:48,690 Node[0] Epoch[21] Batch [360-380]	Speed: 37662.30 samples/sec	accuracy=nan
2023-03-20 16:18:49,727 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,727 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,727 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347129727, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 16:18:49,728 Node[0] Epoch[21] Time cost=34.031
2023-03-20 16:18:49,728 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347129728, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37647.14714661579}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-20 16:18:49,728 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347129728, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 16:18:49,728 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,728 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,728 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,728 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,729 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,729 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,729 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,730 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,730 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,730 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:49,730 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:18:51,546 Node[0] Epoch[22] Batch [0-20]	Speed: 37700.17 samples/sec	accuracy=nan
2023-03-20 16:18:53,278 Node[0] Epoch[22] Batch [20-40]	Speed: 37682.91 samples/sec	accuracy=nan
2023-03-20 16:18:55,009 Node[0] Epoch[22] Batch [40-60]	Speed: 37718.04 samples/sec	accuracy=nan
2023-03-20 16:18:56,739 Node[0] Epoch[22] Batch [60-80]	Speed: 37728.89 samples/sec	accuracy=nan
2023-03-20 16:18:58,472 Node[0] Epoch[22] Batch [80-100]	Speed: 37678.52 samples/sec	accuracy=nan
2023-03-20 16:19:00,209 Node[0] Epoch[22] Batch [100-120]	Speed: 37573.32 samples/sec	accuracy=nan
2023-03-20 16:19:01,942 Node[0] Epoch[22] Batch [120-140]	Speed: 37669.00 samples/sec	accuracy=nan
2023-03-20 16:19:03,672 Node[0] Epoch[22] Batch [140-160]	Speed: 37737.90 samples/sec	accuracy=nan
2023-03-20 16:19:05,406 Node[0] Epoch[22] Batch [160-180]	Speed: 37639.51 samples/sec	accuracy=nan
2023-03-20 16:19:07,141 Node[0] Epoch[22] Batch [180-200]	Speed: 37644.67 samples/sec	accuracy=nan
2023-03-20 16:19:08,871 Node[0] Epoch[22] Batch [200-220]	Speed: 37720.96 samples/sec	accuracy=nan
2023-03-20 16:19:10,603 Node[0] Epoch[22] Batch [220-240]	Speed: 37698.48 samples/sec	accuracy=nan
2023-03-20 16:19:12,336 Node[0] Epoch[22] Batch [240-260]	Speed: 37670.73 samples/sec	accuracy=nan
2023-03-20 16:19:14,070 Node[0] Epoch[22] Batch [260-280]	Speed: 37634.73 samples/sec	accuracy=nan
2023-03-20 16:19:15,803 Node[0] Epoch[22] Batch [280-300]	Speed: 37666.37 samples/sec	accuracy=nan
2023-03-20 16:19:17,534 Node[0] Epoch[22] Batch [300-320]	Speed: 37728.44 samples/sec	accuracy=nan
2023-03-20 16:19:19,266 Node[0] Epoch[22] Batch [320-340]	Speed: 37682.27 samples/sec	accuracy=nan
2023-03-20 16:19:20,999 Node[0] Epoch[22] Batch [340-360]	Speed: 37678.70 samples/sec	accuracy=nan
2023-03-20 16:19:22,731 Node[0] Epoch[22] Batch [360-380]	Speed: 37687.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347163681, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 16:19:23,682 Node[0] Epoch[22] Time cost=33.954
:::MLLOG {"namespace": "", "time_ms": 1679347163682, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37732.55532043568}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679347163764, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 16:19:24,528 Node[0] Epoch[22] Validation-accuracy=0.694720
2023-03-20 16:19:24,528 Node[0] Epoch[22] Validation-correct-count=2171.000000
2023-03-20 16:19:24,528 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347164603, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-20 16:19:24,603 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347164603, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69936, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-20 16:19:24,603 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347164603, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 16:19:24,603 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347164603, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 16:19:24,603 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:24,603 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347164603, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 16:19:24,604 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:26,343 Node[0] Epoch[23] Batch [0-20]	Speed: 37710.83 samples/sec	accuracy=nan
2023-03-20 16:19:28,074 Node[0] Epoch[23] Batch [20-40]	Speed: 37697.93 samples/sec	accuracy=nan
2023-03-20 16:19:29,806 Node[0] Epoch[23] Batch [40-60]	Speed: 37707.46 samples/sec	accuracy=nan
2023-03-20 16:19:31,539 Node[0] Epoch[23] Batch [60-80]	Speed: 37671.64 samples/sec	accuracy=nan
2023-03-20 16:19:33,272 Node[0] Epoch[23] Batch [80-100]	Speed: 37660.54 samples/sec	accuracy=nan
2023-03-20 16:19:35,001 Node[0] Epoch[23] Batch [100-120]	Speed: 37758.87 samples/sec	accuracy=nan
2023-03-20 16:19:36,735 Node[0] Epoch[23] Batch [120-140]	Speed: 37641.27 samples/sec	accuracy=nan
2023-03-20 16:19:38,469 Node[0] Epoch[23] Batch [140-160]	Speed: 37650.86 samples/sec	accuracy=nan
2023-03-20 16:19:40,203 Node[0] Epoch[23] Batch [160-180]	Speed: 37644.76 samples/sec	accuracy=nan
2023-03-20 16:19:41,937 Node[0] Epoch[23] Batch [180-200]	Speed: 37642.00 samples/sec	accuracy=nan
2023-03-20 16:19:43,671 Node[0] Epoch[23] Batch [200-220]	Speed: 37658.84 samples/sec	accuracy=nan
2023-03-20 16:19:45,404 Node[0] Epoch[23] Batch [220-240]	Speed: 37662.25 samples/sec	accuracy=nan
2023-03-20 16:19:47,137 Node[0] Epoch[23] Batch [240-260]	Speed: 37674.13 samples/sec	accuracy=nan
2023-03-20 16:19:48,871 Node[0] Epoch[23] Batch [260-280]	Speed: 37633.39 samples/sec	accuracy=nan
2023-03-20 16:19:50,603 Node[0] Epoch[23] Batch [280-300]	Speed: 37698.16 samples/sec	accuracy=nan
2023-03-20 16:19:52,335 Node[0] Epoch[23] Batch [300-320]	Speed: 37683.43 samples/sec	accuracy=nan
2023-03-20 16:19:54,067 Node[0] Epoch[23] Batch [320-340]	Speed: 37704.53 samples/sec	accuracy=nan
2023-03-20 16:19:55,800 Node[0] Epoch[23] Batch [340-360]	Speed: 37657.01 samples/sec	accuracy=nan
2023-03-20 16:19:57,539 Node[0] Epoch[23] Batch [360-380]	Speed: 37554.96 samples/sec	accuracy=nan
2023-03-20 16:19:58,574 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,574 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,574 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,575 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,575 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,575 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,575 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347198574, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 16:19:58,575 Node[0] Epoch[23] Time cost=33.972
:::MLLOG {"namespace": "", "time_ms": 1679347198575, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37712.657344787025}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-20 16:19:58,575 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,575 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347198576, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 16:19:58,576 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,576 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,576 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,576 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,576 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,577 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:19:58,577 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:00,394 Node[0] Epoch[24] Batch [0-20]	Speed: 37683.32 samples/sec	accuracy=nan
2023-03-20 16:20:02,126 Node[0] Epoch[24] Batch [20-40]	Speed: 37693.40 samples/sec	accuracy=nan
2023-03-20 16:20:03,858 Node[0] Epoch[24] Batch [40-60]	Speed: 37692.65 samples/sec	accuracy=nan
2023-03-20 16:20:05,590 Node[0] Epoch[24] Batch [60-80]	Speed: 37679.15 samples/sec	accuracy=nan
2023-03-20 16:20:07,325 Node[0] Epoch[24] Batch [80-100]	Speed: 37642.59 samples/sec	accuracy=nan
2023-03-20 16:20:09,057 Node[0] Epoch[24] Batch [100-120]	Speed: 37685.74 samples/sec	accuracy=nan
2023-03-20 16:20:10,788 Node[0] Epoch[24] Batch [120-140]	Speed: 37717.75 samples/sec	accuracy=nan
2023-03-20 16:20:12,518 Node[0] Epoch[24] Batch [140-160]	Speed: 37721.30 samples/sec	accuracy=nan
2023-03-20 16:20:14,252 Node[0] Epoch[24] Batch [160-180]	Speed: 37657.03 samples/sec	accuracy=nan
2023-03-20 16:20:15,984 Node[0] Epoch[24] Batch [180-200]	Speed: 37676.25 samples/sec	accuracy=nan
2023-03-20 16:20:17,717 Node[0] Epoch[24] Batch [200-220]	Speed: 37671.12 samples/sec	accuracy=nan
2023-03-20 16:20:19,454 Node[0] Epoch[24] Batch [220-240]	Speed: 37583.55 samples/sec	accuracy=nan
2023-03-20 16:20:21,187 Node[0] Epoch[24] Batch [240-260]	Speed: 37676.21 samples/sec	accuracy=nan
2023-03-20 16:20:22,921 Node[0] Epoch[24] Batch [260-280]	Speed: 37649.62 samples/sec	accuracy=nan
2023-03-20 16:20:24,651 Node[0] Epoch[24] Batch [280-300]	Speed: 37727.33 samples/sec	accuracy=nan
2023-03-20 16:20:26,382 Node[0] Epoch[24] Batch [300-320]	Speed: 37716.74 samples/sec	accuracy=nan
2023-03-20 16:20:28,115 Node[0] Epoch[24] Batch [320-340]	Speed: 37666.52 samples/sec	accuracy=nan
2023-03-20 16:20:29,847 Node[0] Epoch[24] Batch [340-360]	Speed: 37677.07 samples/sec	accuracy=nan
2023-03-20 16:20:31,586 Node[0] Epoch[24] Batch [360-380]	Speed: 37549.16 samples/sec	accuracy=nan
2023-03-20 16:20:32,536 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,536 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,536 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347232536, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 16:20:32,537 Node[0] Epoch[24] Time cost=33.961
:::MLLOG {"namespace": "", "time_ms": 1679347232537, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37724.75066179033}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-20 16:20:32,537 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347232537, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 16:20:32,537 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,537 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,537 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,537 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,538 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,538 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,538 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,539 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,539 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,539 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,539 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:32,540 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:20:34,357 Node[0] Epoch[25] Batch [0-20]	Speed: 37719.19 samples/sec	accuracy=nan
2023-03-20 16:20:36,091 Node[0] Epoch[25] Batch [20-40]	Speed: 37658.16 samples/sec	accuracy=nan
2023-03-20 16:20:37,827 Node[0] Epoch[25] Batch [40-60]	Speed: 37589.20 samples/sec	accuracy=nan
2023-03-20 16:20:39,557 Node[0] Epoch[25] Batch [60-80]	Speed: 37733.28 samples/sec	accuracy=nan
2023-03-20 16:20:41,294 Node[0] Epoch[25] Batch [80-100]	Speed: 37592.41 samples/sec	accuracy=nan
2023-03-20 16:20:43,022 Node[0] Epoch[25] Batch [100-120]	Speed: 37762.87 samples/sec	accuracy=nan
2023-03-20 16:20:44,755 Node[0] Epoch[25] Batch [120-140]	Speed: 37688.89 samples/sec	accuracy=nan
2023-03-20 16:20:46,486 Node[0] Epoch[25] Batch [140-160]	Speed: 37703.55 samples/sec	accuracy=nan
2023-03-20 16:20:48,219 Node[0] Epoch[25] Batch [160-180]	Speed: 37672.38 samples/sec	accuracy=nan
2023-03-20 16:20:49,953 Node[0] Epoch[25] Batch [180-200]	Speed: 37648.08 samples/sec	accuracy=nan
2023-03-20 16:20:51,686 Node[0] Epoch[25] Batch [200-220]	Speed: 37666.43 samples/sec	accuracy=nan
2023-03-20 16:20:53,418 Node[0] Epoch[25] Batch [220-240]	Speed: 37683.81 samples/sec	accuracy=nan
2023-03-20 16:20:55,152 Node[0] Epoch[25] Batch [240-260]	Speed: 37641.37 samples/sec	accuracy=nan
2023-03-20 16:20:56,881 Node[0] Epoch[25] Batch [260-280]	Speed: 37755.43 samples/sec	accuracy=nan
2023-03-20 16:20:58,617 Node[0] Epoch[25] Batch [280-300]	Speed: 37602.73 samples/sec	accuracy=nan
2023-03-20 16:21:00,351 Node[0] Epoch[25] Batch [300-320]	Speed: 37656.91 samples/sec	accuracy=nan
2023-03-20 16:21:02,082 Node[0] Epoch[25] Batch [320-340]	Speed: 37716.48 samples/sec	accuracy=nan
2023-03-20 16:21:03,815 Node[0] Epoch[25] Batch [340-360]	Speed: 37661.82 samples/sec	accuracy=nan
2023-03-20 16:21:05,548 Node[0] Epoch[25] Batch [360-380]	Speed: 37670.50 samples/sec	accuracy=nan
2023-03-20 16:21:06,586 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,586 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,586 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347266586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 16:21:06,587 Node[0] Epoch[25] Time cost=34.050
2023-03-20 16:21:06,587 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,587 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347266587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37626.282087316074}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-20 16:21:06,587 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347266588, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 16:21:06,588 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,587 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,588 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,589 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:06,589 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:08,405 Node[0] Epoch[26] Batch [0-20]	Speed: 37699.40 samples/sec	accuracy=nan
2023-03-20 16:21:10,137 Node[0] Epoch[26] Batch [20-40]	Speed: 37701.84 samples/sec	accuracy=nan
2023-03-20 16:21:11,870 Node[0] Epoch[26] Batch [40-60]	Speed: 37654.63 samples/sec	accuracy=nan
2023-03-20 16:21:13,603 Node[0] Epoch[26] Batch [60-80]	Speed: 37673.18 samples/sec	accuracy=nan
2023-03-20 16:21:15,335 Node[0] Epoch[26] Batch [80-100]	Speed: 37682.03 samples/sec	accuracy=nan
2023-03-20 16:21:17,066 Node[0] Epoch[26] Batch [100-120]	Speed: 37716.43 samples/sec	accuracy=nan
2023-03-20 16:21:18,798 Node[0] Epoch[26] Batch [120-140]	Speed: 37694.67 samples/sec	accuracy=nan
2023-03-20 16:21:20,531 Node[0] Epoch[26] Batch [140-160]	Speed: 37658.21 samples/sec	accuracy=nan
2023-03-20 16:21:22,263 Node[0] Epoch[26] Batch [160-180]	Speed: 37709.70 samples/sec	accuracy=nan
2023-03-20 16:21:23,993 Node[0] Epoch[26] Batch [180-200]	Speed: 37726.27 samples/sec	accuracy=nan
2023-03-20 16:21:25,725 Node[0] Epoch[26] Batch [200-220]	Speed: 37699.32 samples/sec	accuracy=nan
2023-03-20 16:21:27,455 Node[0] Epoch[26] Batch [220-240]	Speed: 37722.14 samples/sec	accuracy=nan
2023-03-20 16:21:29,187 Node[0] Epoch[26] Batch [240-260]	Speed: 37698.98 samples/sec	accuracy=nan
2023-03-20 16:21:30,920 Node[0] Epoch[26] Batch [260-280]	Speed: 37662.86 samples/sec	accuracy=nan
2023-03-20 16:21:32,654 Node[0] Epoch[26] Batch [280-300]	Speed: 37647.93 samples/sec	accuracy=nan
2023-03-20 16:21:34,387 Node[0] Epoch[26] Batch [300-320]	Speed: 37674.85 samples/sec	accuracy=nan
2023-03-20 16:21:36,119 Node[0] Epoch[26] Batch [320-340]	Speed: 37681.61 samples/sec	accuracy=nan
2023-03-20 16:21:37,852 Node[0] Epoch[26] Batch [340-360]	Speed: 37665.01 samples/sec	accuracy=nan
2023-03-20 16:21:39,586 Node[0] Epoch[26] Batch [360-380]	Speed: 37655.89 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347300539, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 16:21:40,540 Node[0] Epoch[26] Time cost=33.952
:::MLLOG {"namespace": "", "time_ms": 1679347300540, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37734.56243667461}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679347300621, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 16:21:41,336 Node[0] Epoch[26] Validation-accuracy=0.722240
2023-03-20 16:21:41,336 Node[0] Epoch[26] Validation-correct-count=2257.000000
2023-03-20 16:21:41,336 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347301459, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679347301460, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72554, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679347301460, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 16:21:41,460 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347301460, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 16:21:41,460 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:41,460 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347301460, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 16:21:41,460 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:21:43,203 Node[0] Epoch[27] Batch [0-20]	Speed: 37661.43 samples/sec	accuracy=nan
2023-03-20 16:21:44,937 Node[0] Epoch[27] Batch [20-40]	Speed: 37649.50 samples/sec	accuracy=nan
2023-03-20 16:21:46,668 Node[0] Epoch[27] Batch [40-60]	Speed: 37706.97 samples/sec	accuracy=nan
2023-03-20 16:21:48,403 Node[0] Epoch[27] Batch [60-80]	Speed: 37614.56 samples/sec	accuracy=nan
2023-03-20 16:21:50,137 Node[0] Epoch[27] Batch [80-100]	Speed: 37654.61 samples/sec	accuracy=nan
2023-03-20 16:21:51,869 Node[0] Epoch[27] Batch [100-120]	Speed: 37691.20 samples/sec	accuracy=nan
2023-03-20 16:21:53,600 Node[0] Epoch[27] Batch [120-140]	Speed: 37700.57 samples/sec	accuracy=nan
2023-03-20 16:21:55,331 Node[0] Epoch[27] Batch [140-160]	Speed: 37723.13 samples/sec	accuracy=nan
2023-03-20 16:21:57,062 Node[0] Epoch[27] Batch [160-180]	Speed: 37716.27 samples/sec	accuracy=nan
2023-03-20 16:21:58,796 Node[0] Epoch[27] Batch [180-200]	Speed: 37648.02 samples/sec	accuracy=nan
2023-03-20 16:22:00,528 Node[0] Epoch[27] Batch [200-220]	Speed: 37675.47 samples/sec	accuracy=nan
2023-03-20 16:22:02,264 Node[0] Epoch[27] Batch [220-240]	Speed: 37612.59 samples/sec	accuracy=nan
2023-03-20 16:22:03,995 Node[0] Epoch[27] Batch [240-260]	Speed: 37711.10 samples/sec	accuracy=nan
2023-03-20 16:22:05,727 Node[0] Epoch[27] Batch [260-280]	Speed: 37682.74 samples/sec	accuracy=nan
2023-03-20 16:22:07,462 Node[0] Epoch[27] Batch [280-300]	Speed: 37645.00 samples/sec	accuracy=nan
2023-03-20 16:22:09,195 Node[0] Epoch[27] Batch [300-320]	Speed: 37656.99 samples/sec	accuracy=nan
2023-03-20 16:22:10,928 Node[0] Epoch[27] Batch [320-340]	Speed: 37664.61 samples/sec	accuracy=nan
2023-03-20 16:22:12,675 Node[0] Epoch[27] Batch [340-360]	Speed: 37371.80 samples/sec	accuracy=nan
2023-03-20 16:22:14,407 Node[0] Epoch[27] Batch [360-380]	Speed: 37686.96 samples/sec	accuracy=nan
2023-03-20 16:22:15,445 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,446 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,446 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,446 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347335446, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 16:22:15,447 Node[0] Epoch[27] Time cost=33.987
:::MLLOG {"namespace": "", "time_ms": 1679347335447, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37696.230730172996}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-20 16:22:15,447 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,447 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347335447, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 16:22:15,447 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,447 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,447 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,447 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,448 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,448 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,448 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,449 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,449 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:15,449 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:17,267 Node[0] Epoch[28] Batch [0-20]	Speed: 37660.02 samples/sec	accuracy=nan
2023-03-20 16:22:19,001 Node[0] Epoch[28] Batch [20-40]	Speed: 37651.98 samples/sec	accuracy=nan
2023-03-20 16:22:20,733 Node[0] Epoch[28] Batch [40-60]	Speed: 37688.76 samples/sec	accuracy=nan
2023-03-20 16:22:22,465 Node[0] Epoch[28] Batch [60-80]	Speed: 37692.53 samples/sec	accuracy=nan
2023-03-20 16:22:24,197 Node[0] Epoch[28] Batch [80-100]	Speed: 37689.91 samples/sec	accuracy=nan
2023-03-20 16:22:25,929 Node[0] Epoch[28] Batch [100-120]	Speed: 37672.96 samples/sec	accuracy=nan
2023-03-20 16:22:27,661 Node[0] Epoch[28] Batch [120-140]	Speed: 37697.74 samples/sec	accuracy=nan
2023-03-20 16:22:29,392 Node[0] Epoch[28] Batch [140-160]	Speed: 37706.84 samples/sec	accuracy=nan
2023-03-20 16:22:31,125 Node[0] Epoch[28] Batch [160-180]	Speed: 37675.87 samples/sec	accuracy=nan
2023-03-20 16:22:32,859 Node[0] Epoch[28] Batch [180-200]	Speed: 37653.55 samples/sec	accuracy=nan
2023-03-20 16:22:34,591 Node[0] Epoch[28] Batch [200-220]	Speed: 37681.90 samples/sec	accuracy=nan
2023-03-20 16:22:36,324 Node[0] Epoch[28] Batch [220-240]	Speed: 37676.84 samples/sec	accuracy=nan
2023-03-20 16:22:38,056 Node[0] Epoch[28] Batch [240-260]	Speed: 37681.72 samples/sec	accuracy=nan
2023-03-20 16:22:39,789 Node[0] Epoch[28] Batch [260-280]	Speed: 37671.31 samples/sec	accuracy=nan
2023-03-20 16:22:41,521 Node[0] Epoch[28] Batch [280-300]	Speed: 37686.67 samples/sec	accuracy=nan
2023-03-20 16:22:43,253 Node[0] Epoch[28] Batch [300-320]	Speed: 37694.66 samples/sec	accuracy=nan
2023-03-20 16:22:44,986 Node[0] Epoch[28] Batch [320-340]	Speed: 37674.17 samples/sec	accuracy=nan
2023-03-20 16:22:46,718 Node[0] Epoch[28] Batch [340-360]	Speed: 37674.33 samples/sec	accuracy=nan
2023-03-20 16:22:48,452 Node[0] Epoch[28] Batch [360-380]	Speed: 37655.59 samples/sec	accuracy=nan
2023-03-20 16:22:49,403 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,403 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,403 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347369403, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 16:22:49,404 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,404 Node[0] Epoch[28] Time cost=33.957
:::MLLOG {"namespace": "", "time_ms": 1679347369404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37729.310735419116}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-20 16:22:49,404 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347369404, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 16:22:49,405 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,404 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,405 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,405 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,405 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,405 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,406 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,406 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,406 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,406 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:49,407 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:22:51,225 Node[0] Epoch[29] Batch [0-20]	Speed: 37719.81 samples/sec	accuracy=nan
2023-03-20 16:22:52,960 Node[0] Epoch[29] Batch [20-40]	Speed: 37625.80 samples/sec	accuracy=nan
2023-03-20 16:22:54,698 Node[0] Epoch[29] Batch [40-60]	Speed: 37553.21 samples/sec	accuracy=nan
2023-03-20 16:22:56,431 Node[0] Epoch[29] Batch [60-80]	Speed: 37676.52 samples/sec	accuracy=nan
2023-03-20 16:22:58,163 Node[0] Epoch[29] Batch [80-100]	Speed: 37688.41 samples/sec	accuracy=nan
2023-03-20 16:22:59,895 Node[0] Epoch[29] Batch [100-120]	Speed: 37675.48 samples/sec	accuracy=nan
2023-03-20 16:23:01,628 Node[0] Epoch[29] Batch [120-140]	Speed: 37689.28 samples/sec	accuracy=nan
2023-03-20 16:23:03,364 Node[0] Epoch[29] Batch [140-160]	Speed: 37602.35 samples/sec	accuracy=nan
2023-03-20 16:23:05,093 Node[0] Epoch[29] Batch [160-180]	Speed: 37738.34 samples/sec	accuracy=nan
2023-03-20 16:23:06,825 Node[0] Epoch[29] Batch [180-200]	Speed: 37689.41 samples/sec	accuracy=nan
2023-03-20 16:23:08,556 Node[0] Epoch[29] Batch [200-220]	Speed: 37729.04 samples/sec	accuracy=nan
2023-03-20 16:23:10,290 Node[0] Epoch[29] Batch [220-240]	Speed: 37642.11 samples/sec	accuracy=nan
2023-03-20 16:23:12,023 Node[0] Epoch[29] Batch [240-260]	Speed: 37667.47 samples/sec	accuracy=nan
2023-03-20 16:23:13,757 Node[0] Epoch[29] Batch [260-280]	Speed: 37637.57 samples/sec	accuracy=nan
2023-03-20 16:23:15,490 Node[0] Epoch[29] Batch [280-300]	Speed: 37671.99 samples/sec	accuracy=nan
2023-03-20 16:23:17,221 Node[0] Epoch[29] Batch [300-320]	Speed: 37709.97 samples/sec	accuracy=nan
2023-03-20 16:23:18,953 Node[0] Epoch[29] Batch [320-340]	Speed: 37687.61 samples/sec	accuracy=nan
2023-03-20 16:23:20,689 Node[0] Epoch[29] Batch [340-360]	Speed: 37606.38 samples/sec	accuracy=nan
2023-03-20 16:23:22,424 Node[0] Epoch[29] Batch [360-380]	Speed: 37632.72 samples/sec	accuracy=nan
2023-03-20 16:23:23,463 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,463 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,463 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,463 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347403463, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 16:23:23,464 Node[0] Epoch[29] Time cost=34.059
:::MLLOG {"namespace": "", "time_ms": 1679347403464, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37615.997259303884}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-20 16:23:23,464 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,464 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,464 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347403464, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 16:23:23,464 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,464 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,464 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,465 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,465 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,465 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,465 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,465 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:23,466 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:25,286 Node[0] Epoch[30] Batch [0-20]	Speed: 37618.99 samples/sec	accuracy=nan
2023-03-20 16:23:27,019 Node[0] Epoch[30] Batch [20-40]	Speed: 37653.75 samples/sec	accuracy=nan
2023-03-20 16:23:28,752 Node[0] Epoch[30] Batch [40-60]	Speed: 37676.17 samples/sec	accuracy=nan
2023-03-20 16:23:30,486 Node[0] Epoch[30] Batch [60-80]	Speed: 37636.35 samples/sec	accuracy=nan
2023-03-20 16:23:32,222 Node[0] Epoch[30] Batch [80-100]	Speed: 37609.26 samples/sec	accuracy=nan
2023-03-20 16:23:33,957 Node[0] Epoch[30] Batch [100-120]	Speed: 37631.39 samples/sec	accuracy=nan
2023-03-20 16:23:35,690 Node[0] Epoch[30] Batch [120-140]	Speed: 37673.16 samples/sec	accuracy=nan
2023-03-20 16:23:37,424 Node[0] Epoch[30] Batch [140-160]	Speed: 37642.48 samples/sec	accuracy=nan
2023-03-20 16:23:39,156 Node[0] Epoch[30] Batch [160-180]	Speed: 37680.99 samples/sec	accuracy=nan
2023-03-20 16:23:40,890 Node[0] Epoch[30] Batch [180-200]	Speed: 37645.85 samples/sec	accuracy=nan
2023-03-20 16:23:42,622 Node[0] Epoch[30] Batch [200-220]	Speed: 37693.82 samples/sec	accuracy=nan
2023-03-20 16:23:44,356 Node[0] Epoch[30] Batch [220-240]	Speed: 37657.59 samples/sec	accuracy=nan
2023-03-20 16:23:46,088 Node[0] Epoch[30] Batch [240-260]	Speed: 37693.86 samples/sec	accuracy=nan
2023-03-20 16:23:47,822 Node[0] Epoch[30] Batch [260-280]	Speed: 37628.00 samples/sec	accuracy=nan
2023-03-20 16:23:49,556 Node[0] Epoch[30] Batch [280-300]	Speed: 37652.85 samples/sec	accuracy=nan
2023-03-20 16:23:51,292 Node[0] Epoch[30] Batch [300-320]	Speed: 37607.16 samples/sec	accuracy=nan
2023-03-20 16:23:53,026 Node[0] Epoch[30] Batch [320-340]	Speed: 37645.98 samples/sec	accuracy=nan
2023-03-20 16:23:54,763 Node[0] Epoch[30] Batch [340-360]	Speed: 37586.16 samples/sec	accuracy=nan
2023-03-20 16:23:56,501 Node[0] Epoch[30] Batch [360-380]	Speed: 37550.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347437453, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 16:23:57,454 Node[0] Epoch[30] Time cost=33.990
:::MLLOG {"namespace": "", "time_ms": 1679347437454, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37692.919151243834}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679347437536, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 16:23:58,276 Node[0] Epoch[30] Validation-accuracy=0.740800
2023-03-20 16:23:58,276 Node[0] Epoch[30] Validation-correct-count=2315.000000
2023-03-20 16:23:58,276 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347438386, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679347438386, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-20 16:23:58,386 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347438386, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 16:23:58,386 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347438386, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 16:23:58,386 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347438387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 16:23:58,387 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:23:58,386 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:00,129 Node[0] Epoch[31] Batch [0-20]	Speed: 37630.56 samples/sec	accuracy=nan
2023-03-20 16:24:01,865 Node[0] Epoch[31] Batch [20-40]	Speed: 37607.65 samples/sec	accuracy=nan
2023-03-20 16:24:03,603 Node[0] Epoch[31] Batch [40-60]	Speed: 37556.20 samples/sec	accuracy=nan
2023-03-20 16:24:05,336 Node[0] Epoch[31] Batch [60-80]	Speed: 37677.72 samples/sec	accuracy=nan
2023-03-20 16:24:07,074 Node[0] Epoch[31] Batch [80-100]	Speed: 37568.90 samples/sec	accuracy=nan
2023-03-20 16:24:08,808 Node[0] Epoch[31] Batch [100-120]	Speed: 37645.03 samples/sec	accuracy=nan
2023-03-20 16:24:10,541 Node[0] Epoch[31] Batch [120-140]	Speed: 37662.61 samples/sec	accuracy=nan
2023-03-20 16:24:12,276 Node[0] Epoch[31] Batch [140-160]	Speed: 37624.81 samples/sec	accuracy=nan
2023-03-20 16:24:14,010 Node[0] Epoch[31] Batch [160-180]	Speed: 37656.58 samples/sec	accuracy=nan
2023-03-20 16:24:15,743 Node[0] Epoch[31] Batch [180-200]	Speed: 37666.53 samples/sec	accuracy=nan
2023-03-20 16:24:17,474 Node[0] Epoch[31] Batch [200-220]	Speed: 37708.06 samples/sec	accuracy=nan
2023-03-20 16:24:19,204 Node[0] Epoch[31] Batch [220-240]	Speed: 37728.24 samples/sec	accuracy=nan
2023-03-20 16:24:20,937 Node[0] Epoch[31] Batch [240-260]	Speed: 37679.19 samples/sec	accuracy=nan
2023-03-20 16:24:22,669 Node[0] Epoch[31] Batch [260-280]	Speed: 37693.43 samples/sec	accuracy=nan
2023-03-20 16:24:24,401 Node[0] Epoch[31] Batch [280-300]	Speed: 37690.14 samples/sec	accuracy=nan
2023-03-20 16:24:26,133 Node[0] Epoch[31] Batch [300-320]	Speed: 37692.76 samples/sec	accuracy=nan
2023-03-20 16:24:27,862 Node[0] Epoch[31] Batch [320-340]	Speed: 37750.54 samples/sec	accuracy=nan
2023-03-20 16:24:29,595 Node[0] Epoch[31] Batch [340-360]	Speed: 37662.54 samples/sec	accuracy=nan
2023-03-20 16:24:31,325 Node[0] Epoch[31] Batch [360-380]	Speed: 37737.82 samples/sec	accuracy=nan
2023-03-20 16:24:32,363 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,364 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,364 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,364 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347472363, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 16:24:32,364 Node[0] Epoch[31] Time cost=33.978
:::MLLOG {"namespace": "", "time_ms": 1679347472365, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37705.96787849043}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-20 16:24:32,364 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,365 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,365 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347472365, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 16:24:32,365 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,365 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,366 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:32,367 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:24:34,184 Node[0] Epoch[32] Batch [0-20]	Speed: 37666.01 samples/sec	accuracy=nan
2023-03-20 16:24:35,920 Node[0] Epoch[32] Batch [20-40]	Speed: 37611.77 samples/sec	accuracy=nan
2023-03-20 16:24:37,653 Node[0] Epoch[32] Batch [40-60]	Speed: 37655.96 samples/sec	accuracy=nan
2023-03-20 16:24:39,385 Node[0] Epoch[32] Batch [60-80]	Speed: 37699.75 samples/sec	accuracy=nan
2023-03-20 16:24:41,119 Node[0] Epoch[32] Batch [80-100]	Speed: 37656.75 samples/sec	accuracy=nan
2023-03-20 16:24:42,854 Node[0] Epoch[32] Batch [100-120]	Speed: 37620.07 samples/sec	accuracy=nan
2023-03-20 16:24:44,587 Node[0] Epoch[32] Batch [120-140]	Speed: 37662.39 samples/sec	accuracy=nan
2023-03-20 16:24:46,322 Node[0] Epoch[32] Batch [140-160]	Speed: 37635.52 samples/sec	accuracy=nan
2023-03-20 16:24:48,057 Node[0] Epoch[32] Batch [160-180]	Speed: 37629.27 samples/sec	accuracy=nan
2023-03-20 16:24:49,791 Node[0] Epoch[32] Batch [180-200]	Speed: 37644.33 samples/sec	accuracy=nan
2023-03-20 16:24:51,520 Node[0] Epoch[32] Batch [200-220]	Speed: 37753.41 samples/sec	accuracy=nan
2023-03-20 16:24:53,253 Node[0] Epoch[32] Batch [220-240]	Speed: 37673.49 samples/sec	accuracy=nan
2023-03-20 16:24:54,987 Node[0] Epoch[32] Batch [240-260]	Speed: 37646.02 samples/sec	accuracy=nan
2023-03-20 16:24:56,722 Node[0] Epoch[32] Batch [260-280]	Speed: 37611.30 samples/sec	accuracy=nan
2023-03-20 16:24:58,454 Node[0] Epoch[32] Batch [280-300]	Speed: 37697.26 samples/sec	accuracy=nan
2023-03-20 16:25:00,188 Node[0] Epoch[32] Batch [300-320]	Speed: 37637.93 samples/sec	accuracy=nan
2023-03-20 16:25:01,924 Node[0] Epoch[32] Batch [320-340]	Speed: 37603.13 samples/sec	accuracy=nan
2023-03-20 16:25:03,662 Node[0] Epoch[32] Batch [340-360]	Speed: 37566.20 samples/sec	accuracy=nan
2023-03-20 16:25:05,397 Node[0] Epoch[32] Batch [360-380]	Speed: 37619.84 samples/sec	accuracy=nan
2023-03-20 16:25:06,348 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,348 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,348 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347506348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 16:25:06,349 Node[0] Epoch[32] Time cost=33.984
2023-03-20 16:25:06,349 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347506349, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37699.428103455364}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679347506349, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 16:25:06,349 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,349 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,349 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,349 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,349 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,350 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,350 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,350 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,350 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,350 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,351 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:06,351 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:08,173 Node[0] Epoch[33] Batch [0-20]	Speed: 37627.21 samples/sec	accuracy=nan
2023-03-20 16:25:09,904 Node[0] Epoch[33] Batch [20-40]	Speed: 37699.17 samples/sec	accuracy=nan
2023-03-20 16:25:11,640 Node[0] Epoch[33] Batch [40-60]	Speed: 37613.36 samples/sec	accuracy=nan
2023-03-20 16:25:13,375 Node[0] Epoch[33] Batch [60-80]	Speed: 37621.05 samples/sec	accuracy=nan
2023-03-20 16:25:15,106 Node[0] Epoch[33] Batch [80-100]	Speed: 37707.74 samples/sec	accuracy=nan
2023-03-20 16:25:16,839 Node[0] Epoch[33] Batch [100-120]	Speed: 37681.20 samples/sec	accuracy=nan
2023-03-20 16:25:18,572 Node[0] Epoch[33] Batch [120-140]	Speed: 37664.29 samples/sec	accuracy=nan
2023-03-20 16:25:20,303 Node[0] Epoch[33] Batch [140-160]	Speed: 37717.06 samples/sec	accuracy=nan
2023-03-20 16:25:22,034 Node[0] Epoch[33] Batch [160-180]	Speed: 37693.74 samples/sec	accuracy=nan
2023-03-20 16:25:23,769 Node[0] Epoch[33] Batch [180-200]	Speed: 37633.56 samples/sec	accuracy=nan
2023-03-20 16:25:25,501 Node[0] Epoch[33] Batch [200-220]	Speed: 37694.90 samples/sec	accuracy=nan
2023-03-20 16:25:27,232 Node[0] Epoch[33] Batch [220-240]	Speed: 37709.34 samples/sec	accuracy=nan
2023-03-20 16:25:28,965 Node[0] Epoch[33] Batch [240-260]	Speed: 37661.72 samples/sec	accuracy=nan
2023-03-20 16:25:30,701 Node[0] Epoch[33] Batch [260-280]	Speed: 37613.85 samples/sec	accuracy=nan
2023-03-20 16:25:32,436 Node[0] Epoch[33] Batch [280-300]	Speed: 37629.84 samples/sec	accuracy=nan
2023-03-20 16:25:34,172 Node[0] Epoch[33] Batch [300-320]	Speed: 37603.50 samples/sec	accuracy=nan
2023-03-20 16:25:35,906 Node[0] Epoch[33] Batch [320-340]	Speed: 37637.37 samples/sec	accuracy=nan
2023-03-20 16:25:37,641 Node[0] Epoch[33] Batch [340-360]	Speed: 37634.06 samples/sec	accuracy=nan
2023-03-20 16:25:39,374 Node[0] Epoch[33] Batch [360-380]	Speed: 37659.53 samples/sec	accuracy=nan
2023-03-20 16:25:40,411 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,411 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,411 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347540411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 16:25:40,412 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,412 Node[0] Epoch[33] Time cost=34.063
:::MLLOG {"namespace": "", "time_ms": 1679347540412, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37612.058443900336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 16:25:40,412 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,412 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679347540412, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 16:25:40,412 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,412 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,413 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,413 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,413 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,413 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,413 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,414 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,414 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:40,414 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 16:25:42,232 Node[0] Epoch[34] Batch [0-20]	Speed: 37651.78 samples/sec	accuracy=nan
2023-03-20 16:25:43,966 Node[0] Epoch[34] Batch [20-40]	Speed: 37643.11 samples/sec	accuracy=nan
2023-03-20 16:25:45,702 Node[0] Epoch[34] Batch [40-60]	Speed: 37616.89 samples/sec	accuracy=nan
2023-03-20 16:25:47,433 Node[0] Epoch[34] Batch [60-80]	Speed: 37708.35 samples/sec	accuracy=nan
2023-03-20 16:25:49,166 Node[0] Epoch[34] Batch [80-100]	Speed: 37671.29 samples/sec	accuracy=nan
2023-03-20 16:25:50,901 Node[0] Epoch[34] Batch [100-120]	Speed: 37624.79 samples/sec	accuracy=nan
2023-03-20 16:25:52,634 Node[0] Epoch[34] Batch [120-140]	Speed: 37672.09 samples/sec	accuracy=nan
2023-03-20 16:25:54,368 Node[0] Epoch[34] Batch [140-160]	Speed: 37636.88 samples/sec	accuracy=nan
2023-03-20 16:25:56,100 Node[0] Epoch[34] Batch [160-180]	Speed: 37688.67 samples/sec	accuracy=nan
2023-03-20 16:25:57,836 Node[0] Epoch[34] Batch [180-200]	Speed: 37616.76 samples/sec	accuracy=nan
2023-03-20 16:25:59,566 Node[0] Epoch[34] Batch [200-220]	Speed: 37727.47 samples/sec	accuracy=nan
2023-03-20 16:26:01,303 Node[0] Epoch[34] Batch [220-240]	Speed: 37587.63 samples/sec	accuracy=nan
2023-03-20 16:26:03,037 Node[0] Epoch[34] Batch [240-260]	Speed: 37630.88 samples/sec	accuracy=nan
2023-03-20 16:26:04,770 Node[0] Epoch[34] Batch [260-280]	Speed: 37671.09 samples/sec	accuracy=nan
2023-03-20 16:26:06,507 Node[0] Epoch[34] Batch [280-300]	Speed: 37585.63 samples/sec	accuracy=nan
2023-03-20 16:26:08,238 Node[0] Epoch[34] Batch [300-320]	Speed: 37703.90 samples/sec	accuracy=nan
2023-03-20 16:26:09,975 Node[0] Epoch[34] Batch [320-340]	Speed: 37591.98 samples/sec	accuracy=nan
2023-03-20 16:26:11,706 Node[0] Epoch[34] Batch [340-360]	Speed: 37706.90 samples/sec	accuracy=nan
2023-03-20 16:26:13,439 Node[0] Epoch[34] Batch [360-380]	Speed: 37671.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679347574478, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 16:26:14,479 Node[0] Epoch[34] Time cost=34.066
:::MLLOG {"namespace": "", "time_ms": 1679347574479, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37607.9635825056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679347574561, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 16:26:15,321 Node[0] Epoch[34] Validation-accuracy=0.766080
2023-03-20 16:26:15,321 Node[0] Epoch[34] Validation-correct-count=2394.000000
2023-03-20 16:26:15,321 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679347575356, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679347575356, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7623, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679347575356, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679347575356, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347596
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:36 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:36 PM
+ result=1368
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347596
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:36 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:36 PM
+ result=1368
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM'
RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347596
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:36 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:36 PM
+ result=1368
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347596
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:36 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:36 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:36 PM
+ result=1368
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1368,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end=1679347597
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
++ date '+%Y-%m-%d %r'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ end=1679347597
+ [[ 0 != 0 ]]
++ date '+%Y-%m-%d %r'
++ date +%s
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347597
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:37 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:37 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:37 PM
+ result=1369
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1369,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347598
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:38 PM
+ result=1370
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1370,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1370,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679347598
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 04:26:38 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 04:26:38 PM'
ENDING TIMING RUN AT 2023-03-20 04:26:38 PM
+ result=1370
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1370,root,2023-03-20 04:03:48 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1370,root,2023-03-20 04:03:48 PM'
+ export PROFILE=0
+ PROFILE=0
