+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414505148, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414505183, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414505185, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414505186, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414505188, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414518253, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414524333, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414524368, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414524370, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414524371, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414524373, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414536888, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414541883, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414541918, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414541920, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414541921, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414541923, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414553480, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414558447, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414558482, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414558483, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414558485, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414558486, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679414570116, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=25909
+ SEED=25909
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ KVSTORE=horovod
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ start=1679414571
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date '+%Y-%m-%d %r'
+ start=1679414571
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ start_fmt='2023-03-21 11:02:51 AM'
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ PROFILE_ALL_LOCAL_RANKS=0
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ THR=0.759
+ [[ 0 == 1 ]]
+ readonly global_rank=0
+ global_rank=0
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ readonly local_rank=0
+ local_rank=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ SLURM_NTASKS_PER_NODE=4
+ [[ 0 -ge 1 ]]
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ start=1679414571
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679414571
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ source ./config_4xR750xax4A100.sh
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ source ./config_4xR750xax4A100.sh
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+++ dirname ./config_4xR750xax4A100.sh
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ dirname ./config_4xR750xax4A100.sh
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ sed 's/\.sh$//'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ date +%s
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ date +%s
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ date +%s
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679414571
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679414571
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ date '+%Y-%m-%d %r'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ start=1679414571
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
++ date '+%Y-%m-%d %r'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ start=1679414571
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ start=1679414571
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ DALI_TMP_BUFFER_HINT=355568328
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ date '+%Y-%m-%d %r'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ date '+%Y-%m-%d %r'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ date +%s
++ date +%s
++ seq 0 3
++ tr '\n' ,
+ start_fmt='2023-03-21 11:02:51 AM'
++ sed 's/,$//'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ start_fmt='2023-03-21 11:02:51 AM'
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ start_fmt='2023-03-21 11:02:51 AM'
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ readonly global_rank=1
+ NODALI=0
+ NUMEXAMPLES=
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ readonly global_rank=1
+ global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ KVSTORE=horovod
+ LR=10.5
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ date +%s
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ seq 0 3
+ [[ 0 == 1 ]]
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ start=1679414571
+ start=1679414571
+ start=1679414571
++ date +%s
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679414571
+ start=1679414571
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:02:51 AM'
+ start_fmt='2023-03-21 11:02:51 AM'
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ readonly global_rank=2
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ start_fmt='2023-03-21 11:02:51 AM'
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ GPUS=0,1,2,3
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ readonly global_rank=1
+ global_rank=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ readonly local_rank=0
+ local_rank=0
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ [[ '' -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ start_fmt='2023-03-21 11:02:51 AM'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
running benchmark
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
running benchmark
+ readonly global_rank=1
+ global_rank=1
+ [[ 0 -ge 1 ]]
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ [[ 0 -ge 1 ]]
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679414571
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
++ date '+%Y-%m-%d %r'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ seq 0 3
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ seq 0 3
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ tr '\n' ,
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ tr '\n' ,
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ tr '\n' ,
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
running benchmark
+ [[ '' -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ sed 's/,$//'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ start=1679414571
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ start_fmt='2023-03-21 11:02:51 AM'
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ [[ '' -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
+ start_fmt='2023-03-21 11:02:51 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:02:51 AM'
++ sed 's/,$//'
STARTING TIMING RUN AT 2023-03-21 11:02:51 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25909
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ GPUS=0,1,2,3
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ seq 0 3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
++ tr '\n' ,
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25909 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:71283] MCW rank 3 is not bound (or bound to all available processors)
[node044:71290] MCW rank 0 is not bound (or bound to all available processors)
[node044:71282] MCW rank 2 is not bound (or bound to all available processors)
[node044:71285] MCW rank 1 is not bound (or bound to all available processors)
[node045:64487] MCW rank 4 is not bound (or bound to all available processors)
[node045:64486] MCW rank 5 is not bound (or bound to all available processors)
[node045:64488] MCW rank 6 is not bound (or bound to all available processors)
[node045:64493] MCW rank 7 is not bound (or bound to all available processors)
[node046:59066] MCW rank 9 is not bound (or bound to all available processors)
[node047:60135] MCW rank 12 is not bound (or bound to all available processors)
[node046:59069] MCW rank 8 is not bound (or bound to all available processors)
[node046:59067] MCW rank 10 is not bound (or bound to all available processors)
[node046:59068] MCW rank 11 is not bound (or bound to all available processors)
[node047:60134] MCW rank 15 is not bound (or bound to all available processors)
[node047:60137] MCW rank 14 is not bound (or bound to all available processors)
[node047:60136] MCW rank 13 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679414576608, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679414584201, "event_type": "POINT_IN_TIME", "key": "seed", "value": 25909, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:04] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:03:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679414586834, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679414591386, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591387, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591388, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591389, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591390, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591391, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591392, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591393, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591394, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591395, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591396, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591397, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591398, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591399, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591400, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591401, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591402, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591403, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591404, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591405, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591406, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591407, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591408, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591409, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591410, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591410, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591410, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591411, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591411, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591411, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591411, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591411, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591412, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591412, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591412, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591412, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591413, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591413, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591413, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591413, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591414, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591414, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591414, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591414, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591415, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591415, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591415, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591415, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591416, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591416, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591416, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591416, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591416, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591417, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591417, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591417, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591417, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591418, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591418, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591418, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591418, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591419, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591419, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591419, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591420, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591420, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591420, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591421, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591421, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591421, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591421, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591422, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591422, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591422, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591422, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591423, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591423, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591423, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591423, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591424, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591424, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591424, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591424, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591424, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591425, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591425, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591425, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591425, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591426, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679414591426, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:03:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,672 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42427, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,672 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11711, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,672 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63500, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,673 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37343, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,673 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9256, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,673 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26857, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,673 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17357, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,674 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17613, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,674 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50298, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,674 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39023, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,674 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29610, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414594673, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,674 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38862, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,675 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52877, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,675 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54565, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679414594675, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,675 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11844, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679414594676, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:03:14,677 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38432, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679414681813, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679414681814, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679414681814, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679414682385, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679414682465, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414682465, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 11:04:44,057 Node[0] Epoch[0] Batch [0-20]	Speed: 41194.81 samples/sec	accuracy=nan
2023-03-21 11:04:45,625 Node[0] Epoch[0] Batch [20-40]	Speed: 41654.65 samples/sec	accuracy=nan
2023-03-21 11:04:47,193 Node[0] Epoch[0] Batch [40-60]	Speed: 41608.47 samples/sec	accuracy=nan
2023-03-21 11:04:48,764 Node[0] Epoch[0] Batch [60-80]	Speed: 41555.24 samples/sec	accuracy=nan
2023-03-21 11:04:50,334 Node[0] Epoch[0] Batch [80-100]	Speed: 41593.62 samples/sec	accuracy=nan
2023-03-21 11:04:51,903 Node[0] Epoch[0] Batch [100-120]	Speed: 41604.37 samples/sec	accuracy=nan
2023-03-21 11:04:53,473 Node[0] Epoch[0] Batch [120-140]	Speed: 41590.72 samples/sec	accuracy=nan
2023-03-21 11:04:55,049 Node[0] Epoch[0] Batch [140-160]	Speed: 41411.95 samples/sec	accuracy=nan
2023-03-21 11:04:56,623 Node[0] Epoch[0] Batch [160-180]	Speed: 41467.32 samples/sec	accuracy=nan
2023-03-21 11:04:58,202 Node[0] Epoch[0] Batch [180-200]	Speed: 41351.85 samples/sec	accuracy=nan
2023-03-21 11:04:59,784 Node[0] Epoch[0] Batch [200-220]	Speed: 41269.49 samples/sec	accuracy=nan
2023-03-21 11:05:01,363 Node[0] Epoch[0] Batch [220-240]	Speed: 41326.15 samples/sec	accuracy=nan
2023-03-21 11:05:02,944 Node[0] Epoch[0] Batch [240-260]	Speed: 41303.08 samples/sec	accuracy=nan
2023-03-21 11:05:04,529 Node[0] Epoch[0] Batch [260-280]	Speed: 41174.07 samples/sec	accuracy=nan
2023-03-21 11:05:06,112 Node[0] Epoch[0] Batch [280-300]	Speed: 41252.22 samples/sec	accuracy=nan
2023-03-21 11:05:07,693 Node[0] Epoch[0] Batch [300-320]	Speed: 41287.60 samples/sec	accuracy=nan
2023-03-21 11:05:09,273 Node[0] Epoch[0] Batch [320-340]	Speed: 41300.01 samples/sec	accuracy=nan
2023-03-21 11:05:10,853 Node[0] Epoch[0] Batch [340-360]	Speed: 41334.10 samples/sec	accuracy=nan
2023-03-21 11:05:12,443 Node[0] Epoch[0] Batch [360-380]	Speed: 41049.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414713393, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 11:05:13,394 Node[0] Epoch[0] Time cost=30.929
:::MLLOG {"namespace": "", "time_ms": 1679414713394, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41423.347569487065}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 11:05:13,394 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,394 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:13,395 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414713395, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 11:05:13,396 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:15,059 Node[0] Epoch[1] Batch [0-20]	Speed: 39442.68 samples/sec	accuracy=nan
2023-03-21 11:05:16,641 Node[0] Epoch[1] Batch [20-40]	Speed: 41255.87 samples/sec	accuracy=nan
2023-03-21 11:05:18,226 Node[0] Epoch[1] Batch [40-60]	Speed: 41187.08 samples/sec	accuracy=nan
2023-03-21 11:05:19,813 Node[0] Epoch[1] Batch [60-80]	Speed: 41133.06 samples/sec	accuracy=nan
2023-03-21 11:05:21,398 Node[0] Epoch[1] Batch [80-100]	Speed: 41190.23 samples/sec	accuracy=nan
2023-03-21 11:05:22,982 Node[0] Epoch[1] Batch [100-120]	Speed: 41203.35 samples/sec	accuracy=nan
2023-03-21 11:05:24,566 Node[0] Epoch[1] Batch [120-140]	Speed: 41212.43 samples/sec	accuracy=nan
2023-03-21 11:05:26,154 Node[0] Epoch[1] Batch [140-160]	Speed: 41127.19 samples/sec	accuracy=nan
2023-03-21 11:05:30,125 Node[0] Epoch[1] Batch [160-180]	Speed: 16439.27 samples/sec	accuracy=nan
2023-03-21 11:05:31,707 Node[0] Epoch[1] Batch [180-200]	Speed: 41247.07 samples/sec	accuracy=nan
2023-03-21 11:05:35,684 Node[0] Epoch[1] Batch [200-220]	Speed: 16417.66 samples/sec	accuracy=nan
2023-03-21 11:05:39,672 Node[0] Epoch[1] Batch [220-240]	Speed: 16365.96 samples/sec	accuracy=nan
2023-03-21 11:05:41,252 Node[0] Epoch[1] Batch [240-260]	Speed: 41313.97 samples/sec	accuracy=nan
2023-03-21 11:05:45,192 Node[0] Epoch[1] Batch [260-280]	Speed: 16569.88 samples/sec	accuracy=nan
2023-03-21 11:05:46,772 Node[0] Epoch[1] Batch [280-300]	Speed: 41319.26 samples/sec	accuracy=nan
2023-03-21 11:05:48,349 Node[0] Epoch[1] Batch [300-320]	Speed: 41393.62 samples/sec	accuracy=nan
2023-03-21 11:05:49,934 Node[0] Epoch[1] Batch [320-340]	Speed: 41186.55 samples/sec	accuracy=nan
2023-03-21 11:05:51,518 Node[0] Epoch[1] Batch [340-360]	Speed: 41222.31 samples/sec	accuracy=nan
2023-03-21 11:05:53,107 Node[0] Epoch[1] Batch [360-380]	Speed: 41066.59 samples/sec	accuracy=nan
2023-03-21 11:05:54,057 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,057 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,057 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,057 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,058 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414754058, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 11:05:54,059 Node[0] Epoch[1] Time cost=40.663
:::MLLOG {"namespace": "", "time_ms": 1679414754059, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 31506.737962637395}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679414754059, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 11:05:54,059 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:54,059 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:05:55,722 Node[0] Epoch[2] Batch [0-20]	Speed: 41202.74 samples/sec	accuracy=nan
2023-03-21 11:05:57,308 Node[0] Epoch[2] Batch [20-40]	Speed: 41172.77 samples/sec	accuracy=nan
2023-03-21 11:05:58,891 Node[0] Epoch[2] Batch [40-60]	Speed: 41237.60 samples/sec	accuracy=nan
2023-03-21 11:06:00,475 Node[0] Epoch[2] Batch [60-80]	Speed: 41211.72 samples/sec	accuracy=nan
2023-03-21 11:06:02,064 Node[0] Epoch[2] Batch [80-100]	Speed: 41061.62 samples/sec	accuracy=nan
2023-03-21 11:06:03,653 Node[0] Epoch[2] Batch [100-120]	Speed: 41104.71 samples/sec	accuracy=nan
2023-03-21 11:06:07,618 Node[0] Epoch[2] Batch [120-140]	Speed: 16463.10 samples/sec	accuracy=nan
2023-03-21 11:06:13,973 Node[0] Epoch[2] Batch [140-160]	Speed: 10271.74 samples/sec	accuracy=nan
2023-03-21 11:06:20,399 Node[0] Epoch[2] Batch [160-180]	Speed: 10159.22 samples/sec	accuracy=nan
2023-03-21 11:06:29,213 Node[0] Epoch[2] Batch [180-200]	Speed: 7406.29 samples/sec	accuracy=nan
2023-03-21 11:06:38,115 Node[0] Epoch[2] Batch [200-220]	Speed: 7333.43 samples/sec	accuracy=nan
2023-03-21 11:06:39,615 Node[0] Epoch[2] Batch [220-240]	Speed: 43496.71 samples/sec	accuracy=nan
2023-03-21 11:06:41,184 Node[0] Epoch[2] Batch [240-260]	Speed: 41624.56 samples/sec	accuracy=nan
2023-03-21 11:06:42,755 Node[0] Epoch[2] Batch [260-280]	Speed: 41535.27 samples/sec	accuracy=nan
2023-03-21 11:06:44,331 Node[0] Epoch[2] Batch [280-300]	Speed: 41434.20 samples/sec	accuracy=nan
2023-03-21 11:06:45,905 Node[0] Epoch[2] Batch [300-320]	Speed: 41472.74 samples/sec	accuracy=nan
2023-03-21 11:06:49,851 Node[0] Epoch[2] Batch [320-340]	Speed: 16541.26 samples/sec	accuracy=nan
2023-03-21 11:06:51,425 Node[0] Epoch[2] Batch [340-360]	Speed: 41481.92 samples/sec	accuracy=nan
2023-03-21 11:06:53,001 Node[0] Epoch[2] Batch [360-380]	Speed: 41426.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414813865, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 11:06:53,866 Node[0] Epoch[2] Time cost=59.806
:::MLLOG {"namespace": "", "time_ms": 1679414813866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21421.921651698176}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414813939, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 11:06:53,939 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,939 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:53,940 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,620 Node[0] Epoch[2] Validation-accuracy=0.296960
2023-03-21 11:06:54,621 Node[0] Epoch[2] Validation-correct-count=928.000000
2023-03-21 11:06:54,621 Node[0] Epoch[2] Validation-total-count=3125.000000
2023-03-21 11:06:54,733 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:54,733 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414814733, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414814734, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.30432, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679414814734, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679414814734, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679414814734, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 11:06:54,734 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:06:56,327 Node[0] Epoch[3] Batch [0-20]	Speed: 41282.38 samples/sec	accuracy=nan
2023-03-21 11:06:57,905 Node[0] Epoch[3] Batch [20-40]	Speed: 41349.12 samples/sec	accuracy=nan
2023-03-21 11:06:59,484 Node[0] Epoch[3] Batch [40-60]	Speed: 41347.72 samples/sec	accuracy=nan
2023-03-21 11:07:01,066 Node[0] Epoch[3] Batch [60-80]	Speed: 41276.59 samples/sec	accuracy=nan
2023-03-21 11:07:02,647 Node[0] Epoch[3] Batch [80-100]	Speed: 41278.44 samples/sec	accuracy=nan
2023-03-21 11:07:04,227 Node[0] Epoch[3] Batch [100-120]	Speed: 41334.64 samples/sec	accuracy=nan
2023-03-21 11:07:05,808 Node[0] Epoch[3] Batch [120-140]	Speed: 41279.33 samples/sec	accuracy=nan
2023-03-21 11:07:07,391 Node[0] Epoch[3] Batch [140-160]	Speed: 41238.67 samples/sec	accuracy=nan
2023-03-21 11:07:08,971 Node[0] Epoch[3] Batch [160-180]	Speed: 41308.73 samples/sec	accuracy=nan
2023-03-21 11:07:10,560 Node[0] Epoch[3] Batch [180-200]	Speed: 41089.09 samples/sec	accuracy=nan
2023-03-21 11:07:12,143 Node[0] Epoch[3] Batch [200-220]	Speed: 41225.62 samples/sec	accuracy=nan
2023-03-21 11:07:13,734 Node[0] Epoch[3] Batch [220-240]	Speed: 41034.41 samples/sec	accuracy=nan
2023-03-21 11:07:15,326 Node[0] Epoch[3] Batch [240-260]	Speed: 41007.25 samples/sec	accuracy=nan
2023-03-21 11:07:16,913 Node[0] Epoch[3] Batch [260-280]	Speed: 41130.69 samples/sec	accuracy=nan
2023-03-21 11:07:18,501 Node[0] Epoch[3] Batch [280-300]	Speed: 41126.26 samples/sec	accuracy=nan
2023-03-21 11:07:20,089 Node[0] Epoch[3] Batch [300-320]	Speed: 41108.86 samples/sec	accuracy=nan
2023-03-21 11:07:21,672 Node[0] Epoch[3] Batch [320-340]	Speed: 41226.93 samples/sec	accuracy=nan
2023-03-21 11:07:23,260 Node[0] Epoch[3] Batch [340-360]	Speed: 41113.54 samples/sec	accuracy=nan
2023-03-21 11:07:24,845 Node[0] Epoch[3] Batch [360-380]	Speed: 41172.24 samples/sec	accuracy=nan
2023-03-21 11:07:25,797 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414845797, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 11:07:25,797 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,797 Node[0] Epoch[3] Time cost=31.063
2023-03-21 11:07:25,797 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414845797, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41244.22374447192}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-21 11:07:25,797 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414845798, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 11:07:25,798 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:25,798 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:27,468 Node[0] Epoch[4] Batch [0-20]	Speed: 41054.42 samples/sec	accuracy=nan
2023-03-21 11:07:29,055 Node[0] Epoch[4] Batch [20-40]	Speed: 41145.01 samples/sec	accuracy=nan
2023-03-21 11:07:30,647 Node[0] Epoch[4] Batch [40-60]	Speed: 40993.71 samples/sec	accuracy=nan
2023-03-21 11:07:32,236 Node[0] Epoch[4] Batch [60-80]	Speed: 41088.71 samples/sec	accuracy=nan
2023-03-21 11:07:33,823 Node[0] Epoch[4] Batch [80-100]	Speed: 41134.50 samples/sec	accuracy=nan
2023-03-21 11:07:35,415 Node[0] Epoch[4] Batch [100-120]	Speed: 41015.53 samples/sec	accuracy=nan
2023-03-21 11:07:37,002 Node[0] Epoch[4] Batch [120-140]	Speed: 41123.76 samples/sec	accuracy=nan
2023-03-21 11:07:38,595 Node[0] Epoch[4] Batch [140-160]	Speed: 40975.60 samples/sec	accuracy=nan
2023-03-21 11:07:40,182 Node[0] Epoch[4] Batch [160-180]	Speed: 41128.32 samples/sec	accuracy=nan
2023-03-21 11:07:41,779 Node[0] Epoch[4] Batch [180-200]	Speed: 40895.10 samples/sec	accuracy=nan
2023-03-21 11:07:43,368 Node[0] Epoch[4] Batch [200-220]	Speed: 41083.55 samples/sec	accuracy=nan
2023-03-21 11:07:44,963 Node[0] Epoch[4] Batch [220-240]	Speed: 40921.75 samples/sec	accuracy=nan
2023-03-21 11:07:46,550 Node[0] Epoch[4] Batch [240-260]	Speed: 41141.65 samples/sec	accuracy=nan
2023-03-21 11:07:48,139 Node[0] Epoch[4] Batch [260-280]	Speed: 41077.07 samples/sec	accuracy=nan
2023-03-21 11:07:49,726 Node[0] Epoch[4] Batch [280-300]	Speed: 41115.26 samples/sec	accuracy=nan
2023-03-21 11:07:51,319 Node[0] Epoch[4] Batch [300-320]	Speed: 40980.65 samples/sec	accuracy=nan
2023-03-21 11:07:52,909 Node[0] Epoch[4] Batch [320-340]	Speed: 41059.89 samples/sec	accuracy=nan
2023-03-21 11:07:54,500 Node[0] Epoch[4] Batch [340-360]	Speed: 41027.81 samples/sec	accuracy=nan
2023-03-21 11:07:56,092 Node[0] Epoch[4] Batch [360-380]	Speed: 41027.24 samples/sec	accuracy=nan
2023-03-21 11:07:56,963 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,963 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,963 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,963 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:56,964 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414876963, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 11:07:56,965 Node[0] Epoch[4] Time cost=31.167
2023-03-21 11:07:56,964 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414876965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41107.08038478574}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679414876965, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 11:07:56,965 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:07:58,637 Node[0] Epoch[5] Batch [0-20]	Speed: 41056.20 samples/sec	accuracy=nan
2023-03-21 11:08:00,224 Node[0] Epoch[5] Batch [20-40]	Speed: 41122.11 samples/sec	accuracy=nan
2023-03-21 11:08:01,817 Node[0] Epoch[5] Batch [40-60]	Speed: 40990.97 samples/sec	accuracy=nan
2023-03-21 11:08:03,405 Node[0] Epoch[5] Batch [60-80]	Speed: 41087.16 samples/sec	accuracy=nan
2023-03-21 11:08:04,995 Node[0] Epoch[5] Batch [80-100]	Speed: 41058.05 samples/sec	accuracy=nan
2023-03-21 11:08:06,587 Node[0] Epoch[5] Batch [100-120]	Speed: 41005.90 samples/sec	accuracy=nan
2023-03-21 11:08:08,177 Node[0] Epoch[5] Batch [120-140]	Speed: 41075.30 samples/sec	accuracy=nan
2023-03-21 11:08:09,766 Node[0] Epoch[5] Batch [140-160]	Speed: 41059.14 samples/sec	accuracy=nan
2023-03-21 11:08:11,357 Node[0] Epoch[5] Batch [160-180]	Speed: 41047.87 samples/sec	accuracy=nan
2023-03-21 11:08:12,946 Node[0] Epoch[5] Batch [180-200]	Speed: 41069.70 samples/sec	accuracy=nan
2023-03-21 11:08:14,536 Node[0] Epoch[5] Batch [200-220]	Speed: 41056.91 samples/sec	accuracy=nan
2023-03-21 11:08:16,130 Node[0] Epoch[5] Batch [220-240]	Speed: 40964.58 samples/sec	accuracy=nan
2023-03-21 11:08:17,721 Node[0] Epoch[5] Batch [240-260]	Speed: 41035.33 samples/sec	accuracy=nan
2023-03-21 11:08:19,309 Node[0] Epoch[5] Batch [260-280]	Speed: 41099.08 samples/sec	accuracy=nan
2023-03-21 11:08:20,897 Node[0] Epoch[5] Batch [280-300]	Speed: 41119.39 samples/sec	accuracy=nan
2023-03-21 11:08:22,491 Node[0] Epoch[5] Batch [300-320]	Speed: 40953.43 samples/sec	accuracy=nan
2023-03-21 11:08:24,082 Node[0] Epoch[5] Batch [320-340]	Speed: 41011.12 samples/sec	accuracy=nan
2023-03-21 11:08:25,671 Node[0] Epoch[5] Batch [340-360]	Speed: 41091.06 samples/sec	accuracy=nan
2023-03-21 11:08:27,260 Node[0] Epoch[5] Batch [360-380]	Speed: 41092.17 samples/sec	accuracy=nan
2023-03-21 11:08:28,213 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,213 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414908213, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 11:08:28,213 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[0] Epoch[5] Time cost=31.249
2023-03-21 11:08:28,214 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414908214, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40999.19201655909}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-21 11:08:28,213 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,213 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414908214, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 11:08:28,214 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:28,214 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:08:29,890 Node[0] Epoch[6] Batch [0-20]	Speed: 40911.88 samples/sec	accuracy=nan
2023-03-21 11:08:31,485 Node[0] Epoch[6] Batch [20-40]	Speed: 40942.06 samples/sec	accuracy=nan
2023-03-21 11:08:33,076 Node[0] Epoch[6] Batch [40-60]	Speed: 41015.96 samples/sec	accuracy=nan
2023-03-21 11:08:34,668 Node[0] Epoch[6] Batch [60-80]	Speed: 41007.10 samples/sec	accuracy=nan
2023-03-21 11:08:36,258 Node[0] Epoch[6] Batch [80-100]	Speed: 41069.70 samples/sec	accuracy=nan
2023-03-21 11:08:37,852 Node[0] Epoch[6] Batch [100-120]	Speed: 40953.20 samples/sec	accuracy=nan
2023-03-21 11:08:39,444 Node[0] Epoch[6] Batch [120-140]	Speed: 40988.33 samples/sec	accuracy=nan
2023-03-21 11:08:41,033 Node[0] Epoch[6] Batch [140-160]	Speed: 41082.76 samples/sec	accuracy=nan
2023-03-21 11:08:42,624 Node[0] Epoch[6] Batch [160-180]	Speed: 41031.76 samples/sec	accuracy=nan
2023-03-21 11:08:44,216 Node[0] Epoch[6] Batch [180-200]	Speed: 41012.84 samples/sec	accuracy=nan
2023-03-21 11:08:45,805 Node[0] Epoch[6] Batch [200-220]	Speed: 41070.38 samples/sec	accuracy=nan
2023-03-21 11:08:47,397 Node[0] Epoch[6] Batch [220-240]	Speed: 41024.50 samples/sec	accuracy=nan
2023-03-21 11:08:48,988 Node[0] Epoch[6] Batch [240-260]	Speed: 41034.84 samples/sec	accuracy=nan
2023-03-21 11:08:50,580 Node[0] Epoch[6] Batch [260-280]	Speed: 41006.11 samples/sec	accuracy=nan
2023-03-21 11:08:52,183 Node[0] Epoch[6] Batch [280-300]	Speed: 40703.59 samples/sec	accuracy=nan
2023-03-21 11:08:53,777 Node[0] Epoch[6] Batch [300-320]	Speed: 40961.16 samples/sec	accuracy=nan
2023-03-21 11:08:55,369 Node[0] Epoch[6] Batch [320-340]	Speed: 41006.87 samples/sec	accuracy=nan
2023-03-21 11:08:56,964 Node[0] Epoch[6] Batch [340-360]	Speed: 40937.20 samples/sec	accuracy=nan
2023-03-21 11:08:58,553 Node[0] Epoch[6] Batch [360-380]	Speed: 41076.76 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414939430, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 11:08:59,432 Node[0] Epoch[6] Time cost=31.217
:::MLLOG {"namespace": "", "time_ms": 1679414939432, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41040.2058910555}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679414939507, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 11:09:00,241 Node[0] Epoch[6] Validation-accuracy=0.440640
2023-03-21 11:09:00,241 Node[0] Epoch[6] Validation-correct-count=1377.000000
2023-03-21 11:09:00,241 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679414940352, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-21 11:09:00,352 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414940352, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44336, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679414940352, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679414940353, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 11:09:00,352 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:00,352 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414940353, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 11:09:00,353 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:01,952 Node[0] Epoch[7] Batch [0-20]	Speed: 41046.51 samples/sec	accuracy=nan
2023-03-21 11:09:03,547 Node[0] Epoch[7] Batch [20-40]	Speed: 40936.45 samples/sec	accuracy=nan
2023-03-21 11:09:05,142 Node[0] Epoch[7] Batch [40-60]	Speed: 40915.69 samples/sec	accuracy=nan
2023-03-21 11:09:06,734 Node[0] Epoch[7] Batch [60-80]	Speed: 41001.70 samples/sec	accuracy=nan
2023-03-21 11:09:08,327 Node[0] Epoch[7] Batch [80-100]	Speed: 40989.49 samples/sec	accuracy=nan
2023-03-21 11:09:09,917 Node[0] Epoch[7] Batch [100-120]	Speed: 41055.23 samples/sec	accuracy=nan
2023-03-21 11:09:11,506 Node[0] Epoch[7] Batch [120-140]	Speed: 41069.90 samples/sec	accuracy=nan
2023-03-21 11:09:13,098 Node[0] Epoch[7] Batch [140-160]	Speed: 41010.36 samples/sec	accuracy=nan
2023-03-21 11:09:14,689 Node[0] Epoch[7] Batch [160-180]	Speed: 41029.11 samples/sec	accuracy=nan
2023-03-21 11:09:16,280 Node[0] Epoch[7] Batch [180-200]	Speed: 41050.89 samples/sec	accuracy=nan
2023-03-21 11:09:17,868 Node[0] Epoch[7] Batch [200-220]	Speed: 41105.05 samples/sec	accuracy=nan
2023-03-21 11:09:19,459 Node[0] Epoch[7] Batch [220-240]	Speed: 41019.25 samples/sec	accuracy=nan
2023-03-21 11:09:21,047 Node[0] Epoch[7] Batch [240-260]	Speed: 41100.58 samples/sec	accuracy=nan
2023-03-21 11:09:22,639 Node[0] Epoch[7] Batch [260-280]	Speed: 41012.21 samples/sec	accuracy=nan
2023-03-21 11:09:24,228 Node[0] Epoch[7] Batch [280-300]	Speed: 41075.76 samples/sec	accuracy=nan
2023-03-21 11:09:25,821 Node[0] Epoch[7] Batch [300-320]	Speed: 40991.86 samples/sec	accuracy=nan
2023-03-21 11:09:27,412 Node[0] Epoch[7] Batch [320-340]	Speed: 41023.97 samples/sec	accuracy=nan
2023-03-21 11:09:29,004 Node[0] Epoch[7] Batch [340-360]	Speed: 41009.01 samples/sec	accuracy=nan
2023-03-21 11:09:30,594 Node[0] Epoch[7] Batch [360-380]	Speed: 41048.88 samples/sec	accuracy=nan
2023-03-21 11:09:31,545 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414971546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 11:09:31,546 Node[0] Epoch[7] Time cost=31.193
2023-03-21 11:09:31,546 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414971546, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41072.02174204635}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-21 11:09:31,546 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,546 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414971547, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 11:09:31,547 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,547 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,547 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:31,547 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:09:33,219 Node[0] Epoch[8] Batch [0-20]	Speed: 41004.50 samples/sec	accuracy=nan
2023-03-21 11:09:34,810 Node[0] Epoch[8] Batch [20-40]	Speed: 41040.63 samples/sec	accuracy=nan
2023-03-21 11:09:36,400 Node[0] Epoch[8] Batch [40-60]	Speed: 41053.47 samples/sec	accuracy=nan
2023-03-21 11:09:37,990 Node[0] Epoch[8] Batch [60-80]	Speed: 41060.43 samples/sec	accuracy=nan
2023-03-21 11:09:39,581 Node[0] Epoch[8] Batch [80-100]	Speed: 41031.80 samples/sec	accuracy=nan
2023-03-21 11:09:41,173 Node[0] Epoch[8] Batch [100-120]	Speed: 40989.78 samples/sec	accuracy=nan
2023-03-21 11:09:42,767 Node[0] Epoch[8] Batch [120-140]	Speed: 40951.84 samples/sec	accuracy=nan
2023-03-21 11:09:44,360 Node[0] Epoch[8] Batch [140-160]	Speed: 40986.69 samples/sec	accuracy=nan
2023-03-21 11:09:45,950 Node[0] Epoch[8] Batch [160-180]	Speed: 41065.16 samples/sec	accuracy=nan
2023-03-21 11:09:47,539 Node[0] Epoch[8] Batch [180-200]	Speed: 41064.27 samples/sec	accuracy=nan
2023-03-21 11:09:49,129 Node[0] Epoch[8] Batch [200-220]	Speed: 41070.07 samples/sec	accuracy=nan
2023-03-21 11:09:50,726 Node[0] Epoch[8] Batch [220-240]	Speed: 40872.09 samples/sec	accuracy=nan
2023-03-21 11:09:52,318 Node[0] Epoch[8] Batch [240-260]	Speed: 41008.66 samples/sec	accuracy=nan
2023-03-21 11:09:53,914 Node[0] Epoch[8] Batch [260-280]	Speed: 40899.34 samples/sec	accuracy=nan
2023-03-21 11:09:55,504 Node[0] Epoch[8] Batch [280-300]	Speed: 41063.83 samples/sec	accuracy=nan
2023-03-21 11:09:57,094 Node[0] Epoch[8] Batch [300-320]	Speed: 41041.83 samples/sec	accuracy=nan
2023-03-21 11:09:58,688 Node[0] Epoch[8] Batch [320-340]	Speed: 40967.10 samples/sec	accuracy=nan
2023-03-21 11:10:00,279 Node[0] Epoch[8] Batch [340-360]	Speed: 41028.72 samples/sec	accuracy=nan
2023-03-21 11:10:01,874 Node[0] Epoch[8] Batch [360-380]	Speed: 40916.71 samples/sec	accuracy=nan
2023-03-21 11:10:02,747 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,747 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,748 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:02,748 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415002747, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 11:10:02,748 Node[0] Epoch[8] Time cost=31.202
:::MLLOG {"namespace": "", "time_ms": 1679415002748, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41060.88072567}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-21 11:10:02,748 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415002749, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 11:10:02,749 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:04,420 Node[0] Epoch[9] Batch [0-20]	Speed: 41056.77 samples/sec	accuracy=nan
2023-03-21 11:10:06,009 Node[0] Epoch[9] Batch [20-40]	Speed: 41079.55 samples/sec	accuracy=nan
2023-03-21 11:10:07,601 Node[0] Epoch[9] Batch [40-60]	Speed: 40987.99 samples/sec	accuracy=nan
2023-03-21 11:10:09,194 Node[0] Epoch[9] Batch [60-80]	Speed: 40993.96 samples/sec	accuracy=nan
2023-03-21 11:10:10,785 Node[0] Epoch[9] Batch [80-100]	Speed: 41037.84 samples/sec	accuracy=nan
2023-03-21 11:10:12,377 Node[0] Epoch[9] Batch [100-120]	Speed: 41001.12 samples/sec	accuracy=nan
2023-03-21 11:10:13,968 Node[0] Epoch[9] Batch [120-140]	Speed: 41016.17 samples/sec	accuracy=nan
2023-03-21 11:10:15,558 Node[0] Epoch[9] Batch [140-160]	Speed: 41071.85 samples/sec	accuracy=nan
2023-03-21 11:10:17,154 Node[0] Epoch[9] Batch [160-180]	Speed: 40905.94 samples/sec	accuracy=nan
2023-03-21 11:10:18,747 Node[0] Epoch[9] Batch [180-200]	Speed: 40974.84 samples/sec	accuracy=nan
2023-03-21 11:10:20,338 Node[0] Epoch[9] Batch [200-220]	Speed: 41019.32 samples/sec	accuracy=nan
2023-03-21 11:10:21,929 Node[0] Epoch[9] Batch [220-240]	Speed: 41045.32 samples/sec	accuracy=nan
2023-03-21 11:10:23,521 Node[0] Epoch[9] Batch [240-260]	Speed: 40993.58 samples/sec	accuracy=nan
2023-03-21 11:10:25,113 Node[0] Epoch[9] Batch [260-280]	Speed: 41007.81 samples/sec	accuracy=nan
2023-03-21 11:10:26,702 Node[0] Epoch[9] Batch [280-300]	Speed: 41068.73 samples/sec	accuracy=nan
2023-03-21 11:10:28,294 Node[0] Epoch[9] Batch [300-320]	Speed: 41019.28 samples/sec	accuracy=nan
2023-03-21 11:10:29,891 Node[0] Epoch[9] Batch [320-340]	Speed: 40887.87 samples/sec	accuracy=nan
2023-03-21 11:10:31,482 Node[0] Epoch[9] Batch [340-360]	Speed: 41015.57 samples/sec	accuracy=nan
2023-03-21 11:10:33,076 Node[0] Epoch[9] Batch [360-380]	Speed: 40961.62 samples/sec	accuracy=nan
2023-03-21 11:10:34,029 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415034029, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 11:10:34,029 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,030 Node[0] Epoch[9] Time cost=31.281
2023-03-21 11:10:34,029 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,029 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415034030, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40957.0799955921}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 11:10:34,029 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,030 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:34,030 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415034030, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 11:10:34,030 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:10:35,703 Node[0] Epoch[10] Batch [0-20]	Speed: 40975.31 samples/sec	accuracy=nan
2023-03-21 11:10:37,294 Node[0] Epoch[10] Batch [20-40]	Speed: 41028.87 samples/sec	accuracy=nan
2023-03-21 11:10:38,888 Node[0] Epoch[10] Batch [40-60]	Speed: 40966.21 samples/sec	accuracy=nan
2023-03-21 11:10:40,478 Node[0] Epoch[10] Batch [60-80]	Speed: 41031.81 samples/sec	accuracy=nan
2023-03-21 11:10:42,069 Node[0] Epoch[10] Batch [80-100]	Speed: 41049.09 samples/sec	accuracy=nan
2023-03-21 11:10:43,660 Node[0] Epoch[10] Batch [100-120]	Speed: 41036.59 samples/sec	accuracy=nan
2023-03-21 11:10:45,250 Node[0] Epoch[10] Batch [120-140]	Speed: 41035.81 samples/sec	accuracy=nan
2023-03-21 11:10:46,843 Node[0] Epoch[10] Batch [140-160]	Speed: 40983.37 samples/sec	accuracy=nan
2023-03-21 11:10:48,433 Node[0] Epoch[10] Batch [160-180]	Speed: 41066.24 samples/sec	accuracy=nan
2023-03-21 11:10:50,022 Node[0] Epoch[10] Batch [180-200]	Speed: 41084.24 samples/sec	accuracy=nan
2023-03-21 11:10:51,616 Node[0] Epoch[10] Batch [200-220]	Speed: 40953.14 samples/sec	accuracy=nan
2023-03-21 11:10:53,208 Node[0] Epoch[10] Batch [220-240]	Speed: 41008.69 samples/sec	accuracy=nan
2023-03-21 11:10:54,800 Node[0] Epoch[10] Batch [240-260]	Speed: 40999.76 samples/sec	accuracy=nan
2023-03-21 11:10:56,391 Node[0] Epoch[10] Batch [260-280]	Speed: 41017.37 samples/sec	accuracy=nan
2023-03-21 11:10:57,986 Node[0] Epoch[10] Batch [280-300]	Speed: 40926.52 samples/sec	accuracy=nan
2023-03-21 11:10:59,577 Node[0] Epoch[10] Batch [300-320]	Speed: 41030.34 samples/sec	accuracy=nan
2023-03-21 11:11:01,171 Node[0] Epoch[10] Batch [320-340]	Speed: 40965.75 samples/sec	accuracy=nan
2023-03-21 11:11:02,762 Node[0] Epoch[10] Batch [340-360]	Speed: 41035.86 samples/sec	accuracy=nan
2023-03-21 11:11:04,355 Node[0] Epoch[10] Batch [360-380]	Speed: 40975.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415065231, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 11:11:05,233 Node[0] Epoch[10] Time cost=31.202
:::MLLOG {"namespace": "", "time_ms": 1679415065233, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41059.803632471165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679415065307, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 11:11:06,107 Node[0] Epoch[10] Validation-accuracy=0.519040
2023-03-21 11:11:06,108 Node[0] Epoch[10] Validation-correct-count=1622.000000
2023-03-21 11:11:06,108 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415066179, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679415066179, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.51462, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679415066179, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 11:11:06,179 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415066179, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 11:11:06,179 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415066179, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 11:11:06,179 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:06,179 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:07,785 Node[0] Epoch[11] Batch [0-20]	Speed: 40864.57 samples/sec	accuracy=nan
2023-03-21 11:11:09,378 Node[0] Epoch[11] Batch [20-40]	Speed: 40965.91 samples/sec	accuracy=nan
2023-03-21 11:11:10,970 Node[0] Epoch[11] Batch [40-60]	Speed: 41019.46 samples/sec	accuracy=nan
2023-03-21 11:11:12,559 Node[0] Epoch[11] Batch [60-80]	Speed: 41082.15 samples/sec	accuracy=nan
2023-03-21 11:11:14,151 Node[0] Epoch[11] Batch [80-100]	Speed: 40990.35 samples/sec	accuracy=nan
2023-03-21 11:11:15,740 Node[0] Epoch[11] Batch [100-120]	Speed: 41087.77 samples/sec	accuracy=nan
2023-03-21 11:11:17,332 Node[0] Epoch[11] Batch [120-140]	Speed: 40997.96 samples/sec	accuracy=nan
2023-03-21 11:11:18,923 Node[0] Epoch[11] Batch [140-160]	Speed: 41030.34 samples/sec	accuracy=nan
2023-03-21 11:11:20,514 Node[0] Epoch[11] Batch [160-180]	Speed: 41039.23 samples/sec	accuracy=nan
2023-03-21 11:11:22,108 Node[0] Epoch[11] Batch [180-200]	Speed: 40943.00 samples/sec	accuracy=nan
2023-03-21 11:11:23,698 Node[0] Epoch[11] Batch [200-220]	Speed: 41068.69 samples/sec	accuracy=nan
2023-03-21 11:11:25,287 Node[0] Epoch[11] Batch [220-240]	Speed: 41075.42 samples/sec	accuracy=nan
2023-03-21 11:11:26,879 Node[0] Epoch[11] Batch [240-260]	Speed: 41004.51 samples/sec	accuracy=nan
2023-03-21 11:11:28,467 Node[0] Epoch[11] Batch [260-280]	Speed: 41116.00 samples/sec	accuracy=nan
2023-03-21 11:11:30,063 Node[0] Epoch[11] Batch [280-300]	Speed: 40890.85 samples/sec	accuracy=nan
2023-03-21 11:11:31,656 Node[0] Epoch[11] Batch [300-320]	Speed: 40983.31 samples/sec	accuracy=nan
2023-03-21 11:11:33,248 Node[0] Epoch[11] Batch [320-340]	Speed: 41008.30 samples/sec	accuracy=nan
2023-03-21 11:11:34,841 Node[0] Epoch[11] Batch [340-360]	Speed: 40994.74 samples/sec	accuracy=nan
2023-03-21 11:11:36,433 Node[0] Epoch[11] Batch [360-380]	Speed: 40997.72 samples/sec	accuracy=nan
2023-03-21 11:11:37,386 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,386 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,387 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,387 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415097386, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 11:11:37,387 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,387 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,387 Node[0] Epoch[11] Time cost=31.207
2023-03-21 11:11:37,387 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,387 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415097387, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41053.25883169474}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679415097387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 11:11:37,387 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,388 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:37,388 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:11:39,062 Node[0] Epoch[12] Batch [0-20]	Speed: 40967.96 samples/sec	accuracy=nan
2023-03-21 11:11:40,656 Node[0] Epoch[12] Batch [20-40]	Speed: 40956.17 samples/sec	accuracy=nan
2023-03-21 11:11:42,246 Node[0] Epoch[12] Batch [40-60]	Speed: 41044.23 samples/sec	accuracy=nan
2023-03-21 11:11:43,837 Node[0] Epoch[12] Batch [60-80]	Speed: 41048.62 samples/sec	accuracy=nan
2023-03-21 11:11:45,430 Node[0] Epoch[12] Batch [80-100]	Speed: 40962.05 samples/sec	accuracy=nan
2023-03-21 11:11:47,026 Node[0] Epoch[12] Batch [100-120]	Speed: 40923.48 samples/sec	accuracy=nan
2023-03-21 11:11:48,616 Node[0] Epoch[12] Batch [120-140]	Speed: 41039.86 samples/sec	accuracy=nan
2023-03-21 11:11:50,208 Node[0] Epoch[12] Batch [140-160]	Speed: 41020.02 samples/sec	accuracy=nan
2023-03-21 11:11:51,803 Node[0] Epoch[12] Batch [160-180]	Speed: 40912.05 samples/sec	accuracy=nan
2023-03-21 11:11:53,398 Node[0] Epoch[12] Batch [180-200]	Speed: 40937.43 samples/sec	accuracy=nan
2023-03-21 11:11:54,988 Node[0] Epoch[12] Batch [200-220]	Speed: 41052.54 samples/sec	accuracy=nan
2023-03-21 11:11:56,581 Node[0] Epoch[12] Batch [220-240]	Speed: 40972.01 samples/sec	accuracy=nan
2023-03-21 11:11:58,176 Node[0] Epoch[12] Batch [240-260]	Speed: 40938.00 samples/sec	accuracy=nan
2023-03-21 11:11:59,770 Node[0] Epoch[12] Batch [260-280]	Speed: 40963.38 samples/sec	accuracy=nan
2023-03-21 11:12:01,365 Node[0] Epoch[12] Batch [280-300]	Speed: 40928.19 samples/sec	accuracy=nan
2023-03-21 11:12:02,960 Node[0] Epoch[12] Batch [300-320]	Speed: 40928.43 samples/sec	accuracy=nan
2023-03-21 11:12:04,551 Node[0] Epoch[12] Batch [320-340]	Speed: 41024.74 samples/sec	accuracy=nan
2023-03-21 11:12:06,141 Node[0] Epoch[12] Batch [340-360]	Speed: 41053.05 samples/sec	accuracy=nan
2023-03-21 11:12:07,732 Node[0] Epoch[12] Batch [360-380]	Speed: 41026.80 samples/sec	accuracy=nan
2023-03-21 11:12:08,606 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,606 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,606 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,606 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:08,607 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415128606, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 11:12:08,608 Node[0] Epoch[12] Time cost=31.220
:::MLLOG {"namespace": "", "time_ms": 1679415128608, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41036.65148410933}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 11:12:08,608 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415128608, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 11:12:08,608 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:10,279 Node[0] Epoch[13] Batch [0-20]	Speed: 41072.30 samples/sec	accuracy=nan
2023-03-21 11:12:11,871 Node[0] Epoch[13] Batch [20-40]	Speed: 40997.87 samples/sec	accuracy=nan
2023-03-21 11:12:13,463 Node[0] Epoch[13] Batch [40-60]	Speed: 41002.78 samples/sec	accuracy=nan
2023-03-21 11:12:15,053 Node[0] Epoch[13] Batch [60-80]	Speed: 41062.05 samples/sec	accuracy=nan
2023-03-21 11:12:16,646 Node[0] Epoch[13] Batch [80-100]	Speed: 40988.75 samples/sec	accuracy=nan
2023-03-21 11:12:18,239 Node[0] Epoch[13] Batch [100-120]	Speed: 40959.75 samples/sec	accuracy=nan
2023-03-21 11:12:19,837 Node[0] Epoch[13] Batch [120-140]	Speed: 40859.88 samples/sec	accuracy=nan
2023-03-21 11:12:21,432 Node[0] Epoch[13] Batch [140-160]	Speed: 40937.92 samples/sec	accuracy=nan
2023-03-21 11:12:23,022 Node[0] Epoch[13] Batch [160-180]	Speed: 41043.67 samples/sec	accuracy=nan
2023-03-21 11:12:24,614 Node[0] Epoch[13] Batch [180-200]	Speed: 41012.31 samples/sec	accuracy=nan
2023-03-21 11:12:26,210 Node[0] Epoch[13] Batch [200-220]	Speed: 40894.03 samples/sec	accuracy=nan
2023-03-21 11:12:27,804 Node[0] Epoch[13] Batch [220-240]	Speed: 40965.75 samples/sec	accuracy=nan
2023-03-21 11:12:29,395 Node[0] Epoch[13] Batch [240-260]	Speed: 41032.24 samples/sec	accuracy=nan
2023-03-21 11:12:30,988 Node[0] Epoch[13] Batch [260-280]	Speed: 40958.33 samples/sec	accuracy=nan
2023-03-21 11:12:32,581 Node[0] Epoch[13] Batch [280-300]	Speed: 40976.78 samples/sec	accuracy=nan
2023-03-21 11:12:34,172 Node[0] Epoch[13] Batch [300-320]	Speed: 41048.17 samples/sec	accuracy=nan
2023-03-21 11:12:35,764 Node[0] Epoch[13] Batch [320-340]	Speed: 40997.95 samples/sec	accuracy=nan
2023-03-21 11:12:37,356 Node[0] Epoch[13] Batch [340-360]	Speed: 41017.56 samples/sec	accuracy=nan
2023-03-21 11:12:38,949 Node[0] Epoch[13] Batch [360-380]	Speed: 40973.21 samples/sec	accuracy=nan
2023-03-21 11:12:39,902 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415159902, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 11:12:39,902 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[0] Epoch[13] Time cost=31.294
2023-03-21 11:12:39,902 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:39,902 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415159903, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40939.23659568948}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-21 11:12:39,903 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415159903, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 11:12:39,903 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:12:41,578 Node[0] Epoch[14] Batch [0-20]	Speed: 40961.77 samples/sec	accuracy=nan
2023-03-21 11:12:43,169 Node[0] Epoch[14] Batch [20-40]	Speed: 41022.53 samples/sec	accuracy=nan
2023-03-21 11:12:44,759 Node[0] Epoch[14] Batch [40-60]	Speed: 41051.26 samples/sec	accuracy=nan
2023-03-21 11:12:46,353 Node[0] Epoch[14] Batch [60-80]	Speed: 40967.03 samples/sec	accuracy=nan
2023-03-21 11:12:47,945 Node[0] Epoch[14] Batch [80-100]	Speed: 40988.46 samples/sec	accuracy=nan
2023-03-21 11:12:49,537 Node[0] Epoch[14] Batch [100-120]	Speed: 41009.43 samples/sec	accuracy=nan
2023-03-21 11:12:51,130 Node[0] Epoch[14] Batch [120-140]	Speed: 40991.52 samples/sec	accuracy=nan
2023-03-21 11:12:52,725 Node[0] Epoch[14] Batch [140-160]	Speed: 40915.06 samples/sec	accuracy=nan
2023-03-21 11:12:54,319 Node[0] Epoch[14] Batch [160-180]	Speed: 40955.74 samples/sec	accuracy=nan
2023-03-21 11:12:55,912 Node[0] Epoch[14] Batch [180-200]	Speed: 40984.87 samples/sec	accuracy=nan
2023-03-21 11:12:57,504 Node[0] Epoch[14] Batch [200-220]	Speed: 40988.81 samples/sec	accuracy=nan
2023-03-21 11:12:59,100 Node[0] Epoch[14] Batch [220-240]	Speed: 40907.08 samples/sec	accuracy=nan
2023-03-21 11:13:00,693 Node[0] Epoch[14] Batch [240-260]	Speed: 40998.48 samples/sec	accuracy=nan
2023-03-21 11:13:02,286 Node[0] Epoch[14] Batch [260-280]	Speed: 40979.21 samples/sec	accuracy=nan
2023-03-21 11:13:03,880 Node[0] Epoch[14] Batch [280-300]	Speed: 40946.62 samples/sec	accuracy=nan
2023-03-21 11:13:05,474 Node[0] Epoch[14] Batch [300-320]	Speed: 40936.51 samples/sec	accuracy=nan
2023-03-21 11:13:07,066 Node[0] Epoch[14] Batch [320-340]	Speed: 41022.93 samples/sec	accuracy=nan
2023-03-21 11:13:08,657 Node[0] Epoch[14] Batch [340-360]	Speed: 41018.98 samples/sec	accuracy=nan
2023-03-21 11:13:10,252 Node[0] Epoch[14] Batch [360-380]	Speed: 40930.79 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415191125, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 11:13:11,127 Node[0] Epoch[14] Time cost=31.224
:::MLLOG {"namespace": "", "time_ms": 1679415191127, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41031.98915869288}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679415191201, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 11:13:11,929 Node[0] Epoch[14] Validation-accuracy=0.591680
2023-03-21 11:13:11,929 Node[0] Epoch[14] Validation-correct-count=1849.000000
2023-03-21 11:13:11,929 Node[0] Epoch[14] Validation-total-count=3125.000000
2023-03-21 11:13:12,051 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415192051, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-21 11:13:12,051 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,052 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415192052, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59622, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-21 11:13:12,051 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,052 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415192052, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 11:13:12,051 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,051 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:12,052 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415192052, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679415192052, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 11:13:12,052 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:13,663 Node[0] Epoch[15] Batch [0-20]	Speed: 40849.84 samples/sec	accuracy=nan
2023-03-21 11:13:15,254 Node[0] Epoch[15] Batch [20-40]	Speed: 41023.40 samples/sec	accuracy=nan
2023-03-21 11:13:16,844 Node[0] Epoch[15] Batch [40-60]	Speed: 41043.65 samples/sec	accuracy=nan
2023-03-21 11:13:18,435 Node[0] Epoch[15] Batch [60-80]	Speed: 41046.22 samples/sec	accuracy=nan
2023-03-21 11:13:20,025 Node[0] Epoch[15] Batch [80-100]	Speed: 41043.44 samples/sec	accuracy=nan
2023-03-21 11:13:21,616 Node[0] Epoch[15] Batch [100-120]	Speed: 41045.77 samples/sec	accuracy=nan
2023-03-21 11:13:23,206 Node[0] Epoch[15] Batch [120-140]	Speed: 41040.03 samples/sec	accuracy=nan
2023-03-21 11:13:24,797 Node[0] Epoch[15] Batch [140-160]	Speed: 41035.22 samples/sec	accuracy=nan
2023-03-21 11:13:26,389 Node[0] Epoch[15] Batch [160-180]	Speed: 41004.06 samples/sec	accuracy=nan
2023-03-21 11:13:27,979 Node[0] Epoch[15] Batch [180-200]	Speed: 41075.47 samples/sec	accuracy=nan
2023-03-21 11:13:29,573 Node[0] Epoch[15] Batch [200-220]	Speed: 40934.27 samples/sec	accuracy=nan
2023-03-21 11:13:31,172 Node[0] Epoch[15] Batch [220-240]	Speed: 40846.25 samples/sec	accuracy=nan
2023-03-21 11:13:32,763 Node[0] Epoch[15] Batch [240-260]	Speed: 41030.72 samples/sec	accuracy=nan
2023-03-21 11:13:34,355 Node[0] Epoch[15] Batch [260-280]	Speed: 40993.66 samples/sec	accuracy=nan
2023-03-21 11:13:35,946 Node[0] Epoch[15] Batch [280-300]	Speed: 41021.47 samples/sec	accuracy=nan
2023-03-21 11:13:37,540 Node[0] Epoch[15] Batch [300-320]	Speed: 40956.73 samples/sec	accuracy=nan
2023-03-21 11:13:39,131 Node[0] Epoch[15] Batch [320-340]	Speed: 41047.84 samples/sec	accuracy=nan
2023-03-21 11:13:40,723 Node[0] Epoch[15] Batch [340-360]	Speed: 41001.07 samples/sec	accuracy=nan
2023-03-21 11:13:42,317 Node[0] Epoch[15] Batch [360-380]	Speed: 40939.20 samples/sec	accuracy=nan
2023-03-21 11:13:43,271 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,272 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,271 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415223271, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 11:13:43,272 Node[0] Epoch[15] Time cost=31.219
:::MLLOG {"namespace": "", "time_ms": 1679415223272, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41037.461600286035}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679415223272, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 11:13:43,272 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:43,272 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:13:44,944 Node[0] Epoch[16] Batch [0-20]	Speed: 40999.96 samples/sec	accuracy=nan
2023-03-21 11:13:46,533 Node[0] Epoch[16] Batch [20-40]	Speed: 41089.57 samples/sec	accuracy=nan
2023-03-21 11:13:48,124 Node[0] Epoch[16] Batch [40-60]	Speed: 41020.67 samples/sec	accuracy=nan
2023-03-21 11:13:49,719 Node[0] Epoch[16] Batch [60-80]	Speed: 40925.32 samples/sec	accuracy=nan
2023-03-21 11:13:51,314 Node[0] Epoch[16] Batch [80-100]	Speed: 40930.70 samples/sec	accuracy=nan
2023-03-21 11:13:52,904 Node[0] Epoch[16] Batch [100-120]	Speed: 41055.66 samples/sec	accuracy=nan
2023-03-21 11:13:54,499 Node[0] Epoch[16] Batch [120-140]	Speed: 40941.20 samples/sec	accuracy=nan
2023-03-21 11:13:56,094 Node[0] Epoch[16] Batch [140-160]	Speed: 40925.18 samples/sec	accuracy=nan
2023-03-21 11:13:57,685 Node[0] Epoch[16] Batch [160-180]	Speed: 41024.03 samples/sec	accuracy=nan
2023-03-21 11:13:59,278 Node[0] Epoch[16] Batch [180-200]	Speed: 40997.60 samples/sec	accuracy=nan
2023-03-21 11:14:00,873 Node[0] Epoch[16] Batch [200-220]	Speed: 40920.77 samples/sec	accuracy=nan
2023-03-21 11:14:02,465 Node[0] Epoch[16] Batch [220-240]	Speed: 40989.62 samples/sec	accuracy=nan
2023-03-21 11:14:04,059 Node[0] Epoch[16] Batch [240-260]	Speed: 40965.37 samples/sec	accuracy=nan
2023-03-21 11:14:05,651 Node[0] Epoch[16] Batch [260-280]	Speed: 41008.71 samples/sec	accuracy=nan
2023-03-21 11:14:07,247 Node[0] Epoch[16] Batch [280-300]	Speed: 40898.34 samples/sec	accuracy=nan
2023-03-21 11:14:08,840 Node[0] Epoch[16] Batch [300-320]	Speed: 40969.21 samples/sec	accuracy=nan
2023-03-21 11:14:10,430 Node[0] Epoch[16] Batch [320-340]	Speed: 41056.07 samples/sec	accuracy=nan
2023-03-21 11:14:12,022 Node[0] Epoch[16] Batch [340-360]	Speed: 41002.16 samples/sec	accuracy=nan
2023-03-21 11:14:13,615 Node[0] Epoch[16] Batch [360-380]	Speed: 40986.54 samples/sec	accuracy=nan
2023-03-21 11:14:14,489 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,489 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,489 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,489 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,489 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:14,490 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415254489, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 11:14:14,491 Node[0] Epoch[16] Time cost=31.218
:::MLLOG {"namespace": "", "time_ms": 1679415254491, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41039.008274536776}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-21 11:14:14,491 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415254491, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 11:14:14,491 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:16,166 Node[0] Epoch[17] Batch [0-20]	Speed: 40973.96 samples/sec	accuracy=nan
2023-03-21 11:14:17,758 Node[0] Epoch[17] Batch [20-40]	Speed: 41013.27 samples/sec	accuracy=nan
2023-03-21 11:14:19,351 Node[0] Epoch[17] Batch [40-60]	Speed: 40976.49 samples/sec	accuracy=nan
2023-03-21 11:14:20,946 Node[0] Epoch[17] Batch [60-80]	Speed: 40924.83 samples/sec	accuracy=nan
2023-03-21 11:14:22,539 Node[0] Epoch[17] Batch [80-100]	Speed: 40985.23 samples/sec	accuracy=nan
2023-03-21 11:14:24,130 Node[0] Epoch[17] Batch [100-120]	Speed: 41038.20 samples/sec	accuracy=nan
2023-03-21 11:14:25,722 Node[0] Epoch[17] Batch [120-140]	Speed: 40993.56 samples/sec	accuracy=nan
2023-03-21 11:14:27,315 Node[0] Epoch[17] Batch [140-160]	Speed: 40982.38 samples/sec	accuracy=nan
2023-03-21 11:14:28,908 Node[0] Epoch[17] Batch [160-180]	Speed: 40980.39 samples/sec	accuracy=nan
2023-03-21 11:14:30,503 Node[0] Epoch[17] Batch [180-200]	Speed: 40915.91 samples/sec	accuracy=nan
2023-03-21 11:14:32,094 Node[0] Epoch[17] Batch [200-220]	Speed: 41030.12 samples/sec	accuracy=nan
2023-03-21 11:14:33,689 Node[0] Epoch[17] Batch [220-240]	Speed: 40949.87 samples/sec	accuracy=nan
2023-03-21 11:14:35,281 Node[0] Epoch[17] Batch [240-260]	Speed: 40995.65 samples/sec	accuracy=nan
2023-03-21 11:14:36,874 Node[0] Epoch[17] Batch [260-280]	Speed: 40985.44 samples/sec	accuracy=nan
2023-03-21 11:14:38,467 Node[0] Epoch[17] Batch [280-300]	Speed: 40979.68 samples/sec	accuracy=nan
2023-03-21 11:14:40,059 Node[0] Epoch[17] Batch [300-320]	Speed: 40995.15 samples/sec	accuracy=nan
2023-03-21 11:14:41,654 Node[0] Epoch[17] Batch [320-340]	Speed: 40937.53 samples/sec	accuracy=nan
2023-03-21 11:14:43,251 Node[0] Epoch[17] Batch [340-360]	Speed: 40863.93 samples/sec	accuracy=nan
2023-03-21 11:14:44,846 Node[0] Epoch[17] Batch [360-380]	Speed: 40935.54 samples/sec	accuracy=nan
2023-03-21 11:14:45,798 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,798 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415285799, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 11:14:45,799 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[0] Epoch[17] Time cost=31.308
2023-03-21 11:14:45,799 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:45,799 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415285799, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40921.260713926684}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679415285800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 11:14:45,800 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:14:47,471 Node[0] Epoch[18] Batch [0-20]	Speed: 41011.71 samples/sec	accuracy=nan
2023-03-21 11:14:49,060 Node[0] Epoch[18] Batch [20-40]	Speed: 41075.69 samples/sec	accuracy=nan
2023-03-21 11:14:50,654 Node[0] Epoch[18] Batch [40-60]	Speed: 40954.77 samples/sec	accuracy=nan
2023-03-21 11:14:52,249 Node[0] Epoch[18] Batch [60-80]	Speed: 40945.21 samples/sec	accuracy=nan
2023-03-21 11:14:53,843 Node[0] Epoch[18] Batch [80-100]	Speed: 40949.40 samples/sec	accuracy=nan
2023-03-21 11:14:55,433 Node[0] Epoch[18] Batch [100-120]	Speed: 41043.46 samples/sec	accuracy=nan
2023-03-21 11:14:57,026 Node[0] Epoch[18] Batch [120-140]	Speed: 40980.32 samples/sec	accuracy=nan
2023-03-21 11:14:58,618 Node[0] Epoch[18] Batch [140-160]	Speed: 41001.63 samples/sec	accuracy=nan
2023-03-21 11:15:00,211 Node[0] Epoch[18] Batch [160-180]	Speed: 40982.02 samples/sec	accuracy=nan
2023-03-21 11:15:01,803 Node[0] Epoch[18] Batch [180-200]	Speed: 41000.78 samples/sec	accuracy=nan
2023-03-21 11:15:03,398 Node[0] Epoch[18] Batch [200-220]	Speed: 40937.56 samples/sec	accuracy=nan
2023-03-21 11:15:04,990 Node[0] Epoch[18] Batch [220-240]	Speed: 40997.63 samples/sec	accuracy=nan
2023-03-21 11:15:06,583 Node[0] Epoch[18] Batch [240-260]	Speed: 40979.69 samples/sec	accuracy=nan
2023-03-21 11:15:08,176 Node[0] Epoch[18] Batch [260-280]	Speed: 40998.90 samples/sec	accuracy=nan
2023-03-21 11:15:09,771 Node[0] Epoch[18] Batch [280-300]	Speed: 40911.83 samples/sec	accuracy=nan
2023-03-21 11:15:11,366 Node[0] Epoch[18] Batch [300-320]	Speed: 40928.88 samples/sec	accuracy=nan
2023-03-21 11:15:12,957 Node[0] Epoch[18] Batch [320-340]	Speed: 41038.45 samples/sec	accuracy=nan
2023-03-21 11:15:14,549 Node[0] Epoch[18] Batch [340-360]	Speed: 41004.02 samples/sec	accuracy=nan
2023-03-21 11:15:16,142 Node[0] Epoch[18] Batch [360-380]	Speed: 40963.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415317019, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 11:15:17,020 Node[0] Epoch[18] Time cost=31.220
:::MLLOG {"namespace": "", "time_ms": 1679415317020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41036.753021095465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679415317094, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 11:15:17,810 Node[0] Epoch[18] Validation-accuracy=0.643200
2023-03-21 11:15:17,810 Node[0] Epoch[18] Validation-correct-count=2010.000000
2023-03-21 11:15:17,810 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415317942, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679415317942, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64692, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679415317942, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 11:15:17,942 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415317942, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 11:15:17,942 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:17,942 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415317943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 11:15:17,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:19,545 Node[0] Epoch[19] Batch [0-20]	Speed: 40933.41 samples/sec	accuracy=nan
2023-03-21 11:15:21,137 Node[0] Epoch[19] Batch [20-40]	Speed: 40982.95 samples/sec	accuracy=nan
2023-03-21 11:15:22,728 Node[0] Epoch[19] Batch [40-60]	Speed: 41048.00 samples/sec	accuracy=nan
2023-03-21 11:15:24,322 Node[0] Epoch[19] Batch [60-80]	Speed: 40953.14 samples/sec	accuracy=nan
2023-03-21 11:15:25,914 Node[0] Epoch[19] Batch [80-100]	Speed: 40996.55 samples/sec	accuracy=nan
2023-03-21 11:15:27,504 Node[0] Epoch[19] Batch [100-120]	Speed: 41049.60 samples/sec	accuracy=nan
2023-03-21 11:15:29,098 Node[0] Epoch[19] Batch [120-140]	Speed: 40975.86 samples/sec	accuracy=nan
2023-03-21 11:15:30,691 Node[0] Epoch[19] Batch [140-160]	Speed: 40974.87 samples/sec	accuracy=nan
2023-03-21 11:15:32,284 Node[0] Epoch[19] Batch [160-180]	Speed: 40978.21 samples/sec	accuracy=nan
2023-03-21 11:15:33,880 Node[0] Epoch[19] Batch [180-200]	Speed: 40907.73 samples/sec	accuracy=nan
2023-03-21 11:15:35,472 Node[0] Epoch[19] Batch [200-220]	Speed: 40991.38 samples/sec	accuracy=nan
2023-03-21 11:15:37,065 Node[0] Epoch[19] Batch [220-240]	Speed: 40976.40 samples/sec	accuracy=nan
2023-03-21 11:15:38,658 Node[0] Epoch[19] Batch [240-260]	Speed: 40977.59 samples/sec	accuracy=nan
2023-03-21 11:15:40,255 Node[0] Epoch[19] Batch [260-280]	Speed: 40885.91 samples/sec	accuracy=nan
2023-03-21 11:15:41,844 Node[0] Epoch[19] Batch [280-300]	Speed: 41072.29 samples/sec	accuracy=nan
2023-03-21 11:15:43,436 Node[0] Epoch[19] Batch [300-320]	Speed: 41017.02 samples/sec	accuracy=nan
2023-03-21 11:15:45,028 Node[0] Epoch[19] Batch [320-340]	Speed: 41011.71 samples/sec	accuracy=nan
2023-03-21 11:15:46,621 Node[0] Epoch[19] Batch [340-360]	Speed: 40977.91 samples/sec	accuracy=nan
2023-03-21 11:15:48,216 Node[0] Epoch[19] Batch [360-380]	Speed: 40913.42 samples/sec	accuracy=nan
2023-03-21 11:15:49,174 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,174 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:49,175 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415349175, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 11:15:49,175 Node[0] Epoch[19] Time cost=31.233
:::MLLOG {"namespace": "", "time_ms": 1679415349176, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41019.98085039422}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679415349176, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 11:15:49,176 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:15:50,847 Node[0] Epoch[20] Batch [0-20]	Speed: 41017.66 samples/sec	accuracy=nan
2023-03-21 11:15:52,440 Node[0] Epoch[20] Batch [20-40]	Speed: 40964.61 samples/sec	accuracy=nan
2023-03-21 11:15:54,037 Node[0] Epoch[20] Batch [40-60]	Speed: 40880.25 samples/sec	accuracy=nan
2023-03-21 11:15:55,631 Node[0] Epoch[20] Batch [60-80]	Speed: 40960.11 samples/sec	accuracy=nan
2023-03-21 11:15:57,220 Node[0] Epoch[20] Batch [80-100]	Speed: 41083.74 samples/sec	accuracy=nan
2023-03-21 11:15:58,814 Node[0] Epoch[20] Batch [100-120]	Speed: 40959.69 samples/sec	accuracy=nan
2023-03-21 11:16:00,410 Node[0] Epoch[20] Batch [120-140]	Speed: 40908.25 samples/sec	accuracy=nan
2023-03-21 11:16:02,002 Node[0] Epoch[20] Batch [140-160]	Speed: 40981.39 samples/sec	accuracy=nan
2023-03-21 11:16:03,592 Node[0] Epoch[20] Batch [160-180]	Speed: 41058.40 samples/sec	accuracy=nan
2023-03-21 11:16:05,185 Node[0] Epoch[20] Batch [180-200]	Speed: 40988.25 samples/sec	accuracy=nan
2023-03-21 11:16:06,778 Node[0] Epoch[20] Batch [200-220]	Speed: 40978.55 samples/sec	accuracy=nan
2023-03-21 11:16:08,372 Node[0] Epoch[20] Batch [220-240]	Speed: 40948.80 samples/sec	accuracy=nan
2023-03-21 11:16:09,963 Node[0] Epoch[20] Batch [240-260]	Speed: 41037.41 samples/sec	accuracy=nan
2023-03-21 11:16:11,555 Node[0] Epoch[20] Batch [260-280]	Speed: 41017.57 samples/sec	accuracy=nan
2023-03-21 11:16:13,150 Node[0] Epoch[20] Batch [280-300]	Speed: 40924.35 samples/sec	accuracy=nan
2023-03-21 11:16:14,739 Node[0] Epoch[20] Batch [300-320]	Speed: 41066.59 samples/sec	accuracy=nan
2023-03-21 11:16:16,332 Node[0] Epoch[20] Batch [320-340]	Speed: 40991.99 samples/sec	accuracy=nan
2023-03-21 11:16:17,924 Node[0] Epoch[20] Batch [340-360]	Speed: 41010.07 samples/sec	accuracy=nan
2023-03-21 11:16:19,518 Node[0] Epoch[20] Batch [360-380]	Speed: 40945.92 samples/sec	accuracy=nan
2023-03-21 11:16:20,391 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,391 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:20,392 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415380392, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 11:16:20,394 Node[0] Epoch[20] Time cost=31.218
:::MLLOG {"namespace": "", "time_ms": 1679415380394, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41039.71223013627}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679415380394, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 11:16:20,394 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:22,067 Node[0] Epoch[21] Batch [0-20]	Speed: 40980.60 samples/sec	accuracy=nan
2023-03-21 11:16:23,657 Node[0] Epoch[21] Batch [20-40]	Speed: 41055.44 samples/sec	accuracy=nan
2023-03-21 11:16:25,250 Node[0] Epoch[21] Batch [40-60]	Speed: 40990.71 samples/sec	accuracy=nan
2023-03-21 11:16:26,844 Node[0] Epoch[21] Batch [60-80]	Speed: 40950.57 samples/sec	accuracy=nan
2023-03-21 11:16:28,434 Node[0] Epoch[21] Batch [80-100]	Speed: 41050.72 samples/sec	accuracy=nan
2023-03-21 11:16:30,029 Node[0] Epoch[21] Batch [100-120]	Speed: 40925.91 samples/sec	accuracy=nan
2023-03-21 11:16:31,624 Node[0] Epoch[21] Batch [120-140]	Speed: 40934.89 samples/sec	accuracy=nan
2023-03-21 11:16:33,217 Node[0] Epoch[21] Batch [140-160]	Speed: 40978.53 samples/sec	accuracy=nan
2023-03-21 11:16:34,808 Node[0] Epoch[21] Batch [160-180]	Speed: 41040.82 samples/sec	accuracy=nan
2023-03-21 11:16:36,403 Node[0] Epoch[21] Batch [180-200]	Speed: 40922.80 samples/sec	accuracy=nan
2023-03-21 11:16:37,996 Node[0] Epoch[21] Batch [200-220]	Speed: 40990.62 samples/sec	accuracy=nan
2023-03-21 11:16:39,586 Node[0] Epoch[21] Batch [220-240]	Speed: 41035.46 samples/sec	accuracy=nan
2023-03-21 11:16:41,182 Node[0] Epoch[21] Batch [240-260]	Speed: 40920.54 samples/sec	accuracy=nan
2023-03-21 11:16:42,773 Node[0] Epoch[21] Batch [260-280]	Speed: 41011.46 samples/sec	accuracy=nan
2023-03-21 11:16:44,365 Node[0] Epoch[21] Batch [280-300]	Speed: 41015.30 samples/sec	accuracy=nan
2023-03-21 11:16:45,963 Node[0] Epoch[21] Batch [300-320]	Speed: 40848.28 samples/sec	accuracy=nan
2023-03-21 11:16:47,559 Node[0] Epoch[21] Batch [320-340]	Speed: 40917.51 samples/sec	accuracy=nan
2023-03-21 11:16:49,149 Node[0] Epoch[21] Batch [340-360]	Speed: 41045.24 samples/sec	accuracy=nan
2023-03-21 11:16:50,738 Node[0] Epoch[21] Batch [360-380]	Speed: 41079.58 samples/sec	accuracy=nan
2023-03-21 11:16:51,691 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,690 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,690 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,690 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415411690, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 11:16:51,691 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[0] Epoch[21] Time cost=31.297
2023-03-21 11:16:51,691 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415411691, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40936.262232070636}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-21 11:16:51,691 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:51,691 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415411691, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 11:16:51,691 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:16:53,371 Node[0] Epoch[22] Batch [0-20]	Speed: 40816.51 samples/sec	accuracy=nan
2023-03-21 11:16:54,965 Node[0] Epoch[22] Batch [20-40]	Speed: 40958.66 samples/sec	accuracy=nan
2023-03-21 11:16:56,561 Node[0] Epoch[22] Batch [40-60]	Speed: 40915.23 samples/sec	accuracy=nan
2023-03-21 11:16:58,154 Node[0] Epoch[22] Batch [60-80]	Speed: 40973.90 samples/sec	accuracy=nan
2023-03-21 11:16:59,750 Node[0] Epoch[22] Batch [80-100]	Speed: 40901.77 samples/sec	accuracy=nan
2023-03-21 11:17:01,345 Node[0] Epoch[22] Batch [100-120]	Speed: 40916.08 samples/sec	accuracy=nan
2023-03-21 11:17:02,939 Node[0] Epoch[22] Batch [120-140]	Speed: 40953.68 samples/sec	accuracy=nan
2023-03-21 11:17:04,532 Node[0] Epoch[22] Batch [140-160]	Speed: 40993.54 samples/sec	accuracy=nan
2023-03-21 11:17:06,126 Node[0] Epoch[22] Batch [160-180]	Speed: 40956.11 samples/sec	accuracy=nan
2023-03-21 11:17:07,715 Node[0] Epoch[22] Batch [180-200]	Speed: 41063.68 samples/sec	accuracy=nan
2023-03-21 11:17:09,308 Node[0] Epoch[22] Batch [200-220]	Speed: 40976.61 samples/sec	accuracy=nan
2023-03-21 11:17:10,905 Node[0] Epoch[22] Batch [220-240]	Speed: 40898.90 samples/sec	accuracy=nan
2023-03-21 11:17:12,497 Node[0] Epoch[22] Batch [240-260]	Speed: 40988.75 samples/sec	accuracy=nan
2023-03-21 11:17:14,089 Node[0] Epoch[22] Batch [260-280]	Speed: 41010.62 samples/sec	accuracy=nan
2023-03-21 11:17:15,681 Node[0] Epoch[22] Batch [280-300]	Speed: 41007.86 samples/sec	accuracy=nan
2023-03-21 11:17:17,275 Node[0] Epoch[22] Batch [300-320]	Speed: 40947.38 samples/sec	accuracy=nan
2023-03-21 11:17:18,871 Node[0] Epoch[22] Batch [320-340]	Speed: 40905.88 samples/sec	accuracy=nan
2023-03-21 11:17:20,468 Node[0] Epoch[22] Batch [340-360]	Speed: 40874.00 samples/sec	accuracy=nan
2023-03-21 11:17:22,063 Node[0] Epoch[22] Batch [360-380]	Speed: 40922.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415442938, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 11:17:22,939 Node[0] Epoch[22] Time cost=31.248
:::MLLOG {"namespace": "", "time_ms": 1679415442939, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41000.08292765896}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679415443015, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 11:17:23,772 Node[0] Epoch[22] Validation-accuracy=0.678080
2023-03-21 11:17:23,772 Node[0] Epoch[22] Validation-correct-count=2119.000000
2023-03-21 11:17:23,772 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415443847, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679415443847, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6924, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 11:17:23,847 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415443847, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-21 11:17:23,847 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415443848, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 11:17:23,848 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415443848, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 11:17:23,847 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,847 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:23,848 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:25,454 Node[0] Epoch[23] Batch [0-20]	Speed: 40875.30 samples/sec	accuracy=nan
2023-03-21 11:17:27,044 Node[0] Epoch[23] Batch [20-40]	Speed: 41046.19 samples/sec	accuracy=nan
2023-03-21 11:17:28,637 Node[0] Epoch[23] Batch [40-60]	Speed: 40976.87 samples/sec	accuracy=nan
2023-03-21 11:17:30,232 Node[0] Epoch[23] Batch [60-80]	Speed: 40936.39 samples/sec	accuracy=nan
2023-03-21 11:17:31,825 Node[0] Epoch[23] Batch [80-100]	Speed: 40987.09 samples/sec	accuracy=nan
2023-03-21 11:17:33,417 Node[0] Epoch[23] Batch [100-120]	Speed: 40991.37 samples/sec	accuracy=nan
2023-03-21 11:17:35,015 Node[0] Epoch[23] Batch [120-140]	Speed: 40865.84 samples/sec	accuracy=nan
2023-03-21 11:17:36,604 Node[0] Epoch[23] Batch [140-160]	Speed: 41066.66 samples/sec	accuracy=nan
2023-03-21 11:17:38,199 Node[0] Epoch[23] Batch [160-180]	Speed: 40939.74 samples/sec	accuracy=nan
2023-03-21 11:17:39,791 Node[0] Epoch[23] Batch [180-200]	Speed: 40986.68 samples/sec	accuracy=nan
2023-03-21 11:17:41,383 Node[0] Epoch[23] Batch [200-220]	Speed: 41023.37 samples/sec	accuracy=nan
2023-03-21 11:17:42,974 Node[0] Epoch[23] Batch [220-240]	Speed: 41030.48 samples/sec	accuracy=nan
2023-03-21 11:17:44,567 Node[0] Epoch[23] Batch [240-260]	Speed: 40959.91 samples/sec	accuracy=nan
2023-03-21 11:17:46,157 Node[0] Epoch[23] Batch [260-280]	Speed: 41058.26 samples/sec	accuracy=nan
2023-03-21 11:17:47,752 Node[0] Epoch[23] Batch [280-300]	Speed: 40937.70 samples/sec	accuracy=nan
2023-03-21 11:17:49,346 Node[0] Epoch[23] Batch [300-320]	Speed: 40965.29 samples/sec	accuracy=nan
2023-03-21 11:17:50,936 Node[0] Epoch[23] Batch [320-340]	Speed: 41039.37 samples/sec	accuracy=nan
2023-03-21 11:17:52,528 Node[0] Epoch[23] Batch [340-360]	Speed: 40999.63 samples/sec	accuracy=nan
2023-03-21 11:17:54,116 Node[0] Epoch[23] Batch [360-380]	Speed: 41116.61 samples/sec	accuracy=nan
2023-03-21 11:17:55,071 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,072 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,071 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,072 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,072 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,072 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:55,072 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415475072, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 11:17:55,073 Node[0] Epoch[23] Time cost=31.225
:::MLLOG {"namespace": "", "time_ms": 1679415475073, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41030.47841527787}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679415475073, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 11:17:55,073 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:17:56,747 Node[0] Epoch[24] Batch [0-20]	Speed: 40923.54 samples/sec	accuracy=nan
2023-03-21 11:17:58,339 Node[0] Epoch[24] Batch [20-40]	Speed: 40997.54 samples/sec	accuracy=nan
2023-03-21 11:17:59,932 Node[0] Epoch[24] Batch [40-60]	Speed: 40978.16 samples/sec	accuracy=nan
2023-03-21 11:18:01,524 Node[0] Epoch[24] Batch [60-80]	Speed: 41008.51 samples/sec	accuracy=nan
2023-03-21 11:18:03,116 Node[0] Epoch[24] Batch [80-100]	Speed: 41024.77 samples/sec	accuracy=nan
2023-03-21 11:18:04,711 Node[0] Epoch[24] Batch [100-120]	Speed: 40920.33 samples/sec	accuracy=nan
2023-03-21 11:18:06,302 Node[0] Epoch[24] Batch [120-140]	Speed: 41028.85 samples/sec	accuracy=nan
2023-03-21 11:18:07,894 Node[0] Epoch[24] Batch [140-160]	Speed: 41012.27 samples/sec	accuracy=nan
2023-03-21 11:18:09,483 Node[0] Epoch[24] Batch [160-180]	Speed: 41075.00 samples/sec	accuracy=nan
2023-03-21 11:18:11,075 Node[0] Epoch[24] Batch [180-200]	Speed: 40993.61 samples/sec	accuracy=nan
2023-03-21 11:18:12,667 Node[0] Epoch[24] Batch [200-220]	Speed: 41014.06 samples/sec	accuracy=nan
2023-03-21 11:18:14,259 Node[0] Epoch[24] Batch [220-240]	Speed: 40993.85 samples/sec	accuracy=nan
2023-03-21 11:18:15,853 Node[0] Epoch[24] Batch [240-260]	Speed: 40960.45 samples/sec	accuracy=nan
2023-03-21 11:18:17,443 Node[0] Epoch[24] Batch [260-280]	Speed: 41051.29 samples/sec	accuracy=nan
2023-03-21 11:18:19,034 Node[0] Epoch[24] Batch [280-300]	Speed: 41042.17 samples/sec	accuracy=nan
2023-03-21 11:18:20,628 Node[0] Epoch[24] Batch [300-320]	Speed: 40948.24 samples/sec	accuracy=nan
2023-03-21 11:18:22,223 Node[0] Epoch[24] Batch [320-340]	Speed: 40934.74 samples/sec	accuracy=nan
2023-03-21 11:18:23,813 Node[0] Epoch[24] Batch [340-360]	Speed: 41053.48 samples/sec	accuracy=nan
2023-03-21 11:18:25,405 Node[0] Epoch[24] Batch [360-380]	Speed: 41004.18 samples/sec	accuracy=nan
2023-03-21 11:18:26,279 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:26,280 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415506280, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 11:18:26,281 Node[0] Epoch[24] Time cost=31.207
:::MLLOG {"namespace": "", "time_ms": 1679415506281, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41053.2431497664}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-21 11:18:26,281 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415506281, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 11:18:26,281 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:27,953 Node[0] Epoch[25] Batch [0-20]	Speed: 41037.91 samples/sec	accuracy=nan
2023-03-21 11:18:29,543 Node[0] Epoch[25] Batch [20-40]	Speed: 41059.83 samples/sec	accuracy=nan
2023-03-21 11:18:31,138 Node[0] Epoch[25] Batch [40-60]	Speed: 40915.14 samples/sec	accuracy=nan
2023-03-21 11:18:32,733 Node[0] Epoch[25] Batch [60-80]	Speed: 40930.04 samples/sec	accuracy=nan
2023-03-21 11:18:34,323 Node[0] Epoch[25] Batch [80-100]	Speed: 41059.23 samples/sec	accuracy=nan
2023-03-21 11:18:35,917 Node[0] Epoch[25] Batch [100-120]	Speed: 40947.63 samples/sec	accuracy=nan
2023-03-21 11:18:37,509 Node[0] Epoch[25] Batch [120-140]	Speed: 41014.32 samples/sec	accuracy=nan
2023-03-21 11:18:39,099 Node[0] Epoch[25] Batch [140-160]	Speed: 41046.96 samples/sec	accuracy=nan
2023-03-21 11:18:40,694 Node[0] Epoch[25] Batch [160-180]	Speed: 40927.34 samples/sec	accuracy=nan
2023-03-21 11:18:42,287 Node[0] Epoch[25] Batch [180-200]	Speed: 40975.05 samples/sec	accuracy=nan
2023-03-21 11:18:43,878 Node[0] Epoch[25] Batch [200-220]	Speed: 41033.37 samples/sec	accuracy=nan
2023-03-21 11:18:45,471 Node[0] Epoch[25] Batch [220-240]	Speed: 40976.60 samples/sec	accuracy=nan
2023-03-21 11:18:47,063 Node[0] Epoch[25] Batch [240-260]	Speed: 41011.89 samples/sec	accuracy=nan
2023-03-21 11:18:48,656 Node[0] Epoch[25] Batch [260-280]	Speed: 40974.25 samples/sec	accuracy=nan
2023-03-21 11:18:50,251 Node[0] Epoch[25] Batch [280-300]	Speed: 40940.44 samples/sec	accuracy=nan
2023-03-21 11:18:51,844 Node[0] Epoch[25] Batch [300-320]	Speed: 40983.79 samples/sec	accuracy=nan
2023-03-21 11:18:53,439 Node[0] Epoch[25] Batch [320-340]	Speed: 40924.84 samples/sec	accuracy=nan
2023-03-21 11:18:55,033 Node[0] Epoch[25] Batch [340-360]	Speed: 40948.58 samples/sec	accuracy=nan
2023-03-21 11:18:56,625 Node[0] Epoch[25] Batch [360-380]	Speed: 40997.82 samples/sec	accuracy=nan
2023-03-21 11:18:57,579 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,579 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,579 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,579 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,579 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415537580, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 11:18:57,580 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:57,580 Node[0] Epoch[25] Time cost=31.299
2023-03-21 11:18:57,580 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415537580, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40933.28331168244}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679415537581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 11:18:57,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:18:59,251 Node[0] Epoch[26] Batch [0-20]	Speed: 41034.04 samples/sec	accuracy=nan
2023-03-21 11:19:00,845 Node[0] Epoch[26] Batch [20-40]	Speed: 40968.22 samples/sec	accuracy=nan
2023-03-21 11:19:02,441 Node[0] Epoch[26] Batch [40-60]	Speed: 40890.05 samples/sec	accuracy=nan
2023-03-21 11:19:04,040 Node[0] Epoch[26] Batch [60-80]	Speed: 40823.99 samples/sec	accuracy=nan
2023-03-21 11:19:05,633 Node[0] Epoch[26] Batch [80-100]	Speed: 40991.75 samples/sec	accuracy=nan
2023-03-21 11:19:07,223 Node[0] Epoch[26] Batch [100-120]	Speed: 41044.22 samples/sec	accuracy=nan
2023-03-21 11:19:08,817 Node[0] Epoch[26] Batch [120-140]	Speed: 40951.01 samples/sec	accuracy=nan
2023-03-21 11:19:10,408 Node[0] Epoch[26] Batch [140-160]	Speed: 41041.15 samples/sec	accuracy=nan
2023-03-21 11:19:12,000 Node[0] Epoch[26] Batch [160-180]	Speed: 41002.73 samples/sec	accuracy=nan
2023-03-21 11:19:13,593 Node[0] Epoch[26] Batch [180-200]	Speed: 40975.23 samples/sec	accuracy=nan
2023-03-21 11:19:15,188 Node[0] Epoch[26] Batch [200-220]	Speed: 40941.47 samples/sec	accuracy=nan
2023-03-21 11:19:16,785 Node[0] Epoch[26] Batch [220-240]	Speed: 40864.38 samples/sec	accuracy=nan
2023-03-21 11:19:18,375 Node[0] Epoch[26] Batch [240-260]	Speed: 41058.87 samples/sec	accuracy=nan
2023-03-21 11:19:19,965 Node[0] Epoch[26] Batch [260-280]	Speed: 41048.88 samples/sec	accuracy=nan
2023-03-21 11:19:21,558 Node[0] Epoch[26] Batch [280-300]	Speed: 40980.35 samples/sec	accuracy=nan
2023-03-21 11:19:23,150 Node[0] Epoch[26] Batch [300-320]	Speed: 41006.82 samples/sec	accuracy=nan
2023-03-21 11:19:24,744 Node[0] Epoch[26] Batch [320-340]	Speed: 40951.97 samples/sec	accuracy=nan
2023-03-21 11:19:26,339 Node[0] Epoch[26] Batch [340-360]	Speed: 40943.41 samples/sec	accuracy=nan
2023-03-21 11:19:27,928 Node[0] Epoch[26] Batch [360-380]	Speed: 41061.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415568802, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 11:19:28,803 Node[0] Epoch[26] Time cost=31.222
:::MLLOG {"namespace": "", "time_ms": 1679415568803, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41034.06026730461}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679415568877, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 11:19:29,600 Node[0] Epoch[26] Validation-accuracy=0.732160
2023-03-21 11:19:29,600 Node[0] Epoch[26] Validation-correct-count=2288.000000
2023-03-21 11:19:29,600 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415569708, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679415569708, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7301, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679415569708, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 11:19:29,708 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415569708, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 11:19:29,708 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:29,708 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415569708, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 11:19:29,708 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:19:31,319 Node[0] Epoch[27] Batch [0-20]	Speed: 40785.15 samples/sec	accuracy=nan
2023-03-21 11:19:32,908 Node[0] Epoch[27] Batch [20-40]	Speed: 41063.14 samples/sec	accuracy=nan
2023-03-21 11:19:34,505 Node[0] Epoch[27] Batch [40-60]	Speed: 40880.55 samples/sec	accuracy=nan
2023-03-21 11:19:36,099 Node[0] Epoch[27] Batch [60-80]	Speed: 40954.81 samples/sec	accuracy=nan
2023-03-21 11:19:37,692 Node[0] Epoch[27] Batch [80-100]	Speed: 40981.79 samples/sec	accuracy=nan
2023-03-21 11:19:39,284 Node[0] Epoch[27] Batch [100-120]	Speed: 40996.13 samples/sec	accuracy=nan
2023-03-21 11:19:40,875 Node[0] Epoch[27] Batch [120-140]	Speed: 41050.51 samples/sec	accuracy=nan
2023-03-21 11:19:42,469 Node[0] Epoch[27] Batch [140-160]	Speed: 40952.21 samples/sec	accuracy=nan
2023-03-21 11:19:44,060 Node[0] Epoch[27] Batch [160-180]	Speed: 41023.57 samples/sec	accuracy=nan
2023-03-21 11:19:45,654 Node[0] Epoch[27] Batch [180-200]	Speed: 40951.53 samples/sec	accuracy=nan
2023-03-21 11:19:47,248 Node[0] Epoch[27] Batch [200-220]	Speed: 40952.43 samples/sec	accuracy=nan
2023-03-21 11:19:48,840 Node[0] Epoch[27] Batch [220-240]	Speed: 41004.92 samples/sec	accuracy=nan
2023-03-21 11:19:50,435 Node[0] Epoch[27] Batch [240-260]	Speed: 40940.17 samples/sec	accuracy=nan
2023-03-21 11:19:52,029 Node[0] Epoch[27] Batch [260-280]	Speed: 40946.22 samples/sec	accuracy=nan
2023-03-21 11:19:53,622 Node[0] Epoch[27] Batch [280-300]	Speed: 40988.38 samples/sec	accuracy=nan
2023-03-21 11:19:55,217 Node[0] Epoch[27] Batch [300-320]	Speed: 40905.71 samples/sec	accuracy=nan
2023-03-21 11:19:56,805 Node[0] Epoch[27] Batch [320-340]	Speed: 41111.17 samples/sec	accuracy=nan
2023-03-21 11:19:58,400 Node[0] Epoch[27] Batch [340-360]	Speed: 40934.95 samples/sec	accuracy=nan
2023-03-21 11:19:59,993 Node[0] Epoch[27] Batch [360-380]	Speed: 40970.14 samples/sec	accuracy=nan
2023-03-21 11:20:00,948 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415600948, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 11:20:00,948 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,948 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:00,949 Node[0] Epoch[27] Time cost=31.240
2023-03-21 11:20:00,948 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415600949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41010.24762260592}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679415600949, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 11:20:00,949 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:02,626 Node[0] Epoch[28] Batch [0-20]	Speed: 40856.32 samples/sec	accuracy=nan
2023-03-21 11:20:04,219 Node[0] Epoch[28] Batch [20-40]	Speed: 40988.58 samples/sec	accuracy=nan
2023-03-21 11:20:05,814 Node[0] Epoch[28] Batch [40-60]	Speed: 40932.38 samples/sec	accuracy=nan
2023-03-21 11:20:07,408 Node[0] Epoch[28] Batch [60-80]	Speed: 40947.14 samples/sec	accuracy=nan
2023-03-21 11:20:09,000 Node[0] Epoch[28] Batch [80-100]	Speed: 41000.61 samples/sec	accuracy=nan
2023-03-21 11:20:10,594 Node[0] Epoch[28] Batch [100-120]	Speed: 40966.79 samples/sec	accuracy=nan
2023-03-21 11:20:12,187 Node[0] Epoch[28] Batch [120-140]	Speed: 40982.19 samples/sec	accuracy=nan
2023-03-21 11:20:13,777 Node[0] Epoch[28] Batch [140-160]	Speed: 41045.70 samples/sec	accuracy=nan
2023-03-21 11:20:15,370 Node[0] Epoch[28] Batch [160-180]	Speed: 40968.94 samples/sec	accuracy=nan
2023-03-21 11:20:16,965 Node[0] Epoch[28] Batch [180-200]	Speed: 40948.99 samples/sec	accuracy=nan
2023-03-21 11:20:18,560 Node[0] Epoch[28] Batch [200-220]	Speed: 40918.34 samples/sec	accuracy=nan
2023-03-21 11:20:20,152 Node[0] Epoch[28] Batch [220-240]	Speed: 40998.74 samples/sec	accuracy=nan
2023-03-21 11:20:21,745 Node[0] Epoch[28] Batch [240-260]	Speed: 40983.92 samples/sec	accuracy=nan
2023-03-21 11:20:23,340 Node[0] Epoch[28] Batch [260-280]	Speed: 40926.02 samples/sec	accuracy=nan
2023-03-21 11:20:24,938 Node[0] Epoch[28] Batch [280-300]	Speed: 40865.65 samples/sec	accuracy=nan
2023-03-21 11:20:26,529 Node[0] Epoch[28] Batch [300-320]	Speed: 41018.21 samples/sec	accuracy=nan
2023-03-21 11:20:28,122 Node[0] Epoch[28] Batch [320-340]	Speed: 40979.78 samples/sec	accuracy=nan
2023-03-21 11:20:29,716 Node[0] Epoch[28] Batch [340-360]	Speed: 40955.37 samples/sec	accuracy=nan
2023-03-21 11:20:31,313 Node[0] Epoch[28] Batch [360-380]	Speed: 40889.35 samples/sec	accuracy=nan
2023-03-21 11:20:32,190 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,190 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,190 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:32,191 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415632190, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 11:20:32,192 Node[0] Epoch[28] Time cost=31.242
:::MLLOG {"namespace": "", "time_ms": 1679415632192, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41007.247285259764}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 11:20:32,192 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415632192, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 11:20:32,192 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:20:33,861 Node[0] Epoch[29] Batch [0-20]	Speed: 41106.55 samples/sec	accuracy=nan
2023-03-21 11:20:35,455 Node[0] Epoch[29] Batch [20-40]	Speed: 40954.39 samples/sec	accuracy=nan
2023-03-21 11:20:37,050 Node[0] Epoch[29] Batch [40-60]	Speed: 40933.79 samples/sec	accuracy=nan
2023-03-21 11:20:38,647 Node[0] Epoch[29] Batch [60-80]	Speed: 40890.91 samples/sec	accuracy=nan
2023-03-21 11:20:40,240 Node[0] Epoch[29] Batch [80-100]	Speed: 40963.00 samples/sec	accuracy=nan
2023-03-21 11:20:41,831 Node[0] Epoch[29] Batch [100-120]	Speed: 41025.68 samples/sec	accuracy=nan
2023-03-21 11:20:43,424 Node[0] Epoch[29] Batch [120-140]	Speed: 40988.66 samples/sec	accuracy=nan
2023-03-21 11:20:45,021 Node[0] Epoch[29] Batch [140-160]	Speed: 40881.58 samples/sec	accuracy=nan
2023-03-21 11:20:46,614 Node[0] Epoch[29] Batch [160-180]	Speed: 40964.01 samples/sec	accuracy=nan
2023-03-21 11:20:48,209 Node[0] Epoch[29] Batch [180-200]	Speed: 40942.76 samples/sec	accuracy=nan
2023-03-21 11:20:49,806 Node[0] Epoch[29] Batch [200-220]	Speed: 40880.15 samples/sec	accuracy=nan
2023-03-21 11:20:51,399 Node[0] Epoch[29] Batch [220-240]	Speed: 40962.14 samples/sec	accuracy=nan
2023-03-21 11:20:52,991 Node[0] Epoch[29] Batch [240-260]	Speed: 41003.54 samples/sec	accuracy=nan
2023-03-21 11:20:54,582 Node[0] Epoch[29] Batch [260-280]	Speed: 41036.90 samples/sec	accuracy=nan
2023-03-21 11:20:56,179 Node[0] Epoch[29] Batch [280-300]	Speed: 40891.24 samples/sec	accuracy=nan
2023-03-21 11:20:57,772 Node[0] Epoch[29] Batch [300-320]	Speed: 40972.54 samples/sec	accuracy=nan
2023-03-21 11:20:59,364 Node[0] Epoch[29] Batch [320-340]	Speed: 41001.86 samples/sec	accuracy=nan
2023-03-21 11:21:00,961 Node[0] Epoch[29] Batch [340-360]	Speed: 40864.95 samples/sec	accuracy=nan
2023-03-21 11:21:02,559 Node[0] Epoch[29] Batch [360-380]	Speed: 40870.95 samples/sec	accuracy=nan
2023-03-21 11:21:03,511 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415663511, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 11:21:03,511 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,511 Node[0] Epoch[29] Time cost=31.319
2023-03-21 11:21:03,511 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415663511, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40906.769673212344}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 11:21:03,511 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415663512, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 11:21:03,512 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:03,512 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:05,188 Node[0] Epoch[30] Batch [0-20]	Speed: 40929.69 samples/sec	accuracy=nan
2023-03-21 11:21:06,780 Node[0] Epoch[30] Batch [20-40]	Speed: 41021.08 samples/sec	accuracy=nan
2023-03-21 11:21:08,374 Node[0] Epoch[30] Batch [40-60]	Speed: 40937.76 samples/sec	accuracy=nan
2023-03-21 11:21:09,969 Node[0] Epoch[30] Batch [60-80]	Speed: 40922.28 samples/sec	accuracy=nan
2023-03-21 11:21:11,565 Node[0] Epoch[30] Batch [80-100]	Speed: 40918.80 samples/sec	accuracy=nan
2023-03-21 11:21:13,161 Node[0] Epoch[30] Batch [100-120]	Speed: 40887.55 samples/sec	accuracy=nan
2023-03-21 11:21:14,756 Node[0] Epoch[30] Batch [120-140]	Speed: 40937.76 samples/sec	accuracy=nan
2023-03-21 11:21:16,349 Node[0] Epoch[30] Batch [140-160]	Speed: 40988.64 samples/sec	accuracy=nan
2023-03-21 11:21:17,942 Node[0] Epoch[30] Batch [160-180]	Speed: 40966.48 samples/sec	accuracy=nan
2023-03-21 11:21:19,537 Node[0] Epoch[30] Batch [180-200]	Speed: 40938.58 samples/sec	accuracy=nan
2023-03-21 11:21:21,132 Node[0] Epoch[30] Batch [200-220]	Speed: 40926.58 samples/sec	accuracy=nan
2023-03-21 11:21:22,726 Node[0] Epoch[30] Batch [220-240]	Speed: 40956.24 samples/sec	accuracy=nan
2023-03-21 11:21:24,318 Node[0] Epoch[30] Batch [240-260]	Speed: 40994.05 samples/sec	accuracy=nan
2023-03-21 11:21:25,909 Node[0] Epoch[30] Batch [260-280]	Speed: 41041.07 samples/sec	accuracy=nan
2023-03-21 11:21:27,503 Node[0] Epoch[30] Batch [280-300]	Speed: 40943.10 samples/sec	accuracy=nan
2023-03-21 11:21:29,098 Node[0] Epoch[30] Batch [300-320]	Speed: 40930.35 samples/sec	accuracy=nan
2023-03-21 11:21:30,695 Node[0] Epoch[30] Batch [320-340]	Speed: 40869.39 samples/sec	accuracy=nan
2023-03-21 11:21:32,289 Node[0] Epoch[30] Batch [340-360]	Speed: 40966.80 samples/sec	accuracy=nan
2023-03-21 11:21:33,882 Node[0] Epoch[30] Batch [360-380]	Speed: 40985.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415694758, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 11:21:34,759 Node[0] Epoch[30] Time cost=31.247
:::MLLOG {"namespace": "", "time_ms": 1679415694759, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41001.53731060523}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679415694833, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 11:21:35,568 Node[0] Epoch[30] Validation-accuracy=0.741760
2023-03-21 11:21:35,568 Node[0] Epoch[30] Validation-correct-count=2318.000000
2023-03-21 11:21:35,568 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415695680, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-21 11:21:35,680 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415695681, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75312, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 11:21:35,680 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415695681, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679415695681, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 11:21:35,680 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:35,680 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415695681, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 11:21:35,681 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:21:37,287 Node[0] Epoch[31] Batch [0-20]	Speed: 40867.44 samples/sec	accuracy=nan
2023-03-21 11:21:38,876 Node[0] Epoch[31] Batch [20-40]	Speed: 41072.52 samples/sec	accuracy=nan
2023-03-21 11:21:40,469 Node[0] Epoch[31] Batch [40-60]	Speed: 40988.22 samples/sec	accuracy=nan
2023-03-21 11:21:42,061 Node[0] Epoch[31] Batch [60-80]	Speed: 40993.35 samples/sec	accuracy=nan
2023-03-21 11:21:43,654 Node[0] Epoch[31] Batch [80-100]	Speed: 40981.07 samples/sec	accuracy=nan
2023-03-21 11:21:45,248 Node[0] Epoch[31] Batch [100-120]	Speed: 40960.91 samples/sec	accuracy=nan
2023-03-21 11:21:46,838 Node[0] Epoch[31] Batch [120-140]	Speed: 41044.38 samples/sec	accuracy=nan
2023-03-21 11:21:48,432 Node[0] Epoch[31] Batch [140-160]	Speed: 40966.13 samples/sec	accuracy=nan
2023-03-21 11:21:50,029 Node[0] Epoch[31] Batch [160-180]	Speed: 40872.06 samples/sec	accuracy=nan
2023-03-21 11:21:51,622 Node[0] Epoch[31] Batch [180-200]	Speed: 40971.14 samples/sec	accuracy=nan
2023-03-21 11:21:53,214 Node[0] Epoch[31] Batch [200-220]	Speed: 41007.03 samples/sec	accuracy=nan
2023-03-21 11:21:54,806 Node[0] Epoch[31] Batch [220-240]	Speed: 41012.78 samples/sec	accuracy=nan
2023-03-21 11:21:56,399 Node[0] Epoch[31] Batch [240-260]	Speed: 40991.76 samples/sec	accuracy=nan
2023-03-21 11:21:57,995 Node[0] Epoch[31] Batch [260-280]	Speed: 40883.12 samples/sec	accuracy=nan
2023-03-21 11:21:59,585 Node[0] Epoch[31] Batch [280-300]	Speed: 41063.59 samples/sec	accuracy=nan
2023-03-21 11:22:01,179 Node[0] Epoch[31] Batch [300-320]	Speed: 40945.89 samples/sec	accuracy=nan
2023-03-21 11:22:02,773 Node[0] Epoch[31] Batch [320-340]	Speed: 40976.16 samples/sec	accuracy=nan
2023-03-21 11:22:04,364 Node[0] Epoch[31] Batch [340-360]	Speed: 41025.03 samples/sec	accuracy=nan
2023-03-21 11:22:05,960 Node[0] Epoch[31] Batch [360-380]	Speed: 40891.32 samples/sec	accuracy=nan
2023-03-21 11:22:06,915 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,915 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,915 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,915 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,915 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,915 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415726915, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 11:22:06,916 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[0] Epoch[31] Time cost=31.235
2023-03-21 11:22:06,916 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415726916, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41017.17852460668}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-21 11:22:06,916 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415726916, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 11:22:06,917 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:06,916 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:08,590 Node[0] Epoch[32] Batch [0-20]	Speed: 40955.76 samples/sec	accuracy=nan
2023-03-21 11:22:10,186 Node[0] Epoch[32] Batch [20-40]	Speed: 40882.41 samples/sec	accuracy=nan
2023-03-21 11:22:11,778 Node[0] Epoch[32] Batch [40-60]	Speed: 41012.20 samples/sec	accuracy=nan
2023-03-21 11:22:13,370 Node[0] Epoch[32] Batch [60-80]	Speed: 41016.94 samples/sec	accuracy=nan
2023-03-21 11:22:14,964 Node[0] Epoch[32] Batch [80-100]	Speed: 40946.70 samples/sec	accuracy=nan
2023-03-21 11:22:16,557 Node[0] Epoch[32] Batch [100-120]	Speed: 40984.65 samples/sec	accuracy=nan
2023-03-21 11:22:18,150 Node[0] Epoch[32] Batch [120-140]	Speed: 40964.83 samples/sec	accuracy=nan
2023-03-21 11:22:19,744 Node[0] Epoch[32] Batch [140-160]	Speed: 40952.32 samples/sec	accuracy=nan
2023-03-21 11:22:21,337 Node[0] Epoch[32] Batch [160-180]	Speed: 40996.99 samples/sec	accuracy=nan
2023-03-21 11:22:22,928 Node[0] Epoch[32] Batch [180-200]	Speed: 41017.37 samples/sec	accuracy=nan
2023-03-21 11:22:24,522 Node[0] Epoch[32] Batch [200-220]	Speed: 40945.83 samples/sec	accuracy=nan
2023-03-21 11:22:26,119 Node[0] Epoch[32] Batch [220-240]	Speed: 40884.47 samples/sec	accuracy=nan
2023-03-21 11:22:27,712 Node[0] Epoch[32] Batch [240-260]	Speed: 40993.05 samples/sec	accuracy=nan
2023-03-21 11:22:29,303 Node[0] Epoch[32] Batch [260-280]	Speed: 41017.22 samples/sec	accuracy=nan
2023-03-21 11:22:30,898 Node[0] Epoch[32] Batch [280-300]	Speed: 40923.75 samples/sec	accuracy=nan
2023-03-21 11:22:32,494 Node[0] Epoch[32] Batch [300-320]	Speed: 40916.63 samples/sec	accuracy=nan
2023-03-21 11:22:34,088 Node[0] Epoch[32] Batch [320-340]	Speed: 40943.75 samples/sec	accuracy=nan
2023-03-21 11:22:35,681 Node[0] Epoch[32] Batch [340-360]	Speed: 40971.66 samples/sec	accuracy=nan
2023-03-21 11:22:37,279 Node[0] Epoch[32] Batch [360-380]	Speed: 40863.31 samples/sec	accuracy=nan
2023-03-21 11:22:38,154 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,154 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,154 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,154 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,154 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,154 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:38,155 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415758155, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 11:22:38,155 Node[0] Epoch[32] Time cost=31.239
:::MLLOG {"namespace": "", "time_ms": 1679415758156, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41011.90899749698}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679415758156, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 11:22:38,156 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:22:39,827 Node[0] Epoch[33] Batch [0-20]	Speed: 41073.59 samples/sec	accuracy=nan
2023-03-21 11:22:41,421 Node[0] Epoch[33] Batch [20-40]	Speed: 40968.07 samples/sec	accuracy=nan
2023-03-21 11:22:43,017 Node[0] Epoch[33] Batch [40-60]	Speed: 40891.11 samples/sec	accuracy=nan
2023-03-21 11:22:44,611 Node[0] Epoch[33] Batch [60-80]	Speed: 40945.99 samples/sec	accuracy=nan
2023-03-21 11:22:46,207 Node[0] Epoch[33] Batch [80-100]	Speed: 40921.18 samples/sec	accuracy=nan
2023-03-21 11:22:47,797 Node[0] Epoch[33] Batch [100-120]	Speed: 41046.50 samples/sec	accuracy=nan
2023-03-21 11:22:49,388 Node[0] Epoch[33] Batch [120-140]	Speed: 41038.77 samples/sec	accuracy=nan
2023-03-21 11:22:50,984 Node[0] Epoch[33] Batch [140-160]	Speed: 40898.27 samples/sec	accuracy=nan
2023-03-21 11:22:52,575 Node[0] Epoch[33] Batch [160-180]	Speed: 41017.94 samples/sec	accuracy=nan
2023-03-21 11:22:54,171 Node[0] Epoch[33] Batch [180-200]	Speed: 40908.01 samples/sec	accuracy=nan
2023-03-21 11:22:55,763 Node[0] Epoch[33] Batch [200-220]	Speed: 41001.98 samples/sec	accuracy=nan
2023-03-21 11:22:57,357 Node[0] Epoch[33] Batch [220-240]	Speed: 40959.44 samples/sec	accuracy=nan
2023-03-21 11:22:58,950 Node[0] Epoch[33] Batch [240-260]	Speed: 40976.46 samples/sec	accuracy=nan
2023-03-21 11:23:00,543 Node[0] Epoch[33] Batch [260-280]	Speed: 40971.31 samples/sec	accuracy=nan
2023-03-21 11:23:02,134 Node[0] Epoch[33] Batch [280-300]	Speed: 41041.02 samples/sec	accuracy=nan
2023-03-21 11:23:03,726 Node[0] Epoch[33] Batch [300-320]	Speed: 40993.81 samples/sec	accuracy=nan
2023-03-21 11:23:05,322 Node[0] Epoch[33] Batch [320-340]	Speed: 40904.16 samples/sec	accuracy=nan
2023-03-21 11:23:06,920 Node[0] Epoch[33] Batch [340-360]	Speed: 40857.84 samples/sec	accuracy=nan
2023-03-21 11:23:08,514 Node[0] Epoch[33] Batch [360-380]	Speed: 40961.76 samples/sec	accuracy=nan
2023-03-21 11:23:09,469 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,469 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415789469, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 11:23:09,470 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:09,470 Node[0] Epoch[33] Time cost=31.314
2023-03-21 11:23:09,470 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679415789470, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40913.549135815345}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679415789470, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 11:23:09,471 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:23:11,143 Node[0] Epoch[34] Batch [0-20]	Speed: 41000.33 samples/sec	accuracy=nan
2023-03-21 11:23:12,734 Node[0] Epoch[34] Batch [20-40]	Speed: 41017.79 samples/sec	accuracy=nan
2023-03-21 11:23:14,328 Node[0] Epoch[34] Batch [40-60]	Speed: 40961.62 samples/sec	accuracy=nan
2023-03-21 11:23:15,924 Node[0] Epoch[34] Batch [60-80]	Speed: 40906.22 samples/sec	accuracy=nan
2023-03-21 11:23:17,515 Node[0] Epoch[34] Batch [80-100]	Speed: 41038.00 samples/sec	accuracy=nan
2023-03-21 11:23:19,109 Node[0] Epoch[34] Batch [100-120]	Speed: 40943.53 samples/sec	accuracy=nan
2023-03-21 11:23:20,702 Node[0] Epoch[34] Batch [120-140]	Speed: 40967.11 samples/sec	accuracy=nan
2023-03-21 11:23:22,292 Node[0] Epoch[34] Batch [140-160]	Speed: 41073.91 samples/sec	accuracy=nan
2023-03-21 11:23:23,887 Node[0] Epoch[34] Batch [160-180]	Speed: 40920.96 samples/sec	accuracy=nan
2023-03-21 11:23:25,479 Node[0] Epoch[34] Batch [180-200]	Speed: 41015.06 samples/sec	accuracy=nan
2023-03-21 11:23:27,074 Node[0] Epoch[34] Batch [200-220]	Speed: 40908.03 samples/sec	accuracy=nan
2023-03-21 11:23:28,668 Node[0] Epoch[34] Batch [220-240]	Speed: 40963.27 samples/sec	accuracy=nan
2023-03-21 11:23:30,267 Node[0] Epoch[34] Batch [240-260]	Speed: 40828.57 samples/sec	accuracy=nan
2023-03-21 11:23:31,859 Node[0] Epoch[34] Batch [260-280]	Speed: 40999.57 samples/sec	accuracy=nan
2023-03-21 11:23:33,454 Node[0] Epoch[34] Batch [280-300]	Speed: 40934.40 samples/sec	accuracy=nan
2023-03-21 11:23:35,047 Node[0] Epoch[34] Batch [300-320]	Speed: 40975.77 samples/sec	accuracy=nan
2023-03-21 11:23:36,643 Node[0] Epoch[34] Batch [320-340]	Speed: 40912.68 samples/sec	accuracy=nan
2023-03-21 11:23:38,236 Node[0] Epoch[34] Batch [340-360]	Speed: 40974.99 samples/sec	accuracy=nan
2023-03-21 11:23:39,828 Node[0] Epoch[34] Batch [360-380]	Speed: 40992.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679415820786, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 11:23:40,788 Node[0] Epoch[34] Time cost=31.317
:::MLLOG {"namespace": "", "time_ms": 1679415820788, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40909.65503833755}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679415820862, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 11:23:41,629 Node[0] Epoch[34] Validation-accuracy=0.766400
2023-03-21 11:23:41,629 Node[0] Epoch[34] Validation-correct-count=2395.000000
2023-03-21 11:23:41,629 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679415821710, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679415821710, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679415821711, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679415821711, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415844
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:04 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:04 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:04 AM
+ result=1273
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1273,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415845
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:05 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:05 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:05 AM
+ result=1274
+ result_name=IMAGE_CLASSIFICATION
+ [[ 0 != 0 ]]
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM'
RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM
+ export PROFILE=0
+ PROFILE=0
++ date +%s
+ end=1679415845
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:05 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:05 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:05 AM
+ result=1274
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415845
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:05 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:05 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:05 AM
+ result=1274
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415845
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:05 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:05 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:05 AM
+ result=1274
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 11:02:51 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679415846
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:24:06 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:24:06 AM'
ENDING TIMING RUN AT 2023-03-21 11:24:06 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 11:02:51 AM'
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 11:02:51 AM
+ export PROFILE=0
+ PROFILE=0
