+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411811956, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411811991, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411811993, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411811994, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411811996, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411825098, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411831170, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411831206, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411831207, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411831209, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411831210, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411842827, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411847810, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411847845, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411847847, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411847848, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411847850, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411859402, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411864359, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411864394, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411864396, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411864397, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411864399, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679411876037, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=25915
+ SEED=25915
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
+ start=1679411877
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679411877
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ start=1679411877
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679411877
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ dirname ./config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ date +%s
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export LR=10.5
++ LR=10.5
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ date +%s
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ date +%s
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DGXNNODES=4
++ DGXNNODES=4
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679411877
+ start=1679411877
++ date +%s
+ start=1679411877
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ source ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 10:17:57 AM'
+ start_fmt='2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ readonly global_rank=1
+ global_rank=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ readonly global_rank=1
+ global_rank=1
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+++ dirname ./config_4xR750xax4A100.sh
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 -ge 1 ]]
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679411877
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679411877
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
+ start_fmt='2023-03-21 10:17:57 AM'
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ date +%s
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ date +%s
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ date '+%Y-%m-%d %r'
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ readonly global_rank=1
+ global_rank=1
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+ readonly local_rank=0
+ local_rank=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ date +%s
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ SEED=25915
+ EVAL_OFFSET=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ DALI_CACHE_SIZE=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ DATAROOT=/data
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
running benchmark
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+ [[ 0 -ge 1 ]]
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ seq 0 3
++ tr '\n' ,
++++ readlink -f ./config_4xR750xax4A100.sh
++ sed 's/,$//'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ sed 's/^config_//'
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ sed 's/\.sh$//'
+ [[ 0 == 1 ]]
++++ readlink -f ./config_4xR750xax4A100.sh
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679411877
+ start=1679411877
+ start=1679411877
++ date '+%Y-%m-%d %r'
+ start=1679411877
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ start_fmt='2023-03-21 10:17:57 AM'
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=2
+ global_rank=2
+ MOM=0.9
+ LRSCHED=pow2
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ readonly local_rank=0
+ local_rank=0
+ DALI_THREADS=6
+ THR=0.759
+ SLURM_NTASKS_PER_NODE=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
running benchmark
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_CROP_BUFFER_HINT=165581
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 -ge 1 ]]
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ NODALI=0
+ NUMEXAMPLES=
+ SEED=25915
+ EVAL_OFFSET=2
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ start_fmt='2023-03-21 10:17:57 AM'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
running benchmark
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ export NGPUS=1
+ NGPUS=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ readonly global_rank=2
+ global_rank=2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DATAROOT=/data
+ echo 'running benchmark'
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ [[ 0 -ge 1 ]]
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ GPUS=0,1,2,3
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ seq 0 3
++ sed 's/,$//'
+ [[ '' -ge 1 ]]
++ tr '\n' ,
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start=1679411877
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679411877
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:57 AM'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679411877
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:57 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:57 AM'
STARTING TIMING RUN AT 2023-03-21 10:17:57 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=25915
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 25915 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:65617] MCW rank 1 is not bound (or bound to all available processors)
[node044:65607] MCW rank 0 is not bound (or bound to all available processors)
[node044:65609] MCW rank 3 is not bound (or bound to all available processors)
[node044:65629] MCW rank 2 is not bound (or bound to all available processors)
[node045:59827] MCW rank 5 is not bound (or bound to all available processors)
[node045:59852] MCW rank 7 is not bound (or bound to all available processors)
[node045:59840] MCW rank 4 is not bound (or bound to all available processors)
[node045:59839] MCW rank 6 is not bound (or bound to all available processors)
[node047:55509] MCW rank 15 is not bound (or bound to all available processors)
[node047:55507] MCW rank 14 is not bound (or bound to all available processors)
[node047:55506] MCW rank 12 is not bound (or bound to all available processors)
[node047:55508] MCW rank 13 is not bound (or bound to all available processors)
[node046:55006] MCW rank 10 is not bound (or bound to all available processors)
[node046:55009] MCW rank 8 is not bound (or bound to all available processors)
[node046:55008] MCW rank 9 is not bound (or bound to all available processors)
[node046:55007] MCW rank 11 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679411882549, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679411889911, "event_type": "POINT_IN_TIME", "key": "seed", "value": 25915, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:18:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679411892465, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[10:18:16] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:16] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:16] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:16] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679411897269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897300, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897300, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897300, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897300, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897301, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897301, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897301, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897301, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897302, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897302, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897302, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897303, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897303, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897303, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897303, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897304, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897304, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897304, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897304, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897305, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897305, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897305, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897305, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897305, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897306, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897306, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897306, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897306, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897307, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897307, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897307, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897307, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679411897308, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:18:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15843, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12209, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2025, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31265, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48092, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30342, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,167 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57560, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,168 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32463, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679411900167, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679411900169, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679411900170, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14276, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39964, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9911, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30181, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5357, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,172 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28341, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,171 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59030, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:18:20,172 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61468, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679411993926, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679411993927, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679411993928, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679411994491, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679411994571, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679411994572, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 10:19:56,180 Node[0] Epoch[0] Batch [0-20]	Speed: 41130.23 samples/sec	accuracy=nan
2023-03-21 10:19:57,748 Node[0] Epoch[0] Batch [20-40]	Speed: 41628.15 samples/sec	accuracy=nan
2023-03-21 10:19:59,317 Node[0] Epoch[0] Batch [40-60]	Speed: 41601.30 samples/sec	accuracy=nan
2023-03-21 10:20:00,886 Node[0] Epoch[0] Batch [60-80]	Speed: 41603.50 samples/sec	accuracy=nan
2023-03-21 10:20:02,497 Node[0] Epoch[0] Batch [80-100]	Speed: 40523.90 samples/sec	accuracy=nan
2023-03-21 10:20:04,067 Node[0] Epoch[0] Batch [100-120]	Speed: 41585.04 samples/sec	accuracy=nan
2023-03-21 10:20:05,637 Node[0] Epoch[0] Batch [120-140]	Speed: 41569.29 samples/sec	accuracy=nan
2023-03-21 10:20:07,211 Node[0] Epoch[0] Batch [140-160]	Speed: 41487.83 samples/sec	accuracy=nan
2023-03-21 10:20:08,783 Node[0] Epoch[0] Batch [160-180]	Speed: 41527.43 samples/sec	accuracy=nan
2023-03-21 10:20:10,357 Node[0] Epoch[0] Batch [180-200]	Speed: 41470.49 samples/sec	accuracy=nan
2023-03-21 10:20:11,936 Node[0] Epoch[0] Batch [200-220]	Speed: 41334.55 samples/sec	accuracy=nan
2023-03-21 10:20:13,513 Node[0] Epoch[0] Batch [220-240]	Speed: 41386.14 samples/sec	accuracy=nan
2023-03-21 10:20:15,094 Node[0] Epoch[0] Batch [240-260]	Speed: 41306.15 samples/sec	accuracy=nan
2023-03-21 10:20:16,677 Node[0] Epoch[0] Batch [260-280]	Speed: 41241.97 samples/sec	accuracy=nan
2023-03-21 10:20:18,256 Node[0] Epoch[0] Batch [280-300]	Speed: 41340.42 samples/sec	accuracy=nan
2023-03-21 10:20:19,835 Node[0] Epoch[0] Batch [300-320]	Speed: 41331.33 samples/sec	accuracy=nan
2023-03-21 10:20:21,415 Node[0] Epoch[0] Batch [320-340]	Speed: 41304.21 samples/sec	accuracy=nan
2023-03-21 10:20:22,997 Node[0] Epoch[0] Batch [340-360]	Speed: 41277.29 samples/sec	accuracy=nan
2023-03-21 10:20:24,579 Node[0] Epoch[0] Batch [360-380]	Speed: 41265.85 samples/sec	accuracy=nan
2023-03-21 10:20:25,528 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,529 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,528 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412025528, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 10:20:25,528 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,529 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:25,529 Node[0] Epoch[0] Time cost=30.957
:::MLLOG {"namespace": "", "time_ms": 1679412025529, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41385.68559820383}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679412025530, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 10:20:25,530 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:20:27,194 Node[0] Epoch[1] Batch [0-20]	Speed: 41151.95 samples/sec	accuracy=nan
2023-03-21 10:20:28,778 Node[0] Epoch[1] Batch [20-40]	Speed: 41215.43 samples/sec	accuracy=nan
2023-03-21 10:20:30,366 Node[0] Epoch[1] Batch [40-60]	Speed: 41115.92 samples/sec	accuracy=nan
2023-03-21 10:20:31,951 Node[0] Epoch[1] Batch [60-80]	Speed: 41181.35 samples/sec	accuracy=nan
2023-03-21 10:20:33,534 Node[0] Epoch[1] Batch [80-100]	Speed: 41239.38 samples/sec	accuracy=nan
2023-03-21 10:20:35,121 Node[0] Epoch[1] Batch [100-120]	Speed: 41134.26 samples/sec	accuracy=nan
2023-03-21 10:20:36,707 Node[0] Epoch[1] Batch [120-140]	Speed: 41158.40 samples/sec	accuracy=nan
2023-03-21 10:20:38,291 Node[0] Epoch[1] Batch [140-160]	Speed: 41219.23 samples/sec	accuracy=nan
2023-03-21 10:20:42,275 Node[0] Epoch[1] Batch [160-180]	Speed: 16382.93 samples/sec	accuracy=nan
2023-03-21 10:20:43,857 Node[0] Epoch[1] Batch [180-200]	Speed: 41271.75 samples/sec	accuracy=nan
2023-03-21 10:20:47,883 Node[0] Epoch[1] Batch [200-220]	Speed: 16212.64 samples/sec	accuracy=nan
2023-03-21 10:20:51,860 Node[0] Epoch[1] Batch [220-240]	Speed: 16417.70 samples/sec	accuracy=nan
2023-03-21 10:20:53,462 Node[0] Epoch[1] Batch [240-260]	Speed: 40726.15 samples/sec	accuracy=nan
2023-03-21 10:20:57,446 Node[0] Epoch[1] Batch [260-280]	Speed: 16389.57 samples/sec	accuracy=nan
2023-03-21 10:20:59,018 Node[0] Epoch[1] Batch [280-300]	Speed: 41515.21 samples/sec	accuracy=nan
2023-03-21 10:21:00,592 Node[0] Epoch[1] Batch [300-320]	Speed: 41470.27 samples/sec	accuracy=nan
2023-03-21 10:21:02,175 Node[0] Epoch[1] Batch [320-340]	Speed: 41232.41 samples/sec	accuracy=nan
2023-03-21 10:21:03,755 Node[0] Epoch[1] Batch [340-360]	Speed: 41317.25 samples/sec	accuracy=nan
2023-03-21 10:21:05,337 Node[0] Epoch[1] Batch [360-380]	Speed: 41282.68 samples/sec	accuracy=nan
2023-03-21 10:21:06,283 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,283 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:06,284 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412066283, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 10:21:06,284 Node[0] Epoch[1] Time cost=40.754
:::MLLOG {"namespace": "", "time_ms": 1679412066284, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 31436.65480752051}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679412066285, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 10:21:06,285 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:21:07,945 Node[0] Epoch[2] Batch [0-20]	Speed: 41254.57 samples/sec	accuracy=nan
2023-03-21 10:21:09,528 Node[0] Epoch[2] Batch [20-40]	Speed: 41239.47 samples/sec	accuracy=nan
2023-03-21 10:21:11,111 Node[0] Epoch[2] Batch [40-60]	Speed: 41228.36 samples/sec	accuracy=nan
2023-03-21 10:21:12,696 Node[0] Epoch[2] Batch [60-80]	Speed: 41206.00 samples/sec	accuracy=nan
2023-03-21 10:21:14,288 Node[0] Epoch[2] Batch [80-100]	Speed: 40996.51 samples/sec	accuracy=nan
2023-03-21 10:21:15,873 Node[0] Epoch[2] Batch [100-120]	Speed: 41193.64 samples/sec	accuracy=nan
2023-03-21 10:21:22,217 Node[0] Epoch[2] Batch [120-140]	Speed: 10289.19 samples/sec	accuracy=nan
2023-03-21 10:21:23,794 Node[0] Epoch[2] Batch [140-160]	Speed: 41406.68 samples/sec	accuracy=nan
2023-03-21 10:21:32,632 Node[0] Epoch[2] Batch [160-180]	Speed: 7385.86 samples/sec	accuracy=nan
2023-03-21 10:21:36,743 Node[0] Epoch[2] Batch [180-200]	Speed: 15878.92 samples/sec	accuracy=nan
2023-03-21 10:21:38,316 Node[0] Epoch[2] Batch [200-220]	Speed: 41517.67 samples/sec	accuracy=nan
2023-03-21 10:21:44,904 Node[0] Epoch[2] Batch [220-240]	Speed: 9908.04 samples/sec	accuracy=nan
2023-03-21 10:21:46,474 Node[0] Epoch[2] Batch [240-260]	Speed: 41576.63 samples/sec	accuracy=nan
2023-03-21 10:21:50,440 Node[0] Epoch[2] Batch [260-280]	Speed: 16462.31 samples/sec	accuracy=nan
2023-03-21 10:21:52,010 Node[0] Epoch[2] Batch [280-300]	Speed: 41577.71 samples/sec	accuracy=nan
2023-03-21 10:21:53,585 Node[0] Epoch[2] Batch [300-320]	Speed: 41456.46 samples/sec	accuracy=nan
2023-03-21 10:21:57,570 Node[0] Epoch[2] Batch [320-340]	Speed: 16380.72 samples/sec	accuracy=nan
2023-03-21 10:21:59,141 Node[0] Epoch[2] Batch [340-360]	Speed: 41546.33 samples/sec	accuracy=nan
2023-03-21 10:22:00,716 Node[0] Epoch[2] Batch [360-380]	Speed: 41441.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412121585, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 10:22:01,585 Node[0] Epoch[2] Time cost=55.301
:::MLLOG {"namespace": "", "time_ms": 1679412121586, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 23167.273430129175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679412121659, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 10:22:01,660 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,659 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:01,660 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,339 Node[0] Epoch[2] Validation-accuracy=0.327040
2023-03-21 10:22:02,339 Node[0] Epoch[2] Validation-correct-count=1022.000000
2023-03-21 10:22:02,339 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412122452, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 10:22:02,452 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412122452, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32958, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 10:22:02,452 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412122452, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 10:22:02,452 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412122453, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 10:22:02,452 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:02,452 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412122453, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 10:22:02,453 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:04,044 Node[0] Epoch[3] Batch [0-20]	Speed: 41262.67 samples/sec	accuracy=nan
2023-03-21 10:22:05,620 Node[0] Epoch[3] Batch [20-40]	Speed: 41415.54 samples/sec	accuracy=nan
2023-03-21 10:22:07,198 Node[0] Epoch[3] Batch [40-60]	Speed: 41369.38 samples/sec	accuracy=nan
2023-03-21 10:22:08,776 Node[0] Epoch[3] Batch [60-80]	Speed: 41378.40 samples/sec	accuracy=nan
2023-03-21 10:22:10,360 Node[0] Epoch[3] Batch [80-100]	Speed: 41225.26 samples/sec	accuracy=nan
2023-03-21 10:22:11,942 Node[0] Epoch[3] Batch [100-120]	Speed: 41242.96 samples/sec	accuracy=nan
2023-03-21 10:22:13,522 Node[0] Epoch[3] Batch [120-140]	Speed: 41314.13 samples/sec	accuracy=nan
2023-03-21 10:22:15,103 Node[0] Epoch[3] Batch [140-160]	Speed: 41307.63 samples/sec	accuracy=nan
2023-03-21 10:22:16,685 Node[0] Epoch[3] Batch [160-180]	Speed: 41262.67 samples/sec	accuracy=nan
2023-03-21 10:22:18,268 Node[0] Epoch[3] Batch [180-200]	Speed: 41229.61 samples/sec	accuracy=nan
2023-03-21 10:22:19,851 Node[0] Epoch[3] Batch [200-220]	Speed: 41236.91 samples/sec	accuracy=nan
2023-03-21 10:22:21,433 Node[0] Epoch[3] Batch [220-240]	Speed: 41274.80 samples/sec	accuracy=nan
2023-03-21 10:22:23,020 Node[0] Epoch[3] Batch [240-260]	Speed: 41115.89 samples/sec	accuracy=nan
2023-03-21 10:22:24,608 Node[0] Epoch[3] Batch [260-280]	Speed: 41134.49 samples/sec	accuracy=nan
2023-03-21 10:22:26,195 Node[0] Epoch[3] Batch [280-300]	Speed: 41118.95 samples/sec	accuracy=nan
2023-03-21 10:22:27,781 Node[0] Epoch[3] Batch [300-320]	Speed: 41155.00 samples/sec	accuracy=nan
2023-03-21 10:22:29,369 Node[0] Epoch[3] Batch [320-340]	Speed: 41111.98 samples/sec	accuracy=nan
2023-03-21 10:22:30,961 Node[0] Epoch[3] Batch [340-360]	Speed: 41009.55 samples/sec	accuracy=nan
2023-03-21 10:22:32,548 Node[0] Epoch[3] Batch [360-380]	Speed: 41145.51 samples/sec	accuracy=nan
2023-03-21 10:22:33,500 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,500 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412153500, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 10:22:33,500 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:33,501 Node[0] Epoch[3] Time cost=31.048
:::MLLOG {"namespace": "", "time_ms": 1679412153501, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41264.21744254937}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679412153501, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 10:22:33,501 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:22:35,171 Node[0] Epoch[4] Batch [0-20]	Speed: 41071.01 samples/sec	accuracy=nan
2023-03-21 10:22:36,757 Node[0] Epoch[4] Batch [20-40]	Speed: 41153.57 samples/sec	accuracy=nan
2023-03-21 10:22:38,348 Node[0] Epoch[4] Batch [40-60]	Speed: 41038.85 samples/sec	accuracy=nan
2023-03-21 10:22:39,933 Node[0] Epoch[4] Batch [60-80]	Speed: 41166.79 samples/sec	accuracy=nan
2023-03-21 10:22:41,521 Node[0] Epoch[4] Batch [80-100]	Speed: 41127.87 samples/sec	accuracy=nan
2023-03-21 10:22:43,111 Node[0] Epoch[4] Batch [100-120]	Speed: 41055.55 samples/sec	accuracy=nan
2023-03-21 10:22:44,698 Node[0] Epoch[4] Batch [120-140]	Speed: 41130.04 samples/sec	accuracy=nan
2023-03-21 10:22:46,287 Node[0] Epoch[4] Batch [140-160]	Speed: 41071.60 samples/sec	accuracy=nan
2023-03-21 10:22:47,874 Node[0] Epoch[4] Batch [160-180]	Speed: 41151.25 samples/sec	accuracy=nan
2023-03-21 10:22:49,463 Node[0] Epoch[4] Batch [180-200]	Speed: 41072.27 samples/sec	accuracy=nan
2023-03-21 10:22:51,052 Node[0] Epoch[4] Batch [200-220]	Speed: 41083.74 samples/sec	accuracy=nan
2023-03-21 10:22:52,647 Node[0] Epoch[4] Batch [220-240]	Speed: 40921.56 samples/sec	accuracy=nan
2023-03-21 10:22:54,236 Node[0] Epoch[4] Batch [240-260]	Speed: 41085.56 samples/sec	accuracy=nan
2023-03-21 10:22:55,828 Node[0] Epoch[4] Batch [260-280]	Speed: 41004.58 samples/sec	accuracy=nan
2023-03-21 10:22:57,418 Node[0] Epoch[4] Batch [280-300]	Speed: 41053.84 samples/sec	accuracy=nan
2023-03-21 10:22:59,008 Node[0] Epoch[4] Batch [300-320]	Speed: 41073.91 samples/sec	accuracy=nan
2023-03-21 10:23:00,598 Node[0] Epoch[4] Batch [320-340]	Speed: 41043.05 samples/sec	accuracy=nan
2023-03-21 10:23:02,192 Node[0] Epoch[4] Batch [340-360]	Speed: 40948.27 samples/sec	accuracy=nan
2023-03-21 10:23:03,786 Node[0] Epoch[4] Batch [360-380]	Speed: 40961.22 samples/sec	accuracy=nan
2023-03-21 10:23:04,658 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,658 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412184658, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 10:23:04,658 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,659 Node[0] Epoch[4] Time cost=31.158
:::MLLOG {"namespace": "", "time_ms": 1679412184659, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41118.97865207561}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 10:23:04,659 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,659 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:04,659 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412184659, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 10:23:04,659 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:06,331 Node[0] Epoch[5] Batch [0-20]	Speed: 41037.87 samples/sec	accuracy=nan
2023-03-21 10:23:07,921 Node[0] Epoch[5] Batch [20-40]	Speed: 41055.53 samples/sec	accuracy=nan
2023-03-21 10:23:09,511 Node[0] Epoch[5] Batch [40-60]	Speed: 41073.15 samples/sec	accuracy=nan
2023-03-21 10:23:11,102 Node[0] Epoch[5] Batch [60-80]	Speed: 41011.50 samples/sec	accuracy=nan
2023-03-21 10:23:12,692 Node[0] Epoch[5] Batch [80-100]	Speed: 41060.40 samples/sec	accuracy=nan
2023-03-21 10:23:14,286 Node[0] Epoch[5] Batch [100-120]	Speed: 40971.36 samples/sec	accuracy=nan
2023-03-21 10:23:15,877 Node[0] Epoch[5] Batch [120-140]	Speed: 41028.56 samples/sec	accuracy=nan
2023-03-21 10:23:17,469 Node[0] Epoch[5] Batch [140-160]	Speed: 40988.80 samples/sec	accuracy=nan
2023-03-21 10:23:19,055 Node[0] Epoch[5] Batch [160-180]	Speed: 41171.63 samples/sec	accuracy=nan
2023-03-21 10:23:20,647 Node[0] Epoch[5] Batch [180-200]	Speed: 40994.17 samples/sec	accuracy=nan
2023-03-21 10:23:22,235 Node[0] Epoch[5] Batch [200-220]	Speed: 41109.96 samples/sec	accuracy=nan
2023-03-21 10:23:23,827 Node[0] Epoch[5] Batch [220-240]	Speed: 41021.91 samples/sec	accuracy=nan
2023-03-21 10:23:25,415 Node[0] Epoch[5] Batch [240-260]	Speed: 41085.58 samples/sec	accuracy=nan
2023-03-21 10:23:27,007 Node[0] Epoch[5] Batch [260-280]	Speed: 41021.99 samples/sec	accuracy=nan
2023-03-21 10:23:28,594 Node[0] Epoch[5] Batch [280-300]	Speed: 41134.35 samples/sec	accuracy=nan
2023-03-21 10:23:30,184 Node[0] Epoch[5] Batch [300-320]	Speed: 41039.65 samples/sec	accuracy=nan
2023-03-21 10:23:31,776 Node[0] Epoch[5] Batch [320-340]	Speed: 41005.46 samples/sec	accuracy=nan
2023-03-21 10:23:33,364 Node[0] Epoch[5] Batch [340-360]	Speed: 41106.89 samples/sec	accuracy=nan
2023-03-21 10:23:34,955 Node[0] Epoch[5] Batch [360-380]	Speed: 41056.50 samples/sec	accuracy=nan
2023-03-21 10:23:35,907 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,907 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,907 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,907 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:35,908 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412215908, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 10:23:35,909 Node[0] Epoch[5] Time cost=31.249
:::MLLOG {"namespace": "", "time_ms": 1679412215909, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40998.44597086453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-21 10:23:35,908 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412215909, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 10:23:35,909 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:23:37,584 Node[0] Epoch[6] Batch [0-20]	Speed: 40905.54 samples/sec	accuracy=nan
2023-03-21 10:23:39,173 Node[0] Epoch[6] Batch [20-40]	Speed: 41093.05 samples/sec	accuracy=nan
2023-03-21 10:23:40,766 Node[0] Epoch[6] Batch [40-60]	Speed: 40990.73 samples/sec	accuracy=nan
2023-03-21 10:23:42,359 Node[0] Epoch[6] Batch [60-80]	Speed: 40967.02 samples/sec	accuracy=nan
2023-03-21 10:23:43,946 Node[0] Epoch[6] Batch [80-100]	Speed: 41121.94 samples/sec	accuracy=nan
2023-03-21 10:23:45,538 Node[0] Epoch[6] Batch [100-120]	Speed: 41025.57 samples/sec	accuracy=nan
2023-03-21 10:23:47,127 Node[0] Epoch[6] Batch [120-140]	Speed: 41074.50 samples/sec	accuracy=nan
2023-03-21 10:23:48,719 Node[0] Epoch[6] Batch [140-160]	Speed: 41010.10 samples/sec	accuracy=nan
2023-03-21 10:23:50,309 Node[0] Epoch[6] Batch [160-180]	Speed: 41056.82 samples/sec	accuracy=nan
2023-03-21 10:23:51,899 Node[0] Epoch[6] Batch [180-200]	Speed: 41042.76 samples/sec	accuracy=nan
2023-03-21 10:23:53,491 Node[0] Epoch[6] Batch [200-220]	Speed: 41015.08 samples/sec	accuracy=nan
2023-03-21 10:23:55,082 Node[0] Epoch[6] Batch [220-240]	Speed: 41025.83 samples/sec	accuracy=nan
2023-03-21 10:23:56,674 Node[0] Epoch[6] Batch [240-260]	Speed: 41011.07 samples/sec	accuracy=nan
2023-03-21 10:23:58,263 Node[0] Epoch[6] Batch [260-280]	Speed: 41082.19 samples/sec	accuracy=nan
2023-03-21 10:23:59,855 Node[0] Epoch[6] Batch [280-300]	Speed: 40993.55 samples/sec	accuracy=nan
2023-03-21 10:24:01,449 Node[0] Epoch[6] Batch [300-320]	Speed: 40975.77 samples/sec	accuracy=nan
2023-03-21 10:24:03,040 Node[0] Epoch[6] Batch [320-340]	Speed: 41028.24 samples/sec	accuracy=nan
2023-03-21 10:24:04,632 Node[0] Epoch[6] Batch [340-360]	Speed: 41005.47 samples/sec	accuracy=nan
2023-03-21 10:24:06,222 Node[0] Epoch[6] Batch [360-380]	Speed: 41046.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412247102, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 10:24:07,103 Node[0] Epoch[6] Time cost=31.194
:::MLLOG {"namespace": "", "time_ms": 1679412247103, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41070.88975810252}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679412247178, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 10:24:07,929 Node[0] Epoch[6] Validation-accuracy=0.440320
2023-03-21 10:24:07,929 Node[0] Epoch[6] Validation-correct-count=1376.000000
2023-03-21 10:24:07,929 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412248013, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679412248013, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44028, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 10:24:08,013 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412248014, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679412248014, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 10:24:08,013 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,014 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:08,013 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412248014, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 10:24:08,014 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:09,619 Node[0] Epoch[7] Batch [0-20]	Speed: 40952.24 samples/sec	accuracy=nan
2023-03-21 10:24:11,212 Node[0] Epoch[7] Batch [20-40]	Speed: 40980.10 samples/sec	accuracy=nan
2023-03-21 10:24:12,799 Node[0] Epoch[7] Batch [40-60]	Speed: 41125.41 samples/sec	accuracy=nan
2023-03-21 10:24:14,388 Node[0] Epoch[7] Batch [60-80]	Speed: 41073.24 samples/sec	accuracy=nan
2023-03-21 10:24:15,982 Node[0] Epoch[7] Batch [80-100]	Speed: 40963.99 samples/sec	accuracy=nan
2023-03-21 10:24:17,572 Node[0] Epoch[7] Batch [100-120]	Speed: 41047.37 samples/sec	accuracy=nan
2023-03-21 10:24:19,167 Node[0] Epoch[7] Batch [120-140]	Speed: 40940.27 samples/sec	accuracy=nan
2023-03-21 10:24:20,762 Node[0] Epoch[7] Batch [140-160]	Speed: 40939.25 samples/sec	accuracy=nan
2023-03-21 10:24:22,353 Node[0] Epoch[7] Batch [160-180]	Speed: 41016.03 samples/sec	accuracy=nan
2023-03-21 10:24:23,941 Node[0] Epoch[7] Batch [180-200]	Speed: 41123.57 samples/sec	accuracy=nan
2023-03-21 10:24:25,530 Node[0] Epoch[7] Batch [200-220]	Speed: 41057.63 samples/sec	accuracy=nan
2023-03-21 10:24:27,123 Node[0] Epoch[7] Batch [220-240]	Speed: 41004.08 samples/sec	accuracy=nan
2023-03-21 10:24:28,711 Node[0] Epoch[7] Batch [240-260]	Speed: 41096.57 samples/sec	accuracy=nan
2023-03-21 10:24:30,301 Node[0] Epoch[7] Batch [260-280]	Speed: 41043.31 samples/sec	accuracy=nan
2023-03-21 10:24:31,890 Node[0] Epoch[7] Batch [280-300]	Speed: 41086.13 samples/sec	accuracy=nan
2023-03-21 10:24:33,481 Node[0] Epoch[7] Batch [300-320]	Speed: 41036.75 samples/sec	accuracy=nan
2023-03-21 10:24:35,072 Node[0] Epoch[7] Batch [320-340]	Speed: 41042.95 samples/sec	accuracy=nan
2023-03-21 10:24:36,660 Node[0] Epoch[7] Batch [340-360]	Speed: 41086.63 samples/sec	accuracy=nan
2023-03-21 10:24:38,250 Node[0] Epoch[7] Batch [360-380]	Speed: 41081.59 samples/sec	accuracy=nan
2023-03-21 10:24:39,202 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,202 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:39,203 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412279202, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 10:24:39,203 Node[0] Epoch[7] Time cost=31.189
:::MLLOG {"namespace": "", "time_ms": 1679412279204, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41077.053641505394}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-21 10:24:39,204 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412279204, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 10:24:39,204 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:24:40,875 Node[0] Epoch[8] Batch [0-20]	Speed: 41018.67 samples/sec	accuracy=nan
2023-03-21 10:24:42,463 Node[0] Epoch[8] Batch [20-40]	Speed: 41097.39 samples/sec	accuracy=nan
2023-03-21 10:24:44,058 Node[0] Epoch[8] Batch [40-60]	Speed: 40948.88 samples/sec	accuracy=nan
2023-03-21 10:24:45,648 Node[0] Epoch[8] Batch [60-80]	Speed: 41041.17 samples/sec	accuracy=nan
2023-03-21 10:24:47,240 Node[0] Epoch[8] Batch [80-100]	Speed: 41020.34 samples/sec	accuracy=nan
2023-03-21 10:24:48,833 Node[0] Epoch[8] Batch [100-120]	Speed: 40961.67 samples/sec	accuracy=nan
2023-03-21 10:24:50,424 Node[0] Epoch[8] Batch [120-140]	Speed: 41046.50 samples/sec	accuracy=nan
2023-03-21 10:24:52,015 Node[0] Epoch[8] Batch [140-160]	Speed: 41016.18 samples/sec	accuracy=nan
2023-03-21 10:24:53,609 Node[0] Epoch[8] Batch [160-180]	Speed: 40952.66 samples/sec	accuracy=nan
2023-03-21 10:24:55,200 Node[0] Epoch[8] Batch [180-200]	Speed: 41045.40 samples/sec	accuracy=nan
2023-03-21 10:24:56,793 Node[0] Epoch[8] Batch [200-220]	Speed: 40963.59 samples/sec	accuracy=nan
2023-03-21 10:24:58,383 Node[0] Epoch[8] Batch [220-240]	Speed: 41053.55 samples/sec	accuracy=nan
2023-03-21 10:24:59,977 Node[0] Epoch[8] Batch [240-260]	Speed: 40963.84 samples/sec	accuracy=nan
2023-03-21 10:25:01,565 Node[0] Epoch[8] Batch [260-280]	Speed: 41098.72 samples/sec	accuracy=nan
2023-03-21 10:25:03,155 Node[0] Epoch[8] Batch [280-300]	Speed: 41074.12 samples/sec	accuracy=nan
2023-03-21 10:25:04,746 Node[0] Epoch[8] Batch [300-320]	Speed: 41034.93 samples/sec	accuracy=nan
2023-03-21 10:25:06,338 Node[0] Epoch[8] Batch [320-340]	Speed: 40989.86 samples/sec	accuracy=nan
2023-03-21 10:25:07,930 Node[0] Epoch[8] Batch [340-360]	Speed: 41008.35 samples/sec	accuracy=nan
2023-03-21 10:25:09,520 Node[0] Epoch[8] Batch [360-380]	Speed: 41046.59 samples/sec	accuracy=nan
2023-03-21 10:25:10,394 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,394 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:10,395 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412310394, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 10:25:10,395 Node[0] Epoch[8] Time cost=31.191
:::MLLOG {"namespace": "", "time_ms": 1679412310395, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41074.84506760918}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679412310395, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 10:25:10,396 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:12,067 Node[0] Epoch[9] Batch [0-20]	Speed: 41038.18 samples/sec	accuracy=nan
2023-03-21 10:25:13,657 Node[0] Epoch[9] Batch [20-40]	Speed: 41048.76 samples/sec	accuracy=nan
2023-03-21 10:25:15,252 Node[0] Epoch[9] Batch [40-60]	Speed: 40933.64 samples/sec	accuracy=nan
2023-03-21 10:25:16,839 Node[0] Epoch[9] Batch [60-80]	Speed: 41136.04 samples/sec	accuracy=nan
2023-03-21 10:25:18,432 Node[0] Epoch[9] Batch [80-100]	Speed: 40977.86 samples/sec	accuracy=nan
2023-03-21 10:25:20,020 Node[0] Epoch[9] Batch [100-120]	Speed: 41112.08 samples/sec	accuracy=nan
2023-03-21 10:25:21,613 Node[0] Epoch[9] Batch [120-140]	Speed: 40995.37 samples/sec	accuracy=nan
2023-03-21 10:25:23,205 Node[0] Epoch[9] Batch [140-160]	Speed: 40999.25 samples/sec	accuracy=nan
2023-03-21 10:25:24,797 Node[0] Epoch[9] Batch [160-180]	Speed: 40985.32 samples/sec	accuracy=nan
2023-03-21 10:25:26,389 Node[0] Epoch[9] Batch [180-200]	Speed: 41025.50 samples/sec	accuracy=nan
2023-03-21 10:25:27,980 Node[0] Epoch[9] Batch [200-220]	Speed: 41031.45 samples/sec	accuracy=nan
2023-03-21 10:25:29,570 Node[0] Epoch[9] Batch [220-240]	Speed: 41047.92 samples/sec	accuracy=nan
2023-03-21 10:25:31,161 Node[0] Epoch[9] Batch [240-260]	Speed: 41025.72 samples/sec	accuracy=nan
2023-03-21 10:25:32,753 Node[0] Epoch[9] Batch [260-280]	Speed: 41005.87 samples/sec	accuracy=nan
2023-03-21 10:25:34,346 Node[0] Epoch[9] Batch [280-300]	Speed: 40995.88 samples/sec	accuracy=nan
2023-03-21 10:25:35,934 Node[0] Epoch[9] Batch [300-320]	Speed: 41085.15 samples/sec	accuracy=nan
2023-03-21 10:25:37,528 Node[0] Epoch[9] Batch [320-340]	Speed: 40970.55 samples/sec	accuracy=nan
2023-03-21 10:25:39,124 Node[0] Epoch[9] Batch [340-360]	Speed: 40888.46 samples/sec	accuracy=nan
2023-03-21 10:25:40,720 Node[0] Epoch[9] Batch [360-380]	Speed: 40912.56 samples/sec	accuracy=nan
2023-03-21 10:25:41,673 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:41,674 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412341674, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 10:25:41,675 Node[0] Epoch[9] Time cost=31.279
:::MLLOG {"namespace": "", "time_ms": 1679412341675, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40959.19131577351}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679412341675, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 10:25:41,675 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:25:43,347 Node[0] Epoch[10] Batch [0-20]	Speed: 41009.83 samples/sec	accuracy=nan
2023-03-21 10:25:44,939 Node[0] Epoch[10] Batch [20-40]	Speed: 40993.22 samples/sec	accuracy=nan
2023-03-21 10:25:46,532 Node[0] Epoch[10] Batch [40-60]	Speed: 40979.49 samples/sec	accuracy=nan
2023-03-21 10:25:48,127 Node[0] Epoch[10] Batch [60-80]	Speed: 40935.20 samples/sec	accuracy=nan
2023-03-21 10:25:49,717 Node[0] Epoch[10] Batch [80-100]	Speed: 41061.56 samples/sec	accuracy=nan
2023-03-21 10:25:51,308 Node[0] Epoch[10] Batch [100-120]	Speed: 41025.46 samples/sec	accuracy=nan
2023-03-21 10:25:52,900 Node[0] Epoch[10] Batch [120-140]	Speed: 41006.55 samples/sec	accuracy=nan
2023-03-21 10:25:54,492 Node[0] Epoch[10] Batch [140-160]	Speed: 41011.90 samples/sec	accuracy=nan
2023-03-21 10:25:56,081 Node[0] Epoch[10] Batch [160-180]	Speed: 41071.54 samples/sec	accuracy=nan
2023-03-21 10:25:57,674 Node[0] Epoch[10] Batch [180-200]	Speed: 40990.79 samples/sec	accuracy=nan
2023-03-21 10:25:59,263 Node[0] Epoch[10] Batch [200-220]	Speed: 41063.84 samples/sec	accuracy=nan
2023-03-21 10:26:00,860 Node[0] Epoch[10] Batch [220-240]	Speed: 40892.54 samples/sec	accuracy=nan
2023-03-21 10:26:02,449 Node[0] Epoch[10] Batch [240-260]	Speed: 41072.14 samples/sec	accuracy=nan
2023-03-21 10:26:04,043 Node[0] Epoch[10] Batch [260-280]	Speed: 40960.04 samples/sec	accuracy=nan
2023-03-21 10:26:05,637 Node[0] Epoch[10] Batch [280-300]	Speed: 40950.36 samples/sec	accuracy=nan
2023-03-21 10:26:07,226 Node[0] Epoch[10] Batch [300-320]	Speed: 41077.74 samples/sec	accuracy=nan
2023-03-21 10:26:08,819 Node[0] Epoch[10] Batch [320-340]	Speed: 40977.67 samples/sec	accuracy=nan
2023-03-21 10:26:10,406 Node[0] Epoch[10] Batch [340-360]	Speed: 41141.28 samples/sec	accuracy=nan
2023-03-21 10:26:11,997 Node[0] Epoch[10] Batch [360-380]	Speed: 41029.22 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412372871, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 10:26:12,872 Node[0] Epoch[10] Time cost=31.197
:::MLLOG {"namespace": "", "time_ms": 1679412372872, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41067.429840195415}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679412372947, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 10:26:13,732 Node[0] Epoch[10] Validation-accuracy=0.550720
2023-03-21 10:26:13,733 Node[0] Epoch[10] Validation-correct-count=1721.000000
2023-03-21 10:26:13,733 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412373778, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679412373778, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5473, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679412373778, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679412373779, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 10:26:13,778 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412373779, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 10:26:13,778 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,779 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,779 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,779 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,779 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:13,778 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:15,384 Node[0] Epoch[11] Batch [0-20]	Speed: 40951.37 samples/sec	accuracy=nan
2023-03-21 10:26:16,976 Node[0] Epoch[11] Batch [20-40]	Speed: 41013.27 samples/sec	accuracy=nan
2023-03-21 10:26:18,566 Node[0] Epoch[11] Batch [40-60]	Speed: 41041.44 samples/sec	accuracy=nan
2023-03-21 10:26:20,156 Node[0] Epoch[11] Batch [60-80]	Speed: 41071.15 samples/sec	accuracy=nan
2023-03-21 10:26:21,745 Node[0] Epoch[11] Batch [80-100]	Speed: 41083.11 samples/sec	accuracy=nan
2023-03-21 10:26:23,334 Node[0] Epoch[11] Batch [100-120]	Speed: 41072.26 samples/sec	accuracy=nan
2023-03-21 10:26:24,925 Node[0] Epoch[11] Batch [120-140]	Speed: 41035.64 samples/sec	accuracy=nan
2023-03-21 10:26:26,514 Node[0] Epoch[11] Batch [140-160]	Speed: 41082.66 samples/sec	accuracy=nan
2023-03-21 10:26:28,105 Node[0] Epoch[11] Batch [160-180]	Speed: 41035.67 samples/sec	accuracy=nan
2023-03-21 10:26:29,699 Node[0] Epoch[11] Batch [180-200]	Speed: 40938.23 samples/sec	accuracy=nan
2023-03-21 10:26:31,290 Node[0] Epoch[11] Batch [200-220]	Speed: 41041.08 samples/sec	accuracy=nan
2023-03-21 10:26:32,878 Node[0] Epoch[11] Batch [220-240]	Speed: 41116.54 samples/sec	accuracy=nan
2023-03-21 10:26:34,471 Node[0] Epoch[11] Batch [240-260]	Speed: 40979.02 samples/sec	accuracy=nan
2023-03-21 10:26:36,057 Node[0] Epoch[11] Batch [260-280]	Speed: 41139.50 samples/sec	accuracy=nan
2023-03-21 10:26:37,648 Node[0] Epoch[11] Batch [280-300]	Speed: 41036.91 samples/sec	accuracy=nan
2023-03-21 10:26:39,238 Node[0] Epoch[11] Batch [300-320]	Speed: 41057.42 samples/sec	accuracy=nan
2023-03-21 10:26:40,826 Node[0] Epoch[11] Batch [320-340]	Speed: 41110.85 samples/sec	accuracy=nan
2023-03-21 10:26:42,419 Node[0] Epoch[11] Batch [340-360]	Speed: 40983.48 samples/sec	accuracy=nan
2023-03-21 10:26:44,010 Node[0] Epoch[11] Batch [360-380]	Speed: 41031.97 samples/sec	accuracy=nan
2023-03-21 10:26:44,962 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,962 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:44,963 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412404962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 10:26:44,963 Node[0] Epoch[11] Time cost=31.184
:::MLLOG {"namespace": "", "time_ms": 1679412404963, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41083.99520867502}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 10:26:44,963 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412404963, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 10:26:44,963 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:26:46,633 Node[0] Epoch[12] Batch [0-20]	Speed: 41021.23 samples/sec	accuracy=nan
2023-03-21 10:26:48,225 Node[0] Epoch[12] Batch [20-40]	Speed: 41027.78 samples/sec	accuracy=nan
2023-03-21 10:26:49,817 Node[0] Epoch[12] Batch [40-60]	Speed: 40997.29 samples/sec	accuracy=nan
2023-03-21 10:26:51,409 Node[0] Epoch[12] Batch [60-80]	Speed: 40991.94 samples/sec	accuracy=nan
2023-03-21 10:26:53,001 Node[0] Epoch[12] Batch [80-100]	Speed: 41022.88 samples/sec	accuracy=nan
2023-03-21 10:26:54,591 Node[0] Epoch[12] Batch [100-120]	Speed: 41057.09 samples/sec	accuracy=nan
2023-03-21 10:26:56,182 Node[0] Epoch[12] Batch [120-140]	Speed: 41033.74 samples/sec	accuracy=nan
2023-03-21 10:26:57,774 Node[0] Epoch[12] Batch [140-160]	Speed: 40983.99 samples/sec	accuracy=nan
2023-03-21 10:26:59,369 Node[0] Epoch[12] Batch [160-180]	Speed: 40947.01 samples/sec	accuracy=nan
2023-03-21 10:27:00,961 Node[0] Epoch[12] Batch [180-200]	Speed: 40982.98 samples/sec	accuracy=nan
2023-03-21 10:27:02,552 Node[0] Epoch[12] Batch [200-220]	Speed: 41033.10 samples/sec	accuracy=nan
2023-03-21 10:27:04,143 Node[0] Epoch[12] Batch [220-240]	Speed: 41029.67 samples/sec	accuracy=nan
2023-03-21 10:27:05,735 Node[0] Epoch[12] Batch [240-260]	Speed: 41011.98 samples/sec	accuracy=nan
2023-03-21 10:27:07,329 Node[0] Epoch[12] Batch [260-280]	Speed: 40946.31 samples/sec	accuracy=nan
2023-03-21 10:27:08,923 Node[0] Epoch[12] Batch [280-300]	Speed: 40970.33 samples/sec	accuracy=nan
2023-03-21 10:27:10,514 Node[0] Epoch[12] Batch [300-320]	Speed: 41023.47 samples/sec	accuracy=nan
2023-03-21 10:27:12,105 Node[0] Epoch[12] Batch [320-340]	Speed: 41028.18 samples/sec	accuracy=nan
2023-03-21 10:27:13,697 Node[0] Epoch[12] Batch [340-360]	Speed: 41013.60 samples/sec	accuracy=nan
2023-03-21 10:27:15,291 Node[0] Epoch[12] Batch [360-380]	Speed: 40961.02 samples/sec	accuracy=nan
2023-03-21 10:27:16,162 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,162 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:16,163 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412436162, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 10:27:16,163 Node[0] Epoch[12] Time cost=31.200
:::MLLOG {"namespace": "", "time_ms": 1679412436163, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41063.48725520902}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 10:27:16,163 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412436163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 10:27:16,164 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:17,834 Node[0] Epoch[13] Batch [0-20]	Speed: 41083.59 samples/sec	accuracy=nan
2023-03-21 10:27:19,427 Node[0] Epoch[13] Batch [20-40]	Speed: 40993.10 samples/sec	accuracy=nan
2023-03-21 10:27:21,022 Node[0] Epoch[13] Batch [40-60]	Speed: 40929.80 samples/sec	accuracy=nan
2023-03-21 10:27:22,612 Node[0] Epoch[13] Batch [60-80]	Speed: 41043.42 samples/sec	accuracy=nan
2023-03-21 10:27:24,203 Node[0] Epoch[13] Batch [80-100]	Speed: 41026.56 samples/sec	accuracy=nan
2023-03-21 10:27:25,794 Node[0] Epoch[13] Batch [100-120]	Speed: 41051.47 samples/sec	accuracy=nan
2023-03-21 10:27:27,384 Node[0] Epoch[13] Batch [120-140]	Speed: 41037.22 samples/sec	accuracy=nan
2023-03-21 10:27:28,976 Node[0] Epoch[13] Batch [140-160]	Speed: 41017.76 samples/sec	accuracy=nan
2023-03-21 10:27:30,567 Node[0] Epoch[13] Batch [160-180]	Speed: 41029.61 samples/sec	accuracy=nan
2023-03-21 10:27:32,158 Node[0] Epoch[13] Batch [180-200]	Speed: 41030.29 samples/sec	accuracy=nan
2023-03-21 10:27:33,749 Node[0] Epoch[13] Batch [200-220]	Speed: 41029.81 samples/sec	accuracy=nan
2023-03-21 10:27:35,343 Node[0] Epoch[13] Batch [220-240]	Speed: 40948.49 samples/sec	accuracy=nan
2023-03-21 10:27:36,934 Node[0] Epoch[13] Batch [240-260]	Speed: 41033.69 samples/sec	accuracy=nan
2023-03-21 10:27:38,525 Node[0] Epoch[13] Batch [260-280]	Speed: 41036.21 samples/sec	accuracy=nan
2023-03-21 10:27:40,119 Node[0] Epoch[13] Batch [280-300]	Speed: 40945.46 samples/sec	accuracy=nan
2023-03-21 10:27:41,709 Node[0] Epoch[13] Batch [300-320]	Speed: 41072.77 samples/sec	accuracy=nan
2023-03-21 10:27:43,303 Node[0] Epoch[13] Batch [320-340]	Speed: 40952.47 samples/sec	accuracy=nan
2023-03-21 10:27:44,895 Node[0] Epoch[13] Batch [340-360]	Speed: 40996.39 samples/sec	accuracy=nan
2023-03-21 10:27:46,487 Node[0] Epoch[13] Batch [360-380]	Speed: 40993.26 samples/sec	accuracy=nan
2023-03-21 10:27:47,438 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,438 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:47,439 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412467438, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 10:27:47,439 Node[0] Epoch[13] Time cost=31.275
2023-03-21 10:27:47,439 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412467439, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40964.19373122352}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679412467439, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 10:27:47,439 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:27:49,110 Node[0] Epoch[14] Batch [0-20]	Speed: 41026.04 samples/sec	accuracy=nan
2023-03-21 10:27:50,700 Node[0] Epoch[14] Batch [20-40]	Speed: 41039.55 samples/sec	accuracy=nan
2023-03-21 10:27:52,291 Node[0] Epoch[14] Batch [40-60]	Speed: 41025.56 samples/sec	accuracy=nan
2023-03-21 10:27:53,880 Node[0] Epoch[14] Batch [60-80]	Speed: 41084.09 samples/sec	accuracy=nan
2023-03-21 10:27:55,475 Node[0] Epoch[14] Batch [80-100]	Speed: 40946.33 samples/sec	accuracy=nan
2023-03-21 10:27:57,066 Node[0] Epoch[14] Batch [100-120]	Speed: 41010.87 samples/sec	accuracy=nan
2023-03-21 10:27:58,658 Node[0] Epoch[14] Batch [120-140]	Speed: 41024.81 samples/sec	accuracy=nan
2023-03-21 10:28:00,252 Node[0] Epoch[14] Batch [140-160]	Speed: 40931.71 samples/sec	accuracy=nan
2023-03-21 10:28:01,841 Node[0] Epoch[14] Batch [160-180]	Speed: 41089.66 samples/sec	accuracy=nan
2023-03-21 10:28:03,434 Node[0] Epoch[14] Batch [180-200]	Speed: 40990.95 samples/sec	accuracy=nan
2023-03-21 10:28:05,027 Node[0] Epoch[14] Batch [200-220]	Speed: 40977.64 samples/sec	accuracy=nan
2023-03-21 10:28:06,615 Node[0] Epoch[14] Batch [220-240]	Speed: 41101.84 samples/sec	accuracy=nan
2023-03-21 10:28:08,205 Node[0] Epoch[14] Batch [240-260]	Speed: 41046.59 samples/sec	accuracy=nan
2023-03-21 10:28:09,796 Node[0] Epoch[14] Batch [260-280]	Speed: 41054.23 samples/sec	accuracy=nan
2023-03-21 10:28:11,384 Node[0] Epoch[14] Batch [280-300]	Speed: 41084.35 samples/sec	accuracy=nan
2023-03-21 10:28:12,973 Node[0] Epoch[14] Batch [300-320]	Speed: 41081.39 samples/sec	accuracy=nan
2023-03-21 10:28:14,566 Node[0] Epoch[14] Batch [320-340]	Speed: 41001.07 samples/sec	accuracy=nan
2023-03-21 10:28:16,159 Node[0] Epoch[14] Batch [340-360]	Speed: 40958.83 samples/sec	accuracy=nan
2023-03-21 10:28:17,750 Node[0] Epoch[14] Batch [360-380]	Speed: 41030.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412498622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 10:28:18,623 Node[0] Epoch[14] Time cost=31.183
:::MLLOG {"namespace": "", "time_ms": 1679412498623, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41084.87818665045}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679412498697, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 10:28:19,413 Node[0] Epoch[14] Validation-accuracy=0.557760
2023-03-21 10:28:19,413 Node[0] Epoch[14] Validation-correct-count=1743.000000
2023-03-21 10:28:19,413 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412499535, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-21 10:28:19,535 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412499535, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5486, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-21 10:28:19,535 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412499535, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 10:28:19,535 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412499535, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 10:28:19,535 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:19,535 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412499536, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 10:28:19,536 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:21,143 Node[0] Epoch[15] Batch [0-20]	Speed: 40839.21 samples/sec	accuracy=nan
2023-03-21 10:28:22,738 Node[0] Epoch[15] Batch [20-40]	Speed: 40924.01 samples/sec	accuracy=nan
2023-03-21 10:28:24,326 Node[0] Epoch[15] Batch [40-60]	Speed: 41094.10 samples/sec	accuracy=nan
2023-03-21 10:28:25,916 Node[0] Epoch[15] Batch [60-80]	Speed: 41076.45 samples/sec	accuracy=nan
2023-03-21 10:28:27,506 Node[0] Epoch[15] Batch [80-100]	Speed: 41048.83 samples/sec	accuracy=nan
2023-03-21 10:28:29,097 Node[0] Epoch[15] Batch [100-120]	Speed: 41031.96 samples/sec	accuracy=nan
2023-03-21 10:28:30,686 Node[0] Epoch[15] Batch [120-140]	Speed: 41083.96 samples/sec	accuracy=nan
2023-03-21 10:28:32,274 Node[0] Epoch[15] Batch [140-160]	Speed: 41107.94 samples/sec	accuracy=nan
2023-03-21 10:28:33,863 Node[0] Epoch[15] Batch [160-180]	Speed: 41068.71 samples/sec	accuracy=nan
2023-03-21 10:28:35,452 Node[0] Epoch[15] Batch [180-200]	Speed: 41087.35 samples/sec	accuracy=nan
2023-03-21 10:28:37,043 Node[0] Epoch[15] Batch [200-220]	Speed: 41026.97 samples/sec	accuracy=nan
2023-03-21 10:28:38,635 Node[0] Epoch[15] Batch [220-240]	Speed: 41009.34 samples/sec	accuracy=nan
2023-03-21 10:28:40,224 Node[0] Epoch[15] Batch [240-260]	Speed: 41080.00 samples/sec	accuracy=nan
2023-03-21 10:28:41,816 Node[0] Epoch[15] Batch [260-280]	Speed: 40998.57 samples/sec	accuracy=nan
2023-03-21 10:28:43,409 Node[0] Epoch[15] Batch [280-300]	Speed: 40981.70 samples/sec	accuracy=nan
2023-03-21 10:28:45,000 Node[0] Epoch[15] Batch [300-320]	Speed: 41040.16 samples/sec	accuracy=nan
2023-03-21 10:28:46,590 Node[0] Epoch[15] Batch [320-340]	Speed: 41057.84 samples/sec	accuracy=nan
2023-03-21 10:28:48,184 Node[0] Epoch[15] Batch [340-360]	Speed: 40949.80 samples/sec	accuracy=nan
2023-03-21 10:28:49,775 Node[0] Epoch[15] Batch [360-380]	Speed: 41030.50 samples/sec	accuracy=nan
2023-03-21 10:28:50,730 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,731 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,730 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,731 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412530730, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 10:28:50,731 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:50,731 Node[0] Epoch[15] Time cost=31.195
:::MLLOG {"namespace": "", "time_ms": 1679412530731, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41069.156430520285}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 10:28:50,731 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412530732, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 10:28:50,732 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:28:52,406 Node[0] Epoch[16] Batch [0-20]	Speed: 40943.19 samples/sec	accuracy=nan
2023-03-21 10:28:53,995 Node[0] Epoch[16] Batch [20-40]	Speed: 41069.90 samples/sec	accuracy=nan
2023-03-21 10:28:55,587 Node[0] Epoch[16] Batch [40-60]	Speed: 41011.12 samples/sec	accuracy=nan
2023-03-21 10:28:57,177 Node[0] Epoch[16] Batch [60-80]	Speed: 41051.95 samples/sec	accuracy=nan
2023-03-21 10:28:58,770 Node[0] Epoch[16] Batch [80-100]	Speed: 40975.38 samples/sec	accuracy=nan
2023-03-21 10:29:00,366 Node[0] Epoch[16] Batch [100-120]	Speed: 40899.87 samples/sec	accuracy=nan
2023-03-21 10:29:01,957 Node[0] Epoch[16] Batch [120-140]	Speed: 41047.77 samples/sec	accuracy=nan
2023-03-21 10:29:03,550 Node[0] Epoch[16] Batch [140-160]	Speed: 40969.19 samples/sec	accuracy=nan
2023-03-21 10:29:05,141 Node[0] Epoch[16] Batch [160-180]	Speed: 41040.70 samples/sec	accuracy=nan
2023-03-21 10:29:06,734 Node[0] Epoch[16] Batch [180-200]	Speed: 40968.24 samples/sec	accuracy=nan
2023-03-21 10:29:08,323 Node[0] Epoch[16] Batch [200-220]	Speed: 41071.55 samples/sec	accuracy=nan
2023-03-21 10:29:09,915 Node[0] Epoch[16] Batch [220-240]	Speed: 41024.61 samples/sec	accuracy=nan
2023-03-21 10:29:11,508 Node[0] Epoch[16] Batch [240-260]	Speed: 40967.50 samples/sec	accuracy=nan
2023-03-21 10:29:13,095 Node[0] Epoch[16] Batch [260-280]	Speed: 41126.21 samples/sec	accuracy=nan
2023-03-21 10:29:14,686 Node[0] Epoch[16] Batch [280-300]	Speed: 41041.64 samples/sec	accuracy=nan
2023-03-21 10:29:16,278 Node[0] Epoch[16] Batch [300-320]	Speed: 41016.41 samples/sec	accuracy=nan
2023-03-21 10:29:17,870 Node[0] Epoch[16] Batch [320-340]	Speed: 41006.06 samples/sec	accuracy=nan
2023-03-21 10:29:19,461 Node[0] Epoch[16] Batch [340-360]	Speed: 41017.37 samples/sec	accuracy=nan
2023-03-21 10:29:21,055 Node[0] Epoch[16] Batch [360-380]	Speed: 40943.74 samples/sec	accuracy=nan
2023-03-21 10:29:21,928 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,928 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:21,929 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412561928, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 10:29:21,929 Node[0] Epoch[16] Time cost=31.198
:::MLLOG {"namespace": "", "time_ms": 1679412561929, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41066.07277493439}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-21 10:29:21,929 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412561930, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 10:29:21,930 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:23,599 Node[0] Epoch[17] Batch [0-20]	Speed: 41084.71 samples/sec	accuracy=nan
2023-03-21 10:29:25,190 Node[0] Epoch[17] Batch [20-40]	Speed: 41023.44 samples/sec	accuracy=nan
2023-03-21 10:29:26,781 Node[0] Epoch[17] Batch [40-60]	Speed: 41027.89 samples/sec	accuracy=nan
2023-03-21 10:29:28,375 Node[0] Epoch[17] Batch [60-80]	Speed: 40959.79 samples/sec	accuracy=nan
2023-03-21 10:29:29,965 Node[0] Epoch[17] Batch [80-100]	Speed: 41045.80 samples/sec	accuracy=nan
2023-03-21 10:29:31,556 Node[0] Epoch[17] Batch [100-120]	Speed: 41027.27 samples/sec	accuracy=nan
2023-03-21 10:29:33,144 Node[0] Epoch[17] Batch [120-140]	Speed: 41123.34 samples/sec	accuracy=nan
2023-03-21 10:29:34,737 Node[0] Epoch[17] Batch [140-160]	Speed: 40973.68 samples/sec	accuracy=nan
2023-03-21 10:29:36,327 Node[0] Epoch[17] Batch [160-180]	Speed: 41060.74 samples/sec	accuracy=nan
2023-03-21 10:29:37,918 Node[0] Epoch[17] Batch [180-200]	Speed: 41029.69 samples/sec	accuracy=nan
2023-03-21 10:29:39,508 Node[0] Epoch[17] Batch [200-220]	Speed: 41050.86 samples/sec	accuracy=nan
2023-03-21 10:29:41,099 Node[0] Epoch[17] Batch [220-240]	Speed: 41022.05 samples/sec	accuracy=nan
2023-03-21 10:29:42,692 Node[0] Epoch[17] Batch [240-260]	Speed: 40998.92 samples/sec	accuracy=nan
2023-03-21 10:29:44,281 Node[0] Epoch[17] Batch [260-280]	Speed: 41073.23 samples/sec	accuracy=nan
2023-03-21 10:29:45,870 Node[0] Epoch[17] Batch [280-300]	Speed: 41093.97 samples/sec	accuracy=nan
2023-03-21 10:29:47,463 Node[0] Epoch[17] Batch [300-320]	Speed: 40979.70 samples/sec	accuracy=nan
2023-03-21 10:29:49,056 Node[0] Epoch[17] Batch [320-340]	Speed: 40974.25 samples/sec	accuracy=nan
2023-03-21 10:29:50,646 Node[0] Epoch[17] Batch [340-360]	Speed: 41056.75 samples/sec	accuracy=nan
2023-03-21 10:29:52,235 Node[0] Epoch[17] Batch [360-380]	Speed: 41089.17 samples/sec	accuracy=nan
2023-03-21 10:29:53,188 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,188 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:53,189 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412593188, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 10:29:53,189 Node[0] Epoch[17] Time cost=31.259
2023-03-21 10:29:53,189 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412593189, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40985.006159820194}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679412593190, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 10:29:53,190 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:29:54,859 Node[0] Epoch[18] Batch [0-20]	Speed: 41034.41 samples/sec	accuracy=nan
2023-03-21 10:29:56,450 Node[0] Epoch[18] Batch [20-40]	Speed: 41035.88 samples/sec	accuracy=nan
2023-03-21 10:29:58,039 Node[0] Epoch[18] Batch [40-60]	Speed: 41074.94 samples/sec	accuracy=nan
2023-03-21 10:29:59,628 Node[0] Epoch[18] Batch [60-80]	Speed: 41069.90 samples/sec	accuracy=nan
2023-03-21 10:30:01,220 Node[0] Epoch[18] Batch [80-100]	Speed: 41002.65 samples/sec	accuracy=nan
2023-03-21 10:30:02,814 Node[0] Epoch[18] Batch [100-120]	Speed: 40956.48 samples/sec	accuracy=nan
2023-03-21 10:30:04,405 Node[0] Epoch[18] Batch [120-140]	Speed: 41029.49 samples/sec	accuracy=nan
2023-03-21 10:30:05,995 Node[0] Epoch[18] Batch [140-160]	Speed: 41077.10 samples/sec	accuracy=nan
2023-03-21 10:30:07,586 Node[0] Epoch[18] Batch [160-180]	Speed: 41031.69 samples/sec	accuracy=nan
2023-03-21 10:30:09,178 Node[0] Epoch[18] Batch [180-200]	Speed: 40989.85 samples/sec	accuracy=nan
2023-03-21 10:30:10,768 Node[0] Epoch[18] Batch [200-220]	Speed: 41060.83 samples/sec	accuracy=nan
2023-03-21 10:30:12,358 Node[0] Epoch[18] Batch [220-240]	Speed: 41042.18 samples/sec	accuracy=nan
2023-03-21 10:30:13,954 Node[0] Epoch[18] Batch [240-260]	Speed: 40926.61 samples/sec	accuracy=nan
2023-03-21 10:30:15,542 Node[0] Epoch[18] Batch [260-280]	Speed: 41095.64 samples/sec	accuracy=nan
2023-03-21 10:30:17,134 Node[0] Epoch[18] Batch [280-300]	Speed: 41011.26 samples/sec	accuracy=nan
2023-03-21 10:30:18,722 Node[0] Epoch[18] Batch [300-320]	Speed: 41102.53 samples/sec	accuracy=nan
2023-03-21 10:30:20,313 Node[0] Epoch[18] Batch [320-340]	Speed: 41034.94 samples/sec	accuracy=nan
2023-03-21 10:30:21,904 Node[0] Epoch[18] Batch [340-360]	Speed: 41033.74 samples/sec	accuracy=nan
2023-03-21 10:30:23,493 Node[0] Epoch[18] Batch [360-380]	Speed: 41078.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412624368, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 10:30:24,369 Node[0] Epoch[18] Time cost=31.179
:::MLLOG {"namespace": "", "time_ms": 1679412624369, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41090.29907698222}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679412624443, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 10:30:25,161 Node[0] Epoch[18] Validation-accuracy=0.642560
2023-03-21 10:30:25,161 Node[0] Epoch[18] Validation-correct-count=2008.000000
2023-03-21 10:30:25,161 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412625292, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 10:30:25,293 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412625293, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63548, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679412625293, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 10:30:25,293 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412625293, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 10:30:25,293 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:25,293 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412625293, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 10:30:25,293 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:26,895 Node[0] Epoch[19] Batch [0-20]	Speed: 40953.86 samples/sec	accuracy=nan
2023-03-21 10:30:28,487 Node[0] Epoch[19] Batch [20-40]	Speed: 40994.42 samples/sec	accuracy=nan
2023-03-21 10:30:30,077 Node[0] Epoch[19] Batch [40-60]	Speed: 41070.39 samples/sec	accuracy=nan
2023-03-21 10:30:31,667 Node[0] Epoch[19] Batch [60-80]	Speed: 41038.20 samples/sec	accuracy=nan
2023-03-21 10:30:33,261 Node[0] Epoch[19] Batch [80-100]	Speed: 40975.68 samples/sec	accuracy=nan
2023-03-21 10:30:34,848 Node[0] Epoch[19] Batch [100-120]	Speed: 41111.64 samples/sec	accuracy=nan
2023-03-21 10:30:36,438 Node[0] Epoch[19] Batch [120-140]	Speed: 41058.18 samples/sec	accuracy=nan
2023-03-21 10:30:38,029 Node[0] Epoch[19] Batch [140-160]	Speed: 41043.36 samples/sec	accuracy=nan
2023-03-21 10:30:39,616 Node[0] Epoch[19] Batch [160-180]	Speed: 41121.00 samples/sec	accuracy=nan
2023-03-21 10:30:41,209 Node[0] Epoch[19] Batch [180-200]	Speed: 40995.08 samples/sec	accuracy=nan
2023-03-21 10:30:42,800 Node[0] Epoch[19] Batch [200-220]	Speed: 41018.64 samples/sec	accuracy=nan
2023-03-21 10:30:44,390 Node[0] Epoch[19] Batch [220-240]	Speed: 41054.41 samples/sec	accuracy=nan
2023-03-21 10:30:45,982 Node[0] Epoch[19] Batch [240-260]	Speed: 41017.46 samples/sec	accuracy=nan
2023-03-21 10:30:47,578 Node[0] Epoch[19] Batch [260-280]	Speed: 40909.23 samples/sec	accuracy=nan
2023-03-21 10:30:49,168 Node[0] Epoch[19] Batch [280-300]	Speed: 41045.59 samples/sec	accuracy=nan
2023-03-21 10:30:50,759 Node[0] Epoch[19] Batch [300-320]	Speed: 41031.18 samples/sec	accuracy=nan
2023-03-21 10:30:52,348 Node[0] Epoch[19] Batch [320-340]	Speed: 41087.16 samples/sec	accuracy=nan
2023-03-21 10:30:53,941 Node[0] Epoch[19] Batch [340-360]	Speed: 40983.56 samples/sec	accuracy=nan
2023-03-21 10:30:55,536 Node[0] Epoch[19] Batch [360-380]	Speed: 40922.17 samples/sec	accuracy=nan
2023-03-21 10:30:56,488 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,488 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412656488, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 10:30:56,489 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:56,489 Node[0] Epoch[19] Time cost=31.196
2023-03-21 10:30:56,489 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412656489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41068.57732705568}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679412656489, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 10:30:56,490 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:30:58,163 Node[0] Epoch[20] Batch [0-20]	Speed: 40948.51 samples/sec	accuracy=nan
2023-03-21 10:30:59,757 Node[0] Epoch[20] Batch [20-40]	Speed: 40959.06 samples/sec	accuracy=nan
2023-03-21 10:31:01,345 Node[0] Epoch[20] Batch [40-60]	Speed: 41088.08 samples/sec	accuracy=nan
2023-03-21 10:31:02,936 Node[0] Epoch[20] Batch [60-80]	Speed: 41048.27 samples/sec	accuracy=nan
2023-03-21 10:31:04,531 Node[0] Epoch[20] Batch [80-100]	Speed: 40928.71 samples/sec	accuracy=nan
2023-03-21 10:31:06,121 Node[0] Epoch[20] Batch [100-120]	Speed: 41056.39 samples/sec	accuracy=nan
2023-03-21 10:31:07,710 Node[0] Epoch[20] Batch [120-140]	Speed: 41072.31 samples/sec	accuracy=nan
2023-03-21 10:31:09,303 Node[0] Epoch[20] Batch [140-160]	Speed: 40970.54 samples/sec	accuracy=nan
2023-03-21 10:31:10,895 Node[0] Epoch[20] Batch [160-180]	Speed: 41021.35 samples/sec	accuracy=nan
2023-03-21 10:31:12,487 Node[0] Epoch[20] Batch [180-200]	Speed: 40989.38 samples/sec	accuracy=nan
2023-03-21 10:31:14,080 Node[0] Epoch[20] Batch [200-220]	Speed: 40978.83 samples/sec	accuracy=nan
2023-03-21 10:31:15,670 Node[0] Epoch[20] Batch [220-240]	Speed: 41066.50 samples/sec	accuracy=nan
2023-03-21 10:31:17,261 Node[0] Epoch[20] Batch [240-260]	Speed: 41041.01 samples/sec	accuracy=nan
2023-03-21 10:31:18,853 Node[0] Epoch[20] Batch [260-280]	Speed: 41001.35 samples/sec	accuracy=nan
2023-03-21 10:31:20,443 Node[0] Epoch[20] Batch [280-300]	Speed: 41042.64 samples/sec	accuracy=nan
2023-03-21 10:31:22,033 Node[0] Epoch[20] Batch [300-320]	Speed: 41068.17 samples/sec	accuracy=nan
2023-03-21 10:31:23,630 Node[0] Epoch[20] Batch [320-340]	Speed: 40868.18 samples/sec	accuracy=nan
2023-03-21 10:31:25,222 Node[0] Epoch[20] Batch [340-360]	Speed: 41005.79 samples/sec	accuracy=nan
2023-03-21 10:31:26,815 Node[0] Epoch[20] Batch [360-380]	Speed: 40971.27 samples/sec	accuracy=nan
2023-03-21 10:31:27,692 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:27,692 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412687692, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 10:31:27,693 Node[0] Epoch[20] Time cost=31.203
:::MLLOG {"namespace": "", "time_ms": 1679412687693, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41059.150438896526}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679412687693, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 10:31:27,693 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:29,364 Node[0] Epoch[21] Batch [0-20]	Speed: 41062.44 samples/sec	accuracy=nan
2023-03-21 10:31:30,955 Node[0] Epoch[21] Batch [20-40]	Speed: 41023.95 samples/sec	accuracy=nan
2023-03-21 10:31:32,548 Node[0] Epoch[21] Batch [40-60]	Speed: 40985.19 samples/sec	accuracy=nan
2023-03-21 10:31:34,138 Node[0] Epoch[21] Batch [60-80]	Speed: 41045.36 samples/sec	accuracy=nan
2023-03-21 10:31:35,730 Node[0] Epoch[21] Batch [80-100]	Speed: 41015.85 samples/sec	accuracy=nan
2023-03-21 10:31:37,319 Node[0] Epoch[21] Batch [100-120]	Speed: 41081.51 samples/sec	accuracy=nan
2023-03-21 10:31:38,913 Node[0] Epoch[21] Batch [120-140]	Speed: 40945.41 samples/sec	accuracy=nan
2023-03-21 10:31:40,502 Node[0] Epoch[21] Batch [140-160]	Speed: 41080.62 samples/sec	accuracy=nan
2023-03-21 10:31:42,094 Node[0] Epoch[21] Batch [160-180]	Speed: 41011.30 samples/sec	accuracy=nan
2023-03-21 10:31:43,683 Node[0] Epoch[21] Batch [180-200]	Speed: 41085.86 samples/sec	accuracy=nan
2023-03-21 10:31:45,274 Node[0] Epoch[21] Batch [200-220]	Speed: 41039.04 samples/sec	accuracy=nan
2023-03-21 10:31:46,865 Node[0] Epoch[21] Batch [220-240]	Speed: 41011.27 samples/sec	accuracy=nan
2023-03-21 10:31:48,455 Node[0] Epoch[21] Batch [240-260]	Speed: 41077.83 samples/sec	accuracy=nan
2023-03-21 10:31:50,048 Node[0] Epoch[21] Batch [260-280]	Speed: 40979.05 samples/sec	accuracy=nan
2023-03-21 10:31:51,637 Node[0] Epoch[21] Batch [280-300]	Speed: 41064.12 samples/sec	accuracy=nan
2023-03-21 10:31:53,230 Node[0] Epoch[21] Batch [300-320]	Speed: 40993.87 samples/sec	accuracy=nan
2023-03-21 10:31:54,822 Node[0] Epoch[21] Batch [320-340]	Speed: 40988.24 samples/sec	accuracy=nan
2023-03-21 10:31:56,416 Node[0] Epoch[21] Batch [340-360]	Speed: 40964.55 samples/sec	accuracy=nan
2023-03-21 10:31:58,010 Node[0] Epoch[21] Batch [360-380]	Speed: 40956.72 samples/sec	accuracy=nan
2023-03-21 10:31:58,962 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,962 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,962 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,962 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,962 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,962 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:31:58,963 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412718962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 10:31:58,963 Node[0] Epoch[21] Time cost=31.270
:::MLLOG {"namespace": "", "time_ms": 1679412718964, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40970.53585610075}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679412718964, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 10:31:58,964 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:00,640 Node[0] Epoch[22] Batch [0-20]	Speed: 40907.17 samples/sec	accuracy=nan
2023-03-21 10:32:02,232 Node[0] Epoch[22] Batch [20-40]	Speed: 41013.89 samples/sec	accuracy=nan
2023-03-21 10:32:03,824 Node[0] Epoch[22] Batch [40-60]	Speed: 41004.33 samples/sec	accuracy=nan
2023-03-21 10:32:05,414 Node[0] Epoch[22] Batch [60-80]	Speed: 41044.41 samples/sec	accuracy=nan
2023-03-21 10:32:07,006 Node[0] Epoch[22] Batch [80-100]	Speed: 41014.38 samples/sec	accuracy=nan
2023-03-21 10:32:08,597 Node[0] Epoch[22] Batch [100-120]	Speed: 41030.27 samples/sec	accuracy=nan
2023-03-21 10:32:10,188 Node[0] Epoch[22] Batch [120-140]	Speed: 41017.93 samples/sec	accuracy=nan
2023-03-21 10:32:11,781 Node[0] Epoch[22] Batch [140-160]	Speed: 40981.21 samples/sec	accuracy=nan
2023-03-21 10:32:13,374 Node[0] Epoch[22] Batch [160-180]	Speed: 40996.63 samples/sec	accuracy=nan
2023-03-21 10:32:14,964 Node[0] Epoch[22] Batch [180-200]	Speed: 41041.55 samples/sec	accuracy=nan
2023-03-21 10:32:16,558 Node[0] Epoch[22] Batch [200-220]	Speed: 40958.47 samples/sec	accuracy=nan
2023-03-21 10:32:18,155 Node[0] Epoch[22] Batch [220-240]	Speed: 40888.84 samples/sec	accuracy=nan
2023-03-21 10:32:19,746 Node[0] Epoch[22] Batch [240-260]	Speed: 41018.31 samples/sec	accuracy=nan
2023-03-21 10:32:21,336 Node[0] Epoch[22] Batch [260-280]	Speed: 41062.79 samples/sec	accuracy=nan
2023-03-21 10:32:22,928 Node[0] Epoch[22] Batch [280-300]	Speed: 41005.87 samples/sec	accuracy=nan
2023-03-21 10:32:24,523 Node[0] Epoch[22] Batch [300-320]	Speed: 40924.06 samples/sec	accuracy=nan
2023-03-21 10:32:26,115 Node[0] Epoch[22] Batch [320-340]	Speed: 41012.93 samples/sec	accuracy=nan
2023-03-21 10:32:27,706 Node[0] Epoch[22] Batch [340-360]	Speed: 41007.40 samples/sec	accuracy=nan
2023-03-21 10:32:29,302 Node[0] Epoch[22] Batch [360-380]	Speed: 40919.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412750177, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 10:32:30,178 Node[0] Epoch[22] Time cost=31.214
:::MLLOG {"namespace": "", "time_ms": 1679412750178, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41044.96539146405}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679412750252, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 10:32:31,023 Node[0] Epoch[22] Validation-accuracy=0.672320
2023-03-21 10:32:31,023 Node[0] Epoch[22] Validation-correct-count=2101.000000
2023-03-21 10:32:31,023 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412751219, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-21 10:32:31,219 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412751220, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67956, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 10:32:31,220 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412751220, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-21 10:32:31,219 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412751220, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 10:32:31,219 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,219 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,219 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412751220, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 10:32:31,220 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:31,220 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:32:32,821 Node[0] Epoch[23] Batch [0-20]	Speed: 40990.19 samples/sec	accuracy=nan
2023-03-21 10:32:34,410 Node[0] Epoch[23] Batch [20-40]	Speed: 41077.22 samples/sec	accuracy=nan
2023-03-21 10:32:35,999 Node[0] Epoch[23] Batch [40-60]	Speed: 41089.44 samples/sec	accuracy=nan
2023-03-21 10:32:37,593 Node[0] Epoch[23] Batch [60-80]	Speed: 40943.10 samples/sec	accuracy=nan
2023-03-21 10:32:39,183 Node[0] Epoch[23] Batch [80-100]	Speed: 41054.33 samples/sec	accuracy=nan
2023-03-21 10:32:40,776 Node[0] Epoch[23] Batch [100-120]	Speed: 40986.48 samples/sec	accuracy=nan
2023-03-21 10:32:42,372 Node[0] Epoch[23] Batch [120-140]	Speed: 40913.92 samples/sec	accuracy=nan
2023-03-21 10:32:43,963 Node[0] Epoch[23] Batch [140-160]	Speed: 41032.35 samples/sec	accuracy=nan
2023-03-21 10:32:45,553 Node[0] Epoch[23] Batch [160-180]	Speed: 41057.88 samples/sec	accuracy=nan
2023-03-21 10:32:47,146 Node[0] Epoch[23] Batch [180-200]	Speed: 40961.32 samples/sec	accuracy=nan
2023-03-21 10:32:48,735 Node[0] Epoch[23] Batch [200-220]	Speed: 41090.76 samples/sec	accuracy=nan
2023-03-21 10:32:50,328 Node[0] Epoch[23] Batch [220-240]	Speed: 40965.20 samples/sec	accuracy=nan
2023-03-21 10:32:51,918 Node[0] Epoch[23] Batch [240-260]	Speed: 41069.51 samples/sec	accuracy=nan
2023-03-21 10:32:53,508 Node[0] Epoch[23] Batch [260-280]	Speed: 41063.24 samples/sec	accuracy=nan
2023-03-21 10:32:55,100 Node[0] Epoch[23] Batch [280-300]	Speed: 41002.43 samples/sec	accuracy=nan
2023-03-21 10:32:56,693 Node[0] Epoch[23] Batch [300-320]	Speed: 40984.13 samples/sec	accuracy=nan
2023-03-21 10:32:58,284 Node[0] Epoch[23] Batch [320-340]	Speed: 41027.38 samples/sec	accuracy=nan
2023-03-21 10:32:59,874 Node[0] Epoch[23] Batch [340-360]	Speed: 41054.96 samples/sec	accuracy=nan
2023-03-21 10:33:01,465 Node[0] Epoch[23] Batch [360-380]	Speed: 41032.73 samples/sec	accuracy=nan
2023-03-21 10:33:02,417 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,417 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,418 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412782417, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 10:33:02,418 Node[0] Epoch[23] Time cost=31.198
:::MLLOG {"namespace": "", "time_ms": 1679412782418, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41066.05049269634}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-21 10:33:02,418 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412782418, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 10:33:02,418 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:02,418 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:04,091 Node[0] Epoch[24] Batch [0-20]	Speed: 40961.24 samples/sec	accuracy=nan
2023-03-21 10:33:05,681 Node[0] Epoch[24] Batch [20-40]	Speed: 41073.88 samples/sec	accuracy=nan
2023-03-21 10:33:07,275 Node[0] Epoch[24] Batch [40-60]	Speed: 40947.45 samples/sec	accuracy=nan
2023-03-21 10:33:08,865 Node[0] Epoch[24] Batch [60-80]	Speed: 41065.49 samples/sec	accuracy=nan
2023-03-21 10:33:10,453 Node[0] Epoch[24] Batch [80-100]	Speed: 41103.34 samples/sec	accuracy=nan
2023-03-21 10:33:12,047 Node[0] Epoch[24] Batch [100-120]	Speed: 40953.19 samples/sec	accuracy=nan
2023-03-21 10:33:13,638 Node[0] Epoch[24] Batch [120-140]	Speed: 41029.73 samples/sec	accuracy=nan
2023-03-21 10:33:15,230 Node[0] Epoch[24] Batch [140-160]	Speed: 40996.10 samples/sec	accuracy=nan
2023-03-21 10:33:16,821 Node[0] Epoch[24] Batch [160-180]	Speed: 41031.32 samples/sec	accuracy=nan
2023-03-21 10:33:18,415 Node[0] Epoch[24] Batch [180-200]	Speed: 40959.17 samples/sec	accuracy=nan
2023-03-21 10:33:20,005 Node[0] Epoch[24] Batch [200-220]	Speed: 41049.33 samples/sec	accuracy=nan
2023-03-21 10:33:21,598 Node[0] Epoch[24] Batch [220-240]	Speed: 40998.39 samples/sec	accuracy=nan
2023-03-21 10:33:23,192 Node[0] Epoch[24] Batch [240-260]	Speed: 40931.25 samples/sec	accuracy=nan
2023-03-21 10:33:24,786 Node[0] Epoch[24] Batch [260-280]	Speed: 40975.89 samples/sec	accuracy=nan
2023-03-21 10:33:26,376 Node[0] Epoch[24] Batch [280-300]	Speed: 41056.39 samples/sec	accuracy=nan
2023-03-21 10:33:27,967 Node[0] Epoch[24] Batch [300-320]	Speed: 41024.32 samples/sec	accuracy=nan
2023-03-21 10:33:29,561 Node[0] Epoch[24] Batch [320-340]	Speed: 40958.89 samples/sec	accuracy=nan
2023-03-21 10:33:31,152 Node[0] Epoch[24] Batch [340-360]	Speed: 41007.30 samples/sec	accuracy=nan
2023-03-21 10:33:32,746 Node[0] Epoch[24] Batch [360-380]	Speed: 40977.06 samples/sec	accuracy=nan
2023-03-21 10:33:33,621 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,621 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,622 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412813621, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 10:33:33,622 Node[0] Epoch[24] Time cost=31.204
2023-03-21 10:33:33,622 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:33,622 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412813622, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41058.33099584894}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679412813622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 10:33:33,622 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:33:35,296 Node[0] Epoch[25] Batch [0-20]	Speed: 40978.40 samples/sec	accuracy=nan
2023-03-21 10:33:36,890 Node[0] Epoch[25] Batch [20-40]	Speed: 40970.96 samples/sec	accuracy=nan
2023-03-21 10:33:38,488 Node[0] Epoch[25] Batch [40-60]	Speed: 40843.71 samples/sec	accuracy=nan
2023-03-21 10:33:40,079 Node[0] Epoch[25] Batch [60-80]	Speed: 41026.09 samples/sec	accuracy=nan
2023-03-21 10:33:41,671 Node[0] Epoch[25] Batch [80-100]	Speed: 41014.60 samples/sec	accuracy=nan
2023-03-21 10:33:43,261 Node[0] Epoch[25] Batch [100-120]	Speed: 41042.00 samples/sec	accuracy=nan
2023-03-21 10:33:44,854 Node[0] Epoch[25] Batch [120-140]	Speed: 40992.81 samples/sec	accuracy=nan
2023-03-21 10:33:46,442 Node[0] Epoch[25] Batch [140-160]	Speed: 41090.75 samples/sec	accuracy=nan
2023-03-21 10:33:48,034 Node[0] Epoch[25] Batch [160-180]	Speed: 41018.80 samples/sec	accuracy=nan
2023-03-21 10:33:49,625 Node[0] Epoch[25] Batch [180-200]	Speed: 41038.30 samples/sec	accuracy=nan
2023-03-21 10:33:51,218 Node[0] Epoch[25] Batch [200-220]	Speed: 40969.55 samples/sec	accuracy=nan
2023-03-21 10:33:52,809 Node[0] Epoch[25] Batch [220-240]	Speed: 41029.86 samples/sec	accuracy=nan
2023-03-21 10:33:54,401 Node[0] Epoch[25] Batch [240-260]	Speed: 41000.43 samples/sec	accuracy=nan
2023-03-21 10:33:55,993 Node[0] Epoch[25] Batch [260-280]	Speed: 41008.40 samples/sec	accuracy=nan
2023-03-21 10:33:57,586 Node[0] Epoch[25] Batch [280-300]	Speed: 40975.02 samples/sec	accuracy=nan
2023-03-21 10:33:59,178 Node[0] Epoch[25] Batch [300-320]	Speed: 41019.47 samples/sec	accuracy=nan
2023-03-21 10:34:00,771 Node[0] Epoch[25] Batch [320-340]	Speed: 40961.40 samples/sec	accuracy=nan
2023-03-21 10:34:02,365 Node[0] Epoch[25] Batch [340-360]	Speed: 40954.65 samples/sec	accuracy=nan
2023-03-21 10:34:03,955 Node[0] Epoch[25] Batch [360-380]	Speed: 41070.12 samples/sec	accuracy=nan
2023-03-21 10:34:04,908 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:04,908 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412844908, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 10:34:04,909 Node[0] Epoch[25] Time cost=31.286
:::MLLOG {"namespace": "", "time_ms": 1679412844909, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40949.514996476435}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-21 10:34:04,909 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412844909, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 10:34:04,909 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:06,583 Node[0] Epoch[26] Batch [0-20]	Speed: 40956.57 samples/sec	accuracy=nan
2023-03-21 10:34:08,172 Node[0] Epoch[26] Batch [20-40]	Speed: 41088.25 samples/sec	accuracy=nan
2023-03-21 10:34:09,768 Node[0] Epoch[26] Batch [40-60]	Speed: 40894.93 samples/sec	accuracy=nan
2023-03-21 10:34:11,360 Node[0] Epoch[26] Batch [60-80]	Speed: 41011.40 samples/sec	accuracy=nan
2023-03-21 10:34:12,954 Node[0] Epoch[26] Batch [80-100]	Speed: 40952.62 samples/sec	accuracy=nan
2023-03-21 10:34:14,542 Node[0] Epoch[26] Batch [100-120]	Speed: 41111.48 samples/sec	accuracy=nan
2023-03-21 10:34:16,133 Node[0] Epoch[26] Batch [120-140]	Speed: 41027.68 samples/sec	accuracy=nan
2023-03-21 10:34:17,724 Node[0] Epoch[26] Batch [140-160]	Speed: 41014.63 samples/sec	accuracy=nan
2023-03-21 10:34:19,316 Node[0] Epoch[26] Batch [160-180]	Speed: 41010.98 samples/sec	accuracy=nan
2023-03-21 10:34:20,906 Node[0] Epoch[26] Batch [180-200]	Speed: 41058.79 samples/sec	accuracy=nan
2023-03-21 10:34:22,496 Node[0] Epoch[26] Batch [200-220]	Speed: 41052.84 samples/sec	accuracy=nan
2023-03-21 10:34:24,087 Node[0] Epoch[26] Batch [220-240]	Speed: 41035.11 samples/sec	accuracy=nan
2023-03-21 10:34:25,681 Node[0] Epoch[26] Batch [240-260]	Speed: 40960.16 samples/sec	accuracy=nan
2023-03-21 10:34:27,273 Node[0] Epoch[26] Batch [260-280]	Speed: 40998.01 samples/sec	accuracy=nan
2023-03-21 10:34:28,866 Node[0] Epoch[26] Batch [280-300]	Speed: 40982.39 samples/sec	accuracy=nan
2023-03-21 10:34:30,454 Node[0] Epoch[26] Batch [300-320]	Speed: 41107.09 samples/sec	accuracy=nan
2023-03-21 10:34:32,051 Node[0] Epoch[26] Batch [320-340]	Speed: 40874.46 samples/sec	accuracy=nan
2023-03-21 10:34:33,642 Node[0] Epoch[26] Batch [340-360]	Speed: 41032.45 samples/sec	accuracy=nan
2023-03-21 10:34:35,232 Node[0] Epoch[26] Batch [360-380]	Speed: 41053.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679412876108, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 10:34:36,109 Node[0] Epoch[26] Time cost=31.199
:::MLLOG {"namespace": "", "time_ms": 1679412876109, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41064.10575445443}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679412876183, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 10:34:36,907 Node[0] Epoch[26] Validation-accuracy=0.726400
2023-03-21 10:34:36,908 Node[0] Epoch[26] Validation-correct-count=2270.000000
2023-03-21 10:34:36,908 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679412877015, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-21 10:34:37,015 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412877015, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7259, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 10:34:37,015 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412877015, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679412877015, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 10:34:37,015 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:37,015 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412877015, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 10:34:37,016 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:34:38,622 Node[0] Epoch[27] Batch [0-20]	Speed: 40835.04 samples/sec	accuracy=nan
2023-03-21 10:34:40,215 Node[0] Epoch[27] Batch [20-40]	Speed: 40975.51 samples/sec	accuracy=nan
2023-03-21 10:34:41,806 Node[0] Epoch[27] Batch [40-60]	Speed: 41021.43 samples/sec	accuracy=nan
2023-03-21 10:34:43,397 Node[0] Epoch[27] Batch [60-80]	Speed: 41027.43 samples/sec	accuracy=nan
2023-03-21 10:34:44,989 Node[0] Epoch[27] Batch [80-100]	Speed: 41027.36 samples/sec	accuracy=nan
2023-03-21 10:34:46,580 Node[0] Epoch[27] Batch [100-120]	Speed: 41027.23 samples/sec	accuracy=nan
2023-03-21 10:34:48,172 Node[0] Epoch[27] Batch [120-140]	Speed: 41007.10 samples/sec	accuracy=nan
2023-03-21 10:34:49,766 Node[0] Epoch[27] Batch [140-160]	Speed: 40949.76 samples/sec	accuracy=nan
2023-03-21 10:34:51,355 Node[0] Epoch[27] Batch [160-180]	Speed: 41074.94 samples/sec	accuracy=nan
2023-03-21 10:34:52,949 Node[0] Epoch[27] Batch [180-200]	Speed: 40946.44 samples/sec	accuracy=nan
2023-03-21 10:34:54,541 Node[0] Epoch[27] Batch [200-220]	Speed: 41008.30 samples/sec	accuracy=nan
2023-03-21 10:34:56,132 Node[0] Epoch[27] Batch [220-240]	Speed: 41029.19 samples/sec	accuracy=nan
2023-03-21 10:34:57,724 Node[0] Epoch[27] Batch [240-260]	Speed: 41006.17 samples/sec	accuracy=nan
2023-03-21 10:34:59,316 Node[0] Epoch[27] Batch [260-280]	Speed: 41011.33 samples/sec	accuracy=nan
2023-03-21 10:35:00,909 Node[0] Epoch[27] Batch [280-300]	Speed: 40986.33 samples/sec	accuracy=nan
2023-03-21 10:35:02,501 Node[0] Epoch[27] Batch [300-320]	Speed: 40999.25 samples/sec	accuracy=nan
2023-03-21 10:35:04,093 Node[0] Epoch[27] Batch [320-340]	Speed: 41016.51 samples/sec	accuracy=nan
2023-03-21 10:35:05,684 Node[0] Epoch[27] Batch [340-360]	Speed: 41016.55 samples/sec	accuracy=nan
2023-03-21 10:35:07,278 Node[0] Epoch[27] Batch [360-380]	Speed: 40962.11 samples/sec	accuracy=nan
2023-03-21 10:35:08,230 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,230 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412908230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 10:35:08,232 Node[0] Epoch[27] Time cost=31.216
2023-03-21 10:35:08,231 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:08,231 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412908232, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41041.93207374195}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679412908232, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 10:35:08,232 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:09,901 Node[0] Epoch[28] Batch [0-20]	Speed: 41051.58 samples/sec	accuracy=nan
2023-03-21 10:35:11,494 Node[0] Epoch[28] Batch [20-40]	Speed: 40998.72 samples/sec	accuracy=nan
2023-03-21 10:35:13,085 Node[0] Epoch[28] Batch [40-60]	Speed: 41021.29 samples/sec	accuracy=nan
2023-03-21 10:35:14,677 Node[0] Epoch[28] Batch [60-80]	Speed: 40994.66 samples/sec	accuracy=nan
2023-03-21 10:35:16,273 Node[0] Epoch[28] Batch [80-100]	Speed: 40902.92 samples/sec	accuracy=nan
2023-03-21 10:35:17,865 Node[0] Epoch[28] Batch [100-120]	Speed: 41014.56 samples/sec	accuracy=nan
2023-03-21 10:35:19,457 Node[0] Epoch[28] Batch [120-140]	Speed: 41013.65 samples/sec	accuracy=nan
2023-03-21 10:35:21,048 Node[0] Epoch[28] Batch [140-160]	Speed: 41024.48 samples/sec	accuracy=nan
2023-03-21 10:35:22,641 Node[0] Epoch[28] Batch [160-180]	Speed: 40969.05 samples/sec	accuracy=nan
2023-03-21 10:35:24,234 Node[0] Epoch[28] Batch [180-200]	Speed: 40978.46 samples/sec	accuracy=nan
2023-03-21 10:35:25,825 Node[0] Epoch[28] Batch [200-220]	Speed: 41031.88 samples/sec	accuracy=nan
2023-03-21 10:35:27,421 Node[0] Epoch[28] Batch [220-240]	Speed: 40899.39 samples/sec	accuracy=nan
2023-03-21 10:35:29,015 Node[0] Epoch[28] Batch [240-260]	Speed: 40962.81 samples/sec	accuracy=nan
2023-03-21 10:35:30,608 Node[0] Epoch[28] Batch [260-280]	Speed: 40973.27 samples/sec	accuracy=nan
2023-03-21 10:35:32,205 Node[0] Epoch[28] Batch [280-300]	Speed: 40878.12 samples/sec	accuracy=nan
2023-03-21 10:35:33,794 Node[0] Epoch[28] Batch [300-320]	Speed: 41081.14 samples/sec	accuracy=nan
2023-03-21 10:35:35,386 Node[0] Epoch[28] Batch [320-340]	Speed: 41005.66 samples/sec	accuracy=nan
2023-03-21 10:35:36,982 Node[0] Epoch[28] Batch [340-360]	Speed: 40917.43 samples/sec	accuracy=nan
2023-03-21 10:35:38,572 Node[0] Epoch[28] Batch [360-380]	Speed: 41059.94 samples/sec	accuracy=nan
2023-03-21 10:35:39,446 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,446 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,446 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:39,447 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412939446, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 10:35:39,447 Node[0] Epoch[28] Time cost=31.215
:::MLLOG {"namespace": "", "time_ms": 1679412939447, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41042.917006425465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 10:35:39,447 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412939448, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 10:35:39,448 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:35:41,118 Node[0] Epoch[29] Batch [0-20]	Speed: 41095.69 samples/sec	accuracy=nan
2023-03-21 10:35:42,712 Node[0] Epoch[29] Batch [20-40]	Speed: 40944.99 samples/sec	accuracy=nan
2023-03-21 10:35:44,307 Node[0] Epoch[29] Batch [40-60]	Speed: 40926.94 samples/sec	accuracy=nan
2023-03-21 10:35:45,899 Node[0] Epoch[29] Batch [60-80]	Speed: 41017.51 samples/sec	accuracy=nan
2023-03-21 10:35:47,489 Node[0] Epoch[29] Batch [80-100]	Speed: 41037.45 samples/sec	accuracy=nan
2023-03-21 10:35:49,085 Node[0] Epoch[29] Batch [100-120]	Speed: 40922.83 samples/sec	accuracy=nan
2023-03-21 10:35:50,678 Node[0] Epoch[29] Batch [120-140]	Speed: 40970.25 samples/sec	accuracy=nan
2023-03-21 10:35:52,271 Node[0] Epoch[29] Batch [140-160]	Speed: 40972.67 samples/sec	accuracy=nan
2023-03-21 10:35:53,860 Node[0] Epoch[29] Batch [160-180]	Speed: 41096.43 samples/sec	accuracy=nan
2023-03-21 10:35:55,453 Node[0] Epoch[29] Batch [180-200]	Speed: 40967.04 samples/sec	accuracy=nan
2023-03-21 10:35:57,048 Node[0] Epoch[29] Batch [200-220]	Speed: 40927.02 samples/sec	accuracy=nan
2023-03-21 10:35:58,642 Node[0] Epoch[29] Batch [220-240]	Speed: 40951.64 samples/sec	accuracy=nan
2023-03-21 10:36:00,234 Node[0] Epoch[29] Batch [240-260]	Speed: 41023.65 samples/sec	accuracy=nan
2023-03-21 10:36:01,825 Node[0] Epoch[29] Batch [260-280]	Speed: 41021.33 samples/sec	accuracy=nan
2023-03-21 10:36:03,417 Node[0] Epoch[29] Batch [280-300]	Speed: 40991.48 samples/sec	accuracy=nan
2023-03-21 10:36:05,009 Node[0] Epoch[29] Batch [300-320]	Speed: 41013.06 samples/sec	accuracy=nan
2023-03-21 10:36:06,604 Node[0] Epoch[29] Batch [320-340]	Speed: 40930.40 samples/sec	accuracy=nan
2023-03-21 10:36:08,201 Node[0] Epoch[29] Batch [340-360]	Speed: 40867.64 samples/sec	accuracy=nan
2023-03-21 10:36:09,793 Node[0] Epoch[29] Batch [360-380]	Speed: 41010.06 samples/sec	accuracy=nan
2023-03-21 10:36:10,744 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:10,745 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412970745, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 10:36:10,746 Node[0] Epoch[29] Time cost=31.298
:::MLLOG {"namespace": "", "time_ms": 1679412970746, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40933.95620481193}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 10:36:10,746 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679412970747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 10:36:10,747 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:12,419 Node[0] Epoch[30] Batch [0-20]	Speed: 40978.48 samples/sec	accuracy=nan
2023-03-21 10:36:14,009 Node[0] Epoch[30] Batch [20-40]	Speed: 41052.24 samples/sec	accuracy=nan
2023-03-21 10:36:15,603 Node[0] Epoch[30] Batch [40-60]	Speed: 40951.96 samples/sec	accuracy=nan
2023-03-21 10:36:17,196 Node[0] Epoch[30] Batch [60-80]	Speed: 40981.41 samples/sec	accuracy=nan
2023-03-21 10:36:18,790 Node[0] Epoch[30] Batch [80-100]	Speed: 40960.97 samples/sec	accuracy=nan
2023-03-21 10:36:20,382 Node[0] Epoch[30] Batch [100-120]	Speed: 41007.35 samples/sec	accuracy=nan
2023-03-21 10:36:21,975 Node[0] Epoch[30] Batch [120-140]	Speed: 40957.71 samples/sec	accuracy=nan
2023-03-21 10:36:23,567 Node[0] Epoch[30] Batch [140-160]	Speed: 41010.74 samples/sec	accuracy=nan
2023-03-21 10:36:25,161 Node[0] Epoch[30] Batch [160-180]	Speed: 40967.43 samples/sec	accuracy=nan
2023-03-21 10:36:26,754 Node[0] Epoch[30] Batch [180-200]	Speed: 40976.40 samples/sec	accuracy=nan
2023-03-21 10:36:28,346 Node[0] Epoch[30] Batch [200-220]	Speed: 40995.75 samples/sec	accuracy=nan
2023-03-21 10:36:29,936 Node[0] Epoch[30] Batch [220-240]	Speed: 41072.16 samples/sec	accuracy=nan
2023-03-21 10:36:31,527 Node[0] Epoch[30] Batch [240-260]	Speed: 41010.82 samples/sec	accuracy=nan
2023-03-21 10:36:33,119 Node[0] Epoch[30] Batch [260-280]	Speed: 41003.72 samples/sec	accuracy=nan
2023-03-21 10:36:34,707 Node[0] Epoch[30] Batch [280-300]	Speed: 41107.94 samples/sec	accuracy=nan
2023-03-21 10:36:36,298 Node[0] Epoch[30] Batch [300-320]	Speed: 41033.67 samples/sec	accuracy=nan
2023-03-21 10:36:37,892 Node[0] Epoch[30] Batch [320-340]	Speed: 40964.06 samples/sec	accuracy=nan
2023-03-21 10:36:39,483 Node[0] Epoch[30] Batch [340-360]	Speed: 41016.49 samples/sec	accuracy=nan
2023-03-21 10:36:41,077 Node[0] Epoch[30] Batch [360-380]	Speed: 40957.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413001951, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 10:36:41,952 Node[0] Epoch[30] Time cost=31.205
:::MLLOG {"namespace": "", "time_ms": 1679413001952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41056.35656108886}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679413002026, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 10:36:42,773 Node[0] Epoch[30] Validation-accuracy=0.743040
2023-03-21 10:36:42,773 Node[0] Epoch[30] Validation-correct-count=2322.000000
2023-03-21 10:36:42,773 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413002859, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-21 10:36:42,860 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413002860, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7505, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679413002860, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 10:36:42,860 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413002860, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 10:36:42,860 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:42,860 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413002860, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 10:36:42,860 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:36:44,465 Node[0] Epoch[31] Batch [0-20]	Speed: 40874.10 samples/sec	accuracy=nan
2023-03-21 10:36:46,055 Node[0] Epoch[31] Batch [20-40]	Speed: 41058.93 samples/sec	accuracy=nan
2023-03-21 10:36:47,644 Node[0] Epoch[31] Batch [40-60]	Speed: 41098.41 samples/sec	accuracy=nan
2023-03-21 10:36:49,235 Node[0] Epoch[31] Batch [60-80]	Speed: 41008.74 samples/sec	accuracy=nan
2023-03-21 10:36:50,823 Node[0] Epoch[31] Batch [80-100]	Speed: 41108.05 samples/sec	accuracy=nan
2023-03-21 10:36:52,415 Node[0] Epoch[31] Batch [100-120]	Speed: 41022.13 samples/sec	accuracy=nan
2023-03-21 10:36:54,005 Node[0] Epoch[31] Batch [120-140]	Speed: 41043.21 samples/sec	accuracy=nan
2023-03-21 10:36:55,597 Node[0] Epoch[31] Batch [140-160]	Speed: 41024.85 samples/sec	accuracy=nan
2023-03-21 10:36:57,190 Node[0] Epoch[31] Batch [160-180]	Speed: 40979.27 samples/sec	accuracy=nan
2023-03-21 10:36:58,782 Node[0] Epoch[31] Batch [180-200]	Speed: 41000.50 samples/sec	accuracy=nan
2023-03-21 10:37:00,371 Node[0] Epoch[31] Batch [200-220]	Speed: 41086.60 samples/sec	accuracy=nan
2023-03-21 10:37:01,963 Node[0] Epoch[31] Batch [220-240]	Speed: 40994.43 samples/sec	accuracy=nan
2023-03-21 10:37:03,551 Node[0] Epoch[31] Batch [240-260]	Speed: 41097.09 samples/sec	accuracy=nan
2023-03-21 10:37:05,145 Node[0] Epoch[31] Batch [260-280]	Speed: 40971.09 samples/sec	accuracy=nan
2023-03-21 10:37:06,739 Node[0] Epoch[31] Batch [280-300]	Speed: 40945.05 samples/sec	accuracy=nan
2023-03-21 10:37:08,329 Node[0] Epoch[31] Batch [300-320]	Speed: 41046.70 samples/sec	accuracy=nan
2023-03-21 10:37:09,920 Node[0] Epoch[31] Batch [320-340]	Speed: 41042.54 samples/sec	accuracy=nan
2023-03-21 10:37:11,513 Node[0] Epoch[31] Batch [340-360]	Speed: 40968.00 samples/sec	accuracy=nan
2023-03-21 10:37:13,108 Node[0] Epoch[31] Batch [360-380]	Speed: 40935.62 samples/sec	accuracy=nan
2023-03-21 10:37:14,060 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:14,061 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413034061, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 10:37:14,062 Node[0] Epoch[31] Time cost=31.201
2023-03-21 10:37:14,062 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413034062, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41061.11353331636}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679413034062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 10:37:14,062 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:15,731 Node[0] Epoch[32] Batch [0-20]	Speed: 41034.89 samples/sec	accuracy=nan
2023-03-21 10:37:17,325 Node[0] Epoch[32] Batch [20-40]	Speed: 40969.43 samples/sec	accuracy=nan
2023-03-21 10:37:18,915 Node[0] Epoch[32] Batch [40-60]	Speed: 41057.78 samples/sec	accuracy=nan
2023-03-21 10:37:20,507 Node[0] Epoch[32] Batch [60-80]	Speed: 40989.98 samples/sec	accuracy=nan
2023-03-21 10:37:22,103 Node[0] Epoch[32] Batch [80-100]	Speed: 40901.69 samples/sec	accuracy=nan
2023-03-21 10:37:23,698 Node[0] Epoch[32] Batch [100-120]	Speed: 40950.28 samples/sec	accuracy=nan
2023-03-21 10:37:25,289 Node[0] Epoch[32] Batch [120-140]	Speed: 41031.17 samples/sec	accuracy=nan
2023-03-21 10:37:26,883 Node[0] Epoch[32] Batch [140-160]	Speed: 40933.62 samples/sec	accuracy=nan
2023-03-21 10:37:28,472 Node[0] Epoch[32] Batch [160-180]	Speed: 41090.33 samples/sec	accuracy=nan
2023-03-21 10:37:30,066 Node[0] Epoch[32] Batch [180-200]	Speed: 40952.29 samples/sec	accuracy=nan
2023-03-21 10:37:31,659 Node[0] Epoch[32] Batch [200-220]	Speed: 40991.62 samples/sec	accuracy=nan
2023-03-21 10:37:33,251 Node[0] Epoch[32] Batch [220-240]	Speed: 40991.59 samples/sec	accuracy=nan
2023-03-21 10:37:34,846 Node[0] Epoch[32] Batch [240-260]	Speed: 40927.23 samples/sec	accuracy=nan
2023-03-21 10:37:36,438 Node[0] Epoch[32] Batch [260-280]	Speed: 41014.39 samples/sec	accuracy=nan
2023-03-21 10:37:38,027 Node[0] Epoch[32] Batch [280-300]	Speed: 41076.49 samples/sec	accuracy=nan
2023-03-21 10:37:39,619 Node[0] Epoch[32] Batch [300-320]	Speed: 40994.08 samples/sec	accuracy=nan
2023-03-21 10:37:41,212 Node[0] Epoch[32] Batch [320-340]	Speed: 40993.47 samples/sec	accuracy=nan
2023-03-21 10:37:42,809 Node[0] Epoch[32] Batch [340-360]	Speed: 40868.75 samples/sec	accuracy=nan
2023-03-21 10:37:44,400 Node[0] Epoch[32] Batch [360-380]	Speed: 41047.69 samples/sec	accuracy=nan
2023-03-21 10:37:45,274 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:45,275 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413065275, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 10:37:45,276 Node[0] Epoch[32] Time cost=31.213
:::MLLOG {"namespace": "", "time_ms": 1679413065276, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41045.63506397691}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-21 10:37:45,276 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413065276, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 10:37:45,276 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:37:46,949 Node[0] Epoch[33] Batch [0-20]	Speed: 41010.14 samples/sec	accuracy=nan
2023-03-21 10:37:48,543 Node[0] Epoch[33] Batch [20-40]	Speed: 40962.22 samples/sec	accuracy=nan
2023-03-21 10:37:50,136 Node[0] Epoch[33] Batch [40-60]	Speed: 40970.74 samples/sec	accuracy=nan
2023-03-21 10:37:51,729 Node[0] Epoch[33] Batch [60-80]	Speed: 40968.86 samples/sec	accuracy=nan
2023-03-21 10:37:53,322 Node[0] Epoch[33] Batch [80-100]	Speed: 40981.97 samples/sec	accuracy=nan
2023-03-21 10:37:54,915 Node[0] Epoch[33] Batch [100-120]	Speed: 40990.84 samples/sec	accuracy=nan
2023-03-21 10:37:56,505 Node[0] Epoch[33] Batch [120-140]	Speed: 41064.72 samples/sec	accuracy=nan
2023-03-21 10:37:58,097 Node[0] Epoch[33] Batch [140-160]	Speed: 40987.94 samples/sec	accuracy=nan
2023-03-21 10:37:59,693 Node[0] Epoch[33] Batch [160-180]	Speed: 40912.70 samples/sec	accuracy=nan
2023-03-21 10:38:01,286 Node[0] Epoch[33] Batch [180-200]	Speed: 40968.83 samples/sec	accuracy=nan
2023-03-21 10:38:02,879 Node[0] Epoch[33] Batch [200-220]	Speed: 40991.82 samples/sec	accuracy=nan
2023-03-21 10:38:04,473 Node[0] Epoch[33] Batch [220-240]	Speed: 40958.60 samples/sec	accuracy=nan
2023-03-21 10:38:06,068 Node[0] Epoch[33] Batch [240-260]	Speed: 40929.11 samples/sec	accuracy=nan
2023-03-21 10:38:07,662 Node[0] Epoch[33] Batch [260-280]	Speed: 40946.02 samples/sec	accuracy=nan
2023-03-21 10:38:09,252 Node[0] Epoch[33] Batch [280-300]	Speed: 41040.40 samples/sec	accuracy=nan
2023-03-21 10:38:10,844 Node[0] Epoch[33] Batch [300-320]	Speed: 41026.33 samples/sec	accuracy=nan
2023-03-21 10:38:12,437 Node[0] Epoch[33] Batch [320-340]	Speed: 40982.21 samples/sec	accuracy=nan
2023-03-21 10:38:14,028 Node[0] Epoch[33] Batch [340-360]	Speed: 41010.29 samples/sec	accuracy=nan
2023-03-21 10:38:15,623 Node[0] Epoch[33] Batch [360-380]	Speed: 40943.25 samples/sec	accuracy=nan
2023-03-21 10:38:16,577 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,577 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:16,578 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413096577, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 10:38:16,578 Node[0] Epoch[33] Time cost=31.302
:::MLLOG {"namespace": "", "time_ms": 1679413096578, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40929.131694976975}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679413096579, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 10:38:16,579 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:38:18,248 Node[0] Epoch[34] Batch [0-20]	Speed: 41063.10 samples/sec	accuracy=nan
2023-03-21 10:38:19,843 Node[0] Epoch[34] Batch [20-40]	Speed: 40929.84 samples/sec	accuracy=nan
2023-03-21 10:38:21,432 Node[0] Epoch[34] Batch [40-60]	Speed: 41064.04 samples/sec	accuracy=nan
2023-03-21 10:38:23,028 Node[0] Epoch[34] Batch [60-80]	Speed: 40923.42 samples/sec	accuracy=nan
2023-03-21 10:38:24,620 Node[0] Epoch[34] Batch [80-100]	Speed: 40988.62 samples/sec	accuracy=nan
2023-03-21 10:38:26,213 Node[0] Epoch[34] Batch [100-120]	Speed: 40996.50 samples/sec	accuracy=nan
2023-03-21 10:38:27,805 Node[0] Epoch[34] Batch [120-140]	Speed: 40995.50 samples/sec	accuracy=nan
2023-03-21 10:38:29,395 Node[0] Epoch[34] Batch [140-160]	Speed: 41047.29 samples/sec	accuracy=nan
2023-03-21 10:38:30,987 Node[0] Epoch[34] Batch [160-180]	Speed: 41003.99 samples/sec	accuracy=nan
2023-03-21 10:38:32,579 Node[0] Epoch[34] Batch [180-200]	Speed: 41011.06 samples/sec	accuracy=nan
2023-03-21 10:38:34,168 Node[0] Epoch[34] Batch [200-220]	Speed: 41073.91 samples/sec	accuracy=nan
2023-03-21 10:38:35,758 Node[0] Epoch[34] Batch [220-240]	Speed: 41079.32 samples/sec	accuracy=nan
2023-03-21 10:38:37,352 Node[0] Epoch[34] Batch [240-260]	Speed: 40934.08 samples/sec	accuracy=nan
2023-03-21 10:38:38,943 Node[0] Epoch[34] Batch [260-280]	Speed: 41032.70 samples/sec	accuracy=nan
2023-03-21 10:38:40,537 Node[0] Epoch[34] Batch [280-300]	Speed: 40949.09 samples/sec	accuracy=nan
2023-03-21 10:38:42,129 Node[0] Epoch[34] Batch [300-320]	Speed: 41026.66 samples/sec	accuracy=nan
2023-03-21 10:38:43,721 Node[0] Epoch[34] Batch [320-340]	Speed: 40999.53 samples/sec	accuracy=nan
2023-03-21 10:38:45,312 Node[0] Epoch[34] Batch [340-360]	Speed: 41018.15 samples/sec	accuracy=nan
2023-03-21 10:38:46,906 Node[0] Epoch[34] Batch [360-380]	Speed: 40950.96 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413127860, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 10:38:47,861 Node[0] Epoch[34] Time cost=31.282
:::MLLOG {"namespace": "", "time_ms": 1679413127861, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40955.34346287347}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679413127936, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 10:38:48,689 Node[0] Epoch[34] Validation-accuracy=0.760000
2023-03-21 10:38:48,690 Node[0] Epoch[34] Validation-correct-count=2375.000000
2023-03-21 10:38:48,690 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413128782, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679413128783, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75948, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679413128783, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679413128783, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413152
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:12 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:12 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:12 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679413153
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:39:13 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:39:13 AM'
ENDING TIMING RUN AT 2023-03-21 10:39:13 AM
+ result=1276
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1276,root,2023-03-21 10:17:57 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1276,root,2023-03-21 10:17:57 AM'
+ export PROFILE=0
+ PROFILE=0
