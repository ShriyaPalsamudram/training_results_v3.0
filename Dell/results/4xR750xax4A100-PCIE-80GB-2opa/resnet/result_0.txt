+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410429896, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410429932, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410429933, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410429934, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410429936, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410452665, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410458798, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410458833, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410458835, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410458836, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410458838, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410481194, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410486174, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410486209, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410486210, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410486212, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410486213, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410507052, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410512021, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410512056, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410512058, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410512059, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410512060, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679410534191, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=31347
+ SEED=31347
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679410535
+ start=1679410535
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-21 09:55:35 AM'
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly global_rank=0
+ KVSTORE=horovod
+ global_rank=0
+ LR=10.5
+ MOM=0.9
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ LRSCHED=pow2
+ readonly local_rank=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ local_rank=0
+ DALI_HW_DECODER_LOAD=0
+ SLURM_NTASKS_PER_NODE=4
+ WD=5.0e-05
+ OPTIMIZER=sgdwfastlars
+ LABELSMOOTHING=0.1
+ BATCHSIZE=204
+ SEED=31347
+ EVAL_OFFSET=2
+ INPUT_BATCH_MULTIPLIER=1
+ EVAL_PERIOD=4
+ KVSTORE=horovod
+ DALI_PREFETCH_QUEUE=5
+ LR=10.5
+ DALI_NVJPEG_MEMPADDING=256
+ MOM=0.9
+ DALI_THREADS=6
+ LRSCHED=pow2
+ DALI_CACHE_SIZE=0
+ WARMUP_EPOCHS=2
+ DALI_ROI_DECODE=1
+ LARSETA=0.001
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ WD=5.0e-05
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ DALI_DECODER_BUFFER_HINT=1315942
+ SEED=31347
+ EVAL_OFFSET=2
+ DALI_CROP_BUFFER_HINT=165581
+ EVAL_PERIOD=4
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREFETCH_QUEUE=5
+ DALI_DONT_USE_MMAP=0
+ DALI_NVJPEG_MEMPADDING=256
+ NUMEPOCHS=37
+ DALI_THREADS=6
+ NETWORK=resnet-v1b-stats-fl
+ DALI_CACHE_SIZE=0
+ BN_GROUP=1
+ DALI_ROI_DECODE=1
+ PROFILE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ PROFILE_EXCEL=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ [[ 0 == 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DATAROOT=/data
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ echo 'running benchmark'
running benchmark
+ NETWORK=resnet-v1b-stats-fl
+ export NGPUS=4
+ NGPUS=4
+ BN_GROUP=1
+ PROFILE=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 -ge 1 ]]
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ date +%s
++++ readlink -f ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679410535
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679410535
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ dirname ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+ source ./config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ source ./config_4xR750xax4A100.sh
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ source ./config_4xR750xax4A100.sh
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ DGXSYSTEM=4xR750xax4A100
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ date +%s
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ date +%s
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ source ./config_4xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=4xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ start=1679410535
+ start=1679410535
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 09:55:35 AM'
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ readonly global_rank=1
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ start=1679410535
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ start=1679410535
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ echo 'running benchmark'
+ export NGPUS=1
running benchmark
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=1
+ global_rank=1
+ start_fmt='2023-03-21 09:55:35 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly global_rank=1
+ global_rank=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ start=1679410535
+ start=1679410535
+ start=1679410535
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679410535
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-21 09:55:35 AM'
+ start_fmt='2023-03-21 09:55:35 AM'
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
++ date '+%Y-%m-%d %r'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ readonly global_rank=2
+ global_rank=2
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 09:55:35 AM'
++ sed 's/,$//'
++ tr '\n' ,
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
++ sed 's/,$//'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ date +%s
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ date +%s
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679410535
+ start=1679410535
+ start=1679410535
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-21 09:55:35 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ date +%s
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679410535
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-21 09:55:35 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:55:35 AM'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
STARTING TIMING RUN AT 2023-03-21 09:55:35 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ [[ '' -ge 1 ]]
+ LABELSMOOTHING=0.1
+ SEED=31347
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 31347 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:62822] MCW rank 0 is not bound (or bound to all available processors)
[node044:62815] MCW rank 3 is not bound (or bound to all available processors)
[node044:62814] MCW rank 1 is not bound (or bound to all available processors)
[node044:62827] MCW rank 2 is not bound (or bound to all available processors)
[node047:53236] MCW rank 13 is not bound (or bound to all available processors)
[node046:53025] MCW rank 11 is not bound (or bound to all available processors)
[node045:57577] MCW rank 4 is not bound (or bound to all available processors)
[node045:57579] MCW rank 6 is not bound (or bound to all available processors)
[node046:53024] MCW rank 10 is not bound (or bound to all available processors)
[node047:53237] MCW rank 15 is not bound (or bound to all available processors)
[node045:57578] MCW rank 5 is not bound (or bound to all available processors)
[node045:57576] MCW rank 7 is not bound (or bound to all available processors)
[node047:53235] MCW rank 12 is not bound (or bound to all available processors)
[node046:53022] MCW rank 8 is not bound (or bound to all available processors)
[node047:53234] MCW rank 14 is not bound (or bound to all available processors)
[node046:53023] MCW rank 9 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679410540700, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679410548806, "event_type": "POINT_IN_TIME", "key": "seed", "value": 31347, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:55:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679410550699, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[09:55:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679410554935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554967, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554967, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554967, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554967, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554968, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554968, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554968, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554968, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554969, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554969, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554969, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554969, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554970, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554971, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554972, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554973, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554974, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679410554975, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,372 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34462, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,373 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36177, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679410558372, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679410558374, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679410558374, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679410558375, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679410558376, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679410558376, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679410558376, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,386 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25839, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,405 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21071, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,405 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19260, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,405 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13234, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,405 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17508, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39534, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16050, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25501, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41858, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10194, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49501, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43706, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,406 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34847, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 09:55:58,407 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41666, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679410646277, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679410646278, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679410646279, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679410647154, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679410647238, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410647239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 09:57:28,829 Node[0] Epoch[0] Batch [0-20]	Speed: 41347.63 samples/sec	accuracy=nan
2023-03-21 09:57:30,403 Node[0] Epoch[0] Batch [20-40]	Speed: 41480.69 samples/sec	accuracy=nan
2023-03-21 09:57:31,978 Node[0] Epoch[0] Batch [40-60]	Speed: 41438.10 samples/sec	accuracy=nan
2023-03-21 09:57:33,558 Node[0] Epoch[0] Batch [60-80]	Speed: 41314.51 samples/sec	accuracy=nan
2023-03-21 09:57:35,142 Node[0] Epoch[0] Batch [80-100]	Speed: 41215.77 samples/sec	accuracy=nan
2023-03-21 09:57:36,727 Node[0] Epoch[0] Batch [100-120]	Speed: 41203.23 samples/sec	accuracy=nan
2023-03-21 09:57:38,315 Node[0] Epoch[0] Batch [120-140]	Speed: 41102.38 samples/sec	accuracy=nan
2023-03-21 09:57:39,902 Node[0] Epoch[0] Batch [140-160]	Speed: 41130.68 samples/sec	accuracy=nan
2023-03-21 09:57:41,490 Node[0] Epoch[0] Batch [160-180]	Speed: 41119.95 samples/sec	accuracy=nan
2023-03-21 09:57:43,079 Node[0] Epoch[0] Batch [180-200]	Speed: 41066.03 samples/sec	accuracy=nan
2023-03-21 09:57:44,672 Node[0] Epoch[0] Batch [200-220]	Speed: 40983.33 samples/sec	accuracy=nan
2023-03-21 09:57:46,267 Node[0] Epoch[0] Batch [220-240]	Speed: 40938.75 samples/sec	accuracy=nan
2023-03-21 09:57:47,863 Node[0] Epoch[0] Batch [240-260]	Speed: 40898.36 samples/sec	accuracy=nan
2023-03-21 09:57:49,458 Node[0] Epoch[0] Batch [260-280]	Speed: 40926.09 samples/sec	accuracy=nan
2023-03-21 09:57:51,060 Node[0] Epoch[0] Batch [280-300]	Speed: 40753.23 samples/sec	accuracy=nan
2023-03-21 09:57:52,662 Node[0] Epoch[0] Batch [300-320]	Speed: 40740.62 samples/sec	accuracy=nan
2023-03-21 09:57:54,259 Node[0] Epoch[0] Batch [320-340]	Speed: 40866.83 samples/sec	accuracy=nan
2023-03-21 09:57:55,861 Node[0] Epoch[0] Batch [340-360]	Speed: 40755.22 samples/sec	accuracy=nan
2023-03-21 09:57:57,463 Node[0] Epoch[0] Batch [360-380]	Speed: 40757.26 samples/sec	accuracy=nan
2023-03-21 09:57:58,425 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,424 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410678424, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 09:57:58,425 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[0] Epoch[0] Time cost=31.186
2023-03-21 09:57:58,425 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410678425, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41081.48092399749}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 09:57:58,425 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,425 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,426 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410678426, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 09:57:58,426 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:57:58,426 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:00,133 Node[0] Epoch[1] Batch [0-20]	Speed: 40118.31 samples/sec	accuracy=nan
2023-03-21 09:58:01,734 Node[0] Epoch[1] Batch [20-40]	Speed: 40768.59 samples/sec	accuracy=nan
2023-03-21 09:58:03,339 Node[0] Epoch[1] Batch [40-60]	Speed: 40664.27 samples/sec	accuracy=nan
2023-03-21 09:58:04,947 Node[0] Epoch[1] Batch [60-80]	Speed: 40594.07 samples/sec	accuracy=nan
2023-03-21 09:58:06,551 Node[0] Epoch[1] Batch [80-100]	Speed: 40694.57 samples/sec	accuracy=nan
2023-03-21 09:58:08,180 Node[0] Epoch[1] Batch [100-120]	Speed: 40087.15 samples/sec	accuracy=nan
2023-03-21 09:58:09,874 Node[0] Epoch[1] Batch [120-140]	Speed: 38527.91 samples/sec	accuracy=nan
2023-03-21 09:58:11,500 Node[0] Epoch[1] Batch [140-160]	Speed: 40143.29 samples/sec	accuracy=nan
2023-03-21 09:58:13,157 Node[0] Epoch[1] Batch [160-180]	Speed: 39394.64 samples/sec	accuracy=nan
2023-03-21 09:58:14,846 Node[0] Epoch[1] Batch [180-200]	Speed: 38656.70 samples/sec	accuracy=nan
2023-03-21 09:58:16,465 Node[0] Epoch[1] Batch [200-220]	Speed: 40331.37 samples/sec	accuracy=nan
2023-03-21 09:58:22,847 Node[0] Epoch[1] Batch [220-240]	Speed: 10228.57 samples/sec	accuracy=nan
2023-03-21 09:58:24,440 Node[0] Epoch[1] Batch [240-260]	Speed: 40984.97 samples/sec	accuracy=nan
2023-03-21 09:58:28,453 Node[0] Epoch[1] Batch [260-280]	Speed: 16265.43 samples/sec	accuracy=nan
2023-03-21 09:58:30,043 Node[0] Epoch[1] Batch [280-300]	Speed: 41062.44 samples/sec	accuracy=nan
2023-03-21 09:58:31,640 Node[0] Epoch[1] Batch [300-320]	Speed: 40872.98 samples/sec	accuracy=nan
2023-03-21 09:58:35,666 Node[0] Epoch[1] Batch [320-340]	Speed: 16215.24 samples/sec	accuracy=nan
2023-03-21 09:58:37,257 Node[0] Epoch[1] Batch [340-360]	Speed: 41037.23 samples/sec	accuracy=nan
2023-03-21 09:58:38,847 Node[0] Epoch[1] Batch [360-380]	Speed: 41047.09 samples/sec	accuracy=nan
2023-03-21 09:58:39,808 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,808 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:39,809 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410719809, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 09:58:39,810 Node[0] Epoch[1] Time cost=41.384
:::MLLOG {"namespace": "", "time_ms": 1679410719810, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 30958.32060362091}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-21 09:58:39,810 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410719810, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 09:58:39,810 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:58:41,491 Node[0] Epoch[2] Batch [0-20]	Speed: 40768.74 samples/sec	accuracy=nan
2023-03-21 09:58:43,091 Node[0] Epoch[2] Batch [20-40]	Speed: 40791.82 samples/sec	accuracy=nan
2023-03-21 09:58:44,690 Node[0] Epoch[2] Batch [40-60]	Speed: 40838.33 samples/sec	accuracy=nan
2023-03-21 09:58:46,289 Node[0] Epoch[2] Batch [60-80]	Speed: 40827.66 samples/sec	accuracy=nan
2023-03-21 09:58:47,890 Node[0] Epoch[2] Batch [80-100]	Speed: 40776.06 samples/sec	accuracy=nan
2023-03-21 09:58:49,491 Node[0] Epoch[2] Batch [100-120]	Speed: 40763.39 samples/sec	accuracy=nan
2023-03-21 09:58:58,440 Node[0] Epoch[2] Batch [120-140]	Speed: 7295.00 samples/sec	accuracy=nan
2023-03-21 09:59:02,488 Node[0] Epoch[2] Batch [140-160]	Speed: 16125.68 samples/sec	accuracy=nan
2023-03-21 09:59:13,901 Node[0] Epoch[2] Batch [160-180]	Speed: 5719.69 samples/sec	accuracy=nan
2023-03-21 09:59:20,357 Node[0] Epoch[2] Batch [180-200]	Speed: 10110.89 samples/sec	accuracy=nan
2023-03-21 09:59:21,930 Node[0] Epoch[2] Batch [200-220]	Speed: 41520.10 samples/sec	accuracy=nan
2023-03-21 09:59:26,008 Node[0] Epoch[2] Batch [220-240]	Speed: 16005.25 samples/sec	accuracy=nan
2023-03-21 09:59:27,589 Node[0] Epoch[2] Batch [240-260]	Speed: 41297.43 samples/sec	accuracy=nan
2023-03-21 09:59:29,168 Node[0] Epoch[2] Batch [260-280]	Speed: 41334.62 samples/sec	accuracy=nan
2023-03-21 09:59:30,756 Node[0] Epoch[2] Batch [280-300]	Speed: 41117.85 samples/sec	accuracy=nan
2023-03-21 09:59:32,341 Node[0] Epoch[2] Batch [300-320]	Speed: 41188.65 samples/sec	accuracy=nan
2023-03-21 09:59:33,933 Node[0] Epoch[2] Batch [320-340]	Speed: 40997.34 samples/sec	accuracy=nan
2023-03-21 09:59:35,523 Node[0] Epoch[2] Batch [340-360]	Speed: 41056.90 samples/sec	accuracy=nan
2023-03-21 09:59:39,658 Node[0] Epoch[2] Batch [360-380]	Speed: 15786.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679410780526, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 09:59:40,527 Node[0] Epoch[2] Time cost=60.717
:::MLLOG {"namespace": "", "time_ms": 1679410780527, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21100.700143579765}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679410780601, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 09:59:40,601 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,601 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:40,602 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,284 Node[0] Epoch[2] Validation-accuracy=0.315200
2023-03-21 09:59:41,284 Node[0] Epoch[2] Validation-correct-count=985.000000
2023-03-21 09:59:41,284 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679410781394, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 09:59:41,394 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410781395, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.30606, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 09:59:41,394 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410781395, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 09:59:41,395 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,395 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,395 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,395 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410781395, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 09:59:41,395 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:41,394 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410781395, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 09:59:41,395 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 09:59:42,993 Node[0] Epoch[3] Batch [0-20]	Speed: 41085.75 samples/sec	accuracy=nan
2023-03-21 09:59:44,583 Node[0] Epoch[3] Batch [20-40]	Speed: 41061.43 samples/sec	accuracy=nan
2023-03-21 09:59:46,177 Node[0] Epoch[3] Batch [40-60]	Speed: 40954.80 samples/sec	accuracy=nan
2023-03-21 09:59:47,769 Node[0] Epoch[3] Batch [60-80]	Speed: 41023.45 samples/sec	accuracy=nan
2023-03-21 09:59:49,361 Node[0] Epoch[3] Batch [80-100]	Speed: 40992.16 samples/sec	accuracy=nan
2023-03-21 09:59:50,955 Node[0] Epoch[3] Batch [100-120]	Speed: 40944.01 samples/sec	accuracy=nan
2023-03-21 09:59:52,550 Node[0] Epoch[3] Batch [120-140]	Speed: 40942.74 samples/sec	accuracy=nan
2023-03-21 09:59:54,150 Node[0] Epoch[3] Batch [140-160]	Speed: 40789.75 samples/sec	accuracy=nan
2023-03-21 09:59:55,746 Node[0] Epoch[3] Batch [160-180]	Speed: 40909.79 samples/sec	accuracy=nan
2023-03-21 09:59:57,346 Node[0] Epoch[3] Batch [180-200]	Speed: 40806.05 samples/sec	accuracy=nan
2023-03-21 09:59:58,943 Node[0] Epoch[3] Batch [200-220]	Speed: 40875.19 samples/sec	accuracy=nan
2023-03-21 10:00:00,546 Node[0] Epoch[3] Batch [220-240]	Speed: 40724.15 samples/sec	accuracy=nan
2023-03-21 10:00:02,141 Node[0] Epoch[3] Batch [240-260]	Speed: 40919.59 samples/sec	accuracy=nan
2023-03-21 10:00:03,741 Node[0] Epoch[3] Batch [260-280]	Speed: 40810.19 samples/sec	accuracy=nan
2023-03-21 10:00:05,339 Node[0] Epoch[3] Batch [280-300]	Speed: 40832.11 samples/sec	accuracy=nan
2023-03-21 10:00:06,939 Node[0] Epoch[3] Batch [300-320]	Speed: 40808.23 samples/sec	accuracy=nan
2023-03-21 10:00:08,537 Node[0] Epoch[3] Batch [320-340]	Speed: 40846.32 samples/sec	accuracy=nan
2023-03-21 10:00:10,134 Node[0] Epoch[3] Batch [340-360]	Speed: 40892.12 samples/sec	accuracy=nan
2023-03-21 10:00:11,732 Node[0] Epoch[3] Batch [360-380]	Speed: 40833.21 samples/sec	accuracy=nan
2023-03-21 10:00:12,688 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,688 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,688 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,688 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,688 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,688 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410812688, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 10:00:12,689 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[0] Epoch[3] Time cost=31.294
:::MLLOG {"namespace": "", "time_ms": 1679410812689, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40939.836697953746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-21 10:00:12,689 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410812689, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 10:00:12,690 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:12,689 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:14,367 Node[0] Epoch[4] Batch [0-20]	Speed: 40866.04 samples/sec	accuracy=nan
2023-03-21 10:00:15,964 Node[0] Epoch[4] Batch [20-40]	Speed: 40868.60 samples/sec	accuracy=nan
2023-03-21 10:00:17,565 Node[0] Epoch[4] Batch [40-60]	Speed: 40769.06 samples/sec	accuracy=nan
2023-03-21 10:00:19,159 Node[0] Epoch[4] Batch [60-80]	Speed: 40961.95 samples/sec	accuracy=nan
2023-03-21 10:00:20,756 Node[0] Epoch[4] Batch [80-100]	Speed: 40864.41 samples/sec	accuracy=nan
2023-03-21 10:00:22,353 Node[0] Epoch[4] Batch [100-120]	Speed: 40889.62 samples/sec	accuracy=nan
2023-03-21 10:00:23,950 Node[0] Epoch[4] Batch [120-140]	Speed: 40862.38 samples/sec	accuracy=nan
2023-03-21 10:00:25,549 Node[0] Epoch[4] Batch [140-160]	Speed: 40843.13 samples/sec	accuracy=nan
2023-03-21 10:00:27,145 Node[0] Epoch[4] Batch [160-180]	Speed: 40887.04 samples/sec	accuracy=nan
2023-03-21 10:00:28,741 Node[0] Epoch[4] Batch [180-200]	Speed: 40924.25 samples/sec	accuracy=nan
2023-03-21 10:00:30,344 Node[0] Epoch[4] Batch [200-220]	Speed: 40706.61 samples/sec	accuracy=nan
2023-03-21 10:00:31,945 Node[0] Epoch[4] Batch [220-240]	Speed: 40774.83 samples/sec	accuracy=nan
2023-03-21 10:00:33,543 Node[0] Epoch[4] Batch [240-260]	Speed: 40843.74 samples/sec	accuracy=nan
2023-03-21 10:00:35,140 Node[0] Epoch[4] Batch [260-280]	Speed: 40893.01 samples/sec	accuracy=nan
2023-03-21 10:00:36,738 Node[0] Epoch[4] Batch [280-300]	Speed: 40847.36 samples/sec	accuracy=nan
2023-03-21 10:00:38,335 Node[0] Epoch[4] Batch [300-320]	Speed: 40865.81 samples/sec	accuracy=nan
2023-03-21 10:00:39,933 Node[0] Epoch[4] Batch [320-340]	Speed: 40859.88 samples/sec	accuracy=nan
2023-03-21 10:00:41,531 Node[0] Epoch[4] Batch [340-360]	Speed: 40853.63 samples/sec	accuracy=nan
2023-03-21 10:00:43,129 Node[0] Epoch[4] Batch [360-380]	Speed: 40844.28 samples/sec	accuracy=nan
2023-03-21 10:00:44,003 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:44,003 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410844003, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 10:00:44,004 Node[0] Epoch[4] Time cost=31.315
2023-03-21 10:00:44,004 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410844004, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40912.61525731554}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679410844005, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 10:00:44,005 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:00:45,683 Node[0] Epoch[5] Batch [0-20]	Speed: 40892.02 samples/sec	accuracy=nan
2023-03-21 10:00:47,280 Node[0] Epoch[5] Batch [20-40]	Speed: 40862.04 samples/sec	accuracy=nan
2023-03-21 10:00:48,878 Node[0] Epoch[5] Batch [40-60]	Speed: 40862.38 samples/sec	accuracy=nan
2023-03-21 10:00:50,477 Node[0] Epoch[5] Batch [60-80]	Speed: 40830.17 samples/sec	accuracy=nan
2023-03-21 10:00:52,072 Node[0] Epoch[5] Batch [80-100]	Speed: 40926.22 samples/sec	accuracy=nan
2023-03-21 10:00:53,670 Node[0] Epoch[5] Batch [100-120]	Speed: 40859.57 samples/sec	accuracy=nan
2023-03-21 10:00:55,267 Node[0] Epoch[5] Batch [120-140]	Speed: 40872.08 samples/sec	accuracy=nan
2023-03-21 10:00:56,865 Node[0] Epoch[5] Batch [140-160]	Speed: 40845.74 samples/sec	accuracy=nan
2023-03-21 10:00:58,462 Node[0] Epoch[5] Batch [160-180]	Speed: 40871.86 samples/sec	accuracy=nan
2023-03-21 10:01:00,056 Node[0] Epoch[5] Batch [180-200]	Speed: 40957.39 samples/sec	accuracy=nan
2023-03-21 10:01:01,650 Node[0] Epoch[5] Batch [200-220]	Speed: 40950.84 samples/sec	accuracy=nan
2023-03-21 10:01:03,243 Node[0] Epoch[5] Batch [220-240]	Speed: 40982.14 samples/sec	accuracy=nan
2023-03-21 10:01:04,841 Node[0] Epoch[5] Batch [240-260]	Speed: 40860.17 samples/sec	accuracy=nan
2023-03-21 10:01:06,435 Node[0] Epoch[5] Batch [260-280]	Speed: 40938.59 samples/sec	accuracy=nan
2023-03-21 10:01:08,027 Node[0] Epoch[5] Batch [280-300]	Speed: 41000.43 samples/sec	accuracy=nan
2023-03-21 10:01:09,624 Node[0] Epoch[5] Batch [300-320]	Speed: 40884.19 samples/sec	accuracy=nan
2023-03-21 10:01:11,219 Node[0] Epoch[5] Batch [320-340]	Speed: 40919.21 samples/sec	accuracy=nan
2023-03-21 10:01:12,814 Node[0] Epoch[5] Batch [340-360]	Speed: 40937.46 samples/sec	accuracy=nan
2023-03-21 10:01:14,411 Node[0] Epoch[5] Batch [360-380]	Speed: 40888.38 samples/sec	accuracy=nan
2023-03-21 10:01:15,363 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,363 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:15,364 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410875365, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 10:01:15,365 Node[0] Epoch[5] Time cost=31.360
:::MLLOG {"namespace": "", "time_ms": 1679410875365, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40853.30983885526}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679410875365, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 10:01:15,366 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:17,044 Node[0] Epoch[6] Batch [0-20]	Speed: 40828.68 samples/sec	accuracy=nan
2023-03-21 10:01:18,641 Node[0] Epoch[6] Batch [20-40]	Speed: 40871.53 samples/sec	accuracy=nan
2023-03-21 10:01:20,238 Node[0] Epoch[6] Batch [40-60]	Speed: 40883.16 samples/sec	accuracy=nan
2023-03-21 10:01:21,832 Node[0] Epoch[6] Batch [60-80]	Speed: 40952.44 samples/sec	accuracy=nan
2023-03-21 10:01:23,424 Node[0] Epoch[6] Batch [80-100]	Speed: 41003.39 samples/sec	accuracy=nan
2023-03-21 10:01:25,019 Node[0] Epoch[6] Batch [100-120]	Speed: 40940.74 samples/sec	accuracy=nan
2023-03-21 10:01:26,616 Node[0] Epoch[6] Batch [120-140]	Speed: 40873.34 samples/sec	accuracy=nan
2023-03-21 10:01:28,207 Node[0] Epoch[6] Batch [140-160]	Speed: 41030.62 samples/sec	accuracy=nan
2023-03-21 10:01:29,799 Node[0] Epoch[6] Batch [160-180]	Speed: 40990.19 samples/sec	accuracy=nan
2023-03-21 10:01:31,396 Node[0] Epoch[6] Batch [180-200]	Speed: 40882.90 samples/sec	accuracy=nan
2023-03-21 10:01:32,988 Node[0] Epoch[6] Batch [200-220]	Speed: 41014.50 samples/sec	accuracy=nan
2023-03-21 10:01:34,583 Node[0] Epoch[6] Batch [220-240]	Speed: 40916.47 samples/sec	accuracy=nan
2023-03-21 10:01:36,177 Node[0] Epoch[6] Batch [240-260]	Speed: 40972.73 samples/sec	accuracy=nan
2023-03-21 10:01:37,769 Node[0] Epoch[6] Batch [260-280]	Speed: 40996.98 samples/sec	accuracy=nan
2023-03-21 10:01:39,360 Node[0] Epoch[6] Batch [280-300]	Speed: 41035.62 samples/sec	accuracy=nan
2023-03-21 10:01:40,954 Node[0] Epoch[6] Batch [300-320]	Speed: 40951.59 samples/sec	accuracy=nan
2023-03-21 10:01:42,549 Node[0] Epoch[6] Batch [320-340]	Speed: 40932.19 samples/sec	accuracy=nan
2023-03-21 10:01:44,144 Node[0] Epoch[6] Batch [340-360]	Speed: 40919.17 samples/sec	accuracy=nan
2023-03-21 10:01:45,741 Node[0] Epoch[6] Batch [360-380]	Speed: 40880.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679410906616, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 10:01:46,617 Node[0] Epoch[6] Time cost=31.251
:::MLLOG {"namespace": "", "time_ms": 1679410906617, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40995.94683741361}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679410906692, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 10:01:47,428 Node[0] Epoch[6] Validation-accuracy=0.447360
2023-03-21 10:01:47,428 Node[0] Epoch[6] Validation-correct-count=1398.000000
2023-03-21 10:01:47,429 Node[0] Epoch[6] Validation-total-count=3125.000000
2023-03-21 10:01:47,538 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410907537, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-21 10:01:47,538 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,537 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410907538, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45274, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 10:01:47,538 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410907538, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-21 10:01:47,538 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:47,538 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410907538, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679410907538, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 10:01:47,539 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:01:49,145 Node[0] Epoch[7] Batch [0-20]	Speed: 40908.36 samples/sec	accuracy=nan
2023-03-21 10:01:50,737 Node[0] Epoch[7] Batch [20-40]	Speed: 40999.45 samples/sec	accuracy=nan
2023-03-21 10:01:52,323 Node[0] Epoch[7] Batch [40-60]	Speed: 41155.18 samples/sec	accuracy=nan
2023-03-21 10:01:53,919 Node[0] Epoch[7] Batch [60-80]	Speed: 40888.54 samples/sec	accuracy=nan
2023-03-21 10:01:55,511 Node[0] Epoch[7] Batch [80-100]	Speed: 41016.75 samples/sec	accuracy=nan
2023-03-21 10:01:57,102 Node[0] Epoch[7] Batch [100-120]	Speed: 41038.64 samples/sec	accuracy=nan
2023-03-21 10:01:58,694 Node[0] Epoch[7] Batch [120-140]	Speed: 41005.93 samples/sec	accuracy=nan
2023-03-21 10:02:00,291 Node[0] Epoch[7] Batch [140-160]	Speed: 40861.55 samples/sec	accuracy=nan
2023-03-21 10:02:01,881 Node[0] Epoch[7] Batch [160-180]	Speed: 41050.59 samples/sec	accuracy=nan
2023-03-21 10:02:03,473 Node[0] Epoch[7] Batch [180-200]	Speed: 41022.54 samples/sec	accuracy=nan
2023-03-21 10:02:05,066 Node[0] Epoch[7] Batch [200-220]	Speed: 40976.62 samples/sec	accuracy=nan
2023-03-21 10:02:06,660 Node[0] Epoch[7] Batch [220-240]	Speed: 40962.32 samples/sec	accuracy=nan
2023-03-21 10:02:08,250 Node[0] Epoch[7] Batch [240-260]	Speed: 41043.98 samples/sec	accuracy=nan
2023-03-21 10:02:09,842 Node[0] Epoch[7] Batch [260-280]	Speed: 41012.41 samples/sec	accuracy=nan
2023-03-21 10:02:11,435 Node[0] Epoch[7] Batch [280-300]	Speed: 40963.32 samples/sec	accuracy=nan
2023-03-21 10:02:13,030 Node[0] Epoch[7] Batch [300-320]	Speed: 40943.06 samples/sec	accuracy=nan
2023-03-21 10:02:14,620 Node[0] Epoch[7] Batch [320-340]	Speed: 41062.58 samples/sec	accuracy=nan
2023-03-21 10:02:16,215 Node[0] Epoch[7] Batch [340-360]	Speed: 40919.15 samples/sec	accuracy=nan
2023-03-21 10:02:17,807 Node[0] Epoch[7] Batch [360-380]	Speed: 40995.01 samples/sec	accuracy=nan
2023-03-21 10:02:18,761 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,761 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,761 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,761 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,761 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,761 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410938762, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 10:02:18,762 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[0] Epoch[7] Time cost=31.223
2023-03-21 10:02:18,762 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410938762, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41032.33318010616}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679410938762, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 10:02:18,763 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,762 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:18,763 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:20,436 Node[0] Epoch[8] Batch [0-20]	Speed: 41022.12 samples/sec	accuracy=nan
2023-03-21 10:02:22,025 Node[0] Epoch[8] Batch [20-40]	Speed: 41065.36 samples/sec	accuracy=nan
2023-03-21 10:02:23,618 Node[0] Epoch[8] Batch [40-60]	Speed: 40995.90 samples/sec	accuracy=nan
2023-03-21 10:02:25,209 Node[0] Epoch[8] Batch [60-80]	Speed: 41029.79 samples/sec	accuracy=nan
2023-03-21 10:02:26,804 Node[0] Epoch[8] Batch [80-100]	Speed: 40926.48 samples/sec	accuracy=nan
2023-03-21 10:02:28,397 Node[0] Epoch[8] Batch [100-120]	Speed: 40976.35 samples/sec	accuracy=nan
2023-03-21 10:02:29,989 Node[0] Epoch[8] Batch [120-140]	Speed: 41012.30 samples/sec	accuracy=nan
2023-03-21 10:02:31,584 Node[0] Epoch[8] Batch [140-160]	Speed: 40903.52 samples/sec	accuracy=nan
2023-03-21 10:02:33,176 Node[0] Epoch[8] Batch [160-180]	Speed: 41012.76 samples/sec	accuracy=nan
2023-03-21 10:02:34,767 Node[0] Epoch[8] Batch [180-200]	Speed: 41038.80 samples/sec	accuracy=nan
2023-03-21 10:02:36,357 Node[0] Epoch[8] Batch [200-220]	Speed: 41052.99 samples/sec	accuracy=nan
2023-03-21 10:02:37,948 Node[0] Epoch[8] Batch [220-240]	Speed: 41035.62 samples/sec	accuracy=nan
2023-03-21 10:02:39,542 Node[0] Epoch[8] Batch [240-260]	Speed: 40938.20 samples/sec	accuracy=nan
2023-03-21 10:02:41,136 Node[0] Epoch[8] Batch [260-280]	Speed: 40966.04 samples/sec	accuracy=nan
2023-03-21 10:02:42,727 Node[0] Epoch[8] Batch [280-300]	Speed: 41041.55 samples/sec	accuracy=nan
2023-03-21 10:02:44,319 Node[0] Epoch[8] Batch [300-320]	Speed: 40987.81 samples/sec	accuracy=nan
2023-03-21 10:02:45,911 Node[0] Epoch[8] Batch [320-340]	Speed: 41008.70 samples/sec	accuracy=nan
2023-03-21 10:02:47,504 Node[0] Epoch[8] Batch [340-360]	Speed: 40972.55 samples/sec	accuracy=nan
2023-03-21 10:02:49,096 Node[0] Epoch[8] Batch [360-380]	Speed: 41002.19 samples/sec	accuracy=nan
2023-03-21 10:02:49,970 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,970 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,971 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,971 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,971 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:49,971 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679410969970, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 10:02:49,971 Node[0] Epoch[8] Time cost=31.209
:::MLLOG {"namespace": "", "time_ms": 1679410969971, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41051.49719878891}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679410969972, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 10:02:49,972 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:02:51,644 Node[0] Epoch[9] Batch [0-20]	Speed: 41035.95 samples/sec	accuracy=nan
2023-03-21 10:02:53,239 Node[0] Epoch[9] Batch [20-40]	Speed: 40926.61 samples/sec	accuracy=nan
2023-03-21 10:02:54,833 Node[0] Epoch[9] Batch [40-60]	Speed: 40959.06 samples/sec	accuracy=nan
2023-03-21 10:02:56,425 Node[0] Epoch[9] Batch [60-80]	Speed: 40998.14 samples/sec	accuracy=nan
2023-03-21 10:02:58,018 Node[0] Epoch[9] Batch [80-100]	Speed: 40965.68 samples/sec	accuracy=nan
2023-03-21 10:02:59,611 Node[0] Epoch[9] Batch [100-120]	Speed: 40991.96 samples/sec	accuracy=nan
2023-03-21 10:03:01,204 Node[0] Epoch[9] Batch [120-140]	Speed: 40988.96 samples/sec	accuracy=nan
2023-03-21 10:03:02,795 Node[0] Epoch[9] Batch [140-160]	Speed: 41021.75 samples/sec	accuracy=nan
2023-03-21 10:03:04,389 Node[0] Epoch[9] Batch [160-180]	Speed: 40959.05 samples/sec	accuracy=nan
2023-03-21 10:03:05,981 Node[0] Epoch[9] Batch [180-200]	Speed: 40988.30 samples/sec	accuracy=nan
2023-03-21 10:03:07,573 Node[0] Epoch[9] Batch [200-220]	Speed: 40999.31 samples/sec	accuracy=nan
2023-03-21 10:03:09,166 Node[0] Epoch[9] Batch [220-240]	Speed: 40998.77 samples/sec	accuracy=nan
2023-03-21 10:03:10,758 Node[0] Epoch[9] Batch [240-260]	Speed: 40989.05 samples/sec	accuracy=nan
2023-03-21 10:03:12,350 Node[0] Epoch[9] Batch [260-280]	Speed: 41025.78 samples/sec	accuracy=nan
2023-03-21 10:03:13,942 Node[0] Epoch[9] Batch [280-300]	Speed: 41001.04 samples/sec	accuracy=nan
2023-03-21 10:03:15,533 Node[0] Epoch[9] Batch [300-320]	Speed: 41018.32 samples/sec	accuracy=nan
2023-03-21 10:03:17,129 Node[0] Epoch[9] Batch [320-340]	Speed: 40898.18 samples/sec	accuracy=nan
2023-03-21 10:03:18,725 Node[0] Epoch[9] Batch [340-360]	Speed: 40915.48 samples/sec	accuracy=nan
2023-03-21 10:03:20,320 Node[0] Epoch[9] Batch [360-380]	Speed: 40916.61 samples/sec	accuracy=nan
2023-03-21 10:03:21,272 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,272 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411001272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 10:03:21,273 Node[0] Epoch[9] Time cost=31.301
:::MLLOG {"namespace": "", "time_ms": 1679411001273, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40930.81705752334}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679411001273, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 10:03:21,273 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:21,273 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:22,945 Node[0] Epoch[10] Batch [0-20]	Speed: 40973.91 samples/sec	accuracy=nan
2023-03-21 10:03:24,538 Node[0] Epoch[10] Batch [20-40]	Speed: 41002.77 samples/sec	accuracy=nan
2023-03-21 10:03:26,134 Node[0] Epoch[10] Batch [40-60]	Speed: 40901.81 samples/sec	accuracy=nan
2023-03-21 10:03:27,727 Node[0] Epoch[10] Batch [60-80]	Speed: 40978.90 samples/sec	accuracy=nan
2023-03-21 10:03:29,319 Node[0] Epoch[10] Batch [80-100]	Speed: 40985.62 samples/sec	accuracy=nan
2023-03-21 10:03:30,918 Node[0] Epoch[10] Batch [100-120]	Speed: 40845.77 samples/sec	accuracy=nan
2023-03-21 10:03:32,509 Node[0] Epoch[10] Batch [120-140]	Speed: 41020.03 samples/sec	accuracy=nan
2023-03-21 10:03:34,100 Node[0] Epoch[10] Batch [140-160]	Speed: 41021.88 samples/sec	accuracy=nan
2023-03-21 10:03:35,696 Node[0] Epoch[10] Batch [160-180]	Speed: 40915.59 samples/sec	accuracy=nan
2023-03-21 10:03:37,286 Node[0] Epoch[10] Batch [180-200]	Speed: 41059.76 samples/sec	accuracy=nan
2023-03-21 10:03:38,878 Node[0] Epoch[10] Batch [200-220]	Speed: 41004.23 samples/sec	accuracy=nan
2023-03-21 10:03:40,471 Node[0] Epoch[10] Batch [220-240]	Speed: 40985.33 samples/sec	accuracy=nan
2023-03-21 10:03:42,060 Node[0] Epoch[10] Batch [240-260]	Speed: 41055.53 samples/sec	accuracy=nan
2023-03-21 10:03:43,650 Node[0] Epoch[10] Batch [260-280]	Speed: 41074.39 samples/sec	accuracy=nan
2023-03-21 10:03:45,243 Node[0] Epoch[10] Batch [280-300]	Speed: 40983.22 samples/sec	accuracy=nan
2023-03-21 10:03:46,835 Node[0] Epoch[10] Batch [300-320]	Speed: 40993.12 samples/sec	accuracy=nan
2023-03-21 10:03:48,430 Node[0] Epoch[10] Batch [320-340]	Speed: 40936.22 samples/sec	accuracy=nan
2023-03-21 10:03:50,018 Node[0] Epoch[10] Batch [340-360]	Speed: 41092.28 samples/sec	accuracy=nan
2023-03-21 10:03:51,610 Node[0] Epoch[10] Batch [360-380]	Speed: 41027.69 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411032483, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 10:03:52,484 Node[0] Epoch[10] Time cost=31.211
:::MLLOG {"namespace": "", "time_ms": 1679411032484, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41049.11200625924}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679411032559, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 10:03:53,347 Node[0] Epoch[10] Validation-accuracy=0.535680
2023-03-21 10:03:53,347 Node[0] Epoch[10] Validation-correct-count=1674.000000
2023-03-21 10:03:53,347 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411033394, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679411033394, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5273, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679411033395, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 10:03:53,394 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411033395, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 10:03:53,394 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,395 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,395 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411033395, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 10:03:53,394 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,395 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,395 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,394 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:53,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:03:54,999 Node[0] Epoch[11] Batch [0-20]	Speed: 40952.28 samples/sec	accuracy=nan
2023-03-21 10:03:56,590 Node[0] Epoch[11] Batch [20-40]	Speed: 41031.63 samples/sec	accuracy=nan
2023-03-21 10:03:58,183 Node[0] Epoch[11] Batch [40-60]	Speed: 40992.97 samples/sec	accuracy=nan
2023-03-21 10:03:59,773 Node[0] Epoch[11] Batch [60-80]	Speed: 41041.49 samples/sec	accuracy=nan
2023-03-21 10:04:01,369 Node[0] Epoch[11] Batch [80-100]	Speed: 40904.85 samples/sec	accuracy=nan
2023-03-21 10:04:02,961 Node[0] Epoch[11] Batch [100-120]	Speed: 41014.36 samples/sec	accuracy=nan
2023-03-21 10:04:04,550 Node[0] Epoch[11] Batch [120-140]	Speed: 41070.91 samples/sec	accuracy=nan
2023-03-21 10:04:06,142 Node[0] Epoch[11] Batch [140-160]	Speed: 41019.80 samples/sec	accuracy=nan
2023-03-21 10:04:07,735 Node[0] Epoch[11] Batch [160-180]	Speed: 40962.41 samples/sec	accuracy=nan
2023-03-21 10:04:09,325 Node[0] Epoch[11] Batch [180-200]	Speed: 41055.36 samples/sec	accuracy=nan
2023-03-21 10:04:10,917 Node[0] Epoch[11] Batch [200-220]	Speed: 40999.51 samples/sec	accuracy=nan
2023-03-21 10:04:12,505 Node[0] Epoch[11] Batch [220-240]	Speed: 41126.12 samples/sec	accuracy=nan
2023-03-21 10:04:14,100 Node[0] Epoch[11] Batch [240-260]	Speed: 40919.15 samples/sec	accuracy=nan
2023-03-21 10:04:15,688 Node[0] Epoch[11] Batch [260-280]	Speed: 41108.98 samples/sec	accuracy=nan
2023-03-21 10:04:17,281 Node[0] Epoch[11] Batch [280-300]	Speed: 40989.97 samples/sec	accuracy=nan
2023-03-21 10:04:18,874 Node[0] Epoch[11] Batch [300-320]	Speed: 40975.81 samples/sec	accuracy=nan
2023-03-21 10:04:20,463 Node[0] Epoch[11] Batch [320-340]	Speed: 41089.51 samples/sec	accuracy=nan
2023-03-21 10:04:22,055 Node[0] Epoch[11] Batch [340-360]	Speed: 41000.89 samples/sec	accuracy=nan
2023-03-21 10:04:23,643 Node[0] Epoch[11] Batch [360-380]	Speed: 41088.84 samples/sec	accuracy=nan
2023-03-21 10:04:24,597 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411064597, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 10:04:24,597 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,598 Node[0] Epoch[11] Time cost=31.203
2023-03-21 10:04:24,597 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411064598, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41059.5862127058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 10:04:24,598 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,597 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:24,598 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411064598, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 10:04:24,598 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:26,272 Node[0] Epoch[12] Batch [0-20]	Speed: 40944.99 samples/sec	accuracy=nan
2023-03-21 10:04:27,862 Node[0] Epoch[12] Batch [20-40]	Speed: 41037.32 samples/sec	accuracy=nan
2023-03-21 10:04:29,455 Node[0] Epoch[12] Batch [40-60]	Speed: 40977.74 samples/sec	accuracy=nan
2023-03-21 10:04:31,048 Node[0] Epoch[12] Batch [60-80]	Speed: 40982.23 samples/sec	accuracy=nan
2023-03-21 10:04:32,639 Node[0] Epoch[12] Batch [80-100]	Speed: 41041.02 samples/sec	accuracy=nan
2023-03-21 10:04:34,228 Node[0] Epoch[12] Batch [100-120]	Speed: 41072.92 samples/sec	accuracy=nan
2023-03-21 10:04:35,822 Node[0] Epoch[12] Batch [120-140]	Speed: 40959.40 samples/sec	accuracy=nan
2023-03-21 10:04:37,413 Node[0] Epoch[12] Batch [140-160]	Speed: 41021.69 samples/sec	accuracy=nan
2023-03-21 10:04:39,008 Node[0] Epoch[12] Batch [160-180]	Speed: 40938.45 samples/sec	accuracy=nan
2023-03-21 10:04:40,602 Node[0] Epoch[12] Batch [180-200]	Speed: 40960.97 samples/sec	accuracy=nan
2023-03-21 10:04:42,195 Node[0] Epoch[12] Batch [200-220]	Speed: 40961.42 samples/sec	accuracy=nan
2023-03-21 10:04:43,784 Node[0] Epoch[12] Batch [220-240]	Speed: 41086.05 samples/sec	accuracy=nan
2023-03-21 10:04:45,379 Node[0] Epoch[12] Batch [240-260]	Speed: 40921.22 samples/sec	accuracy=nan
2023-03-21 10:04:46,970 Node[0] Epoch[12] Batch [260-280]	Speed: 41036.01 samples/sec	accuracy=nan
2023-03-21 10:04:48,562 Node[0] Epoch[12] Batch [280-300]	Speed: 41009.66 samples/sec	accuracy=nan
2023-03-21 10:04:50,154 Node[0] Epoch[12] Batch [300-320]	Speed: 40996.95 samples/sec	accuracy=nan
2023-03-21 10:04:51,755 Node[0] Epoch[12] Batch [320-340]	Speed: 40784.37 samples/sec	accuracy=nan
2023-03-21 10:04:53,348 Node[0] Epoch[12] Batch [340-360]	Speed: 40970.96 samples/sec	accuracy=nan
2023-03-21 10:04:54,942 Node[0] Epoch[12] Batch [360-380]	Speed: 40964.42 samples/sec	accuracy=nan
2023-03-21 10:04:55,814 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,814 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,815 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411095814, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 10:04:55,815 Node[0] Epoch[12] Time cost=31.217
:::MLLOG {"namespace": "", "time_ms": 1679411095815, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41040.755357460206}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 10:04:55,815 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:55,815 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411095816, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 10:04:55,816 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:04:57,489 Node[0] Epoch[13] Batch [0-20]	Speed: 41048.68 samples/sec	accuracy=nan
2023-03-21 10:04:59,079 Node[0] Epoch[13] Batch [20-40]	Speed: 41048.13 samples/sec	accuracy=nan
2023-03-21 10:05:00,678 Node[0] Epoch[13] Batch [40-60]	Speed: 40824.82 samples/sec	accuracy=nan
2023-03-21 10:05:02,272 Node[0] Epoch[13] Batch [60-80]	Speed: 40963.10 samples/sec	accuracy=nan
2023-03-21 10:05:03,863 Node[0] Epoch[13] Batch [80-100]	Speed: 41022.49 samples/sec	accuracy=nan
2023-03-21 10:05:05,454 Node[0] Epoch[13] Batch [100-120]	Speed: 41021.77 samples/sec	accuracy=nan
2023-03-21 10:05:07,046 Node[0] Epoch[13] Batch [120-140]	Speed: 41017.10 samples/sec	accuracy=nan
2023-03-21 10:05:08,639 Node[0] Epoch[13] Batch [140-160]	Speed: 40977.59 samples/sec	accuracy=nan
2023-03-21 10:05:10,230 Node[0] Epoch[13] Batch [160-180]	Speed: 41015.86 samples/sec	accuracy=nan
2023-03-21 10:05:11,821 Node[0] Epoch[13] Batch [180-200]	Speed: 41044.15 samples/sec	accuracy=nan
2023-03-21 10:05:13,412 Node[0] Epoch[13] Batch [200-220]	Speed: 41025.82 samples/sec	accuracy=nan
2023-03-21 10:05:15,009 Node[0] Epoch[13] Batch [220-240]	Speed: 40890.73 samples/sec	accuracy=nan
2023-03-21 10:05:16,597 Node[0] Epoch[13] Batch [240-260]	Speed: 41092.77 samples/sec	accuracy=nan
2023-03-21 10:05:18,187 Node[0] Epoch[13] Batch [260-280]	Speed: 41069.08 samples/sec	accuracy=nan
2023-03-21 10:05:19,780 Node[0] Epoch[13] Batch [280-300]	Speed: 40978.11 samples/sec	accuracy=nan
2023-03-21 10:05:21,371 Node[0] Epoch[13] Batch [300-320]	Speed: 41026.29 samples/sec	accuracy=nan
2023-03-21 10:05:22,966 Node[0] Epoch[13] Batch [320-340]	Speed: 40919.65 samples/sec	accuracy=nan
2023-03-21 10:05:24,560 Node[0] Epoch[13] Batch [340-360]	Speed: 40959.69 samples/sec	accuracy=nan
2023-03-21 10:05:26,152 Node[0] Epoch[13] Batch [360-380]	Speed: 41002.59 samples/sec	accuracy=nan
2023-03-21 10:05:27,105 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411127105, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 10:05:27,105 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[0] Epoch[13] Time cost=31.290
2023-03-21 10:05:27,105 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:27,105 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411127105, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40945.38535810503}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679411127106, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 10:05:27,106 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:28,780 Node[0] Epoch[14] Batch [0-20]	Speed: 40950.35 samples/sec	accuracy=nan
2023-03-21 10:05:30,374 Node[0] Epoch[14] Batch [20-40]	Speed: 40971.90 samples/sec	accuracy=nan
2023-03-21 10:05:31,967 Node[0] Epoch[14] Batch [40-60]	Speed: 40975.62 samples/sec	accuracy=nan
2023-03-21 10:05:33,558 Node[0] Epoch[14] Batch [60-80]	Speed: 41036.41 samples/sec	accuracy=nan
2023-03-21 10:05:35,149 Node[0] Epoch[14] Batch [80-100]	Speed: 41033.99 samples/sec	accuracy=nan
2023-03-21 10:05:36,743 Node[0] Epoch[14] Batch [100-120]	Speed: 40948.90 samples/sec	accuracy=nan
2023-03-21 10:05:38,335 Node[0] Epoch[14] Batch [120-140]	Speed: 40999.75 samples/sec	accuracy=nan
2023-03-21 10:05:39,927 Node[0] Epoch[14] Batch [140-160]	Speed: 41001.79 samples/sec	accuracy=nan
2023-03-21 10:05:41,521 Node[0] Epoch[14] Batch [160-180]	Speed: 40960.26 samples/sec	accuracy=nan
2023-03-21 10:05:43,111 Node[0] Epoch[14] Batch [180-200]	Speed: 41059.98 samples/sec	accuracy=nan
2023-03-21 10:05:44,702 Node[0] Epoch[14] Batch [200-220]	Speed: 41016.87 samples/sec	accuracy=nan
2023-03-21 10:05:46,294 Node[0] Epoch[14] Batch [220-240]	Speed: 41001.11 samples/sec	accuracy=nan
2023-03-21 10:05:47,887 Node[0] Epoch[14] Batch [240-260]	Speed: 40980.33 samples/sec	accuracy=nan
2023-03-21 10:05:49,480 Node[0] Epoch[14] Batch [260-280]	Speed: 40988.75 samples/sec	accuracy=nan
2023-03-21 10:05:51,071 Node[0] Epoch[14] Batch [280-300]	Speed: 41031.91 samples/sec	accuracy=nan
2023-03-21 10:05:52,664 Node[0] Epoch[14] Batch [300-320]	Speed: 40966.90 samples/sec	accuracy=nan
2023-03-21 10:05:54,256 Node[0] Epoch[14] Batch [320-340]	Speed: 41012.99 samples/sec	accuracy=nan
2023-03-21 10:05:55,850 Node[0] Epoch[14] Batch [340-360]	Speed: 40967.64 samples/sec	accuracy=nan
2023-03-21 10:05:57,442 Node[0] Epoch[14] Batch [360-380]	Speed: 40987.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411158317, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 10:05:58,318 Node[0] Epoch[14] Time cost=31.213
:::MLLOG {"namespace": "", "time_ms": 1679411158319, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41046.474693628385}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679411158393, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 10:05:59,108 Node[0] Epoch[14] Validation-accuracy=0.580480
2023-03-21 10:05:59,108 Node[0] Epoch[14] Validation-correct-count=1814.000000
2023-03-21 10:05:59,108 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411159236, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679411159236, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59576, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679411159236, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 10:05:59,236 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411159236, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 10:05:59,236 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:05:59,236 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411159237, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 10:05:59,237 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:00,843 Node[0] Epoch[15] Batch [0-20]	Speed: 40867.95 samples/sec	accuracy=nan
2023-03-21 10:06:02,434 Node[0] Epoch[15] Batch [20-40]	Speed: 41038.02 samples/sec	accuracy=nan
2023-03-21 10:06:04,026 Node[0] Epoch[15] Batch [40-60]	Speed: 40996.28 samples/sec	accuracy=nan
2023-03-21 10:06:05,618 Node[0] Epoch[15] Batch [60-80]	Speed: 41014.10 samples/sec	accuracy=nan
2023-03-21 10:06:07,208 Node[0] Epoch[15] Batch [80-100]	Speed: 41059.91 samples/sec	accuracy=nan
2023-03-21 10:06:08,800 Node[0] Epoch[15] Batch [100-120]	Speed: 41001.35 samples/sec	accuracy=nan
2023-03-21 10:06:10,392 Node[0] Epoch[15] Batch [120-140]	Speed: 41002.77 samples/sec	accuracy=nan
2023-03-21 10:06:11,984 Node[0] Epoch[15] Batch [140-160]	Speed: 41006.44 samples/sec	accuracy=nan
2023-03-21 10:06:13,576 Node[0] Epoch[15] Batch [160-180]	Speed: 40994.99 samples/sec	accuracy=nan
2023-03-21 10:06:15,167 Node[0] Epoch[15] Batch [180-200]	Speed: 41034.22 samples/sec	accuracy=nan
2023-03-21 10:06:16,760 Node[0] Epoch[15] Batch [200-220]	Speed: 40990.22 samples/sec	accuracy=nan
2023-03-21 10:06:18,352 Node[0] Epoch[15] Batch [220-240]	Speed: 40991.75 samples/sec	accuracy=nan
2023-03-21 10:06:19,947 Node[0] Epoch[15] Batch [240-260]	Speed: 40933.25 samples/sec	accuracy=nan
2023-03-21 10:06:21,544 Node[0] Epoch[15] Batch [260-280]	Speed: 40893.44 samples/sec	accuracy=nan
2023-03-21 10:06:23,134 Node[0] Epoch[15] Batch [280-300]	Speed: 41038.59 samples/sec	accuracy=nan
2023-03-21 10:06:24,727 Node[0] Epoch[15] Batch [300-320]	Speed: 40984.57 samples/sec	accuracy=nan
2023-03-21 10:06:26,318 Node[0] Epoch[15] Batch [320-340]	Speed: 41026.47 samples/sec	accuracy=nan
2023-03-21 10:06:27,910 Node[0] Epoch[15] Batch [340-360]	Speed: 41005.18 samples/sec	accuracy=nan
2023-03-21 10:06:29,505 Node[0] Epoch[15] Batch [360-380]	Speed: 40928.11 samples/sec	accuracy=nan
2023-03-21 10:06:30,460 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,460 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411190460, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 10:06:30,460 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,461 Node[0] Epoch[15] Time cost=31.224
:::MLLOG {"namespace": "", "time_ms": 1679411190461, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41031.39011149403}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 10:06:30,461 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411190461, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 10:06:30,461 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:30,461 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:06:32,134 Node[0] Epoch[16] Batch [0-20]	Speed: 40979.10 samples/sec	accuracy=nan
2023-03-21 10:06:33,725 Node[0] Epoch[16] Batch [20-40]	Speed: 41015.04 samples/sec	accuracy=nan
2023-03-21 10:06:35,320 Node[0] Epoch[16] Batch [40-60]	Speed: 40939.88 samples/sec	accuracy=nan
2023-03-21 10:06:36,911 Node[0] Epoch[16] Batch [60-80]	Speed: 41021.10 samples/sec	accuracy=nan
2023-03-21 10:06:38,505 Node[0] Epoch[16] Batch [80-100]	Speed: 40963.78 samples/sec	accuracy=nan
2023-03-21 10:06:40,097 Node[0] Epoch[16] Batch [100-120]	Speed: 40998.67 samples/sec	accuracy=nan
2023-03-21 10:06:41,688 Node[0] Epoch[16] Batch [120-140]	Speed: 41044.18 samples/sec	accuracy=nan
2023-03-21 10:06:43,277 Node[0] Epoch[16] Batch [140-160]	Speed: 41069.35 samples/sec	accuracy=nan
2023-03-21 10:06:44,873 Node[0] Epoch[16] Batch [160-180]	Speed: 40921.09 samples/sec	accuracy=nan
2023-03-21 10:06:46,464 Node[0] Epoch[16] Batch [180-200]	Speed: 41018.62 samples/sec	accuracy=nan
2023-03-21 10:06:48,056 Node[0] Epoch[16] Batch [200-220]	Speed: 41011.20 samples/sec	accuracy=nan
2023-03-21 10:06:49,649 Node[0] Epoch[16] Batch [220-240]	Speed: 40970.84 samples/sec	accuracy=nan
2023-03-21 10:06:51,239 Node[0] Epoch[16] Batch [240-260]	Speed: 41065.04 samples/sec	accuracy=nan
2023-03-21 10:06:52,831 Node[0] Epoch[16] Batch [260-280]	Speed: 40987.19 samples/sec	accuracy=nan
2023-03-21 10:06:54,424 Node[0] Epoch[16] Batch [280-300]	Speed: 40985.68 samples/sec	accuracy=nan
2023-03-21 10:06:56,015 Node[0] Epoch[16] Batch [300-320]	Speed: 41027.67 samples/sec	accuracy=nan
2023-03-21 10:06:57,607 Node[0] Epoch[16] Batch [320-340]	Speed: 41011.44 samples/sec	accuracy=nan
2023-03-21 10:06:59,197 Node[0] Epoch[16] Batch [340-360]	Speed: 41054.49 samples/sec	accuracy=nan
2023-03-21 10:07:00,794 Node[0] Epoch[16] Batch [360-380]	Speed: 40891.44 samples/sec	accuracy=nan
2023-03-21 10:07:01,668 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,668 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411221668, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 10:07:01,669 Node[0] Epoch[16] Time cost=31.208
:::MLLOG {"namespace": "", "time_ms": 1679411221669, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41052.77865648201}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-21 10:07:01,669 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:01,669 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411221670, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 10:07:01,670 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:03,343 Node[0] Epoch[17] Batch [0-20]	Speed: 41003.15 samples/sec	accuracy=nan
2023-03-21 10:07:04,935 Node[0] Epoch[17] Batch [20-40]	Speed: 40988.73 samples/sec	accuracy=nan
2023-03-21 10:07:06,534 Node[0] Epoch[17] Batch [40-60]	Speed: 40840.24 samples/sec	accuracy=nan
2023-03-21 10:07:08,124 Node[0] Epoch[17] Batch [60-80]	Speed: 41057.15 samples/sec	accuracy=nan
2023-03-21 10:07:09,716 Node[0] Epoch[17] Batch [80-100]	Speed: 40987.68 samples/sec	accuracy=nan
2023-03-21 10:07:11,305 Node[0] Epoch[17] Batch [100-120]	Speed: 41090.64 samples/sec	accuracy=nan
2023-03-21 10:07:12,898 Node[0] Epoch[17] Batch [120-140]	Speed: 40973.50 samples/sec	accuracy=nan
2023-03-21 10:07:14,491 Node[0] Epoch[17] Batch [140-160]	Speed: 40998.81 samples/sec	accuracy=nan
2023-03-21 10:07:16,082 Node[0] Epoch[17] Batch [160-180]	Speed: 41010.48 samples/sec	accuracy=nan
2023-03-21 10:07:17,674 Node[0] Epoch[17] Batch [180-200]	Speed: 41024.55 samples/sec	accuracy=nan
2023-03-21 10:07:19,269 Node[0] Epoch[17] Batch [200-220]	Speed: 40919.66 samples/sec	accuracy=nan
2023-03-21 10:07:20,860 Node[0] Epoch[17] Batch [220-240]	Speed: 41028.34 samples/sec	accuracy=nan
2023-03-21 10:07:22,449 Node[0] Epoch[17] Batch [240-260]	Speed: 41073.98 samples/sec	accuracy=nan
2023-03-21 10:07:24,043 Node[0] Epoch[17] Batch [260-280]	Speed: 40961.67 samples/sec	accuracy=nan
2023-03-21 10:07:25,635 Node[0] Epoch[17] Batch [280-300]	Speed: 41003.86 samples/sec	accuracy=nan
2023-03-21 10:07:27,228 Node[0] Epoch[17] Batch [300-320]	Speed: 40979.54 samples/sec	accuracy=nan
2023-03-21 10:07:28,822 Node[0] Epoch[17] Batch [320-340]	Speed: 40951.39 samples/sec	accuracy=nan
2023-03-21 10:07:30,420 Node[0] Epoch[17] Batch [340-360]	Speed: 40865.59 samples/sec	accuracy=nan
2023-03-21 10:07:32,009 Node[0] Epoch[17] Batch [360-380]	Speed: 41083.64 samples/sec	accuracy=nan
2023-03-21 10:07:32,963 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:32,964 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411252964, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 10:07:32,965 Node[0] Epoch[17] Time cost=31.295
2023-03-21 10:07:32,964 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411252965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40938.351133887365}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679411252965, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 10:07:32,966 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:07:34,637 Node[0] Epoch[18] Batch [0-20]	Speed: 40991.39 samples/sec	accuracy=nan
2023-03-21 10:07:36,229 Node[0] Epoch[18] Batch [20-40]	Speed: 41005.31 samples/sec	accuracy=nan
2023-03-21 10:07:37,821 Node[0] Epoch[18] Batch [40-60]	Speed: 40985.29 samples/sec	accuracy=nan
2023-03-21 10:07:39,414 Node[0] Epoch[18] Batch [60-80]	Speed: 40990.72 samples/sec	accuracy=nan
2023-03-21 10:07:41,007 Node[0] Epoch[18] Batch [80-100]	Speed: 40979.80 samples/sec	accuracy=nan
2023-03-21 10:07:42,598 Node[0] Epoch[18] Batch [100-120]	Speed: 41022.56 samples/sec	accuracy=nan
2023-03-21 10:07:44,189 Node[0] Epoch[18] Batch [120-140]	Speed: 41046.00 samples/sec	accuracy=nan
2023-03-21 10:07:45,778 Node[0] Epoch[18] Batch [140-160]	Speed: 41075.44 samples/sec	accuracy=nan
2023-03-21 10:07:47,370 Node[0] Epoch[18] Batch [160-180]	Speed: 41005.04 samples/sec	accuracy=nan
2023-03-21 10:07:48,960 Node[0] Epoch[18] Batch [180-200]	Speed: 41063.32 samples/sec	accuracy=nan
2023-03-21 10:07:50,550 Node[0] Epoch[18] Batch [200-220]	Speed: 41033.53 samples/sec	accuracy=nan
2023-03-21 10:07:52,146 Node[0] Epoch[18] Batch [220-240]	Speed: 40926.68 samples/sec	accuracy=nan
2023-03-21 10:07:53,736 Node[0] Epoch[18] Batch [240-260]	Speed: 41051.29 samples/sec	accuracy=nan
2023-03-21 10:07:55,327 Node[0] Epoch[18] Batch [260-280]	Speed: 41033.99 samples/sec	accuracy=nan
2023-03-21 10:07:56,921 Node[0] Epoch[18] Batch [280-300]	Speed: 40941.31 samples/sec	accuracy=nan
2023-03-21 10:07:58,511 Node[0] Epoch[18] Batch [300-320]	Speed: 41055.31 samples/sec	accuracy=nan
2023-03-21 10:08:00,106 Node[0] Epoch[18] Batch [320-340]	Speed: 40936.61 samples/sec	accuracy=nan
2023-03-21 10:08:01,699 Node[0] Epoch[18] Batch [340-360]	Speed: 40978.76 samples/sec	accuracy=nan
2023-03-21 10:08:03,289 Node[0] Epoch[18] Batch [360-380]	Speed: 41047.31 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411284165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 10:08:04,166 Node[0] Epoch[18] Time cost=31.200
:::MLLOG {"namespace": "", "time_ms": 1679411284166, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41062.888543093264}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679411284240, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 10:08:04,960 Node[0] Epoch[18] Validation-accuracy=0.638080
2023-03-21 10:08:04,960 Node[0] Epoch[18] Validation-correct-count=1994.000000
2023-03-21 10:08:04,960 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411285089, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679411285089, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63852, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 10:08:05,089 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411285089, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 10:08:05,089 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411285089, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 10:08:05,089 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:05,089 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411285089, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 10:08:05,090 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:06,690 Node[0] Epoch[19] Batch [0-20]	Speed: 41009.29 samples/sec	accuracy=nan
2023-03-21 10:08:08,284 Node[0] Epoch[19] Batch [20-40]	Speed: 40949.97 samples/sec	accuracy=nan
2023-03-21 10:08:09,874 Node[0] Epoch[19] Batch [40-60]	Speed: 41049.72 samples/sec	accuracy=nan
2023-03-21 10:08:11,467 Node[0] Epoch[19] Batch [60-80]	Speed: 40973.06 samples/sec	accuracy=nan
2023-03-21 10:08:13,059 Node[0] Epoch[19] Batch [80-100]	Speed: 41007.24 samples/sec	accuracy=nan
2023-03-21 10:08:14,648 Node[0] Epoch[19] Batch [100-120]	Speed: 41091.07 samples/sec	accuracy=nan
2023-03-21 10:08:16,238 Node[0] Epoch[19] Batch [120-140]	Speed: 41039.89 samples/sec	accuracy=nan
2023-03-21 10:08:17,828 Node[0] Epoch[19] Batch [140-160]	Speed: 41072.95 samples/sec	accuracy=nan
2023-03-21 10:08:19,420 Node[0] Epoch[19] Batch [160-180]	Speed: 40998.22 samples/sec	accuracy=nan
2023-03-21 10:08:21,013 Node[0] Epoch[19] Batch [180-200]	Speed: 40980.51 samples/sec	accuracy=nan
2023-03-21 10:08:22,606 Node[0] Epoch[19] Batch [200-220]	Speed: 40975.07 samples/sec	accuracy=nan
2023-03-21 10:08:24,202 Node[0] Epoch[19] Batch [220-240]	Speed: 40916.10 samples/sec	accuracy=nan
2023-03-21 10:08:25,792 Node[0] Epoch[19] Batch [240-260]	Speed: 41057.66 samples/sec	accuracy=nan
2023-03-21 10:08:27,383 Node[0] Epoch[19] Batch [260-280]	Speed: 41017.71 samples/sec	accuracy=nan
2023-03-21 10:08:28,975 Node[0] Epoch[19] Batch [280-300]	Speed: 41002.54 samples/sec	accuracy=nan
2023-03-21 10:08:30,568 Node[0] Epoch[19] Batch [300-320]	Speed: 40998.69 samples/sec	accuracy=nan
2023-03-21 10:08:32,161 Node[0] Epoch[19] Batch [320-340]	Speed: 40964.91 samples/sec	accuracy=nan
2023-03-21 10:08:33,754 Node[0] Epoch[19] Batch [340-360]	Speed: 40982.32 samples/sec	accuracy=nan
2023-03-21 10:08:35,345 Node[0] Epoch[19] Batch [360-380]	Speed: 41023.76 samples/sec	accuracy=nan
2023-03-21 10:08:36,298 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,298 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411316298, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 10:08:36,299 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[0] Epoch[19] Time cost=31.209
2023-03-21 10:08:36,299 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411316299, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41050.62788537135}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-21 10:08:36,299 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411316299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 10:08:36,300 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:36,299 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:08:37,971 Node[0] Epoch[20] Batch [0-20]	Speed: 41006.00 samples/sec	accuracy=nan
2023-03-21 10:08:39,566 Node[0] Epoch[20] Batch [20-40]	Speed: 40940.21 samples/sec	accuracy=nan
2023-03-21 10:08:41,159 Node[0] Epoch[20] Batch [40-60]	Speed: 40980.32 samples/sec	accuracy=nan
2023-03-21 10:08:42,751 Node[0] Epoch[20] Batch [60-80]	Speed: 41007.00 samples/sec	accuracy=nan
2023-03-21 10:08:44,345 Node[0] Epoch[20] Batch [80-100]	Speed: 40962.72 samples/sec	accuracy=nan
2023-03-21 10:08:45,938 Node[0] Epoch[20] Batch [100-120]	Speed: 40966.24 samples/sec	accuracy=nan
2023-03-21 10:08:47,529 Node[0] Epoch[20] Batch [120-140]	Speed: 41035.27 samples/sec	accuracy=nan
2023-03-21 10:08:49,122 Node[0] Epoch[20] Batch [140-160]	Speed: 40974.61 samples/sec	accuracy=nan
2023-03-21 10:08:50,714 Node[0] Epoch[20] Batch [160-180]	Speed: 41009.29 samples/sec	accuracy=nan
2023-03-21 10:08:52,308 Node[0] Epoch[20] Batch [180-200]	Speed: 40941.56 samples/sec	accuracy=nan
2023-03-21 10:08:53,900 Node[0] Epoch[20] Batch [200-220]	Speed: 41012.18 samples/sec	accuracy=nan
2023-03-21 10:08:55,494 Node[0] Epoch[20] Batch [220-240]	Speed: 40964.84 samples/sec	accuracy=nan
2023-03-21 10:08:57,086 Node[0] Epoch[20] Batch [240-260]	Speed: 40997.96 samples/sec	accuracy=nan
2023-03-21 10:08:58,678 Node[0] Epoch[20] Batch [260-280]	Speed: 40995.53 samples/sec	accuracy=nan
2023-03-21 10:09:00,268 Node[0] Epoch[20] Batch [280-300]	Speed: 41070.47 samples/sec	accuracy=nan
2023-03-21 10:09:01,860 Node[0] Epoch[20] Batch [300-320]	Speed: 40984.95 samples/sec	accuracy=nan
2023-03-21 10:09:03,454 Node[0] Epoch[20] Batch [320-340]	Speed: 40959.98 samples/sec	accuracy=nan
2023-03-21 10:09:05,044 Node[0] Epoch[20] Batch [340-360]	Speed: 41054.12 samples/sec	accuracy=nan
2023-03-21 10:09:06,637 Node[0] Epoch[20] Batch [360-380]	Speed: 40981.79 samples/sec	accuracy=nan
2023-03-21 10:09:07,510 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,511 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,511 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,511 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,510 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,511 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,511 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411347510, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 10:09:07,512 Node[0] Epoch[20] Time cost=31.212
:::MLLOG {"namespace": "", "time_ms": 1679411347512, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41047.06885112243}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 10:09:07,512 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:07,512 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411347512, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 10:09:07,512 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:09,187 Node[0] Epoch[21] Batch [0-20]	Speed: 40958.20 samples/sec	accuracy=nan
2023-03-21 10:09:10,779 Node[0] Epoch[21] Batch [20-40]	Speed: 41023.85 samples/sec	accuracy=nan
2023-03-21 10:09:12,371 Node[0] Epoch[21] Batch [40-60]	Speed: 40983.38 samples/sec	accuracy=nan
2023-03-21 10:09:13,962 Node[0] Epoch[21] Batch [60-80]	Speed: 41047.98 samples/sec	accuracy=nan
2023-03-21 10:09:15,552 Node[0] Epoch[21] Batch [80-100]	Speed: 41038.94 samples/sec	accuracy=nan
2023-03-21 10:09:17,142 Node[0] Epoch[21] Batch [100-120]	Speed: 41075.81 samples/sec	accuracy=nan
2023-03-21 10:09:18,735 Node[0] Epoch[21] Batch [120-140]	Speed: 40972.44 samples/sec	accuracy=nan
2023-03-21 10:09:20,328 Node[0] Epoch[21] Batch [140-160]	Speed: 40969.94 samples/sec	accuracy=nan
2023-03-21 10:09:21,920 Node[0] Epoch[21] Batch [160-180]	Speed: 41010.61 samples/sec	accuracy=nan
2023-03-21 10:09:23,512 Node[0] Epoch[21] Batch [180-200]	Speed: 40999.58 samples/sec	accuracy=nan
2023-03-21 10:09:25,104 Node[0] Epoch[21] Batch [200-220]	Speed: 41013.18 samples/sec	accuracy=nan
2023-03-21 10:09:26,694 Node[0] Epoch[21] Batch [220-240]	Speed: 41062.74 samples/sec	accuracy=nan
2023-03-21 10:09:28,286 Node[0] Epoch[21] Batch [240-260]	Speed: 40984.40 samples/sec	accuracy=nan
2023-03-21 10:09:29,878 Node[0] Epoch[21] Batch [260-280]	Speed: 41029.50 samples/sec	accuracy=nan
2023-03-21 10:09:31,469 Node[0] Epoch[21] Batch [280-300]	Speed: 41026.41 samples/sec	accuracy=nan
2023-03-21 10:09:33,063 Node[0] Epoch[21] Batch [300-320]	Speed: 40938.78 samples/sec	accuracy=nan
2023-03-21 10:09:34,658 Node[0] Epoch[21] Batch [320-340]	Speed: 40929.83 samples/sec	accuracy=nan
2023-03-21 10:09:36,252 Node[0] Epoch[21] Batch [340-360]	Speed: 40947.06 samples/sec	accuracy=nan
2023-03-21 10:09:37,845 Node[0] Epoch[21] Batch [360-380]	Speed: 40987.71 samples/sec	accuracy=nan
2023-03-21 10:09:38,799 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,799 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411378799, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 10:09:38,800 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[0] Epoch[21] Time cost=31.288
2023-03-21 10:09:38,800 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411378800, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40948.10080967694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-21 10:09:38,800 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:38,800 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411378800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 10:09:38,801 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:09:40,477 Node[0] Epoch[22] Batch [0-20]	Speed: 40897.36 samples/sec	accuracy=nan
2023-03-21 10:09:42,069 Node[0] Epoch[22] Batch [20-40]	Speed: 41010.30 samples/sec	accuracy=nan
2023-03-21 10:09:43,662 Node[0] Epoch[22] Batch [40-60]	Speed: 40964.48 samples/sec	accuracy=nan
2023-03-21 10:09:45,257 Node[0] Epoch[22] Batch [60-80]	Speed: 40927.01 samples/sec	accuracy=nan
2023-03-21 10:09:46,851 Node[0] Epoch[22] Batch [80-100]	Speed: 40956.79 samples/sec	accuracy=nan
2023-03-21 10:09:48,444 Node[0] Epoch[22] Batch [100-120]	Speed: 40981.35 samples/sec	accuracy=nan
2023-03-21 10:09:50,039 Node[0] Epoch[22] Batch [120-140]	Speed: 40941.68 samples/sec	accuracy=nan
2023-03-21 10:09:51,633 Node[0] Epoch[22] Batch [140-160]	Speed: 40935.30 samples/sec	accuracy=nan
2023-03-21 10:09:53,224 Node[0] Epoch[22] Batch [160-180]	Speed: 41038.17 samples/sec	accuracy=nan
2023-03-21 10:09:54,817 Node[0] Epoch[22] Batch [180-200]	Speed: 40977.25 samples/sec	accuracy=nan
2023-03-21 10:09:56,408 Node[0] Epoch[22] Batch [200-220]	Speed: 41041.58 samples/sec	accuracy=nan
2023-03-21 10:09:58,002 Node[0] Epoch[22] Batch [220-240]	Speed: 40936.52 samples/sec	accuracy=nan
2023-03-21 10:09:59,598 Node[0] Epoch[22] Batch [240-260]	Speed: 40916.96 samples/sec	accuracy=nan
2023-03-21 10:10:01,192 Node[0] Epoch[22] Batch [260-280]	Speed: 40948.39 samples/sec	accuracy=nan
2023-03-21 10:10:02,784 Node[0] Epoch[22] Batch [280-300]	Speed: 41001.02 samples/sec	accuracy=nan
2023-03-21 10:10:04,377 Node[0] Epoch[22] Batch [300-320]	Speed: 40977.52 samples/sec	accuracy=nan
2023-03-21 10:10:05,971 Node[0] Epoch[22] Batch [320-340]	Speed: 40960.80 samples/sec	accuracy=nan
2023-03-21 10:10:07,567 Node[0] Epoch[22] Batch [340-360]	Speed: 40910.77 samples/sec	accuracy=nan
2023-03-21 10:10:09,162 Node[0] Epoch[22] Batch [360-380]	Speed: 40912.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411410036, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 10:10:10,037 Node[0] Epoch[22] Time cost=31.237
:::MLLOG {"namespace": "", "time_ms": 1679411410037, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41015.02365562072}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679411410112, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 10:10:10,872 Node[0] Epoch[22] Validation-accuracy=0.697600
2023-03-21 10:10:10,872 Node[0] Epoch[22] Validation-correct-count=2180.000000
2023-03-21 10:10:10,872 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411410954, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-21 10:10:10,954 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411410955, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69544, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 10:10:10,955 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411410955, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679411410955, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 10:10:10,955 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,954 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,954 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,954 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,954 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:10,955 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411410955, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 10:10:10,955 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:12,566 Node[0] Epoch[23] Batch [0-20]	Speed: 40728.73 samples/sec	accuracy=nan
2023-03-21 10:10:14,157 Node[0] Epoch[23] Batch [20-40]	Speed: 41050.70 samples/sec	accuracy=nan
2023-03-21 10:10:15,746 Node[0] Epoch[23] Batch [40-60]	Speed: 41066.18 samples/sec	accuracy=nan
2023-03-21 10:10:17,342 Node[0] Epoch[23] Batch [60-80]	Speed: 40904.78 samples/sec	accuracy=nan
2023-03-21 10:10:18,934 Node[0] Epoch[23] Batch [80-100]	Speed: 41018.49 samples/sec	accuracy=nan
2023-03-21 10:10:20,531 Node[0] Epoch[23] Batch [100-120]	Speed: 40858.48 samples/sec	accuracy=nan
2023-03-21 10:10:22,129 Node[0] Epoch[23] Batch [120-140]	Speed: 40856.88 samples/sec	accuracy=nan
2023-03-21 10:10:23,722 Node[0] Epoch[23] Batch [140-160]	Speed: 40981.62 samples/sec	accuracy=nan
2023-03-21 10:10:25,313 Node[0] Epoch[23] Batch [160-180]	Speed: 41040.24 samples/sec	accuracy=nan
2023-03-21 10:10:26,906 Node[0] Epoch[23] Batch [180-200]	Speed: 40970.22 samples/sec	accuracy=nan
2023-03-21 10:10:28,497 Node[0] Epoch[23] Batch [200-220]	Speed: 41028.37 samples/sec	accuracy=nan
2023-03-21 10:10:30,088 Node[0] Epoch[23] Batch [220-240]	Speed: 41026.04 samples/sec	accuracy=nan
2023-03-21 10:10:31,683 Node[0] Epoch[23] Batch [240-260]	Speed: 40943.27 samples/sec	accuracy=nan
2023-03-21 10:10:33,277 Node[0] Epoch[23] Batch [260-280]	Speed: 40949.48 samples/sec	accuracy=nan
2023-03-21 10:10:34,871 Node[0] Epoch[23] Batch [280-300]	Speed: 40958.44 samples/sec	accuracy=nan
2023-03-21 10:10:36,462 Node[0] Epoch[23] Batch [300-320]	Speed: 41015.44 samples/sec	accuracy=nan
2023-03-21 10:10:38,055 Node[0] Epoch[23] Batch [320-340]	Speed: 40973.51 samples/sec	accuracy=nan
2023-03-21 10:10:39,651 Node[0] Epoch[23] Batch [340-360]	Speed: 40916.53 samples/sec	accuracy=nan
2023-03-21 10:10:41,241 Node[0] Epoch[23] Batch [360-380]	Speed: 41053.34 samples/sec	accuracy=nan
2023-03-21 10:10:42,197 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,198 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,197 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411442197, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 10:10:42,198 Node[0] Epoch[23] Time cost=31.243
2023-03-21 10:10:42,198 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411442198, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41007.18375934155}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-21 10:10:42,198 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,198 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,198 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:42,198 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411442198, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 10:10:42,198 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:10:43,873 Node[0] Epoch[24] Batch [0-20]	Speed: 40980.64 samples/sec	accuracy=nan
2023-03-21 10:10:45,466 Node[0] Epoch[24] Batch [20-40]	Speed: 40981.81 samples/sec	accuracy=nan
2023-03-21 10:10:47,061 Node[0] Epoch[24] Batch [40-60]	Speed: 40930.30 samples/sec	accuracy=nan
2023-03-21 10:10:48,656 Node[0] Epoch[24] Batch [60-80]	Speed: 40939.96 samples/sec	accuracy=nan
2023-03-21 10:10:50,250 Node[0] Epoch[24] Batch [80-100]	Speed: 40946.93 samples/sec	accuracy=nan
2023-03-21 10:10:51,845 Node[0] Epoch[24] Batch [100-120]	Speed: 40936.79 samples/sec	accuracy=nan
2023-03-21 10:10:53,435 Node[0] Epoch[24] Batch [120-140]	Speed: 41031.82 samples/sec	accuracy=nan
2023-03-21 10:10:55,031 Node[0] Epoch[24] Batch [140-160]	Speed: 40903.92 samples/sec	accuracy=nan
2023-03-21 10:10:56,624 Node[0] Epoch[24] Batch [160-180]	Speed: 40991.49 samples/sec	accuracy=nan
2023-03-21 10:10:58,218 Node[0] Epoch[24] Batch [180-200]	Speed: 40960.15 samples/sec	accuracy=nan
2023-03-21 10:10:59,806 Node[0] Epoch[24] Batch [200-220]	Speed: 41091.98 samples/sec	accuracy=nan
2023-03-21 10:11:01,399 Node[0] Epoch[24] Batch [220-240]	Speed: 40979.48 samples/sec	accuracy=nan
2023-03-21 10:11:02,994 Node[0] Epoch[24] Batch [240-260]	Speed: 40945.85 samples/sec	accuracy=nan
2023-03-21 10:11:04,589 Node[0] Epoch[24] Batch [260-280]	Speed: 40912.24 samples/sec	accuracy=nan
2023-03-21 10:11:06,180 Node[0] Epoch[24] Batch [280-300]	Speed: 41027.11 samples/sec	accuracy=nan
2023-03-21 10:11:07,773 Node[0] Epoch[24] Batch [300-320]	Speed: 40984.96 samples/sec	accuracy=nan
2023-03-21 10:11:09,368 Node[0] Epoch[24] Batch [320-340]	Speed: 40922.03 samples/sec	accuracy=nan
2023-03-21 10:11:10,964 Node[0] Epoch[24] Batch [340-360]	Speed: 40922.39 samples/sec	accuracy=nan
2023-03-21 10:11:12,559 Node[0] Epoch[24] Batch [360-380]	Speed: 40909.60 samples/sec	accuracy=nan
2023-03-21 10:11:13,433 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,433 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,434 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:13,434 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411473433, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 10:11:13,434 Node[0] Epoch[24] Time cost=31.236
:::MLLOG {"namespace": "", "time_ms": 1679411473434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41015.68170724278}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679411473435, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 10:11:13,435 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:15,111 Node[0] Epoch[25] Batch [0-20]	Speed: 40937.02 samples/sec	accuracy=nan
2023-03-21 10:11:16,704 Node[0] Epoch[25] Batch [20-40]	Speed: 40975.00 samples/sec	accuracy=nan
2023-03-21 10:11:18,299 Node[0] Epoch[25] Batch [40-60]	Speed: 40927.18 samples/sec	accuracy=nan
2023-03-21 10:11:19,890 Node[0] Epoch[25] Batch [60-80]	Speed: 41028.61 samples/sec	accuracy=nan
2023-03-21 10:11:21,486 Node[0] Epoch[25] Batch [80-100]	Speed: 40911.56 samples/sec	accuracy=nan
2023-03-21 10:11:23,079 Node[0] Epoch[25] Batch [100-120]	Speed: 40962.60 samples/sec	accuracy=nan
2023-03-21 10:11:24,671 Node[0] Epoch[25] Batch [120-140]	Speed: 41008.83 samples/sec	accuracy=nan
2023-03-21 10:11:26,265 Node[0] Epoch[25] Batch [140-160]	Speed: 40948.86 samples/sec	accuracy=nan
2023-03-21 10:11:27,861 Node[0] Epoch[25] Batch [160-180]	Speed: 40917.50 samples/sec	accuracy=nan
2023-03-21 10:11:29,452 Node[0] Epoch[25] Batch [180-200]	Speed: 41016.45 samples/sec	accuracy=nan
2023-03-21 10:11:31,049 Node[0] Epoch[25] Batch [200-220]	Speed: 40868.46 samples/sec	accuracy=nan
2023-03-21 10:11:32,644 Node[0] Epoch[25] Batch [220-240]	Speed: 40929.76 samples/sec	accuracy=nan
2023-03-21 10:11:34,237 Node[0] Epoch[25] Batch [240-260]	Speed: 40991.67 samples/sec	accuracy=nan
2023-03-21 10:11:35,831 Node[0] Epoch[25] Batch [260-280]	Speed: 40940.13 samples/sec	accuracy=nan
2023-03-21 10:11:37,426 Node[0] Epoch[25] Batch [280-300]	Speed: 40933.66 samples/sec	accuracy=nan
2023-03-21 10:11:39,021 Node[0] Epoch[25] Batch [300-320]	Speed: 40945.10 samples/sec	accuracy=nan
2023-03-21 10:11:40,613 Node[0] Epoch[25] Batch [320-340]	Speed: 40996.86 samples/sec	accuracy=nan
2023-03-21 10:11:42,206 Node[0] Epoch[25] Batch [340-360]	Speed: 40965.02 samples/sec	accuracy=nan
2023-03-21 10:11:43,802 Node[0] Epoch[25] Batch [360-380]	Speed: 40924.79 samples/sec	accuracy=nan
2023-03-21 10:11:44,759 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,759 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411504759, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 10:11:44,759 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,760 Node[0] Epoch[25] Time cost=31.325
2023-03-21 10:11:44,759 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411504760, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40899.69392129955}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-21 10:11:44,760 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,760 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411504760, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 10:11:44,760 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,760 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,760 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:44,760 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:11:46,433 Node[0] Epoch[26] Batch [0-20]	Speed: 40962.31 samples/sec	accuracy=nan
2023-03-21 10:11:48,033 Node[0] Epoch[26] Batch [20-40]	Speed: 40804.28 samples/sec	accuracy=nan
2023-03-21 10:11:49,632 Node[0] Epoch[26] Batch [40-60]	Speed: 40827.60 samples/sec	accuracy=nan
2023-03-21 10:11:51,223 Node[0] Epoch[26] Batch [60-80]	Speed: 41040.46 samples/sec	accuracy=nan
2023-03-21 10:11:52,820 Node[0] Epoch[26] Batch [80-100]	Speed: 40868.68 samples/sec	accuracy=nan
2023-03-21 10:11:54,415 Node[0] Epoch[26] Batch [100-120]	Speed: 40925.26 samples/sec	accuracy=nan
2023-03-21 10:11:56,009 Node[0] Epoch[26] Batch [120-140]	Speed: 40950.68 samples/sec	accuracy=nan
2023-03-21 10:11:57,603 Node[0] Epoch[26] Batch [140-160]	Speed: 40953.35 samples/sec	accuracy=nan
2023-03-21 10:11:59,197 Node[0] Epoch[26] Batch [160-180]	Speed: 40959.38 samples/sec	accuracy=nan
2023-03-21 10:12:00,792 Node[0] Epoch[26] Batch [180-200]	Speed: 40921.35 samples/sec	accuracy=nan
2023-03-21 10:12:02,385 Node[0] Epoch[26] Batch [200-220]	Speed: 40980.37 samples/sec	accuracy=nan
2023-03-21 10:12:03,984 Node[0] Epoch[26] Batch [220-240]	Speed: 40837.76 samples/sec	accuracy=nan
2023-03-21 10:12:05,577 Node[0] Epoch[26] Batch [240-260]	Speed: 40984.59 samples/sec	accuracy=nan
2023-03-21 10:12:07,168 Node[0] Epoch[26] Batch [260-280]	Speed: 41010.61 samples/sec	accuracy=nan
2023-03-21 10:12:08,764 Node[0] Epoch[26] Batch [280-300]	Speed: 40910.86 samples/sec	accuracy=nan
2023-03-21 10:12:10,359 Node[0] Epoch[26] Batch [300-320]	Speed: 40927.26 samples/sec	accuracy=nan
2023-03-21 10:12:11,953 Node[0] Epoch[26] Batch [320-340]	Speed: 40945.45 samples/sec	accuracy=nan
2023-03-21 10:12:13,542 Node[0] Epoch[26] Batch [340-360]	Speed: 41096.32 samples/sec	accuracy=nan
2023-03-21 10:12:15,135 Node[0] Epoch[26] Batch [360-380]	Speed: 40978.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411536009, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 10:12:16,010 Node[0] Epoch[26] Time cost=31.249
:::MLLOG {"namespace": "", "time_ms": 1679411536010, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40998.087816015825}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679411536084, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 10:12:16,797 Node[0] Epoch[26] Validation-accuracy=0.727040
2023-03-21 10:12:16,798 Node[0] Epoch[26] Validation-correct-count=2272.000000
2023-03-21 10:12:16,798 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411536917, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-21 10:12:16,918 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411536918, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72838, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 10:12:16,918 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411536918, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 10:12:16,918 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411536918, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 10:12:16,918 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:16,918 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411536918, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 10:12:16,918 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:18,523 Node[0] Epoch[27] Batch [0-20]	Speed: 40916.72 samples/sec	accuracy=nan
2023-03-21 10:12:20,114 Node[0] Epoch[27] Batch [20-40]	Speed: 41041.90 samples/sec	accuracy=nan
2023-03-21 10:12:21,709 Node[0] Epoch[27] Batch [40-60]	Speed: 40934.59 samples/sec	accuracy=nan
2023-03-21 10:12:23,301 Node[0] Epoch[27] Batch [60-80]	Speed: 40992.33 samples/sec	accuracy=nan
2023-03-21 10:12:24,893 Node[0] Epoch[27] Batch [80-100]	Speed: 41003.34 samples/sec	accuracy=nan
2023-03-21 10:12:26,486 Node[0] Epoch[27] Batch [100-120]	Speed: 40975.74 samples/sec	accuracy=nan
2023-03-21 10:12:28,080 Node[0] Epoch[27] Batch [120-140]	Speed: 40973.86 samples/sec	accuracy=nan
2023-03-21 10:12:29,675 Node[0] Epoch[27] Batch [140-160]	Speed: 40922.82 samples/sec	accuracy=nan
2023-03-21 10:12:31,266 Node[0] Epoch[27] Batch [160-180]	Speed: 41027.38 samples/sec	accuracy=nan
2023-03-21 10:12:32,860 Node[0] Epoch[27] Batch [180-200]	Speed: 40939.79 samples/sec	accuracy=nan
2023-03-21 10:12:34,455 Node[0] Epoch[27] Batch [200-220]	Speed: 40931.00 samples/sec	accuracy=nan
2023-03-21 10:12:36,048 Node[0] Epoch[27] Batch [220-240]	Speed: 40997.00 samples/sec	accuracy=nan
2023-03-21 10:12:37,645 Node[0] Epoch[27] Batch [240-260]	Speed: 40872.67 samples/sec	accuracy=nan
2023-03-21 10:12:39,238 Node[0] Epoch[27] Batch [260-280]	Speed: 40963.06 samples/sec	accuracy=nan
2023-03-21 10:12:40,833 Node[0] Epoch[27] Batch [280-300]	Speed: 40927.91 samples/sec	accuracy=nan
2023-03-21 10:12:42,424 Node[0] Epoch[27] Batch [300-320]	Speed: 41035.11 samples/sec	accuracy=nan
2023-03-21 10:12:44,017 Node[0] Epoch[27] Batch [320-340]	Speed: 40995.23 samples/sec	accuracy=nan
2023-03-21 10:12:45,617 Node[0] Epoch[27] Batch [340-360]	Speed: 40795.15 samples/sec	accuracy=nan
2023-03-21 10:12:47,208 Node[0] Epoch[27] Batch [360-380]	Speed: 41030.03 samples/sec	accuracy=nan
2023-03-21 10:12:48,164 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411568164, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 10:12:48,164 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,165 Node[0] Epoch[27] Time cost=31.246
2023-03-21 10:12:48,164 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,164 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411568165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41002.53813866619}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-21 10:12:48,165 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411568165, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 10:12:48,165 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:48,165 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:12:49,837 Node[0] Epoch[28] Batch [0-20]	Speed: 40995.36 samples/sec	accuracy=nan
2023-03-21 10:12:51,432 Node[0] Epoch[28] Batch [20-40]	Speed: 40927.26 samples/sec	accuracy=nan
2023-03-21 10:12:53,024 Node[0] Epoch[28] Batch [40-60]	Speed: 40999.57 samples/sec	accuracy=nan
2023-03-21 10:12:54,619 Node[0] Epoch[28] Batch [60-80]	Speed: 40941.69 samples/sec	accuracy=nan
2023-03-21 10:12:56,211 Node[0] Epoch[28] Batch [80-100]	Speed: 40994.18 samples/sec	accuracy=nan
2023-03-21 10:12:57,805 Node[0] Epoch[28] Batch [100-120]	Speed: 40959.15 samples/sec	accuracy=nan
2023-03-21 10:12:59,398 Node[0] Epoch[28] Batch [120-140]	Speed: 40969.50 samples/sec	accuracy=nan
2023-03-21 10:13:00,994 Node[0] Epoch[28] Batch [140-160]	Speed: 40903.78 samples/sec	accuracy=nan
2023-03-21 10:13:02,593 Node[0] Epoch[28] Batch [160-180]	Speed: 40843.16 samples/sec	accuracy=nan
2023-03-21 10:13:04,186 Node[0] Epoch[28] Batch [180-200]	Speed: 40972.99 samples/sec	accuracy=nan
2023-03-21 10:13:05,780 Node[0] Epoch[28] Batch [200-220]	Speed: 40938.42 samples/sec	accuracy=nan
2023-03-21 10:13:07,375 Node[0] Epoch[28] Batch [220-240]	Speed: 40948.35 samples/sec	accuracy=nan
2023-03-21 10:13:08,970 Node[0] Epoch[28] Batch [240-260]	Speed: 40920.97 samples/sec	accuracy=nan
2023-03-21 10:13:10,565 Node[0] Epoch[28] Batch [260-280]	Speed: 40933.82 samples/sec	accuracy=nan
2023-03-21 10:13:12,160 Node[0] Epoch[28] Batch [280-300]	Speed: 40920.29 samples/sec	accuracy=nan
2023-03-21 10:13:13,756 Node[0] Epoch[28] Batch [300-320]	Speed: 40898.27 samples/sec	accuracy=nan
2023-03-21 10:13:15,351 Node[0] Epoch[28] Batch [320-340]	Speed: 40934.72 samples/sec	accuracy=nan
2023-03-21 10:13:16,942 Node[0] Epoch[28] Batch [340-360]	Speed: 41035.54 samples/sec	accuracy=nan
2023-03-21 10:13:18,538 Node[0] Epoch[28] Batch [360-380]	Speed: 40896.66 samples/sec	accuracy=nan
2023-03-21 10:13:19,410 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,410 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,410 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,410 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,410 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:19,411 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411599411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 10:13:19,412 Node[0] Epoch[28] Time cost=31.247
:::MLLOG {"namespace": "", "time_ms": 1679411599412, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41001.49069617209}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679411599412, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 10:13:19,413 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:21,088 Node[0] Epoch[29] Batch [0-20]	Speed: 40954.75 samples/sec	accuracy=nan
2023-03-21 10:13:22,685 Node[0] Epoch[29] Batch [20-40]	Speed: 40859.73 samples/sec	accuracy=nan
2023-03-21 10:13:24,279 Node[0] Epoch[29] Batch [40-60]	Speed: 40967.11 samples/sec	accuracy=nan
2023-03-21 10:13:25,874 Node[0] Epoch[29] Batch [60-80]	Speed: 40922.96 samples/sec	accuracy=nan
2023-03-21 10:13:27,465 Node[0] Epoch[29] Batch [80-100]	Speed: 41020.28 samples/sec	accuracy=nan
2023-03-21 10:13:29,061 Node[0] Epoch[29] Batch [100-120]	Speed: 40918.17 samples/sec	accuracy=nan
2023-03-21 10:13:30,653 Node[0] Epoch[29] Batch [120-140]	Speed: 40989.48 samples/sec	accuracy=nan
2023-03-21 10:13:32,248 Node[0] Epoch[29] Batch [140-160]	Speed: 40939.24 samples/sec	accuracy=nan
2023-03-21 10:13:33,842 Node[0] Epoch[29] Batch [160-180]	Speed: 40960.17 samples/sec	accuracy=nan
2023-03-21 10:13:35,433 Node[0] Epoch[29] Batch [180-200]	Speed: 41024.28 samples/sec	accuracy=nan
2023-03-21 10:13:37,030 Node[0] Epoch[29] Batch [200-220]	Speed: 40883.45 samples/sec	accuracy=nan
2023-03-21 10:13:38,629 Node[0] Epoch[29] Batch [220-240]	Speed: 40825.27 samples/sec	accuracy=nan
2023-03-21 10:13:40,222 Node[0] Epoch[29] Batch [240-260]	Speed: 40966.66 samples/sec	accuracy=nan
2023-03-21 10:13:41,814 Node[0] Epoch[29] Batch [260-280]	Speed: 41013.81 samples/sec	accuracy=nan
2023-03-21 10:13:43,406 Node[0] Epoch[29] Batch [280-300]	Speed: 40995.02 samples/sec	accuracy=nan
2023-03-21 10:13:45,002 Node[0] Epoch[29] Batch [300-320]	Speed: 40915.46 samples/sec	accuracy=nan
2023-03-21 10:13:46,593 Node[0] Epoch[29] Batch [320-340]	Speed: 41011.68 samples/sec	accuracy=nan
2023-03-21 10:13:48,189 Node[0] Epoch[29] Batch [340-360]	Speed: 40919.41 samples/sec	accuracy=nan
2023-03-21 10:13:49,784 Node[0] Epoch[29] Batch [360-380]	Speed: 40918.40 samples/sec	accuracy=nan
2023-03-21 10:13:50,737 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,737 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:50,738 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411630738, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 10:13:50,738 Node[0] Epoch[29] Time cost=31.326
2023-03-21 10:13:50,738 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411630738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40898.25702637844}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 10:13:50,738 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411630739, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 10:13:50,739 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:13:52,412 Node[0] Epoch[30] Batch [0-20]	Speed: 40952.09 samples/sec	accuracy=nan
2023-03-21 10:13:54,004 Node[0] Epoch[30] Batch [20-40]	Speed: 41005.54 samples/sec	accuracy=nan
2023-03-21 10:13:55,600 Node[0] Epoch[30] Batch [40-60]	Speed: 40914.74 samples/sec	accuracy=nan
2023-03-21 10:13:57,192 Node[0] Epoch[30] Batch [60-80]	Speed: 40998.24 samples/sec	accuracy=nan
2023-03-21 10:13:58,789 Node[0] Epoch[30] Batch [80-100]	Speed: 40881.74 samples/sec	accuracy=nan
2023-03-21 10:14:00,386 Node[0] Epoch[30] Batch [100-120]	Speed: 40876.99 samples/sec	accuracy=nan
2023-03-21 10:14:01,981 Node[0] Epoch[30] Batch [120-140]	Speed: 40925.98 samples/sec	accuracy=nan
2023-03-21 10:14:03,574 Node[0] Epoch[30] Batch [140-160]	Speed: 40971.62 samples/sec	accuracy=nan
2023-03-21 10:14:05,168 Node[0] Epoch[30] Batch [160-180]	Speed: 40969.75 samples/sec	accuracy=nan
2023-03-21 10:14:06,761 Node[0] Epoch[30] Batch [180-200]	Speed: 40966.93 samples/sec	accuracy=nan
2023-03-21 10:14:08,357 Node[0] Epoch[30] Batch [200-220]	Speed: 40918.69 samples/sec	accuracy=nan
2023-03-21 10:14:09,950 Node[0] Epoch[30] Batch [220-240]	Speed: 40977.63 samples/sec	accuracy=nan
2023-03-21 10:14:11,545 Node[0] Epoch[30] Batch [240-260]	Speed: 40928.98 samples/sec	accuracy=nan
2023-03-21 10:14:13,135 Node[0] Epoch[30] Batch [260-280]	Speed: 41058.56 samples/sec	accuracy=nan
2023-03-21 10:14:14,728 Node[0] Epoch[30] Batch [280-300]	Speed: 40976.87 samples/sec	accuracy=nan
2023-03-21 10:14:16,322 Node[0] Epoch[30] Batch [300-320]	Speed: 40934.53 samples/sec	accuracy=nan
2023-03-21 10:14:17,914 Node[0] Epoch[30] Batch [320-340]	Speed: 41007.94 samples/sec	accuracy=nan
2023-03-21 10:14:19,509 Node[0] Epoch[30] Batch [340-360]	Speed: 40940.70 samples/sec	accuracy=nan
2023-03-21 10:14:21,104 Node[0] Epoch[30] Batch [360-380]	Speed: 40926.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411661978, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 10:14:21,980 Node[0] Epoch[30] Time cost=31.241
:::MLLOG {"namespace": "", "time_ms": 1679411661980, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41009.39570374384}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679411662054, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 10:14:22,790 Node[0] Epoch[30] Validation-accuracy=0.744000
2023-03-21 10:14:22,790 Node[0] Epoch[30] Validation-correct-count=2325.000000
2023-03-21 10:14:22,790 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411662894, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679411662894, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75172, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679411662894, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 10:14:22,894 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411662894, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 10:14:22,894 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:22,894 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411662894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 10:14:22,894 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:24,499 Node[0] Epoch[31] Batch [0-20]	Speed: 40914.30 samples/sec	accuracy=nan
2023-03-21 10:14:26,095 Node[0] Epoch[31] Batch [20-40]	Speed: 40914.64 samples/sec	accuracy=nan
2023-03-21 10:14:27,688 Node[0] Epoch[31] Batch [40-60]	Speed: 40974.82 samples/sec	accuracy=nan
2023-03-21 10:14:29,281 Node[0] Epoch[31] Batch [60-80]	Speed: 40970.39 samples/sec	accuracy=nan
2023-03-21 10:14:30,877 Node[0] Epoch[31] Batch [80-100]	Speed: 40903.54 samples/sec	accuracy=nan
2023-03-21 10:14:32,472 Node[0] Epoch[31] Batch [100-120]	Speed: 40940.47 samples/sec	accuracy=nan
2023-03-21 10:14:34,066 Node[0] Epoch[31] Batch [120-140]	Speed: 40946.70 samples/sec	accuracy=nan
2023-03-21 10:14:35,658 Node[0] Epoch[31] Batch [140-160]	Speed: 40992.91 samples/sec	accuracy=nan
2023-03-21 10:14:37,253 Node[0] Epoch[31] Batch [160-180]	Speed: 40925.27 samples/sec	accuracy=nan
2023-03-21 10:14:38,847 Node[0] Epoch[31] Batch [180-200]	Speed: 40973.86 samples/sec	accuracy=nan
2023-03-21 10:14:40,440 Node[0] Epoch[31] Batch [200-220]	Speed: 40979.48 samples/sec	accuracy=nan
2023-03-21 10:14:42,033 Node[0] Epoch[31] Batch [220-240]	Speed: 40975.94 samples/sec	accuracy=nan
2023-03-21 10:14:43,625 Node[0] Epoch[31] Batch [240-260]	Speed: 40992.56 samples/sec	accuracy=nan
2023-03-21 10:14:45,220 Node[0] Epoch[31] Batch [260-280]	Speed: 40921.43 samples/sec	accuracy=nan
2023-03-21 10:14:46,817 Node[0] Epoch[31] Batch [280-300]	Speed: 40893.22 samples/sec	accuracy=nan
2023-03-21 10:14:48,408 Node[0] Epoch[31] Batch [300-320]	Speed: 41015.85 samples/sec	accuracy=nan
2023-03-21 10:14:50,001 Node[0] Epoch[31] Batch [320-340]	Speed: 40983.81 samples/sec	accuracy=nan
2023-03-21 10:14:51,597 Node[0] Epoch[31] Batch [340-360]	Speed: 40917.30 samples/sec	accuracy=nan
2023-03-21 10:14:53,193 Node[0] Epoch[31] Batch [360-380]	Speed: 40884.22 samples/sec	accuracy=nan
2023-03-21 10:14:54,147 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,147 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411694147, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 10:14:54,147 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:54,148 Node[0] Epoch[31] Time cost=31.253
:::MLLOG {"namespace": "", "time_ms": 1679411694148, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40992.841330195384}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-21 10:14:54,148 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411694148, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 10:14:54,148 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:14:55,824 Node[0] Epoch[32] Batch [0-20]	Speed: 40902.13 samples/sec	accuracy=nan
2023-03-21 10:14:57,416 Node[0] Epoch[32] Batch [20-40]	Speed: 41024.63 samples/sec	accuracy=nan
2023-03-21 10:14:59,009 Node[0] Epoch[32] Batch [40-60]	Speed: 40966.85 samples/sec	accuracy=nan
2023-03-21 10:15:00,606 Node[0] Epoch[32] Batch [60-80]	Speed: 40869.88 samples/sec	accuracy=nan
2023-03-21 10:15:02,200 Node[0] Epoch[32] Batch [80-100]	Speed: 40949.78 samples/sec	accuracy=nan
2023-03-21 10:15:03,790 Node[0] Epoch[32] Batch [100-120]	Speed: 41059.22 samples/sec	accuracy=nan
2023-03-21 10:15:05,384 Node[0] Epoch[32] Batch [120-140]	Speed: 40960.78 samples/sec	accuracy=nan
2023-03-21 10:15:06,977 Node[0] Epoch[32] Batch [140-160]	Speed: 40994.19 samples/sec	accuracy=nan
2023-03-21 10:15:08,567 Node[0] Epoch[32] Batch [160-180]	Speed: 41041.87 samples/sec	accuracy=nan
2023-03-21 10:15:10,160 Node[0] Epoch[32] Batch [180-200]	Speed: 40983.93 samples/sec	accuracy=nan
2023-03-21 10:15:11,754 Node[0] Epoch[32] Batch [200-220]	Speed: 40948.32 samples/sec	accuracy=nan
2023-03-21 10:15:13,348 Node[0] Epoch[32] Batch [220-240]	Speed: 40950.44 samples/sec	accuracy=nan
2023-03-21 10:15:14,944 Node[0] Epoch[32] Batch [240-260]	Speed: 40907.25 samples/sec	accuracy=nan
2023-03-21 10:15:16,534 Node[0] Epoch[32] Batch [260-280]	Speed: 41064.48 samples/sec	accuracy=nan
2023-03-21 10:15:18,125 Node[0] Epoch[32] Batch [280-300]	Speed: 41026.60 samples/sec	accuracy=nan
2023-03-21 10:15:19,720 Node[0] Epoch[32] Batch [300-320]	Speed: 40919.85 samples/sec	accuracy=nan
2023-03-21 10:15:21,315 Node[0] Epoch[32] Batch [320-340]	Speed: 40938.16 samples/sec	accuracy=nan
2023-03-21 10:15:22,906 Node[0] Epoch[32] Batch [340-360]	Speed: 41032.51 samples/sec	accuracy=nan
2023-03-21 10:15:24,503 Node[0] Epoch[32] Batch [360-380]	Speed: 40880.55 samples/sec	accuracy=nan
2023-03-21 10:15:25,377 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,378 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,378 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,377 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,378 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:25,378 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411725377, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 10:15:25,379 Node[0] Epoch[32] Time cost=31.230
2023-03-21 10:15:25,379 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411725379, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41023.17847434088}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679411725379, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 10:15:25,379 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:27,052 Node[0] Epoch[33] Batch [0-20]	Speed: 41009.86 samples/sec	accuracy=nan
2023-03-21 10:15:28,645 Node[0] Epoch[33] Batch [20-40]	Speed: 40966.13 samples/sec	accuracy=nan
2023-03-21 10:15:30,246 Node[0] Epoch[33] Batch [40-60]	Speed: 40766.56 samples/sec	accuracy=nan
2023-03-21 10:15:31,840 Node[0] Epoch[33] Batch [60-80]	Speed: 40959.58 samples/sec	accuracy=nan
2023-03-21 10:15:33,434 Node[0] Epoch[33] Batch [80-100]	Speed: 40947.06 samples/sec	accuracy=nan
2023-03-21 10:15:35,028 Node[0] Epoch[33] Batch [100-120]	Speed: 40960.34 samples/sec	accuracy=nan
2023-03-21 10:15:36,620 Node[0] Epoch[33] Batch [120-140]	Speed: 41010.02 samples/sec	accuracy=nan
2023-03-21 10:15:38,214 Node[0] Epoch[33] Batch [140-160]	Speed: 40952.08 samples/sec	accuracy=nan
2023-03-21 10:15:39,810 Node[0] Epoch[33] Batch [160-180]	Speed: 40901.16 samples/sec	accuracy=nan
2023-03-21 10:15:41,404 Node[0] Epoch[33] Batch [180-200]	Speed: 40960.53 samples/sec	accuracy=nan
2023-03-21 10:15:42,997 Node[0] Epoch[33] Batch [200-220]	Speed: 40978.75 samples/sec	accuracy=nan
2023-03-21 10:15:44,590 Node[0] Epoch[33] Batch [220-240]	Speed: 40964.80 samples/sec	accuracy=nan
2023-03-21 10:15:46,185 Node[0] Epoch[33] Batch [240-260]	Speed: 40929.59 samples/sec	accuracy=nan
2023-03-21 10:15:47,780 Node[0] Epoch[33] Batch [260-280]	Speed: 40944.71 samples/sec	accuracy=nan
2023-03-21 10:15:49,375 Node[0] Epoch[33] Batch [280-300]	Speed: 40931.23 samples/sec	accuracy=nan
2023-03-21 10:15:50,964 Node[0] Epoch[33] Batch [300-320]	Speed: 41057.57 samples/sec	accuracy=nan
2023-03-21 10:15:52,562 Node[0] Epoch[33] Batch [320-340]	Speed: 40864.46 samples/sec	accuracy=nan
2023-03-21 10:15:54,156 Node[0] Epoch[33] Batch [340-360]	Speed: 40964.87 samples/sec	accuracy=nan
2023-03-21 10:15:55,748 Node[0] Epoch[33] Batch [360-380]	Speed: 40983.61 samples/sec	accuracy=nan
2023-03-21 10:15:56,704 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,704 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411756704, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 10:15:56,704 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[0] Epoch[33] Time cost=31.325
2023-03-21 10:15:56,705 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411756705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40898.59227207743}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-21 10:15:56,705 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679411756705, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 10:15:56,705 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:56,705 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:15:58,379 Node[0] Epoch[34] Batch [0-20]	Speed: 40974.15 samples/sec	accuracy=nan
2023-03-21 10:15:59,976 Node[0] Epoch[34] Batch [20-40]	Speed: 40874.87 samples/sec	accuracy=nan
2023-03-21 10:16:01,570 Node[0] Epoch[34] Batch [40-60]	Speed: 40958.05 samples/sec	accuracy=nan
2023-03-21 10:16:03,161 Node[0] Epoch[34] Batch [60-80]	Speed: 41014.66 samples/sec	accuracy=nan
2023-03-21 10:16:04,758 Node[0] Epoch[34] Batch [80-100]	Speed: 40896.95 samples/sec	accuracy=nan
2023-03-21 10:16:06,355 Node[0] Epoch[34] Batch [100-120]	Speed: 40877.17 samples/sec	accuracy=nan
2023-03-21 10:16:07,944 Node[0] Epoch[34] Batch [120-140]	Speed: 41073.35 samples/sec	accuracy=nan
2023-03-21 10:16:09,539 Node[0] Epoch[34] Batch [140-160]	Speed: 40941.55 samples/sec	accuracy=nan
2023-03-21 10:16:11,132 Node[0] Epoch[34] Batch [160-180]	Speed: 40965.53 samples/sec	accuracy=nan
2023-03-21 10:16:12,727 Node[0] Epoch[34] Batch [180-200]	Speed: 40933.91 samples/sec	accuracy=nan
2023-03-21 10:16:14,318 Node[0] Epoch[34] Batch [200-220]	Speed: 41020.99 samples/sec	accuracy=nan
2023-03-21 10:16:15,911 Node[0] Epoch[34] Batch [220-240]	Speed: 40978.42 samples/sec	accuracy=nan
2023-03-21 10:16:17,507 Node[0] Epoch[34] Batch [240-260]	Speed: 40904.51 samples/sec	accuracy=nan
2023-03-21 10:16:19,103 Node[0] Epoch[34] Batch [260-280]	Speed: 40914.79 samples/sec	accuracy=nan
2023-03-21 10:16:20,698 Node[0] Epoch[34] Batch [280-300]	Speed: 40911.54 samples/sec	accuracy=nan
2023-03-21 10:16:22,295 Node[0] Epoch[34] Batch [300-320]	Speed: 40878.09 samples/sec	accuracy=nan
2023-03-21 10:16:23,887 Node[0] Epoch[34] Batch [320-340]	Speed: 41021.27 samples/sec	accuracy=nan
2023-03-21 10:16:25,481 Node[0] Epoch[34] Batch [340-360]	Speed: 40936.94 samples/sec	accuracy=nan
2023-03-21 10:16:27,075 Node[0] Epoch[34] Batch [360-380]	Speed: 40947.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679411788031, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 10:16:28,033 Node[0] Epoch[34] Time cost=31.327
:::MLLOG {"namespace": "", "time_ms": 1679411788033, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40896.43646116516}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679411788107, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 10:16:28,865 Node[0] Epoch[34] Validation-accuracy=0.761280
2023-03-21 10:16:28,866 Node[0] Epoch[34] Validation-correct-count=2379.000000
2023-03-21 10:16:28,866 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679411788985, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679411788985, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7607, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679411788985, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679411788986, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411805
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
+ end_fmt='2023-03-21 10:16:45 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:45 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:45 AM
+ result=1270
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
++ date +%s
+ end=1679411805
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:45 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:45 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:45 AM
+ result=1270
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411805
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:45 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:45 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:45 AM
+ result=1270
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411805
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:45 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:45 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:45 AM
+ result=1270
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1270,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411806
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:46 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:46 AM
+ result=1271
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1271,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411807
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:47 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:47 AM
+ result=1272
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411807
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:47 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:47 AM
+ result=1272
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679411807
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:47 AM'
ENDING TIMING RUN AT 2023-03-21 10:16:47 AM
+ result=1272
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1272,root,2023-03-21 09:55:35 AM'
+ export PROFILE=0
+ PROFILE=0
