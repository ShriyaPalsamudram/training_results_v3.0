+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415850554, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415850589, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415850591, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415850592, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415850594, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415863645, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415869731, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415869766, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415869768, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415869769, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415869771, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415881388, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415886362, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415886398, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415886399, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415886401, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415886402, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415897938, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415902896, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415902931, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415902932, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415902934, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679415902935, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679415915607, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=751
+ SEED=751
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export 'OMPI_MCA_btl=^openib'
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ OMPI_MCA_btl='^openib'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ DGXSYSTEM=4xR750xax4A100
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start=1679415917
+ start=1679415917
+ start=1679415917
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:25:17 AM'
+ start_fmt='2023-03-21 11:25:17 AM'
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ readonly local_rank=0
+ local_rank=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ INPUT_BATCH_MULTIPLIER=1
+ SLURM_NTASKS_PER_NODE=4
+ KVSTORE=horovod
+ KVSTORE=horovod
+ LR=10.5
+ OPTIMIZER=sgdwfastlars
+ LR=10.5
+ BATCHSIZE=204
+ MOM=0.9
+ MOM=0.9
+ LRSCHED=pow2
+ LRSCHED=pow2
+ INPUT_BATCH_MULTIPLIER=1
+ WARMUP_EPOCHS=2
+ WARMUP_EPOCHS=2
+ KVSTORE=horovod
+ LARSETA=0.001
+ LARSETA=0.001
+ LR=10.5
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LABELSMOOTHING=0.1
+ SEED=751
+ LARSETA=0.001
+ SEED=751
+ EVAL_OFFSET=2
+ DALI_HW_DECODER_LOAD=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ EVAL_PERIOD=4
+ WD=5.0e-05
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREFETCH_QUEUE=5
+ LABELSMOOTHING=0.1
+ SEED=751
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_CACHE_SIZE=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CACHE_SIZE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BN_GROUP=1
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DONT_USE_MMAP=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ NODALI=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NUMEXAMPLES=
+ BN_GROUP=1
+ NODALI=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NODALI=0
+ THR=0.759
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ DATAROOT=/data
+ [[ 0 == 1 ]]
+ THR=0.759
running benchmark
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ DATAROOT=/data
+ echo 'running benchmark'
+ [[ 0 == 1 ]]
+ export NGPUS=4
+ NGPUS=4
+ DATAROOT=/data
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ sed 's/,$//'
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ sed 's/,$//'
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ sed 's/,$//'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679415917
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ source ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679415917
+ start=1679415917
+++ dirname ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-21 11:25:17 AM'
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ readonly global_rank=0
+ global_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ THR=0.759
+ [[ 0 == 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ seq 0 3
+ source ./config_4xR750xax4A100.sh
++ tr '\n' ,
++ seq 0 3
++ date +%s
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ dirname ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679415917
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ GPUS=0,1,2,3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ [[ '' -ge 1 ]]
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ [[ '' -ge 1 ]]
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ NODALI=0
+ NUMEXAMPLES=
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export BATCHSIZE=204
++ BATCHSIZE=204
running benchmark
++ export KVSTORE=horovod
++ KVSTORE=horovod
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ [[ 0 -ge 1 ]]
++ export WD=5.0e-05
++ WD=5.0e-05
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ seq 0 3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ tr '\n' ,
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ sed 's/,$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ sed 's/^config_//'
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ sed 's/\.sh$//'
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ source ./config_4xR750xax4A100.sh
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ source ./config_4xR750xax4A100.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ dirname ./config_4xR750xax4A100.sh
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ dirname ./config_4xR750xax4A100.sh
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679415917
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ seq 0 3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ tr '\n' ,
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ sed 's/,$//'
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ [[ '' -ge 1 ]]
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ sed 's/\.sh$//'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ GPUS=0,1,2,3
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ '' -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date +%s
+ start=1679415917
++ date '+%Y-%m-%d %r'
+ start=1679415917
+ start=1679415917
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:25:17 AM'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ readonly global_rank=1
+ global_rank=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ start=1679415917
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ date '+%Y-%m-%d %r'
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679415917
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date '+%Y-%m-%d %r'
++ seq 0 3
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
++ tr '\n' ,
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ start_fmt='2023-03-21 11:25:17 AM'
++ date +%s
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ sed 's/,$//'
+ MOM=0.9
+ LRSCHED=pow2
+ readonly global_rank=1
+ global_rank=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ DALI_HW_DECODER_LOAD=0
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ KVSTORE=horovod
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LR=10.5
+ MOM=0.9
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ WD=5.0e-05
+ BN_GROUP=1
+ PROFILE=0
+ LABELSMOOTHING=0.1
+ SEED=751
+ PROFILE_EXCEL=0
+ NODALI=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NUMEXAMPLES=
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_THREADS=6
+ [[ 0 == 1 ]]
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
running benchmark
+ DALI_TMP_BUFFER_HINT=355568328
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ [[ 0 -ge 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ start_fmt='2023-03-21 11:25:17 AM'
+ NUMEPOCHS=37
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ readonly global_rank=1
+ global_rank=1
+ THR=0.759
+ readonly local_rank=0
+ local_rank=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 11:25:17 AM'
++ seq 0 3
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ tr '\n' ,
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ sed 's/,$//'
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ tr '\n' ,
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679415917
+ start=1679415917
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679415917
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ start_fmt='2023-03-21 11:25:17 AM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ readonly global_rank=2
+ global_rank=2
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ readonly local_rank=0
+ local_rank=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 11:25:17 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 11:25:17 AM'
STARTING TIMING RUN AT 2023-03-21 11:25:17 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=751
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
+ GPUS=0,1,2,3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ sed 's/,$//'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 751 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:74072] MCW rank 0 is not bound (or bound to all available processors)
[node044:74071] MCW rank 1 is not bound (or bound to all available processors)
[node044:74070] MCW rank 2 is not bound (or bound to all available processors)
[node044:74079] MCW rank 3 is not bound (or bound to all available processors)
[node045:66744] MCW rank 6 is not bound (or bound to all available processors)
[node045:66751] MCW rank 4 is not bound (or bound to all available processors)
[node045:66752] MCW rank 7 is not bound (or bound to all available processors)
[node045:66745] MCW rank 5 is not bound (or bound to all available processors)
[node046:61035] MCW rank 9 is not bound (or bound to all available processors)
[node047:62404] MCW rank 13 is not bound (or bound to all available processors)
[node047:62405] MCW rank 15 is not bound (or bound to all available processors)
[node047:62402] MCW rank 14 is not bound (or bound to all available processors)
[node047:62403] MCW rank 12 is not bound (or bound to all available processors)
[node046:61038] MCW rank 10 is not bound (or bound to all available processors)
[node046:61036] MCW rank 11 is not bound (or bound to all available processors)
[node046:61037] MCW rank 8 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679415922091, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679415929469, "event_type": "POINT_IN_TIME", "key": "seed", "value": 751, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:29] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:25:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679416063513, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679416068171, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068172, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068172, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068173, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068174, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068175, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068176, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068177, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068178, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068179, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068180, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068181, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068182, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068183, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068184, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068185, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068186, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068187, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068188, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068189, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068190, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068191, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068192, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068193, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068194, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068195, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068196, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068197, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068198, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068199, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068200, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068201, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068202, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068203, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068204, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068205, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068206, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068207, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068207, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068207, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068207, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068208, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068209, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068210, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679416068211, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:27:48] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,155 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15526, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,155 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3664, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,155 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30862, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,156 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61800, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,155 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10654, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,155 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51438, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,156 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39218, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,157 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38461, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,158 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64872, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679416071158, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,159 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57442, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679416071160, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679416071161, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679416071161, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679416071161, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679416071161, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679416071161, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52929, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56618, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54083, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15193, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17529, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 11:27:51,163 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53367, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679416163716, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679416163717, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679416163717, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679416164268, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679416164346, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679416164346, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 11:29:25,966 Node[0] Epoch[0] Batch [0-20]	Speed: 40539.00 samples/sec	accuracy=nan
2023-03-21 11:29:27,532 Node[0] Epoch[0] Batch [20-40]	Speed: 41685.08 samples/sec	accuracy=nan
2023-03-21 11:29:29,100 Node[0] Epoch[0] Batch [40-60]	Speed: 41643.47 samples/sec	accuracy=nan
2023-03-21 11:29:30,669 Node[0] Epoch[0] Batch [60-80]	Speed: 41582.60 samples/sec	accuracy=nan
2023-03-21 11:29:32,244 Node[0] Epoch[0] Batch [80-100]	Speed: 41468.06 samples/sec	accuracy=nan
2023-03-21 11:29:33,817 Node[0] Epoch[0] Batch [100-120]	Speed: 41488.42 samples/sec	accuracy=nan
2023-03-21 11:29:35,391 Node[0] Epoch[0] Batch [120-140]	Speed: 41468.19 samples/sec	accuracy=nan
2023-03-21 11:29:36,971 Node[0] Epoch[0] Batch [140-160]	Speed: 41336.01 samples/sec	accuracy=nan
2023-03-21 11:29:38,547 Node[0] Epoch[0] Batch [160-180]	Speed: 41410.98 samples/sec	accuracy=nan
2023-03-21 11:29:40,129 Node[0] Epoch[0] Batch [180-200]	Speed: 41277.02 samples/sec	accuracy=nan
2023-03-21 11:29:41,710 Node[0] Epoch[0] Batch [200-220]	Speed: 41264.99 samples/sec	accuracy=nan
2023-03-21 11:29:43,292 Node[0] Epoch[0] Batch [220-240]	Speed: 41275.56 samples/sec	accuracy=nan
2023-03-21 11:29:44,875 Node[0] Epoch[0] Batch [240-260]	Speed: 41244.06 samples/sec	accuracy=nan
2023-03-21 11:29:46,457 Node[0] Epoch[0] Batch [260-280]	Speed: 41254.08 samples/sec	accuracy=nan
2023-03-21 11:29:48,043 Node[0] Epoch[0] Batch [280-300]	Speed: 41178.10 samples/sec	accuracy=nan
2023-03-21 11:29:49,628 Node[0] Epoch[0] Batch [300-320]	Speed: 41171.57 samples/sec	accuracy=nan
2023-03-21 11:29:51,214 Node[0] Epoch[0] Batch [320-340]	Speed: 41167.29 samples/sec	accuracy=nan
2023-03-21 11:29:52,804 Node[0] Epoch[0] Batch [340-360]	Speed: 41052.37 samples/sec	accuracy=nan
2023-03-21 11:29:54,395 Node[0] Epoch[0] Batch [360-380]	Speed: 41029.25 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416195348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 11:29:55,349 Node[0] Epoch[0] Time cost=31.002
2023-03-21 11:29:55,349 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416195349, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41324.661093327195}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 11:29:55,349 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,349 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,350 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:55,350 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416195350, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 11:29:55,350 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:29:57,022 Node[0] Epoch[1] Batch [0-20]	Speed: 40970.12 samples/sec	accuracy=nan
2023-03-21 11:29:58,612 Node[0] Epoch[1] Batch [20-40]	Speed: 41048.64 samples/sec	accuracy=nan
2023-03-21 11:30:00,207 Node[0] Epoch[1] Batch [40-60]	Speed: 40929.43 samples/sec	accuracy=nan
2023-03-21 11:30:01,801 Node[0] Epoch[1] Batch [60-80]	Speed: 40957.97 samples/sec	accuracy=nan
2023-03-21 11:30:03,393 Node[0] Epoch[1] Batch [80-100]	Speed: 40998.91 samples/sec	accuracy=nan
2023-03-21 11:30:04,987 Node[0] Epoch[1] Batch [100-120]	Speed: 40971.04 samples/sec	accuracy=nan
2023-03-21 11:30:06,580 Node[0] Epoch[1] Batch [120-140]	Speed: 40974.18 samples/sec	accuracy=nan
2023-03-21 11:30:08,173 Node[0] Epoch[1] Batch [140-160]	Speed: 40978.83 samples/sec	accuracy=nan
2023-03-21 11:30:09,768 Node[0] Epoch[1] Batch [160-180]	Speed: 40921.97 samples/sec	accuracy=nan
2023-03-21 11:30:13,778 Node[0] Epoch[1] Batch [180-200]	Speed: 16280.76 samples/sec	accuracy=nan
2023-03-21 11:30:15,357 Node[0] Epoch[1] Batch [200-220]	Speed: 41330.38 samples/sec	accuracy=nan
2023-03-21 11:30:19,344 Node[0] Epoch[1] Batch [220-240]	Speed: 16375.59 samples/sec	accuracy=nan
2023-03-21 11:30:20,927 Node[0] Epoch[1] Batch [240-260]	Speed: 41220.44 samples/sec	accuracy=nan
2023-03-21 11:30:24,904 Node[0] Epoch[1] Batch [260-280]	Speed: 16415.18 samples/sec	accuracy=nan
2023-03-21 11:30:26,485 Node[0] Epoch[1] Batch [280-300]	Speed: 41300.53 samples/sec	accuracy=nan
2023-03-21 11:30:28,068 Node[0] Epoch[1] Batch [300-320]	Speed: 41238.95 samples/sec	accuracy=nan
2023-03-21 11:30:32,063 Node[0] Epoch[1] Batch [320-340]	Speed: 16337.95 samples/sec	accuracy=nan
2023-03-21 11:30:33,645 Node[0] Epoch[1] Batch [340-360]	Speed: 41280.55 samples/sec	accuracy=nan
2023-03-21 11:30:35,229 Node[0] Epoch[1] Batch [360-380]	Speed: 41202.93 samples/sec	accuracy=nan
2023-03-21 11:30:36,177 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:36,177 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416236177, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 11:30:36,178 Node[0] Epoch[1] Time cost=40.828
:::MLLOG {"namespace": "", "time_ms": 1679416236178, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 31379.866823511384}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679416236178, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 11:30:36,179 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:30:37,842 Node[0] Epoch[2] Batch [0-20]	Speed: 41209.98 samples/sec	accuracy=nan
2023-03-21 11:30:39,431 Node[0] Epoch[2] Batch [20-40]	Speed: 41069.89 samples/sec	accuracy=nan
2023-03-21 11:30:41,016 Node[0] Epoch[2] Batch [40-60]	Speed: 41180.15 samples/sec	accuracy=nan
2023-03-21 11:30:42,605 Node[0] Epoch[2] Batch [60-80]	Speed: 41100.69 samples/sec	accuracy=nan
2023-03-21 11:30:44,192 Node[0] Epoch[2] Batch [80-100]	Speed: 41112.54 samples/sec	accuracy=nan
2023-03-21 11:30:48,185 Node[0] Epoch[2] Batch [100-120]	Speed: 16349.19 samples/sec	accuracy=nan
2023-03-21 11:30:52,150 Node[0] Epoch[2] Batch [120-140]	Speed: 16463.44 samples/sec	accuracy=nan
2023-03-21 11:30:56,126 Node[0] Epoch[2] Batch [140-160]	Speed: 16419.81 samples/sec	accuracy=nan
2023-03-21 11:31:02,474 Node[0] Epoch[2] Batch [160-180]	Speed: 10283.79 samples/sec	accuracy=nan
2023-03-21 11:31:08,895 Node[0] Epoch[2] Batch [180-200]	Speed: 10166.83 samples/sec	accuracy=nan
2023-03-21 11:31:10,465 Node[0] Epoch[2] Batch [200-220]	Speed: 41562.55 samples/sec	accuracy=nan
2023-03-21 11:31:16,811 Node[0] Epoch[2] Batch [220-240]	Speed: 10287.11 samples/sec	accuracy=nan
2023-03-21 11:31:23,227 Node[0] Epoch[2] Batch [240-260]	Speed: 10175.74 samples/sec	accuracy=nan
2023-03-21 11:31:24,798 Node[0] Epoch[2] Batch [260-280]	Speed: 41537.19 samples/sec	accuracy=nan
2023-03-21 11:31:26,370 Node[0] Epoch[2] Batch [280-300]	Speed: 41517.51 samples/sec	accuracy=nan
2023-03-21 11:31:27,946 Node[0] Epoch[2] Batch [300-320]	Speed: 41421.20 samples/sec	accuracy=nan
2023-03-21 11:31:29,525 Node[0] Epoch[2] Batch [320-340]	Speed: 41361.10 samples/sec	accuracy=nan
2023-03-21 11:31:31,104 Node[0] Epoch[2] Batch [340-360]	Speed: 41336.97 samples/sec	accuracy=nan
2023-03-21 11:31:35,092 Node[0] Epoch[2] Batch [360-380]	Speed: 16369.76 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416295956, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 11:31:35,957 Node[0] Epoch[2] Time cost=59.779
:::MLLOG {"namespace": "", "time_ms": 1679416295957, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21431.794359768082}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679416296032, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 11:31:36,032 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,032 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,714 Node[0] Epoch[2] Validation-accuracy=0.329920
2023-03-21 11:31:36,714 Node[0] Epoch[2] Validation-correct-count=1031.000000
2023-03-21 11:31:36,714 Node[0] Epoch[2] Validation-total-count=3125.000000
2023-03-21 11:31:36,826 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:36,826 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416296826, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679416296826, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3216, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679416296827, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679416296827, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679416296827, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 11:31:36,827 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:31:38,418 Node[0] Epoch[3] Batch [0-20]	Speed: 41292.40 samples/sec	accuracy=nan
2023-03-21 11:31:40,001 Node[0] Epoch[3] Batch [20-40]	Speed: 41231.39 samples/sec	accuracy=nan
2023-03-21 11:31:41,587 Node[0] Epoch[3] Batch [40-60]	Speed: 41164.23 samples/sec	accuracy=nan
2023-03-21 11:31:43,174 Node[0] Epoch[3] Batch [60-80]	Speed: 41152.85 samples/sec	accuracy=nan
2023-03-21 11:31:44,762 Node[0] Epoch[3] Batch [80-100]	Speed: 41101.11 samples/sec	accuracy=nan
2023-03-21 11:31:46,347 Node[0] Epoch[3] Batch [100-120]	Speed: 41171.11 samples/sec	accuracy=nan
2023-03-21 11:31:47,939 Node[0] Epoch[3] Batch [120-140]	Speed: 41027.62 samples/sec	accuracy=nan
2023-03-21 11:31:49,526 Node[0] Epoch[3] Batch [140-160]	Speed: 41122.33 samples/sec	accuracy=nan
2023-03-21 11:31:51,118 Node[0] Epoch[3] Batch [160-180]	Speed: 40999.08 samples/sec	accuracy=nan
2023-03-21 11:31:52,710 Node[0] Epoch[3] Batch [180-200]	Speed: 40998.88 samples/sec	accuracy=nan
2023-03-21 11:31:54,304 Node[0] Epoch[3] Batch [200-220]	Speed: 40956.06 samples/sec	accuracy=nan
2023-03-21 11:31:55,897 Node[0] Epoch[3] Batch [220-240]	Speed: 40980.73 samples/sec	accuracy=nan
2023-03-21 11:31:57,489 Node[0] Epoch[3] Batch [240-260]	Speed: 41011.71 samples/sec	accuracy=nan
2023-03-21 11:31:59,080 Node[0] Epoch[3] Batch [260-280]	Speed: 41026.30 samples/sec	accuracy=nan
2023-03-21 11:32:00,674 Node[0] Epoch[3] Batch [280-300]	Speed: 40972.45 samples/sec	accuracy=nan
2023-03-21 11:32:02,268 Node[0] Epoch[3] Batch [300-320]	Speed: 40935.86 samples/sec	accuracy=nan
2023-03-21 11:32:03,859 Node[0] Epoch[3] Batch [320-340]	Speed: 41036.42 samples/sec	accuracy=nan
2023-03-21 11:32:05,455 Node[0] Epoch[3] Batch [340-360]	Speed: 40896.10 samples/sec	accuracy=nan
2023-03-21 11:32:07,051 Node[0] Epoch[3] Batch [360-380]	Speed: 40898.95 samples/sec	accuracy=nan
2023-03-21 11:32:08,005 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,005 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:08,006 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416328006, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 11:32:08,007 Node[0] Epoch[3] Time cost=31.180
:::MLLOG {"namespace": "", "time_ms": 1679416328007, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41090.04268738198}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679416328007, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 11:32:08,007 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:09,681 Node[0] Epoch[4] Batch [0-20]	Speed: 40917.30 samples/sec	accuracy=nan
2023-03-21 11:32:11,274 Node[0] Epoch[4] Batch [20-40]	Speed: 40992.55 samples/sec	accuracy=nan
2023-03-21 11:32:12,871 Node[0] Epoch[4] Batch [40-60]	Speed: 40879.88 samples/sec	accuracy=nan
2023-03-21 11:32:14,465 Node[0] Epoch[4] Batch [60-80]	Speed: 40943.24 samples/sec	accuracy=nan
2023-03-21 11:32:16,061 Node[0] Epoch[4] Batch [80-100]	Speed: 40915.85 samples/sec	accuracy=nan
2023-03-21 11:32:17,653 Node[0] Epoch[4] Batch [100-120]	Speed: 40986.75 samples/sec	accuracy=nan
2023-03-21 11:32:19,251 Node[0] Epoch[4] Batch [120-140]	Speed: 40869.70 samples/sec	accuracy=nan
2023-03-21 11:32:20,848 Node[0] Epoch[4] Batch [140-160]	Speed: 40868.06 samples/sec	accuracy=nan
2023-03-21 11:32:22,439 Node[0] Epoch[4] Batch [160-180]	Speed: 41028.33 samples/sec	accuracy=nan
2023-03-21 11:32:24,035 Node[0] Epoch[4] Batch [180-200]	Speed: 40916.13 samples/sec	accuracy=nan
2023-03-21 11:32:25,630 Node[0] Epoch[4] Batch [200-220]	Speed: 40927.29 samples/sec	accuracy=nan
2023-03-21 11:32:27,228 Node[0] Epoch[4] Batch [220-240]	Speed: 40839.37 samples/sec	accuracy=nan
2023-03-21 11:32:28,823 Node[0] Epoch[4] Batch [240-260]	Speed: 40941.35 samples/sec	accuracy=nan
2023-03-21 11:32:30,415 Node[0] Epoch[4] Batch [260-280]	Speed: 40994.23 samples/sec	accuracy=nan
2023-03-21 11:32:32,011 Node[0] Epoch[4] Batch [280-300]	Speed: 40905.63 samples/sec	accuracy=nan
2023-03-21 11:32:33,606 Node[0] Epoch[4] Batch [300-320]	Speed: 40916.12 samples/sec	accuracy=nan
2023-03-21 11:32:35,200 Node[0] Epoch[4] Batch [320-340]	Speed: 40955.38 samples/sec	accuracy=nan
2023-03-21 11:32:36,794 Node[0] Epoch[4] Batch [340-360]	Speed: 40947.58 samples/sec	accuracy=nan
2023-03-21 11:32:38,395 Node[0] Epoch[4] Batch [360-380]	Speed: 40791.77 samples/sec	accuracy=nan
2023-03-21 11:32:39,270 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,270 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:39,271 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416359270, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 11:32:39,271 Node[0] Epoch[4] Time cost=31.264
:::MLLOG {"namespace": "", "time_ms": 1679416359271, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40979.202061538504}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679416359271, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 11:32:39,272 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:32:40,945 Node[0] Epoch[5] Batch [0-20]	Speed: 41014.04 samples/sec	accuracy=nan
2023-03-21 11:32:42,540 Node[0] Epoch[5] Batch [20-40]	Speed: 40917.79 samples/sec	accuracy=nan
2023-03-21 11:32:44,136 Node[0] Epoch[5] Batch [40-60]	Speed: 40907.78 samples/sec	accuracy=nan
2023-03-21 11:32:45,730 Node[0] Epoch[5] Batch [60-80]	Speed: 40965.34 samples/sec	accuracy=nan
2023-03-21 11:32:47,324 Node[0] Epoch[5] Batch [80-100]	Speed: 40954.55 samples/sec	accuracy=nan
2023-03-21 11:32:48,915 Node[0] Epoch[5] Batch [100-120]	Speed: 41015.27 samples/sec	accuracy=nan
2023-03-21 11:32:50,510 Node[0] Epoch[5] Batch [120-140]	Speed: 40944.49 samples/sec	accuracy=nan
2023-03-21 11:32:52,101 Node[0] Epoch[5] Batch [140-160]	Speed: 41019.79 samples/sec	accuracy=nan
2023-03-21 11:32:53,693 Node[0] Epoch[5] Batch [160-180]	Speed: 41009.23 samples/sec	accuracy=nan
2023-03-21 11:32:55,289 Node[0] Epoch[5] Batch [180-200]	Speed: 40901.13 samples/sec	accuracy=nan
2023-03-21 11:32:56,882 Node[0] Epoch[5] Batch [200-220]	Speed: 40973.82 samples/sec	accuracy=nan
2023-03-21 11:32:58,475 Node[0] Epoch[5] Batch [220-240]	Speed: 40987.27 samples/sec	accuracy=nan
2023-03-21 11:33:00,070 Node[0] Epoch[5] Batch [240-260]	Speed: 40929.83 samples/sec	accuracy=nan
2023-03-21 11:33:01,664 Node[0] Epoch[5] Batch [260-280]	Speed: 40948.09 samples/sec	accuracy=nan
2023-03-21 11:33:03,259 Node[0] Epoch[5] Batch [280-300]	Speed: 40935.71 samples/sec	accuracy=nan
2023-03-21 11:33:04,855 Node[0] Epoch[5] Batch [300-320]	Speed: 40890.08 samples/sec	accuracy=nan
2023-03-21 11:33:06,449 Node[0] Epoch[5] Batch [320-340]	Speed: 40950.91 samples/sec	accuracy=nan
2023-03-21 11:33:08,042 Node[0] Epoch[5] Batch [340-360]	Speed: 40980.40 samples/sec	accuracy=nan
2023-03-21 11:33:09,638 Node[0] Epoch[5] Batch [360-380]	Speed: 40920.96 samples/sec	accuracy=nan
2023-03-21 11:33:10,593 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,592 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416390593, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 11:33:10,593 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:10,593 Node[0] Epoch[5] Time cost=31.322
2023-03-21 11:33:10,593 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416390593, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40903.54844853446}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-21 11:33:10,593 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416390594, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 11:33:10,594 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:12,274 Node[0] Epoch[6] Batch [0-20]	Speed: 40817.25 samples/sec	accuracy=nan
2023-03-21 11:33:13,866 Node[0] Epoch[6] Batch [20-40]	Speed: 40999.47 samples/sec	accuracy=nan
2023-03-21 11:33:15,461 Node[0] Epoch[6] Batch [40-60]	Speed: 40929.24 samples/sec	accuracy=nan
2023-03-21 11:33:17,058 Node[0] Epoch[6] Batch [60-80]	Speed: 40876.63 samples/sec	accuracy=nan
2023-03-21 11:33:18,649 Node[0] Epoch[6] Batch [80-100]	Speed: 41026.86 samples/sec	accuracy=nan
2023-03-21 11:33:20,241 Node[0] Epoch[6] Batch [100-120]	Speed: 41019.00 samples/sec	accuracy=nan
2023-03-21 11:33:21,834 Node[0] Epoch[6] Batch [120-140]	Speed: 40966.02 samples/sec	accuracy=nan
2023-03-21 11:33:23,426 Node[0] Epoch[6] Batch [140-160]	Speed: 41012.74 samples/sec	accuracy=nan
2023-03-21 11:33:25,015 Node[0] Epoch[6] Batch [160-180]	Speed: 41081.68 samples/sec	accuracy=nan
2023-03-21 11:33:26,609 Node[0] Epoch[6] Batch [180-200]	Speed: 40938.62 samples/sec	accuracy=nan
2023-03-21 11:33:28,203 Node[0] Epoch[6] Batch [200-220]	Speed: 40956.60 samples/sec	accuracy=nan
2023-03-21 11:33:29,797 Node[0] Epoch[6] Batch [220-240]	Speed: 40955.75 samples/sec	accuracy=nan
2023-03-21 11:33:31,392 Node[0] Epoch[6] Batch [240-260]	Speed: 40941.85 samples/sec	accuracy=nan
2023-03-21 11:33:32,983 Node[0] Epoch[6] Batch [260-280]	Speed: 41025.66 samples/sec	accuracy=nan
2023-03-21 11:33:34,577 Node[0] Epoch[6] Batch [280-300]	Speed: 40936.74 samples/sec	accuracy=nan
2023-03-21 11:33:36,171 Node[0] Epoch[6] Batch [300-320]	Speed: 40966.72 samples/sec	accuracy=nan
2023-03-21 11:33:37,762 Node[0] Epoch[6] Batch [320-340]	Speed: 41041.81 samples/sec	accuracy=nan
2023-03-21 11:33:39,356 Node[0] Epoch[6] Batch [340-360]	Speed: 40951.76 samples/sec	accuracy=nan
2023-03-21 11:33:40,951 Node[0] Epoch[6] Batch [360-380]	Speed: 40906.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416421826, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 11:33:41,827 Node[0] Epoch[6] Time cost=31.233
:::MLLOG {"namespace": "", "time_ms": 1679416421827, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41019.557815561726}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679416421901, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 11:33:42,636 Node[0] Epoch[6] Validation-accuracy=0.401280
2023-03-21 11:33:42,636 Node[0] Epoch[6] Validation-correct-count=1254.000000
2023-03-21 11:33:42,636 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679416422736, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-21 11:33:42,736 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416422736, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.40394, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 11:33:42,736 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416422736, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-21 11:33:42,736 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416422736, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 11:33:42,736 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:42,736 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416422737, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 11:33:42,737 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:33:44,341 Node[0] Epoch[7] Batch [0-20]	Speed: 40892.92 samples/sec	accuracy=nan
2023-03-21 11:33:45,931 Node[0] Epoch[7] Batch [20-40]	Speed: 41039.65 samples/sec	accuracy=nan
2023-03-21 11:33:47,523 Node[0] Epoch[7] Batch [40-60]	Speed: 41005.31 samples/sec	accuracy=nan
2023-03-21 11:33:49,116 Node[0] Epoch[7] Batch [60-80]	Speed: 40998.47 samples/sec	accuracy=nan
2023-03-21 11:33:50,710 Node[0] Epoch[7] Batch [80-100]	Speed: 40937.24 samples/sec	accuracy=nan
2023-03-21 11:33:52,302 Node[0] Epoch[7] Batch [100-120]	Speed: 41018.04 samples/sec	accuracy=nan
2023-03-21 11:33:53,899 Node[0] Epoch[7] Batch [120-140]	Speed: 40878.00 samples/sec	accuracy=nan
2023-03-21 11:33:55,492 Node[0] Epoch[7] Batch [140-160]	Speed: 40969.60 samples/sec	accuracy=nan
2023-03-21 11:33:57,082 Node[0] Epoch[7] Batch [160-180]	Speed: 41069.25 samples/sec	accuracy=nan
2023-03-21 11:33:58,672 Node[0] Epoch[7] Batch [180-200]	Speed: 41055.66 samples/sec	accuracy=nan
2023-03-21 11:34:00,266 Node[0] Epoch[7] Batch [200-220]	Speed: 40930.19 samples/sec	accuracy=nan
2023-03-21 11:34:01,861 Node[0] Epoch[7] Batch [220-240]	Speed: 40939.38 samples/sec	accuracy=nan
2023-03-21 11:34:03,454 Node[0] Epoch[7] Batch [240-260]	Speed: 40992.34 samples/sec	accuracy=nan
2023-03-21 11:34:05,045 Node[0] Epoch[7] Batch [260-280]	Speed: 41019.79 samples/sec	accuracy=nan
2023-03-21 11:34:06,641 Node[0] Epoch[7] Batch [280-300]	Speed: 40894.90 samples/sec	accuracy=nan
2023-03-21 11:34:08,231 Node[0] Epoch[7] Batch [300-320]	Speed: 41058.39 samples/sec	accuracy=nan
2023-03-21 11:34:09,823 Node[0] Epoch[7] Batch [320-340]	Speed: 41018.67 samples/sec	accuracy=nan
2023-03-21 11:34:11,416 Node[0] Epoch[7] Batch [340-360]	Speed: 40979.95 samples/sec	accuracy=nan
2023-03-21 11:34:13,005 Node[0] Epoch[7] Batch [360-380]	Speed: 41059.81 samples/sec	accuracy=nan
2023-03-21 11:34:13,959 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416453959, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 11:34:13,959 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,959 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[0] Epoch[7] Time cost=31.223
2023-03-21 11:34:13,959 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416453960, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41032.98082076822}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679416453960, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 11:34:13,960 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:13,960 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:15,630 Node[0] Epoch[8] Batch [0-20]	Speed: 41045.48 samples/sec	accuracy=nan
2023-03-21 11:34:17,220 Node[0] Epoch[8] Batch [20-40]	Speed: 41054.51 samples/sec	accuracy=nan
2023-03-21 11:34:18,808 Node[0] Epoch[8] Batch [40-60]	Speed: 41116.71 samples/sec	accuracy=nan
2023-03-21 11:34:20,399 Node[0] Epoch[8] Batch [60-80]	Speed: 41016.55 samples/sec	accuracy=nan
2023-03-21 11:34:21,991 Node[0] Epoch[8] Batch [80-100]	Speed: 41002.15 samples/sec	accuracy=nan
2023-03-21 11:34:23,583 Node[0] Epoch[8] Batch [100-120]	Speed: 41021.18 samples/sec	accuracy=nan
2023-03-21 11:34:25,177 Node[0] Epoch[8] Batch [120-140]	Speed: 40945.44 samples/sec	accuracy=nan
2023-03-21 11:34:26,772 Node[0] Epoch[8] Batch [140-160]	Speed: 40924.55 samples/sec	accuracy=nan
2023-03-21 11:34:28,364 Node[0] Epoch[8] Batch [160-180]	Speed: 41016.51 samples/sec	accuracy=nan
2023-03-21 11:34:29,959 Node[0] Epoch[8] Batch [180-200]	Speed: 40930.81 samples/sec	accuracy=nan
2023-03-21 11:34:31,550 Node[0] Epoch[8] Batch [200-220]	Speed: 41015.12 samples/sec	accuracy=nan
2023-03-21 11:34:33,143 Node[0] Epoch[8] Batch [220-240]	Speed: 40972.57 samples/sec	accuracy=nan
2023-03-21 11:34:34,736 Node[0] Epoch[8] Batch [240-260]	Speed: 41000.79 samples/sec	accuracy=nan
2023-03-21 11:34:36,325 Node[0] Epoch[8] Batch [260-280]	Speed: 41081.52 samples/sec	accuracy=nan
2023-03-21 11:34:37,916 Node[0] Epoch[8] Batch [280-300]	Speed: 41031.69 samples/sec	accuracy=nan
2023-03-21 11:34:39,506 Node[0] Epoch[8] Batch [300-320]	Speed: 41033.56 samples/sec	accuracy=nan
2023-03-21 11:34:41,099 Node[0] Epoch[8] Batch [320-340]	Speed: 40994.21 samples/sec	accuracy=nan
2023-03-21 11:34:42,689 Node[0] Epoch[8] Batch [340-360]	Speed: 41048.52 samples/sec	accuracy=nan
2023-03-21 11:34:44,281 Node[0] Epoch[8] Batch [360-380]	Speed: 41006.67 samples/sec	accuracy=nan
2023-03-21 11:34:45,155 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,155 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,155 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,155 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:45,156 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416485156, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 11:34:45,157 Node[0] Epoch[8] Time cost=31.197
:::MLLOG {"namespace": "", "time_ms": 1679416485157, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41067.50265474281}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679416485157, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 11:34:45,157 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:34:46,830 Node[0] Epoch[9] Batch [0-20]	Speed: 41018.96 samples/sec	accuracy=nan
2023-03-21 11:34:48,420 Node[0] Epoch[9] Batch [20-40]	Speed: 41046.84 samples/sec	accuracy=nan
2023-03-21 11:34:50,014 Node[0] Epoch[9] Batch [40-60]	Speed: 40954.92 samples/sec	accuracy=nan
2023-03-21 11:34:51,607 Node[0] Epoch[9] Batch [60-80]	Speed: 40982.71 samples/sec	accuracy=nan
2023-03-21 11:34:53,201 Node[0] Epoch[9] Batch [80-100]	Speed: 40973.55 samples/sec	accuracy=nan
2023-03-21 11:34:54,790 Node[0] Epoch[9] Batch [100-120]	Speed: 41065.45 samples/sec	accuracy=nan
2023-03-21 11:34:56,381 Node[0] Epoch[9] Batch [120-140]	Speed: 41025.67 samples/sec	accuracy=nan
2023-03-21 11:34:57,977 Node[0] Epoch[9] Batch [140-160]	Speed: 40907.67 samples/sec	accuracy=nan
2023-03-21 11:34:59,571 Node[0] Epoch[9] Batch [160-180]	Speed: 40944.93 samples/sec	accuracy=nan
2023-03-21 11:35:01,162 Node[0] Epoch[9] Batch [180-200]	Speed: 41045.54 samples/sec	accuracy=nan
2023-03-21 11:35:02,756 Node[0] Epoch[9] Batch [200-220]	Speed: 40951.06 samples/sec	accuracy=nan
2023-03-21 11:35:04,346 Node[0] Epoch[9] Batch [220-240]	Speed: 41049.32 samples/sec	accuracy=nan
2023-03-21 11:35:05,936 Node[0] Epoch[9] Batch [240-260]	Speed: 41072.07 samples/sec	accuracy=nan
2023-03-21 11:35:07,525 Node[0] Epoch[9] Batch [260-280]	Speed: 41073.57 samples/sec	accuracy=nan
2023-03-21 11:35:09,117 Node[0] Epoch[9] Batch [280-300]	Speed: 40997.06 samples/sec	accuracy=nan
2023-03-21 11:35:10,708 Node[0] Epoch[9] Batch [300-320]	Speed: 41040.29 samples/sec	accuracy=nan
2023-03-21 11:35:12,299 Node[0] Epoch[9] Batch [320-340]	Speed: 41018.08 samples/sec	accuracy=nan
2023-03-21 11:35:13,893 Node[0] Epoch[9] Batch [340-360]	Speed: 40956.85 samples/sec	accuracy=nan
2023-03-21 11:35:15,486 Node[0] Epoch[9] Batch [360-380]	Speed: 40989.87 samples/sec	accuracy=nan
2023-03-21 11:35:16,441 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416516441, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 11:35:16,441 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[0] Epoch[9] Time cost=31.284
2023-03-21 11:35:16,441 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416516442, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40952.660133603305}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 11:35:16,441 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,441 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,442 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416516442, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 11:35:16,442 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,442 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:16,442 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:18,116 Node[0] Epoch[10] Batch [0-20]	Speed: 40933.82 samples/sec	accuracy=nan
2023-03-21 11:35:19,710 Node[0] Epoch[10] Batch [20-40]	Speed: 40956.05 samples/sec	accuracy=nan
2023-03-21 11:35:21,306 Node[0] Epoch[10] Batch [40-60]	Speed: 40895.71 samples/sec	accuracy=nan
2023-03-21 11:35:22,901 Node[0] Epoch[10] Batch [60-80]	Speed: 40940.38 samples/sec	accuracy=nan
2023-03-21 11:35:24,494 Node[0] Epoch[10] Batch [80-100]	Speed: 40979.05 samples/sec	accuracy=nan
2023-03-21 11:35:26,085 Node[0] Epoch[10] Batch [100-120]	Speed: 41027.53 samples/sec	accuracy=nan
2023-03-21 11:35:27,678 Node[0] Epoch[10] Batch [120-140]	Speed: 40993.16 samples/sec	accuracy=nan
2023-03-21 11:35:29,272 Node[0] Epoch[10] Batch [140-160]	Speed: 40936.74 samples/sec	accuracy=nan
2023-03-21 11:35:30,865 Node[0] Epoch[10] Batch [160-180]	Speed: 40975.61 samples/sec	accuracy=nan
2023-03-21 11:35:32,458 Node[0] Epoch[10] Batch [180-200]	Speed: 40984.08 samples/sec	accuracy=nan
2023-03-21 11:35:34,048 Node[0] Epoch[10] Batch [200-220]	Speed: 41070.31 samples/sec	accuracy=nan
2023-03-21 11:35:35,645 Node[0] Epoch[10] Batch [220-240]	Speed: 40862.80 samples/sec	accuracy=nan
2023-03-21 11:35:37,238 Node[0] Epoch[10] Batch [240-260]	Speed: 40982.40 samples/sec	accuracy=nan
2023-03-21 11:35:38,828 Node[0] Epoch[10] Batch [260-280]	Speed: 41049.62 samples/sec	accuracy=nan
2023-03-21 11:35:40,426 Node[0] Epoch[10] Batch [280-300]	Speed: 40875.00 samples/sec	accuracy=nan
2023-03-21 11:35:42,017 Node[0] Epoch[10] Batch [300-320]	Speed: 41017.51 samples/sec	accuracy=nan
2023-03-21 11:35:43,611 Node[0] Epoch[10] Batch [320-340]	Speed: 40947.75 samples/sec	accuracy=nan
2023-03-21 11:35:45,203 Node[0] Epoch[10] Batch [340-360]	Speed: 41007.01 samples/sec	accuracy=nan
2023-03-21 11:35:46,797 Node[0] Epoch[10] Batch [360-380]	Speed: 40965.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416547671, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 11:35:47,672 Node[0] Epoch[10] Time cost=31.230
:::MLLOG {"namespace": "", "time_ms": 1679416547672, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41023.871864896035}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679416547747, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 11:35:48,534 Node[0] Epoch[10] Validation-accuracy=0.537600
2023-03-21 11:35:48,535 Node[0] Epoch[10] Validation-correct-count=1680.000000
2023-03-21 11:35:48,535 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679416548580, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-21 11:35:48,580 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416548580, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53866, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 11:35:48,580 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416548580, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 11:35:48,580 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416548580, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 11:35:48,580 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:48,580 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416548581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 11:35:48,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:35:50,188 Node[0] Epoch[11] Batch [0-20]	Speed: 41428.78 samples/sec	accuracy=nan
2023-03-21 11:35:51,782 Node[0] Epoch[11] Batch [20-40]	Speed: 40946.06 samples/sec	accuracy=nan
2023-03-21 11:35:53,373 Node[0] Epoch[11] Batch [40-60]	Speed: 41032.97 samples/sec	accuracy=nan
2023-03-21 11:35:54,967 Node[0] Epoch[11] Batch [60-80]	Speed: 40947.01 samples/sec	accuracy=nan
2023-03-21 11:35:56,561 Node[0] Epoch[11] Batch [80-100]	Speed: 40964.28 samples/sec	accuracy=nan
2023-03-21 11:35:58,155 Node[0] Epoch[11] Batch [100-120]	Speed: 40937.65 samples/sec	accuracy=nan
2023-03-21 11:35:59,746 Node[0] Epoch[11] Batch [120-140]	Speed: 41054.61 samples/sec	accuracy=nan
2023-03-21 11:36:01,340 Node[0] Epoch[11] Batch [140-160]	Speed: 40949.67 samples/sec	accuracy=nan
2023-03-21 11:36:02,932 Node[0] Epoch[11] Batch [160-180]	Speed: 40997.25 samples/sec	accuracy=nan
2023-03-21 11:36:04,526 Node[0] Epoch[11] Batch [180-200]	Speed: 40968.69 samples/sec	accuracy=nan
2023-03-21 11:36:06,118 Node[0] Epoch[11] Batch [200-220]	Speed: 40992.09 samples/sec	accuracy=nan
2023-03-21 11:36:07,711 Node[0] Epoch[11] Batch [220-240]	Speed: 40987.96 samples/sec	accuracy=nan
2023-03-21 11:36:09,308 Node[0] Epoch[11] Batch [240-260]	Speed: 40867.40 samples/sec	accuracy=nan
2023-03-21 11:36:10,901 Node[0] Epoch[11] Batch [260-280]	Speed: 40966.22 samples/sec	accuracy=nan
2023-03-21 11:36:12,492 Node[0] Epoch[11] Batch [280-300]	Speed: 41039.26 samples/sec	accuracy=nan
2023-03-21 11:36:14,086 Node[0] Epoch[11] Batch [300-320]	Speed: 40951.56 samples/sec	accuracy=nan
2023-03-21 11:36:15,679 Node[0] Epoch[11] Batch [320-340]	Speed: 40978.63 samples/sec	accuracy=nan
2023-03-21 11:36:17,273 Node[0] Epoch[11] Batch [340-360]	Speed: 40953.05 samples/sec	accuracy=nan
2023-03-21 11:36:18,864 Node[0] Epoch[11] Batch [360-380]	Speed: 41050.30 samples/sec	accuracy=nan
2023-03-21 11:36:19,821 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416579821, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 11:36:19,821 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,821 Node[0] Epoch[11] Time cost=31.241
:::MLLOG {"namespace": "", "time_ms": 1679416579822, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41009.605706906535}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 11:36:19,821 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416579822, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 11:36:19,822 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,822 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:19,822 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:21,494 Node[0] Epoch[12] Batch [0-20]	Speed: 40982.40 samples/sec	accuracy=nan
2023-03-21 11:36:23,088 Node[0] Epoch[12] Batch [20-40]	Speed: 40974.55 samples/sec	accuracy=nan
2023-03-21 11:36:24,686 Node[0] Epoch[12] Batch [40-60]	Speed: 40842.26 samples/sec	accuracy=nan
2023-03-21 11:36:26,277 Node[0] Epoch[12] Batch [60-80]	Speed: 41021.67 samples/sec	accuracy=nan
2023-03-21 11:36:27,869 Node[0] Epoch[12] Batch [80-100]	Speed: 41025.67 samples/sec	accuracy=nan
2023-03-21 11:36:29,460 Node[0] Epoch[12] Batch [100-120]	Speed: 41009.02 samples/sec	accuracy=nan
2023-03-21 11:36:31,056 Node[0] Epoch[12] Batch [120-140]	Speed: 40921.26 samples/sec	accuracy=nan
2023-03-21 11:36:32,645 Node[0] Epoch[12] Batch [140-160]	Speed: 41077.55 samples/sec	accuracy=nan
2023-03-21 11:36:34,238 Node[0] Epoch[12] Batch [160-180]	Speed: 40972.77 samples/sec	accuracy=nan
2023-03-21 11:36:35,833 Node[0] Epoch[12] Batch [180-200]	Speed: 40931.26 samples/sec	accuracy=nan
2023-03-21 11:36:37,428 Node[0] Epoch[12] Batch [200-220]	Speed: 40925.70 samples/sec	accuracy=nan
2023-03-21 11:36:39,020 Node[0] Epoch[12] Batch [220-240]	Speed: 41014.47 samples/sec	accuracy=nan
2023-03-21 11:36:40,611 Node[0] Epoch[12] Batch [240-260]	Speed: 41037.03 samples/sec	accuracy=nan
2023-03-21 11:36:42,206 Node[0] Epoch[12] Batch [260-280]	Speed: 40917.43 samples/sec	accuracy=nan
2023-03-21 11:36:43,804 Node[0] Epoch[12] Batch [280-300]	Speed: 40851.40 samples/sec	accuracy=nan
2023-03-21 11:36:45,395 Node[0] Epoch[12] Batch [300-320]	Speed: 41032.92 samples/sec	accuracy=nan
2023-03-21 11:36:46,989 Node[0] Epoch[12] Batch [320-340]	Speed: 40947.60 samples/sec	accuracy=nan
2023-03-21 11:36:48,581 Node[0] Epoch[12] Batch [340-360]	Speed: 41016.13 samples/sec	accuracy=nan
2023-03-21 11:36:50,172 Node[0] Epoch[12] Batch [360-380]	Speed: 41027.46 samples/sec	accuracy=nan
2023-03-21 11:36:51,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,046 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416611046, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 11:36:51,047 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:51,047 Node[0] Epoch[12] Time cost=31.225
:::MLLOG {"namespace": "", "time_ms": 1679416611047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41030.11813412786}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679416611047, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 11:36:51,048 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:36:52,718 Node[0] Epoch[13] Batch [0-20]	Speed: 41100.46 samples/sec	accuracy=nan
2023-03-21 11:36:54,309 Node[0] Epoch[13] Batch [20-40]	Speed: 41036.07 samples/sec	accuracy=nan
2023-03-21 11:36:55,903 Node[0] Epoch[13] Batch [40-60]	Speed: 40954.90 samples/sec	accuracy=nan
2023-03-21 11:36:57,500 Node[0] Epoch[13] Batch [60-80]	Speed: 40884.62 samples/sec	accuracy=nan
2023-03-21 11:36:59,091 Node[0] Epoch[13] Batch [80-100]	Speed: 41023.59 samples/sec	accuracy=nan
2023-03-21 11:37:00,684 Node[0] Epoch[13] Batch [100-120]	Speed: 40978.14 samples/sec	accuracy=nan
2023-03-21 11:37:02,276 Node[0] Epoch[13] Batch [120-140]	Speed: 41014.88 samples/sec	accuracy=nan
2023-03-21 11:37:03,870 Node[0] Epoch[13] Batch [140-160]	Speed: 40940.78 samples/sec	accuracy=nan
2023-03-21 11:37:05,463 Node[0] Epoch[13] Batch [160-180]	Speed: 40987.22 samples/sec	accuracy=nan
2023-03-21 11:37:07,058 Node[0] Epoch[13] Batch [180-200]	Speed: 40930.28 samples/sec	accuracy=nan
2023-03-21 11:37:08,652 Node[0] Epoch[13] Batch [200-220]	Speed: 40947.40 samples/sec	accuracy=nan
2023-03-21 11:37:10,248 Node[0] Epoch[13] Batch [220-240]	Speed: 40893.29 samples/sec	accuracy=nan
2023-03-21 11:37:11,840 Node[0] Epoch[13] Batch [240-260]	Speed: 41016.54 samples/sec	accuracy=nan
2023-03-21 11:37:13,432 Node[0] Epoch[13] Batch [260-280]	Speed: 41007.46 samples/sec	accuracy=nan
2023-03-21 11:37:15,024 Node[0] Epoch[13] Batch [280-300]	Speed: 40989.35 samples/sec	accuracy=nan
2023-03-21 11:37:16,619 Node[0] Epoch[13] Batch [300-320]	Speed: 40948.25 samples/sec	accuracy=nan
2023-03-21 11:37:18,212 Node[0] Epoch[13] Batch [320-340]	Speed: 40978.25 samples/sec	accuracy=nan
2023-03-21 11:37:19,804 Node[0] Epoch[13] Batch [340-360]	Speed: 40982.20 samples/sec	accuracy=nan
2023-03-21 11:37:21,399 Node[0] Epoch[13] Batch [360-380]	Speed: 40935.58 samples/sec	accuracy=nan
2023-03-21 11:37:22,355 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416642355, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 11:37:22,355 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:22,355 Node[0] Epoch[13] Time cost=31.308
2023-03-21 11:37:22,355 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416642356, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40921.6714398657}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-21 11:37:22,356 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416642356, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 11:37:22,356 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:24,029 Node[0] Epoch[14] Batch [0-20]	Speed: 41021.00 samples/sec	accuracy=nan
2023-03-21 11:37:25,619 Node[0] Epoch[14] Batch [20-40]	Speed: 41055.99 samples/sec	accuracy=nan
2023-03-21 11:37:27,213 Node[0] Epoch[14] Batch [40-60]	Speed: 40932.89 samples/sec	accuracy=nan
2023-03-21 11:37:28,805 Node[0] Epoch[14] Batch [60-80]	Speed: 41023.27 samples/sec	accuracy=nan
2023-03-21 11:37:30,401 Node[0] Epoch[14] Batch [80-100]	Speed: 40898.00 samples/sec	accuracy=nan
2023-03-21 11:37:31,995 Node[0] Epoch[14] Batch [100-120]	Speed: 40957.41 samples/sec	accuracy=nan
2023-03-21 11:37:33,589 Node[0] Epoch[14] Batch [120-140]	Speed: 40946.29 samples/sec	accuracy=nan
2023-03-21 11:37:35,183 Node[0] Epoch[14] Batch [140-160]	Speed: 40952.12 samples/sec	accuracy=nan
2023-03-21 11:37:36,777 Node[0] Epoch[14] Batch [160-180]	Speed: 40953.89 samples/sec	accuracy=nan
2023-03-21 11:37:38,375 Node[0] Epoch[14] Batch [180-200]	Speed: 40862.59 samples/sec	accuracy=nan
2023-03-21 11:37:39,969 Node[0] Epoch[14] Batch [200-220]	Speed: 40932.61 samples/sec	accuracy=nan
2023-03-21 11:37:41,563 Node[0] Epoch[14] Batch [220-240]	Speed: 40972.18 samples/sec	accuracy=nan
2023-03-21 11:37:43,154 Node[0] Epoch[14] Batch [240-260]	Speed: 41012.19 samples/sec	accuracy=nan
2023-03-21 11:37:44,748 Node[0] Epoch[14] Batch [260-280]	Speed: 40953.13 samples/sec	accuracy=nan
2023-03-21 11:37:46,341 Node[0] Epoch[14] Batch [280-300]	Speed: 40994.70 samples/sec	accuracy=nan
2023-03-21 11:37:47,933 Node[0] Epoch[14] Batch [300-320]	Speed: 40995.48 samples/sec	accuracy=nan
2023-03-21 11:37:49,526 Node[0] Epoch[14] Batch [320-340]	Speed: 40994.32 samples/sec	accuracy=nan
2023-03-21 11:37:51,119 Node[0] Epoch[14] Batch [340-360]	Speed: 40969.90 samples/sec	accuracy=nan
2023-03-21 11:37:52,716 Node[0] Epoch[14] Batch [360-380]	Speed: 40883.71 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416673593, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 11:37:53,594 Node[0] Epoch[14] Time cost=31.238
:::MLLOG {"namespace": "", "time_ms": 1679416673594, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41012.854614038224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679416673669, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 11:37:54,385 Node[0] Epoch[14] Validation-accuracy=0.588800
2023-03-21 11:37:54,385 Node[0] Epoch[14] Validation-correct-count=1840.000000
2023-03-21 11:37:54,385 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679416674503, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679416674503, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5989, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679416674504, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 11:37:54,504 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416674504, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 11:37:54,504 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,503 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,503 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416674504, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 11:37:54,504 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:54,504 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:37:56,109 Node[0] Epoch[15] Batch [0-20]	Speed: 40922.41 samples/sec	accuracy=nan
2023-03-21 11:37:57,700 Node[0] Epoch[15] Batch [20-40]	Speed: 41033.82 samples/sec	accuracy=nan
2023-03-21 11:37:59,290 Node[0] Epoch[15] Batch [40-60]	Speed: 41067.47 samples/sec	accuracy=nan
2023-03-21 11:38:00,882 Node[0] Epoch[15] Batch [60-80]	Speed: 41008.65 samples/sec	accuracy=nan
2023-03-21 11:38:02,474 Node[0] Epoch[15] Batch [80-100]	Speed: 40989.23 samples/sec	accuracy=nan
2023-03-21 11:38:04,069 Node[0] Epoch[15] Batch [100-120]	Speed: 40934.73 samples/sec	accuracy=nan
2023-03-21 11:38:05,664 Node[0] Epoch[15] Batch [120-140]	Speed: 40932.41 samples/sec	accuracy=nan
2023-03-21 11:38:07,255 Node[0] Epoch[15] Batch [140-160]	Speed: 41019.01 samples/sec	accuracy=nan
2023-03-21 11:38:08,851 Node[0] Epoch[15] Batch [160-180]	Speed: 40917.58 samples/sec	accuracy=nan
2023-03-21 11:38:10,444 Node[0] Epoch[15] Batch [180-200]	Speed: 40972.26 samples/sec	accuracy=nan
2023-03-21 11:38:12,038 Node[0] Epoch[15] Batch [200-220]	Speed: 40951.02 samples/sec	accuracy=nan
2023-03-21 11:38:13,630 Node[0] Epoch[15] Batch [220-240]	Speed: 41012.45 samples/sec	accuracy=nan
2023-03-21 11:38:15,224 Node[0] Epoch[15] Batch [240-260]	Speed: 40946.47 samples/sec	accuracy=nan
2023-03-21 11:38:16,819 Node[0] Epoch[15] Batch [260-280]	Speed: 40922.66 samples/sec	accuracy=nan
2023-03-21 11:38:18,412 Node[0] Epoch[15] Batch [280-300]	Speed: 40992.19 samples/sec	accuracy=nan
2023-03-21 11:38:20,003 Node[0] Epoch[15] Batch [300-320]	Speed: 41022.01 samples/sec	accuracy=nan
2023-03-21 11:38:21,600 Node[0] Epoch[15] Batch [320-340]	Speed: 40888.16 samples/sec	accuracy=nan
2023-03-21 11:38:23,191 Node[0] Epoch[15] Batch [340-360]	Speed: 41012.67 samples/sec	accuracy=nan
2023-03-21 11:38:24,787 Node[0] Epoch[15] Batch [360-380]	Speed: 40913.64 samples/sec	accuracy=nan
2023-03-21 11:38:25,740 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,740 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:25,741 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416705742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 11:38:25,742 Node[0] Epoch[15] Time cost=31.238
:::MLLOG {"namespace": "", "time_ms": 1679416705742, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41012.77635878002}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679416705743, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 11:38:25,743 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:27,414 Node[0] Epoch[16] Batch [0-20]	Speed: 41004.05 samples/sec	accuracy=nan
2023-03-21 11:38:29,005 Node[0] Epoch[16] Batch [20-40]	Speed: 41033.07 samples/sec	accuracy=nan
2023-03-21 11:38:30,596 Node[0] Epoch[16] Batch [40-60]	Speed: 41022.50 samples/sec	accuracy=nan
2023-03-21 11:38:32,191 Node[0] Epoch[16] Batch [60-80]	Speed: 40936.37 samples/sec	accuracy=nan
2023-03-21 11:38:33,785 Node[0] Epoch[16] Batch [80-100]	Speed: 40948.67 samples/sec	accuracy=nan
2023-03-21 11:38:35,373 Node[0] Epoch[16] Batch [100-120]	Speed: 41111.84 samples/sec	accuracy=nan
2023-03-21 11:38:36,968 Node[0] Epoch[16] Batch [120-140]	Speed: 40911.81 samples/sec	accuracy=nan
2023-03-21 11:38:38,560 Node[0] Epoch[16] Batch [140-160]	Speed: 41015.45 samples/sec	accuracy=nan
2023-03-21 11:38:40,149 Node[0] Epoch[16] Batch [160-180]	Speed: 41077.15 samples/sec	accuracy=nan
2023-03-21 11:38:41,745 Node[0] Epoch[16] Batch [180-200]	Speed: 40898.69 samples/sec	accuracy=nan
2023-03-21 11:38:43,339 Node[0] Epoch[16] Batch [200-220]	Speed: 40969.75 samples/sec	accuracy=nan
2023-03-21 11:38:44,934 Node[0] Epoch[16] Batch [220-240]	Speed: 40924.32 samples/sec	accuracy=nan
2023-03-21 11:38:46,526 Node[0] Epoch[16] Batch [240-260]	Speed: 40993.70 samples/sec	accuracy=nan
2023-03-21 11:38:48,118 Node[0] Epoch[16] Batch [260-280]	Speed: 41013.98 samples/sec	accuracy=nan
2023-03-21 11:38:49,710 Node[0] Epoch[16] Batch [280-300]	Speed: 41001.52 samples/sec	accuracy=nan
2023-03-21 11:38:51,303 Node[0] Epoch[16] Batch [300-320]	Speed: 40987.79 samples/sec	accuracy=nan
2023-03-21 11:38:52,891 Node[0] Epoch[16] Batch [320-340]	Speed: 41096.14 samples/sec	accuracy=nan
2023-03-21 11:38:54,482 Node[0] Epoch[16] Batch [340-360]	Speed: 41024.39 samples/sec	accuracy=nan
2023-03-21 11:38:56,076 Node[0] Epoch[16] Batch [360-380]	Speed: 40948.35 samples/sec	accuracy=nan
2023-03-21 11:38:56,950 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,950 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416736950, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 11:38:56,951 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,951 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:56,951 Node[0] Epoch[16] Time cost=31.208
2023-03-21 11:38:56,951 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416736952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41051.89015809833}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679416736952, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 11:38:56,952 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:38:58,626 Node[0] Epoch[17] Batch [0-20]	Speed: 40992.48 samples/sec	accuracy=nan
2023-03-21 11:39:00,218 Node[0] Epoch[17] Batch [20-40]	Speed: 41009.71 samples/sec	accuracy=nan
2023-03-21 11:39:01,818 Node[0] Epoch[17] Batch [40-60]	Speed: 40799.97 samples/sec	accuracy=nan
2023-03-21 11:39:03,410 Node[0] Epoch[17] Batch [60-80]	Speed: 40993.15 samples/sec	accuracy=nan
2023-03-21 11:39:05,003 Node[0] Epoch[17] Batch [80-100]	Speed: 40991.22 samples/sec	accuracy=nan
2023-03-21 11:39:06,599 Node[0] Epoch[17] Batch [100-120]	Speed: 40897.55 samples/sec	accuracy=nan
2023-03-21 11:39:08,190 Node[0] Epoch[17] Batch [120-140]	Speed: 41030.34 samples/sec	accuracy=nan
2023-03-21 11:39:09,784 Node[0] Epoch[17] Batch [140-160]	Speed: 40960.99 samples/sec	accuracy=nan
2023-03-21 11:39:11,375 Node[0] Epoch[17] Batch [160-180]	Speed: 41030.00 samples/sec	accuracy=nan
2023-03-21 11:39:12,970 Node[0] Epoch[17] Batch [180-200]	Speed: 40939.13 samples/sec	accuracy=nan
2023-03-21 11:39:14,563 Node[0] Epoch[17] Batch [200-220]	Speed: 40956.35 samples/sec	accuracy=nan
2023-03-21 11:39:16,156 Node[0] Epoch[17] Batch [220-240]	Speed: 40991.73 samples/sec	accuracy=nan
2023-03-21 11:39:17,748 Node[0] Epoch[17] Batch [240-260]	Speed: 40995.83 samples/sec	accuracy=nan
2023-03-21 11:39:19,337 Node[0] Epoch[17] Batch [260-280]	Speed: 41084.77 samples/sec	accuracy=nan
2023-03-21 11:39:20,930 Node[0] Epoch[17] Batch [280-300]	Speed: 40985.96 samples/sec	accuracy=nan
2023-03-21 11:39:22,521 Node[0] Epoch[17] Batch [300-320]	Speed: 41028.57 samples/sec	accuracy=nan
2023-03-21 11:39:24,117 Node[0] Epoch[17] Batch [320-340]	Speed: 40892.90 samples/sec	accuracy=nan
2023-03-21 11:39:25,711 Node[0] Epoch[17] Batch [340-360]	Speed: 40965.81 samples/sec	accuracy=nan
2023-03-21 11:39:27,307 Node[0] Epoch[17] Batch [360-380]	Speed: 40902.18 samples/sec	accuracy=nan
2023-03-21 11:39:28,262 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416768262, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 11:39:28,262 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,262 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:28,263 Node[0] Epoch[17] Time cost=31.311
:::MLLOG {"namespace": "", "time_ms": 1679416768263, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40917.98486203173}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-21 11:39:28,263 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416768263, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 11:39:28,263 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:39:29,935 Node[0] Epoch[18] Batch [0-20]	Speed: 40992.75 samples/sec	accuracy=nan
2023-03-21 11:39:31,528 Node[0] Epoch[18] Batch [20-40]	Speed: 40979.99 samples/sec	accuracy=nan
2023-03-21 11:39:33,121 Node[0] Epoch[18] Batch [40-60]	Speed: 40965.40 samples/sec	accuracy=nan
2023-03-21 11:39:34,710 Node[0] Epoch[18] Batch [60-80]	Speed: 41080.85 samples/sec	accuracy=nan
2023-03-21 11:39:36,303 Node[0] Epoch[18] Batch [80-100]	Speed: 40995.20 samples/sec	accuracy=nan
2023-03-21 11:39:37,895 Node[0] Epoch[18] Batch [100-120]	Speed: 41008.44 samples/sec	accuracy=nan
2023-03-21 11:39:39,485 Node[0] Epoch[18] Batch [120-140]	Speed: 41033.32 samples/sec	accuracy=nan
2023-03-21 11:39:41,076 Node[0] Epoch[18] Batch [140-160]	Speed: 41040.73 samples/sec	accuracy=nan
2023-03-21 11:39:42,669 Node[0] Epoch[18] Batch [160-180]	Speed: 40991.48 samples/sec	accuracy=nan
2023-03-21 11:39:44,259 Node[0] Epoch[18] Batch [180-200]	Speed: 41053.84 samples/sec	accuracy=nan
2023-03-21 11:39:45,849 Node[0] Epoch[18] Batch [200-220]	Speed: 41045.70 samples/sec	accuracy=nan
2023-03-21 11:39:47,442 Node[0] Epoch[18] Batch [220-240]	Speed: 40986.84 samples/sec	accuracy=nan
2023-03-21 11:39:49,035 Node[0] Epoch[18] Batch [240-260]	Speed: 40978.73 samples/sec	accuracy=nan
2023-03-21 11:39:50,626 Node[0] Epoch[18] Batch [260-280]	Speed: 41027.08 samples/sec	accuracy=nan
2023-03-21 11:39:52,221 Node[0] Epoch[18] Batch [280-300]	Speed: 40935.55 samples/sec	accuracy=nan
2023-03-21 11:39:53,814 Node[0] Epoch[18] Batch [300-320]	Speed: 40967.29 samples/sec	accuracy=nan
2023-03-21 11:39:55,405 Node[0] Epoch[18] Batch [320-340]	Speed: 41025.55 samples/sec	accuracy=nan
2023-03-21 11:39:56,997 Node[0] Epoch[18] Batch [340-360]	Speed: 41016.32 samples/sec	accuracy=nan
2023-03-21 11:39:58,591 Node[0] Epoch[18] Batch [360-380]	Speed: 40945.62 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416799467, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 11:39:59,468 Node[0] Epoch[18] Time cost=31.205
:::MLLOG {"namespace": "", "time_ms": 1679416799468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41056.45317661051}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679416799543, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 11:40:00,260 Node[0] Epoch[18] Validation-accuracy=0.643840
2023-03-21 11:40:00,260 Node[0] Epoch[18] Validation-correct-count=2012.000000
2023-03-21 11:40:00,260 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679416800377, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679416800377, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64656, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679416800377, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 11:40:00,377 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416800378, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 11:40:00,377 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,377 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416800378, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 11:40:00,378 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:00,378 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:01,980 Node[0] Epoch[19] Batch [0-20]	Speed: 40951.17 samples/sec	accuracy=nan
2023-03-21 11:40:03,577 Node[0] Epoch[19] Batch [20-40]	Speed: 40882.32 samples/sec	accuracy=nan
2023-03-21 11:40:05,169 Node[0] Epoch[19] Batch [40-60]	Speed: 40996.87 samples/sec	accuracy=nan
2023-03-21 11:40:06,766 Node[0] Epoch[19] Batch [60-80]	Speed: 40892.73 samples/sec	accuracy=nan
2023-03-21 11:40:08,359 Node[0] Epoch[19] Batch [80-100]	Speed: 40960.74 samples/sec	accuracy=nan
2023-03-21 11:40:09,949 Node[0] Epoch[19] Batch [100-120]	Speed: 41058.47 samples/sec	accuracy=nan
2023-03-21 11:40:11,542 Node[0] Epoch[19] Batch [120-140]	Speed: 41000.40 samples/sec	accuracy=nan
2023-03-21 11:40:13,132 Node[0] Epoch[19] Batch [140-160]	Speed: 41046.51 samples/sec	accuracy=nan
2023-03-21 11:40:14,722 Node[0] Epoch[19] Batch [160-180]	Speed: 41049.15 samples/sec	accuracy=nan
2023-03-21 11:40:16,314 Node[0] Epoch[19] Batch [180-200]	Speed: 41000.51 samples/sec	accuracy=nan
2023-03-21 11:40:17,908 Node[0] Epoch[19] Batch [200-220]	Speed: 40955.23 samples/sec	accuracy=nan
2023-03-21 11:40:19,503 Node[0] Epoch[19] Batch [220-240]	Speed: 40932.85 samples/sec	accuracy=nan
2023-03-21 11:40:21,094 Node[0] Epoch[19] Batch [240-260]	Speed: 41029.45 samples/sec	accuracy=nan
2023-03-21 11:40:22,692 Node[0] Epoch[19] Batch [260-280]	Speed: 40862.59 samples/sec	accuracy=nan
2023-03-21 11:40:24,285 Node[0] Epoch[19] Batch [280-300]	Speed: 40960.95 samples/sec	accuracy=nan
2023-03-21 11:40:25,880 Node[0] Epoch[19] Batch [300-320]	Speed: 40952.75 samples/sec	accuracy=nan
2023-03-21 11:40:27,476 Node[0] Epoch[19] Batch [320-340]	Speed: 40888.47 samples/sec	accuracy=nan
2023-03-21 11:40:29,071 Node[0] Epoch[19] Batch [340-360]	Speed: 40918.17 samples/sec	accuracy=nan
2023-03-21 11:40:30,663 Node[0] Epoch[19] Batch [360-380]	Speed: 41014.85 samples/sec	accuracy=nan
2023-03-21 11:40:31,617 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,617 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,618 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416831617, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 11:40:31,619 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:31,619 Node[0] Epoch[19] Time cost=31.241
:::MLLOG {"namespace": "", "time_ms": 1679416831619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41009.120293019936}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679416831620, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 11:40:31,620 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:40:33,293 Node[0] Epoch[20] Batch [0-20]	Speed: 40938.02 samples/sec	accuracy=nan
2023-03-21 11:40:34,888 Node[0] Epoch[20] Batch [20-40]	Speed: 40933.90 samples/sec	accuracy=nan
2023-03-21 11:40:36,483 Node[0] Epoch[20] Batch [40-60]	Speed: 40929.64 samples/sec	accuracy=nan
2023-03-21 11:40:38,075 Node[0] Epoch[20] Batch [60-80]	Speed: 41000.92 samples/sec	accuracy=nan
2023-03-21 11:40:39,668 Node[0] Epoch[20] Batch [80-100]	Speed: 40971.63 samples/sec	accuracy=nan
2023-03-21 11:40:41,261 Node[0] Epoch[20] Batch [100-120]	Speed: 40994.61 samples/sec	accuracy=nan
2023-03-21 11:40:42,854 Node[0] Epoch[20] Batch [120-140]	Speed: 40968.90 samples/sec	accuracy=nan
2023-03-21 11:40:44,450 Node[0] Epoch[20] Batch [140-160]	Speed: 40890.16 samples/sec	accuracy=nan
2023-03-21 11:40:46,041 Node[0] Epoch[20] Batch [160-180]	Speed: 41035.97 samples/sec	accuracy=nan
2023-03-21 11:40:47,636 Node[0] Epoch[20] Batch [180-200]	Speed: 40936.89 samples/sec	accuracy=nan
2023-03-21 11:40:49,230 Node[0] Epoch[20] Batch [200-220]	Speed: 40946.14 samples/sec	accuracy=nan
2023-03-21 11:40:50,825 Node[0] Epoch[20] Batch [220-240]	Speed: 40928.51 samples/sec	accuracy=nan
2023-03-21 11:40:52,420 Node[0] Epoch[20] Batch [240-260]	Speed: 40945.26 samples/sec	accuracy=nan
2023-03-21 11:40:54,011 Node[0] Epoch[20] Batch [260-280]	Speed: 41013.65 samples/sec	accuracy=nan
2023-03-21 11:40:55,604 Node[0] Epoch[20] Batch [280-300]	Speed: 40991.95 samples/sec	accuracy=nan
2023-03-21 11:40:57,197 Node[0] Epoch[20] Batch [300-320]	Speed: 40965.84 samples/sec	accuracy=nan
2023-03-21 11:40:58,791 Node[0] Epoch[20] Batch [320-340]	Speed: 40947.29 samples/sec	accuracy=nan
2023-03-21 11:41:00,387 Node[0] Epoch[20] Batch [340-360]	Speed: 40905.97 samples/sec	accuracy=nan
2023-03-21 11:41:01,982 Node[0] Epoch[20] Batch [360-380]	Speed: 40943.85 samples/sec	accuracy=nan
2023-03-21 11:41:02,856 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,856 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,857 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416862856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 11:41:02,857 Node[0] Epoch[20] Time cost=31.238
:::MLLOG {"namespace": "", "time_ms": 1679416862857, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41013.42745162211}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679416862858, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 11:41:02,858 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:02,858 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:04,529 Node[0] Epoch[21] Batch [0-20]	Speed: 41065.95 samples/sec	accuracy=nan
2023-03-21 11:41:06,119 Node[0] Epoch[21] Batch [20-40]	Speed: 41056.44 samples/sec	accuracy=nan
2023-03-21 11:41:07,711 Node[0] Epoch[21] Batch [40-60]	Speed: 40994.65 samples/sec	accuracy=nan
2023-03-21 11:41:09,305 Node[0] Epoch[21] Batch [60-80]	Speed: 40972.85 samples/sec	accuracy=nan
2023-03-21 11:41:10,896 Node[0] Epoch[21] Batch [80-100]	Speed: 41011.41 samples/sec	accuracy=nan
2023-03-21 11:41:12,490 Node[0] Epoch[21] Batch [100-120]	Speed: 40962.40 samples/sec	accuracy=nan
2023-03-21 11:41:14,083 Node[0] Epoch[21] Batch [120-140]	Speed: 40974.50 samples/sec	accuracy=nan
2023-03-21 11:41:15,677 Node[0] Epoch[21] Batch [140-160]	Speed: 40948.07 samples/sec	accuracy=nan
2023-03-21 11:41:17,271 Node[0] Epoch[21] Batch [160-180]	Speed: 40962.41 samples/sec	accuracy=nan
2023-03-21 11:41:18,866 Node[0] Epoch[21] Batch [180-200]	Speed: 40923.05 samples/sec	accuracy=nan
2023-03-21 11:41:20,457 Node[0] Epoch[21] Batch [200-220]	Speed: 41044.04 samples/sec	accuracy=nan
2023-03-21 11:41:22,049 Node[0] Epoch[21] Batch [220-240]	Speed: 40996.91 samples/sec	accuracy=nan
2023-03-21 11:41:23,644 Node[0] Epoch[21] Batch [240-260]	Speed: 40935.06 samples/sec	accuracy=nan
2023-03-21 11:41:25,236 Node[0] Epoch[21] Batch [260-280]	Speed: 41009.33 samples/sec	accuracy=nan
2023-03-21 11:41:26,827 Node[0] Epoch[21] Batch [280-300]	Speed: 41023.77 samples/sec	accuracy=nan
2023-03-21 11:41:28,419 Node[0] Epoch[21] Batch [300-320]	Speed: 41009.45 samples/sec	accuracy=nan
2023-03-21 11:41:30,016 Node[0] Epoch[21] Batch [320-340]	Speed: 40871.33 samples/sec	accuracy=nan
2023-03-21 11:41:31,609 Node[0] Epoch[21] Batch [340-360]	Speed: 40975.16 samples/sec	accuracy=nan
2023-03-21 11:41:33,197 Node[0] Epoch[21] Batch [360-380]	Speed: 41099.74 samples/sec	accuracy=nan
2023-03-21 11:41:34,155 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:34,155 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416894155, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 11:41:34,156 Node[0] Epoch[21] Time cost=31.298
:::MLLOG {"namespace": "", "time_ms": 1679416894156, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40934.6459588211}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679416894156, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 11:41:34,157 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:41:35,829 Node[0] Epoch[22] Batch [0-20]	Speed: 40942.97 samples/sec	accuracy=nan
2023-03-21 11:41:37,422 Node[0] Epoch[22] Batch [20-40]	Speed: 41000.33 samples/sec	accuracy=nan
2023-03-21 11:41:39,017 Node[0] Epoch[22] Batch [40-60]	Speed: 40918.43 samples/sec	accuracy=nan
2023-03-21 11:41:40,611 Node[0] Epoch[22] Batch [60-80]	Speed: 40957.07 samples/sec	accuracy=nan
2023-03-21 11:41:42,201 Node[0] Epoch[22] Batch [80-100]	Speed: 41053.97 samples/sec	accuracy=nan
2023-03-21 11:41:43,795 Node[0] Epoch[22] Batch [100-120]	Speed: 40952.16 samples/sec	accuracy=nan
2023-03-21 11:41:45,389 Node[0] Epoch[22] Batch [120-140]	Speed: 40942.32 samples/sec	accuracy=nan
2023-03-21 11:41:46,984 Node[0] Epoch[22] Batch [140-160]	Speed: 40945.51 samples/sec	accuracy=nan
2023-03-21 11:41:48,577 Node[0] Epoch[22] Batch [160-180]	Speed: 40963.13 samples/sec	accuracy=nan
2023-03-21 11:41:50,171 Node[0] Epoch[22] Batch [180-200]	Speed: 40976.16 samples/sec	accuracy=nan
2023-03-21 11:41:51,765 Node[0] Epoch[22] Batch [200-220]	Speed: 40955.55 samples/sec	accuracy=nan
2023-03-21 11:41:53,359 Node[0] Epoch[22] Batch [220-240]	Speed: 40939.12 samples/sec	accuracy=nan
2023-03-21 11:41:54,952 Node[0] Epoch[22] Batch [240-260]	Speed: 40974.17 samples/sec	accuracy=nan
2023-03-21 11:41:56,546 Node[0] Epoch[22] Batch [260-280]	Speed: 40957.02 samples/sec	accuracy=nan
2023-03-21 11:41:58,140 Node[0] Epoch[22] Batch [280-300]	Speed: 40959.63 samples/sec	accuracy=nan
2023-03-21 11:41:59,734 Node[0] Epoch[22] Batch [300-320]	Speed: 40948.73 samples/sec	accuracy=nan
2023-03-21 11:42:01,327 Node[0] Epoch[22] Batch [320-340]	Speed: 40991.75 samples/sec	accuracy=nan
2023-03-21 11:42:02,922 Node[0] Epoch[22] Batch [340-360]	Speed: 40909.51 samples/sec	accuracy=nan
2023-03-21 11:42:04,517 Node[0] Epoch[22] Batch [360-380]	Speed: 40942.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679416925391, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 11:42:05,392 Node[0] Epoch[22] Time cost=31.235
:::MLLOG {"namespace": "", "time_ms": 1679416925392, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41017.068318054866}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679416925467, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 11:42:06,227 Node[0] Epoch[22] Validation-accuracy=0.684800
2023-03-21 11:42:06,227 Node[0] Epoch[22] Validation-correct-count=2140.000000
2023-03-21 11:42:06,227 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679416926296, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-21 11:42:06,296 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,296 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416926297, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69848, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 11:42:06,297 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416926297, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-21 11:42:06,296 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,296 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416926297, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 11:42:06,297 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:06,297 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416926297, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 11:42:06,297 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:07,902 Node[0] Epoch[23] Batch [0-20]	Speed: 40889.92 samples/sec	accuracy=nan
2023-03-21 11:42:09,495 Node[0] Epoch[23] Batch [20-40]	Speed: 40974.12 samples/sec	accuracy=nan
2023-03-21 11:42:11,089 Node[0] Epoch[23] Batch [40-60]	Speed: 40950.66 samples/sec	accuracy=nan
2023-03-21 11:42:12,686 Node[0] Epoch[23] Batch [60-80]	Speed: 40885.17 samples/sec	accuracy=nan
2023-03-21 11:42:14,279 Node[0] Epoch[23] Batch [80-100]	Speed: 40979.60 samples/sec	accuracy=nan
2023-03-21 11:42:15,872 Node[0] Epoch[23] Batch [100-120]	Speed: 40969.29 samples/sec	accuracy=nan
2023-03-21 11:42:17,467 Node[0] Epoch[23] Batch [120-140]	Speed: 40942.32 samples/sec	accuracy=nan
2023-03-21 11:42:19,062 Node[0] Epoch[23] Batch [140-160]	Speed: 40910.12 samples/sec	accuracy=nan
2023-03-21 11:42:20,656 Node[0] Epoch[23] Batch [160-180]	Speed: 40978.35 samples/sec	accuracy=nan
2023-03-21 11:42:22,248 Node[0] Epoch[23] Batch [180-200]	Speed: 40998.34 samples/sec	accuracy=nan
2023-03-21 11:42:23,841 Node[0] Epoch[23] Batch [200-220]	Speed: 40979.41 samples/sec	accuracy=nan
2023-03-21 11:42:25,430 Node[0] Epoch[23] Batch [220-240]	Speed: 41068.63 samples/sec	accuracy=nan
2023-03-21 11:42:27,024 Node[0] Epoch[23] Batch [240-260]	Speed: 40950.14 samples/sec	accuracy=nan
2023-03-21 11:42:28,618 Node[0] Epoch[23] Batch [260-280]	Speed: 40955.04 samples/sec	accuracy=nan
2023-03-21 11:42:30,210 Node[0] Epoch[23] Batch [280-300]	Speed: 41015.50 samples/sec	accuracy=nan
2023-03-21 11:42:31,809 Node[0] Epoch[23] Batch [300-320]	Speed: 40817.74 samples/sec	accuracy=nan
2023-03-21 11:42:33,405 Node[0] Epoch[23] Batch [320-340]	Speed: 40907.57 samples/sec	accuracy=nan
2023-03-21 11:42:34,999 Node[0] Epoch[23] Batch [340-360]	Speed: 40958.62 samples/sec	accuracy=nan
2023-03-21 11:42:36,590 Node[0] Epoch[23] Batch [360-380]	Speed: 41019.43 samples/sec	accuracy=nan
2023-03-21 11:42:37,545 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,545 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:37,546 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416957545, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 11:42:37,546 Node[0] Epoch[23] Time cost=31.249
:::MLLOG {"namespace": "", "time_ms": 1679416957546, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40998.76753356205}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679416957547, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 11:42:37,547 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:42:39,222 Node[0] Epoch[24] Batch [0-20]	Speed: 40892.33 samples/sec	accuracy=nan
2023-03-21 11:42:40,817 Node[0] Epoch[24] Batch [20-40]	Speed: 40908.97 samples/sec	accuracy=nan
2023-03-21 11:42:42,412 Node[0] Epoch[24] Batch [40-60]	Speed: 40933.18 samples/sec	accuracy=nan
2023-03-21 11:42:44,006 Node[0] Epoch[24] Batch [60-80]	Speed: 40966.30 samples/sec	accuracy=nan
2023-03-21 11:42:45,599 Node[0] Epoch[24] Batch [80-100]	Speed: 40964.14 samples/sec	accuracy=nan
2023-03-21 11:42:47,196 Node[0] Epoch[24] Batch [100-120]	Speed: 40895.96 samples/sec	accuracy=nan
2023-03-21 11:42:48,789 Node[0] Epoch[24] Batch [120-140]	Speed: 40973.90 samples/sec	accuracy=nan
2023-03-21 11:42:50,384 Node[0] Epoch[24] Batch [140-160]	Speed: 40921.14 samples/sec	accuracy=nan
2023-03-21 11:42:51,978 Node[0] Epoch[24] Batch [160-180]	Speed: 40961.13 samples/sec	accuracy=nan
2023-03-21 11:42:53,571 Node[0] Epoch[24] Batch [180-200]	Speed: 40980.24 samples/sec	accuracy=nan
2023-03-21 11:42:55,164 Node[0] Epoch[24] Batch [200-220]	Speed: 40979.66 samples/sec	accuracy=nan
2023-03-21 11:42:56,757 Node[0] Epoch[24] Batch [220-240]	Speed: 40979.40 samples/sec	accuracy=nan
2023-03-21 11:42:58,351 Node[0] Epoch[24] Batch [240-260]	Speed: 40934.78 samples/sec	accuracy=nan
2023-03-21 11:42:59,943 Node[0] Epoch[24] Batch [260-280]	Speed: 41026.46 samples/sec	accuracy=nan
2023-03-21 11:43:01,533 Node[0] Epoch[24] Batch [280-300]	Speed: 41047.64 samples/sec	accuracy=nan
2023-03-21 11:43:03,128 Node[0] Epoch[24] Batch [300-320]	Speed: 40924.77 samples/sec	accuracy=nan
2023-03-21 11:43:04,724 Node[0] Epoch[24] Batch [320-340]	Speed: 40903.30 samples/sec	accuracy=nan
2023-03-21 11:43:06,321 Node[0] Epoch[24] Batch [340-360]	Speed: 40872.86 samples/sec	accuracy=nan
2023-03-21 11:43:07,913 Node[0] Epoch[24] Batch [360-380]	Speed: 41019.61 samples/sec	accuracy=nan
2023-03-21 11:43:08,789 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,789 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679416988789, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 11:43:08,790 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:08,790 Node[0] Epoch[24] Time cost=31.243
:::MLLOG {"namespace": "", "time_ms": 1679416988790, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41006.32852562408}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679416988791, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 11:43:08,791 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:10,465 Node[0] Epoch[25] Batch [0-20]	Speed: 40987.06 samples/sec	accuracy=nan
2023-03-21 11:43:12,054 Node[0] Epoch[25] Batch [20-40]	Speed: 41095.41 samples/sec	accuracy=nan
2023-03-21 11:43:13,649 Node[0] Epoch[25] Batch [40-60]	Speed: 40917.04 samples/sec	accuracy=nan
2023-03-21 11:43:15,243 Node[0] Epoch[25] Batch [60-80]	Speed: 40960.61 samples/sec	accuracy=nan
2023-03-21 11:43:16,839 Node[0] Epoch[25] Batch [80-100]	Speed: 40907.70 samples/sec	accuracy=nan
2023-03-21 11:43:18,429 Node[0] Epoch[25] Batch [100-120]	Speed: 41045.76 samples/sec	accuracy=nan
2023-03-21 11:43:20,020 Node[0] Epoch[25] Batch [120-140]	Speed: 41050.59 samples/sec	accuracy=nan
2023-03-21 11:43:21,615 Node[0] Epoch[25] Batch [140-160]	Speed: 40915.09 samples/sec	accuracy=nan
2023-03-21 11:43:23,212 Node[0] Epoch[25] Batch [160-180]	Speed: 40880.78 samples/sec	accuracy=nan
2023-03-21 11:43:24,800 Node[0] Epoch[25] Batch [180-200]	Speed: 41091.72 samples/sec	accuracy=nan
2023-03-21 11:43:26,394 Node[0] Epoch[25] Batch [200-220]	Speed: 40968.84 samples/sec	accuracy=nan
2023-03-21 11:43:27,988 Node[0] Epoch[25] Batch [220-240]	Speed: 40943.73 samples/sec	accuracy=nan
2023-03-21 11:43:29,580 Node[0] Epoch[25] Batch [240-260]	Speed: 41022.96 samples/sec	accuracy=nan
2023-03-21 11:43:31,175 Node[0] Epoch[25] Batch [260-280]	Speed: 40918.71 samples/sec	accuracy=nan
2023-03-21 11:43:32,769 Node[0] Epoch[25] Batch [280-300]	Speed: 40954.33 samples/sec	accuracy=nan
2023-03-21 11:43:34,363 Node[0] Epoch[25] Batch [300-320]	Speed: 40943.33 samples/sec	accuracy=nan
2023-03-21 11:43:35,959 Node[0] Epoch[25] Batch [320-340]	Speed: 40914.28 samples/sec	accuracy=nan
2023-03-21 11:43:37,554 Node[0] Epoch[25] Batch [340-360]	Speed: 40924.12 samples/sec	accuracy=nan
2023-03-21 11:43:39,147 Node[0] Epoch[25] Batch [360-380]	Speed: 40987.75 samples/sec	accuracy=nan
2023-03-21 11:43:40,102 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,102 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:40,103 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417020103, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 11:43:40,104 Node[0] Epoch[25] Time cost=31.313
:::MLLOG {"namespace": "", "time_ms": 1679417020104, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40914.965921488336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679417020104, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 11:43:40,104 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:43:41,776 Node[0] Epoch[26] Batch [0-20]	Speed: 40975.54 samples/sec	accuracy=nan
2023-03-21 11:43:43,370 Node[0] Epoch[26] Batch [20-40]	Speed: 40933.60 samples/sec	accuracy=nan
2023-03-21 11:43:44,966 Node[0] Epoch[26] Batch [40-60]	Speed: 40898.84 samples/sec	accuracy=nan
2023-03-21 11:43:46,561 Node[0] Epoch[26] Batch [60-80]	Speed: 40950.28 samples/sec	accuracy=nan
2023-03-21 11:43:48,154 Node[0] Epoch[26] Batch [80-100]	Speed: 40960.46 samples/sec	accuracy=nan
2023-03-21 11:43:49,747 Node[0] Epoch[26] Batch [100-120]	Speed: 40988.25 samples/sec	accuracy=nan
2023-03-21 11:43:51,342 Node[0] Epoch[26] Batch [120-140]	Speed: 40934.91 samples/sec	accuracy=nan
2023-03-21 11:43:52,936 Node[0] Epoch[26] Batch [140-160]	Speed: 40955.94 samples/sec	accuracy=nan
2023-03-21 11:43:54,529 Node[0] Epoch[26] Batch [160-180]	Speed: 40973.13 samples/sec	accuracy=nan
2023-03-21 11:43:56,122 Node[0] Epoch[26] Batch [180-200]	Speed: 40967.37 samples/sec	accuracy=nan
2023-03-21 11:43:57,715 Node[0] Epoch[26] Batch [200-220]	Speed: 40978.94 samples/sec	accuracy=nan
2023-03-21 11:43:59,313 Node[0] Epoch[26] Batch [220-240]	Speed: 40864.47 samples/sec	accuracy=nan
2023-03-21 11:44:00,906 Node[0] Epoch[26] Batch [240-260]	Speed: 40982.14 samples/sec	accuracy=nan
2023-03-21 11:44:02,499 Node[0] Epoch[26] Batch [260-280]	Speed: 40972.74 samples/sec	accuracy=nan
2023-03-21 11:44:04,096 Node[0] Epoch[26] Batch [280-300]	Speed: 40885.49 samples/sec	accuracy=nan
2023-03-21 11:44:05,690 Node[0] Epoch[26] Batch [300-320]	Speed: 40940.51 samples/sec	accuracy=nan
2023-03-21 11:44:07,286 Node[0] Epoch[26] Batch [320-340]	Speed: 40903.53 samples/sec	accuracy=nan
2023-03-21 11:44:08,879 Node[0] Epoch[26] Batch [340-360]	Speed: 40987.60 samples/sec	accuracy=nan
2023-03-21 11:44:10,474 Node[0] Epoch[26] Batch [360-380]	Speed: 40909.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679417051348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 11:44:11,349 Node[0] Epoch[26] Time cost=31.245
:::MLLOG {"namespace": "", "time_ms": 1679417051349, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41004.12880182994}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679417051423, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 11:44:12,136 Node[0] Epoch[26] Validation-accuracy=0.731200
2023-03-21 11:44:12,136 Node[0] Epoch[26] Validation-correct-count=2285.000000
2023-03-21 11:44:12,136 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679417052257, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679417052257, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72806, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 11:44:12,257 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417052257, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679417052257, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 11:44:12,257 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,257 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417052258, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 11:44:12,257 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:12,258 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:13,864 Node[0] Epoch[27] Batch [0-20]	Speed: 40851.35 samples/sec	accuracy=nan
2023-03-21 11:44:15,458 Node[0] Epoch[27] Batch [20-40]	Speed: 40951.46 samples/sec	accuracy=nan
2023-03-21 11:44:17,052 Node[0] Epoch[27] Batch [40-60]	Speed: 40939.67 samples/sec	accuracy=nan
2023-03-21 11:44:18,648 Node[0] Epoch[27] Batch [60-80]	Speed: 40903.55 samples/sec	accuracy=nan
2023-03-21 11:44:20,241 Node[0] Epoch[27] Batch [80-100]	Speed: 40979.70 samples/sec	accuracy=nan
2023-03-21 11:44:21,835 Node[0] Epoch[27] Batch [100-120]	Speed: 40965.64 samples/sec	accuracy=nan
2023-03-21 11:44:23,426 Node[0] Epoch[27] Batch [120-140]	Speed: 41032.12 samples/sec	accuracy=nan
2023-03-21 11:44:25,022 Node[0] Epoch[27] Batch [140-160]	Speed: 40906.70 samples/sec	accuracy=nan
2023-03-21 11:44:26,618 Node[0] Epoch[27] Batch [160-180]	Speed: 40898.96 samples/sec	accuracy=nan
2023-03-21 11:44:28,216 Node[0] Epoch[27] Batch [180-200]	Speed: 40833.92 samples/sec	accuracy=nan
2023-03-21 11:44:29,809 Node[0] Epoch[27] Batch [200-220]	Speed: 40980.92 samples/sec	accuracy=nan
2023-03-21 11:44:31,402 Node[0] Epoch[27] Batch [220-240]	Speed: 40992.91 samples/sec	accuracy=nan
2023-03-21 11:44:33,000 Node[0] Epoch[27] Batch [240-260]	Speed: 40843.66 samples/sec	accuracy=nan
2023-03-21 11:44:34,595 Node[0] Epoch[27] Batch [260-280]	Speed: 40927.21 samples/sec	accuracy=nan
2023-03-21 11:44:36,190 Node[0] Epoch[27] Batch [280-300]	Speed: 40923.54 samples/sec	accuracy=nan
2023-03-21 11:44:37,786 Node[0] Epoch[27] Batch [300-320]	Speed: 40897.59 samples/sec	accuracy=nan
2023-03-21 11:44:39,381 Node[0] Epoch[27] Batch [320-340]	Speed: 40944.26 samples/sec	accuracy=nan
2023-03-21 11:44:40,981 Node[0] Epoch[27] Batch [340-360]	Speed: 40800.29 samples/sec	accuracy=nan
2023-03-21 11:44:42,578 Node[0] Epoch[27] Batch [360-380]	Speed: 40881.34 samples/sec	accuracy=nan
2023-03-21 11:44:43,531 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,532 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,531 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,532 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,532 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,532 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:43,532 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417083532, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 11:44:43,533 Node[0] Epoch[27] Time cost=31.275
:::MLLOG {"namespace": "", "time_ms": 1679417083533, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40964.72055315018}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679417083533, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 11:44:43,533 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:44:45,209 Node[0] Epoch[28] Batch [0-20]	Speed: 40860.93 samples/sec	accuracy=nan
2023-03-21 11:44:46,804 Node[0] Epoch[28] Batch [20-40]	Speed: 40948.67 samples/sec	accuracy=nan
2023-03-21 11:44:48,397 Node[0] Epoch[28] Batch [40-60]	Speed: 40957.43 samples/sec	accuracy=nan
2023-03-21 11:44:49,991 Node[0] Epoch[28] Batch [60-80]	Speed: 40971.86 samples/sec	accuracy=nan
2023-03-21 11:44:51,585 Node[0] Epoch[28] Batch [80-100]	Speed: 40955.75 samples/sec	accuracy=nan
2023-03-21 11:44:53,180 Node[0] Epoch[28] Batch [100-120]	Speed: 40918.43 samples/sec	accuracy=nan
2023-03-21 11:44:54,776 Node[0] Epoch[28] Batch [120-140]	Speed: 40910.76 samples/sec	accuracy=nan
2023-03-21 11:44:56,370 Node[0] Epoch[28] Batch [140-160]	Speed: 40953.41 samples/sec	accuracy=nan
2023-03-21 11:44:57,966 Node[0] Epoch[28] Batch [160-180]	Speed: 40896.36 samples/sec	accuracy=nan
2023-03-21 11:44:59,563 Node[0] Epoch[28] Batch [180-200]	Speed: 40870.66 samples/sec	accuracy=nan
2023-03-21 11:45:01,161 Node[0] Epoch[28] Batch [200-220]	Speed: 40860.11 samples/sec	accuracy=nan
2023-03-21 11:45:02,757 Node[0] Epoch[28] Batch [220-240]	Speed: 40895.18 samples/sec	accuracy=nan
2023-03-21 11:45:04,350 Node[0] Epoch[28] Batch [240-260]	Speed: 40977.84 samples/sec	accuracy=nan
2023-03-21 11:45:05,948 Node[0] Epoch[28] Batch [260-280]	Speed: 40858.68 samples/sec	accuracy=nan
2023-03-21 11:45:07,541 Node[0] Epoch[28] Batch [280-300]	Speed: 40967.89 samples/sec	accuracy=nan
2023-03-21 11:45:09,136 Node[0] Epoch[28] Batch [300-320]	Speed: 40927.11 samples/sec	accuracy=nan
2023-03-21 11:45:10,737 Node[0] Epoch[28] Batch [320-340]	Speed: 40788.67 samples/sec	accuracy=nan
2023-03-21 11:45:12,334 Node[0] Epoch[28] Batch [340-360]	Speed: 40880.93 samples/sec	accuracy=nan
2023-03-21 11:45:13,927 Node[0] Epoch[28] Batch [360-380]	Speed: 40957.96 samples/sec	accuracy=nan
2023-03-21 11:45:14,804 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,804 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417114804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 11:45:14,805 Node[0] Epoch[28] Time cost=31.272
:::MLLOG {"namespace": "", "time_ms": 1679417114805, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40968.96685161165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679417114805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 11:45:14,806 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:14,805 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:16,481 Node[0] Epoch[29] Batch [0-20]	Speed: 40946.05 samples/sec	accuracy=nan
2023-03-21 11:45:18,078 Node[0] Epoch[29] Batch [20-40]	Speed: 40878.77 samples/sec	accuracy=nan
2023-03-21 11:45:19,675 Node[0] Epoch[29] Batch [40-60]	Speed: 40884.34 samples/sec	accuracy=nan
2023-03-21 11:45:21,274 Node[0] Epoch[29] Batch [60-80]	Speed: 40823.34 samples/sec	accuracy=nan
2023-03-21 11:45:22,869 Node[0] Epoch[29] Batch [80-100]	Speed: 40912.29 samples/sec	accuracy=nan
2023-03-21 11:45:24,467 Node[0] Epoch[29] Batch [100-120]	Speed: 40859.84 samples/sec	accuracy=nan
2023-03-21 11:45:26,062 Node[0] Epoch[29] Batch [120-140]	Speed: 40933.74 samples/sec	accuracy=nan
2023-03-21 11:45:27,660 Node[0] Epoch[29] Batch [140-160]	Speed: 40838.24 samples/sec	accuracy=nan
2023-03-21 11:45:29,255 Node[0] Epoch[29] Batch [160-180]	Speed: 40943.52 samples/sec	accuracy=nan
2023-03-21 11:45:30,853 Node[0] Epoch[29] Batch [180-200]	Speed: 40843.38 samples/sec	accuracy=nan
2023-03-21 11:45:32,452 Node[0] Epoch[29] Batch [200-220]	Speed: 40815.10 samples/sec	accuracy=nan
2023-03-21 11:45:34,047 Node[0] Epoch[29] Batch [220-240]	Speed: 40926.27 samples/sec	accuracy=nan
2023-03-21 11:45:35,639 Node[0] Epoch[29] Batch [240-260]	Speed: 41004.63 samples/sec	accuracy=nan
2023-03-21 11:45:37,234 Node[0] Epoch[29] Batch [260-280]	Speed: 40935.38 samples/sec	accuracy=nan
2023-03-21 11:45:38,827 Node[0] Epoch[29] Batch [280-300]	Speed: 40973.25 samples/sec	accuracy=nan
2023-03-21 11:45:40,424 Node[0] Epoch[29] Batch [300-320]	Speed: 40898.84 samples/sec	accuracy=nan
2023-03-21 11:45:42,016 Node[0] Epoch[29] Batch [320-340]	Speed: 41005.20 samples/sec	accuracy=nan
2023-03-21 11:45:43,609 Node[0] Epoch[29] Batch [340-360]	Speed: 40963.92 samples/sec	accuracy=nan
2023-03-21 11:45:45,205 Node[0] Epoch[29] Batch [360-380]	Speed: 40895.04 samples/sec	accuracy=nan
2023-03-21 11:45:46,159 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,159 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,159 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,159 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,159 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,159 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,160 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417146160, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 11:45:46,160 Node[0] Epoch[29] Time cost=31.355
2023-03-21 11:45:46,160 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417146161, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40860.30958466167}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 11:45:46,161 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417146161, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 11:45:46,161 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:46,161 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:45:47,837 Node[0] Epoch[30] Batch [0-20]	Speed: 40901.00 samples/sec	accuracy=nan
2023-03-21 11:45:49,431 Node[0] Epoch[30] Batch [20-40]	Speed: 40939.93 samples/sec	accuracy=nan
2023-03-21 11:45:51,027 Node[0] Epoch[30] Batch [40-60]	Speed: 40904.60 samples/sec	accuracy=nan
2023-03-21 11:45:52,621 Node[0] Epoch[30] Batch [60-80]	Speed: 40944.52 samples/sec	accuracy=nan
2023-03-21 11:45:54,220 Node[0] Epoch[30] Batch [80-100]	Speed: 40843.27 samples/sec	accuracy=nan
2023-03-21 11:45:55,820 Node[0] Epoch[30] Batch [100-120]	Speed: 40805.83 samples/sec	accuracy=nan
2023-03-21 11:45:57,418 Node[0] Epoch[30] Batch [120-140]	Speed: 40845.04 samples/sec	accuracy=nan
2023-03-21 11:45:59,015 Node[0] Epoch[30] Batch [140-160]	Speed: 40865.38 samples/sec	accuracy=nan
2023-03-21 11:46:00,611 Node[0] Epoch[30] Batch [160-180]	Speed: 40897.01 samples/sec	accuracy=nan
2023-03-21 11:46:02,207 Node[0] Epoch[30] Batch [180-200]	Speed: 40900.00 samples/sec	accuracy=nan
2023-03-21 11:46:03,801 Node[0] Epoch[30] Batch [200-220]	Speed: 40960.82 samples/sec	accuracy=nan
2023-03-21 11:46:05,396 Node[0] Epoch[30] Batch [220-240]	Speed: 40932.79 samples/sec	accuracy=nan
2023-03-21 11:46:06,991 Node[0] Epoch[30] Batch [240-260]	Speed: 40935.01 samples/sec	accuracy=nan
2023-03-21 11:46:08,587 Node[0] Epoch[30] Batch [260-280]	Speed: 40884.42 samples/sec	accuracy=nan
2023-03-21 11:46:10,181 Node[0] Epoch[30] Batch [280-300]	Speed: 40952.46 samples/sec	accuracy=nan
2023-03-21 11:46:11,774 Node[0] Epoch[30] Batch [300-320]	Speed: 40983.98 samples/sec	accuracy=nan
2023-03-21 11:46:13,370 Node[0] Epoch[30] Batch [320-340]	Speed: 40908.11 samples/sec	accuracy=nan
2023-03-21 11:46:14,968 Node[0] Epoch[30] Batch [340-360]	Speed: 40848.28 samples/sec	accuracy=nan
2023-03-21 11:46:16,562 Node[0] Epoch[30] Batch [360-380]	Speed: 40947.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679417177439, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 11:46:17,441 Node[0] Epoch[30] Time cost=31.279
:::MLLOG {"namespace": "", "time_ms": 1679417177441, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40958.783894886066}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679417177515, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 11:46:18,251 Node[0] Epoch[30] Validation-accuracy=0.744640
2023-03-21 11:46:18,251 Node[0] Epoch[30] Validation-correct-count=2327.000000
2023-03-21 11:46:18,251 Node[0] Epoch[30] Validation-total-count=3125.000000
2023-03-21 11:46:18,361 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417178361, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-21 11:46:18,361 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417178361, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75124, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 11:46:18,361 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417178361, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 11:46:18,361 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:18,361 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417178362, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679417178362, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 11:46:18,362 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:19,968 Node[0] Epoch[31] Batch [0-20]	Speed: 40852.92 samples/sec	accuracy=nan
2023-03-21 11:46:21,563 Node[0] Epoch[31] Batch [20-40]	Speed: 40946.17 samples/sec	accuracy=nan
2023-03-21 11:46:23,154 Node[0] Epoch[31] Batch [40-60]	Speed: 41029.36 samples/sec	accuracy=nan
2023-03-21 11:46:24,749 Node[0] Epoch[31] Batch [60-80]	Speed: 40919.41 samples/sec	accuracy=nan
2023-03-21 11:46:26,344 Node[0] Epoch[31] Batch [80-100]	Speed: 40931.03 samples/sec	accuracy=nan
2023-03-21 11:46:27,940 Node[0] Epoch[31] Batch [100-120]	Speed: 40894.38 samples/sec	accuracy=nan
2023-03-21 11:46:29,532 Node[0] Epoch[31] Batch [120-140]	Speed: 41020.29 samples/sec	accuracy=nan
2023-03-21 11:46:31,128 Node[0] Epoch[31] Batch [140-160]	Speed: 40904.40 samples/sec	accuracy=nan
2023-03-21 11:46:32,723 Node[0] Epoch[31] Batch [160-180]	Speed: 40910.34 samples/sec	accuracy=nan
2023-03-21 11:46:34,317 Node[0] Epoch[31] Batch [180-200]	Speed: 40955.35 samples/sec	accuracy=nan
2023-03-21 11:46:35,913 Node[0] Epoch[31] Batch [200-220]	Speed: 40894.84 samples/sec	accuracy=nan
2023-03-21 11:46:37,509 Node[0] Epoch[31] Batch [220-240]	Speed: 40919.54 samples/sec	accuracy=nan
2023-03-21 11:46:39,103 Node[0] Epoch[31] Batch [240-260]	Speed: 40939.78 samples/sec	accuracy=nan
2023-03-21 11:46:40,700 Node[0] Epoch[31] Batch [260-280]	Speed: 40892.26 samples/sec	accuracy=nan
2023-03-21 11:46:42,296 Node[0] Epoch[31] Batch [280-300]	Speed: 40904.85 samples/sec	accuracy=nan
2023-03-21 11:46:43,890 Node[0] Epoch[31] Batch [300-320]	Speed: 40955.94 samples/sec	accuracy=nan
2023-03-21 11:46:45,488 Node[0] Epoch[31] Batch [320-340]	Speed: 40839.44 samples/sec	accuracy=nan
2023-03-21 11:46:47,082 Node[0] Epoch[31] Batch [340-360]	Speed: 40948.05 samples/sec	accuracy=nan
2023-03-21 11:46:48,680 Node[0] Epoch[31] Batch [360-380]	Speed: 40849.05 samples/sec	accuracy=nan
2023-03-21 11:46:49,634 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,634 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,634 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,634 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,634 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,634 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,635 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417209634, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 11:46:49,635 Node[0] Epoch[31] Time cost=31.273
:::MLLOG {"namespace": "", "time_ms": 1679417209635, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40966.73553002022}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679417209636, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 11:46:49,636 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:49,636 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:46:51,314 Node[0] Epoch[32] Batch [0-20]	Speed: 40839.27 samples/sec	accuracy=nan
2023-03-21 11:46:52,907 Node[0] Epoch[32] Batch [20-40]	Speed: 40971.90 samples/sec	accuracy=nan
2023-03-21 11:46:54,502 Node[0] Epoch[32] Batch [40-60]	Speed: 40933.94 samples/sec	accuracy=nan
2023-03-21 11:46:56,097 Node[0] Epoch[32] Batch [60-80]	Speed: 40935.87 samples/sec	accuracy=nan
2023-03-21 11:46:57,692 Node[0] Epoch[32] Batch [80-100]	Speed: 40923.58 samples/sec	accuracy=nan
2023-03-21 11:46:59,285 Node[0] Epoch[32] Batch [100-120]	Speed: 40979.89 samples/sec	accuracy=nan
2023-03-21 11:47:00,882 Node[0] Epoch[32] Batch [120-140]	Speed: 40872.13 samples/sec	accuracy=nan
2023-03-21 11:47:02,478 Node[0] Epoch[32] Batch [140-160]	Speed: 40917.66 samples/sec	accuracy=nan
2023-03-21 11:47:04,068 Node[0] Epoch[32] Batch [160-180]	Speed: 41052.57 samples/sec	accuracy=nan
2023-03-21 11:47:05,664 Node[0] Epoch[32] Batch [180-200]	Speed: 40901.65 samples/sec	accuracy=nan
2023-03-21 11:47:07,261 Node[0] Epoch[32] Batch [200-220]	Speed: 40868.90 samples/sec	accuracy=nan
2023-03-21 11:47:08,860 Node[0] Epoch[32] Batch [220-240]	Speed: 40819.18 samples/sec	accuracy=nan
2023-03-21 11:47:10,456 Node[0] Epoch[32] Batch [240-260]	Speed: 40912.89 samples/sec	accuracy=nan
2023-03-21 11:47:12,052 Node[0] Epoch[32] Batch [260-280]	Speed: 40901.19 samples/sec	accuracy=nan
2023-03-21 11:47:13,650 Node[0] Epoch[32] Batch [280-300]	Speed: 40843.62 samples/sec	accuracy=nan
2023-03-21 11:47:15,243 Node[0] Epoch[32] Batch [300-320]	Speed: 40981.51 samples/sec	accuracy=nan
2023-03-21 11:47:16,838 Node[0] Epoch[32] Batch [320-340]	Speed: 40936.83 samples/sec	accuracy=nan
2023-03-21 11:47:18,433 Node[0] Epoch[32] Batch [340-360]	Speed: 40924.42 samples/sec	accuracy=nan
2023-03-21 11:47:20,032 Node[0] Epoch[32] Batch [360-380]	Speed: 40832.87 samples/sec	accuracy=nan
2023-03-21 11:47:20,907 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,907 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:20,908 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417240907, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 11:47:20,908 Node[0] Epoch[32] Time cost=31.272
:::MLLOG {"namespace": "", "time_ms": 1679417240908, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40968.21753272244}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679417240909, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 11:47:20,909 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:22,585 Node[0] Epoch[33] Batch [0-20]	Speed: 40939.56 samples/sec	accuracy=nan
2023-03-21 11:47:24,183 Node[0] Epoch[33] Batch [20-40]	Speed: 40850.08 samples/sec	accuracy=nan
2023-03-21 11:47:25,776 Node[0] Epoch[33] Batch [40-60]	Speed: 40959.88 samples/sec	accuracy=nan
2023-03-21 11:47:27,371 Node[0] Epoch[33] Batch [60-80]	Speed: 40926.16 samples/sec	accuracy=nan
2023-03-21 11:47:28,969 Node[0] Epoch[33] Batch [80-100]	Speed: 40864.28 samples/sec	accuracy=nan
2023-03-21 11:47:30,566 Node[0] Epoch[33] Batch [100-120]	Speed: 40880.17 samples/sec	accuracy=nan
2023-03-21 11:47:32,160 Node[0] Epoch[33] Batch [120-140]	Speed: 40942.85 samples/sec	accuracy=nan
2023-03-21 11:47:33,757 Node[0] Epoch[33] Batch [140-160]	Speed: 40883.71 samples/sec	accuracy=nan
2023-03-21 11:47:35,354 Node[0] Epoch[33] Batch [160-180]	Speed: 40876.84 samples/sec	accuracy=nan
2023-03-21 11:47:36,948 Node[0] Epoch[33] Batch [180-200]	Speed: 40948.15 samples/sec	accuracy=nan
2023-03-21 11:47:38,543 Node[0] Epoch[33] Batch [200-220]	Speed: 40932.02 samples/sec	accuracy=nan
2023-03-21 11:47:40,139 Node[0] Epoch[33] Batch [220-240]	Speed: 40902.18 samples/sec	accuracy=nan
2023-03-21 11:47:41,735 Node[0] Epoch[33] Batch [240-260]	Speed: 40892.17 samples/sec	accuracy=nan
2023-03-21 11:47:43,332 Node[0] Epoch[33] Batch [260-280]	Speed: 40882.30 samples/sec	accuracy=nan
2023-03-21 11:47:44,927 Node[0] Epoch[33] Batch [280-300]	Speed: 40941.91 samples/sec	accuracy=nan
2023-03-21 11:47:46,520 Node[0] Epoch[33] Batch [300-320]	Speed: 40978.34 samples/sec	accuracy=nan
2023-03-21 11:47:48,117 Node[0] Epoch[33] Batch [320-340]	Speed: 40874.78 samples/sec	accuracy=nan
2023-03-21 11:47:49,709 Node[0] Epoch[33] Batch [340-360]	Speed: 41003.69 samples/sec	accuracy=nan
2023-03-21 11:47:51,304 Node[0] Epoch[33] Batch [360-380]	Speed: 40933.36 samples/sec	accuracy=nan
2023-03-21 11:47:52,258 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,258 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,258 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,258 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,258 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679417272259, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 11:47:52,259 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:52,259 Node[0] Epoch[33] Time cost=31.350
:::MLLOG {"namespace": "", "time_ms": 1679417272259, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40866.02317709328}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679417272260, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 11:47:52,260 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:47:53,934 Node[0] Epoch[34] Batch [0-20]	Speed: 40948.05 samples/sec	accuracy=nan
2023-03-21 11:47:55,528 Node[0] Epoch[34] Batch [20-40]	Speed: 40938.10 samples/sec	accuracy=nan
2023-03-21 11:47:57,120 Node[0] Epoch[34] Batch [40-60]	Speed: 41023.95 samples/sec	accuracy=nan
2023-03-21 11:47:58,712 Node[0] Epoch[34] Batch [60-80]	Speed: 40996.01 samples/sec	accuracy=nan
2023-03-21 11:48:00,306 Node[0] Epoch[34] Batch [80-100]	Speed: 40958.52 samples/sec	accuracy=nan
2023-03-21 11:48:01,903 Node[0] Epoch[34] Batch [100-120]	Speed: 40874.70 samples/sec	accuracy=nan
2023-03-21 11:48:03,496 Node[0] Epoch[34] Batch [120-140]	Speed: 40977.21 samples/sec	accuracy=nan
2023-03-21 11:48:05,092 Node[0] Epoch[34] Batch [140-160]	Speed: 40895.68 samples/sec	accuracy=nan
2023-03-21 11:48:06,685 Node[0] Epoch[34] Batch [160-180]	Speed: 40982.76 samples/sec	accuracy=nan
2023-03-21 11:48:08,279 Node[0] Epoch[34] Batch [180-200]	Speed: 40954.15 samples/sec	accuracy=nan
2023-03-21 11:48:09,877 Node[0] Epoch[34] Batch [200-220]	Speed: 40855.28 samples/sec	accuracy=nan
2023-03-21 11:48:11,474 Node[0] Epoch[34] Batch [220-240]	Speed: 40878.07 samples/sec	accuracy=nan
2023-03-21 11:48:13,068 Node[0] Epoch[34] Batch [240-260]	Speed: 40949.52 samples/sec	accuracy=nan
2023-03-21 11:48:14,662 Node[0] Epoch[34] Batch [260-280]	Speed: 40948.68 samples/sec	accuracy=nan
2023-03-21 11:48:16,256 Node[0] Epoch[34] Batch [280-300]	Speed: 40956.53 samples/sec	accuracy=nan
2023-03-21 11:48:17,852 Node[0] Epoch[34] Batch [300-320]	Speed: 40899.86 samples/sec	accuracy=nan
2023-03-21 11:48:19,447 Node[0] Epoch[34] Batch [320-340]	Speed: 40937.75 samples/sec	accuracy=nan
2023-03-21 11:48:21,039 Node[0] Epoch[34] Batch [340-360]	Speed: 40989.10 samples/sec	accuracy=nan
2023-03-21 11:48:22,633 Node[0] Epoch[34] Batch [360-380]	Speed: 40950.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679417303589, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 11:48:23,590 Node[0] Epoch[34] Time cost=31.330
:::MLLOG {"namespace": "", "time_ms": 1679417303590, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40892.33930386474}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679417303665, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 11:48:24,420 Node[0] Epoch[34] Validation-accuracy=0.753600
2023-03-21 11:48:24,420 Node[0] Epoch[34] Validation-correct-count=2355.000000
2023-03-21 11:48:24,421 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679417304499, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679417304499, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76256, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679417304500, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679417304500, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417326
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:46 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:46 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:46 AM
+ result=1409
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1409,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1409,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417327
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:47 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:47 AM
+ result=1410
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1410,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679417328
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:48:48 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:48:48 AM'
ENDING TIMING RUN AT 2023-03-21 11:48:48 AM
+ result=1411
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1411,root,2023-03-21 11:25:17 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1411,root,2023-03-21 11:25:17 AM'
+ export PROFILE=0
+ PROFILE=0
