+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413158319, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413158354, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413158355, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413158357, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413158358, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413171406, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413177475, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413177510, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413177512, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413177513, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413177515, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413189122, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413194112, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413194147, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413194148, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413194150, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413194151, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413205728, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413210714, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413210749, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413210750, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413210751, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413210753, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679413222358, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=20188
+ SEED=20188
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ dirname ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ dirname ./config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ dirname ./config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ dirname ./config_4xR750xax4A100.sh
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ source ./config_4xR750xax4A100.sh
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ date +%s
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ sed 's/^config_//'
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date +%s
+ start=1679413224
+ start=1679413224
+ start=1679413224
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ start_fmt='2023-03-21 10:40:24 AM'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ readonly global_rank=2
+ global_rank=2
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
+ start_fmt='2023-03-21 10:40:24 AM'
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ source ./config_4xR750xax4A100.sh
++ date +%s
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ source ./config_4xR750xax4A100.sh
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ source ./config_4xR750xax4A100.sh
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ date +%s
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ start_fmt='2023-03-21 10:40:24 AM'
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
running benchmark
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ date +%s
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ readonly global_rank=2
+ global_rank=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679413224
+ source ./config_4xR750xax4A100.sh
+ start=1679413224
+ start=1679413224
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ dirname ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ start=1679413224
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ date '+%Y-%m-%d %r'
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ start_fmt='2023-03-21 10:40:24 AM'
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
+ start_fmt='2023-03-21 10:40:24 AM'
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ start_fmt='2023-03-21 10:40:24 AM'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+ readonly global_rank=1
+ global_rank=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+++ sed 's/\.sh$//'
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+++ sed 's/\.sh$//'
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+++ sed 's/\.sh$//'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++++ readlink -f ./config_4xR750xax4A100.sh
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
++++ readlink -f ./config_4xR750xax4A100.sh
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++++ readlink -f ./config_4xR750xax4A100.sh
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 10:40:24 AM'
+ GPUS=0,1,2,3
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ GPUS=0,1,2,3
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
++ seq 0 3
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ NUMEPOCHS=37
++ seq 0 3
++ tr '\n' ,
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ tr '\n' ,
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
running benchmark
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ [[ '' -ge 1 ]]
++ sed 's/,$//'
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ tr '\n' ,
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ sed 's/,$//'
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=4xR750xax4A100
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679413224
+ start=1679413224
++ date '+%Y-%m-%d %r'
+ start=1679413224
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ start_fmt='2023-03-21 10:40:24 AM'
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
running benchmark
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ readonly global_rank=0
+ global_rank=0
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly local_rank=0
+ local_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ THR=0.759
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 -ge 1 ]]
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679413224
++ seq 0 3
++ date '+%Y-%m-%d %r'
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 10:40:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:40:24 AM'
STARTING TIMING RUN AT 2023-03-21 10:40:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=20188
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 20188 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:68505] MCW rank 0 is not bound (or bound to all available processors)
[node044:68532] MCW rank 2 is not bound (or bound to all available processors)
[node044:68504] MCW rank 1 is not bound (or bound to all available processors)
[node044:68520] MCW rank 3 is not bound (or bound to all available processors)
[node045:62237] MCW rank 7 is not bound (or bound to all available processors)
[node045:62234] MCW rank 5 is not bound (or bound to all available processors)
[node045:62235] MCW rank 4 is not bound (or bound to all available processors)
[node045:62236] MCW rank 6 is not bound (or bound to all available processors)
[node046:57078] MCW rank 9 is not bound (or bound to all available processors)
[node047:57869] MCW rank 12 is not bound (or bound to all available processors)
[node047:57871] MCW rank 13 is not bound (or bound to all available processors)
[node047:57870] MCW rank 14 is not bound (or bound to all available processors)
[node046:57077] MCW rank 10 is not bound (or bound to all available processors)
[node047:57868] MCW rank 15 is not bound (or bound to all available processors)
[node046:57079] MCW rank 11 is not bound (or bound to all available processors)
[node046:57080] MCW rank 8 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679413229812, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679413237423, "event_type": "POINT_IN_TIME", "key": "seed", "value": 20188, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:40:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679413239931, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:40:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679413244702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679413244744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,591 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60731, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,592 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15097, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679413247593, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679413247595, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679413247596, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,612 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34513, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,613 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38815, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,613 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2706, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,613 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56951, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,613 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2391, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,614 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9984, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,614 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64215, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,615 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16396, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4102, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5455, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=368, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15623, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55906, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 10:40:47,616 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33064, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679413335111, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679413335112, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679413335112, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679413335661, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679413335744, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413335744, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 10:42:17,354 Node[0] Epoch[0] Batch [0-20]	Speed: 40838.00 samples/sec	accuracy=nan
2023-03-21 10:42:18,923 Node[0] Epoch[0] Batch [20-40]	Speed: 41596.67 samples/sec	accuracy=nan
2023-03-21 10:42:20,495 Node[0] Epoch[0] Batch [40-60]	Speed: 41511.82 samples/sec	accuracy=nan
2023-03-21 10:42:22,066 Node[0] Epoch[0] Batch [60-80]	Speed: 41570.95 samples/sec	accuracy=nan
2023-03-21 10:42:23,635 Node[0] Epoch[0] Batch [80-100]	Speed: 41591.94 samples/sec	accuracy=nan
2023-03-21 10:42:25,210 Node[0] Epoch[0] Batch [100-120]	Speed: 41450.54 samples/sec	accuracy=nan
2023-03-21 10:42:26,788 Node[0] Epoch[0] Batch [120-140]	Speed: 41385.75 samples/sec	accuracy=nan
2023-03-21 10:42:28,360 Node[0] Epoch[0] Batch [140-160]	Speed: 41501.23 samples/sec	accuracy=nan
2023-03-21 10:42:29,936 Node[0] Epoch[0] Batch [160-180]	Speed: 41433.49 samples/sec	accuracy=nan
2023-03-21 10:42:31,518 Node[0] Epoch[0] Batch [180-200]	Speed: 41256.84 samples/sec	accuracy=nan
2023-03-21 10:42:33,102 Node[0] Epoch[0] Batch [200-220]	Speed: 41225.83 samples/sec	accuracy=nan
2023-03-21 10:42:34,684 Node[0] Epoch[0] Batch [220-240]	Speed: 41262.60 samples/sec	accuracy=nan
2023-03-21 10:42:36,266 Node[0] Epoch[0] Batch [240-260]	Speed: 41270.47 samples/sec	accuracy=nan
2023-03-21 10:42:37,848 Node[0] Epoch[0] Batch [260-280]	Speed: 41261.39 samples/sec	accuracy=nan
2023-03-21 10:42:39,430 Node[0] Epoch[0] Batch [280-300]	Speed: 41253.40 samples/sec	accuracy=nan
2023-03-21 10:42:41,014 Node[0] Epoch[0] Batch [300-320]	Speed: 41219.84 samples/sec	accuracy=nan
2023-03-21 10:42:42,598 Node[0] Epoch[0] Batch [320-340]	Speed: 41204.08 samples/sec	accuracy=nan
2023-03-21 10:42:44,184 Node[0] Epoch[0] Batch [340-360]	Speed: 41169.88 samples/sec	accuracy=nan
2023-03-21 10:42:45,768 Node[0] Epoch[0] Batch [360-380]	Speed: 41205.54 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413366715, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 10:42:46,715 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[0] Epoch[0] Time cost=30.971
2023-03-21 10:42:46,715 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,715 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,715 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413366716, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41366.15773433585}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 10:42:46,716 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:46,716 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413366717, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 10:42:46,717 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:42:48,380 Node[0] Epoch[1] Batch [0-20]	Speed: 41200.60 samples/sec	accuracy=nan
2023-03-21 10:42:49,967 Node[0] Epoch[1] Batch [20-40]	Speed: 41156.17 samples/sec	accuracy=nan
2023-03-21 10:42:51,553 Node[0] Epoch[1] Batch [40-60]	Speed: 41160.26 samples/sec	accuracy=nan
2023-03-21 10:42:53,134 Node[0] Epoch[1] Batch [60-80]	Speed: 41275.59 samples/sec	accuracy=nan
2023-03-21 10:42:54,720 Node[0] Epoch[1] Batch [80-100]	Speed: 41171.11 samples/sec	accuracy=nan
2023-03-21 10:42:56,304 Node[0] Epoch[1] Batch [100-120]	Speed: 41196.39 samples/sec	accuracy=nan
2023-03-21 10:42:57,892 Node[0] Epoch[1] Batch [120-140]	Speed: 41103.25 samples/sec	accuracy=nan
2023-03-21 10:42:59,482 Node[0] Epoch[1] Batch [140-160]	Speed: 41074.65 samples/sec	accuracy=nan
2023-03-21 10:43:01,070 Node[0] Epoch[1] Batch [160-180]	Speed: 41111.24 samples/sec	accuracy=nan
2023-03-21 10:43:02,659 Node[0] Epoch[1] Batch [180-200]	Speed: 41067.27 samples/sec	accuracy=nan
2023-03-21 10:43:04,249 Node[0] Epoch[1] Batch [200-220]	Speed: 41060.92 samples/sec	accuracy=nan
2023-03-21 10:43:10,577 Node[0] Epoch[1] Batch [220-240]	Speed: 10316.68 samples/sec	accuracy=nan
2023-03-21 10:43:12,152 Node[0] Epoch[1] Batch [240-260]	Speed: 41445.80 samples/sec	accuracy=nan
2023-03-21 10:43:16,112 Node[0] Epoch[1] Batch [260-280]	Speed: 16485.32 samples/sec	accuracy=nan
2023-03-21 10:43:20,084 Node[0] Epoch[1] Batch [280-300]	Speed: 16433.89 samples/sec	accuracy=nan
2023-03-21 10:43:21,658 Node[0] Epoch[1] Batch [300-320]	Speed: 41479.70 samples/sec	accuracy=nan
2023-03-21 10:43:25,618 Node[0] Epoch[1] Batch [320-340]	Speed: 16485.08 samples/sec	accuracy=nan
2023-03-21 10:43:27,193 Node[0] Epoch[1] Batch [340-360]	Speed: 41434.26 samples/sec	accuracy=nan
2023-03-21 10:43:28,773 Node[0] Epoch[1] Batch [360-380]	Speed: 41330.41 samples/sec	accuracy=nan
2023-03-21 10:43:29,717 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:29,717 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413409717, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 10:43:29,718 Node[0] Epoch[1] Time cost=43.001
:::MLLOG {"namespace": "", "time_ms": 1679413409718, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 29793.939443628853}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679413409719, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 10:43:29,719 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:43:31,377 Node[0] Epoch[2] Batch [0-20]	Speed: 41326.85 samples/sec	accuracy=nan
2023-03-21 10:43:32,955 Node[0] Epoch[2] Batch [20-40]	Speed: 41350.08 samples/sec	accuracy=nan
2023-03-21 10:43:34,538 Node[0] Epoch[2] Batch [40-60]	Speed: 41233.98 samples/sec	accuracy=nan
2023-03-21 10:43:36,119 Node[0] Epoch[2] Batch [60-80]	Speed: 41294.88 samples/sec	accuracy=nan
2023-03-21 10:43:40,115 Node[0] Epoch[2] Batch [80-100]	Speed: 16335.40 samples/sec	accuracy=nan
2023-03-21 10:43:41,696 Node[0] Epoch[2] Batch [100-120]	Speed: 41295.66 samples/sec	accuracy=nan
2023-03-21 10:43:45,761 Node[0] Epoch[2] Batch [120-140]	Speed: 16059.01 samples/sec	accuracy=nan
2023-03-21 10:43:49,711 Node[0] Epoch[2] Batch [140-160]	Speed: 16526.29 samples/sec	accuracy=nan
2023-03-21 10:43:56,034 Node[0] Epoch[2] Batch [160-180]	Speed: 10324.79 samples/sec	accuracy=nan
2023-03-21 10:44:04,862 Node[0] Epoch[2] Batch [180-200]	Speed: 7395.03 samples/sec	accuracy=nan
2023-03-21 10:44:08,837 Node[0] Epoch[2] Batch [200-220]	Speed: 16422.52 samples/sec	accuracy=nan
2023-03-21 10:44:15,248 Node[0] Epoch[2] Batch [220-240]	Speed: 10181.23 samples/sec	accuracy=nan
2023-03-21 10:44:16,820 Node[0] Epoch[2] Batch [240-260]	Speed: 41542.27 samples/sec	accuracy=nan
2023-03-21 10:44:18,390 Node[0] Epoch[2] Batch [260-280]	Speed: 41569.14 samples/sec	accuracy=nan
2023-03-21 10:44:19,963 Node[0] Epoch[2] Batch [280-300]	Speed: 41516.10 samples/sec	accuracy=nan
2023-03-21 10:44:21,538 Node[0] Epoch[2] Batch [300-320]	Speed: 41449.45 samples/sec	accuracy=nan
2023-03-21 10:44:23,113 Node[0] Epoch[2] Batch [320-340]	Speed: 41438.21 samples/sec	accuracy=nan
2023-03-21 10:44:24,692 Node[0] Epoch[2] Batch [340-360]	Speed: 41346.39 samples/sec	accuracy=nan
2023-03-21 10:44:26,272 Node[0] Epoch[2] Batch [360-380]	Speed: 41323.56 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413467137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 10:44:27,138 Node[0] Epoch[2] Time cost=57.419
:::MLLOG {"namespace": "", "time_ms": 1679413467138, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 22312.52473811785}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679413467212, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 10:44:27,212 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,213 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,213 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,212 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,213 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:27,908 Node[0] Epoch[2] Validation-accuracy=0.340160
2023-03-21 10:44:27,908 Node[0] Epoch[2] Validation-correct-count=1063.000000
2023-03-21 10:44:27,908 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413468012, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 10:44:28,012 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413468012, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3357, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 10:44:28,012 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413468012, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679413468012, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 10:44:28,012 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:28,012 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413468013, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 10:44:28,013 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:29,609 Node[0] Epoch[3] Batch [0-20]	Speed: 41084.69 samples/sec	accuracy=nan
2023-03-21 10:44:31,193 Node[0] Epoch[3] Batch [20-40]	Speed: 41228.45 samples/sec	accuracy=nan
2023-03-21 10:44:32,773 Node[0] Epoch[3] Batch [40-60]	Speed: 41320.39 samples/sec	accuracy=nan
2023-03-21 10:44:34,354 Node[0] Epoch[3] Batch [60-80]	Speed: 41267.04 samples/sec	accuracy=nan
2023-03-21 10:44:35,937 Node[0] Epoch[3] Batch [80-100]	Speed: 41248.07 samples/sec	accuracy=nan
2023-03-21 10:44:37,521 Node[0] Epoch[3] Batch [100-120]	Speed: 41202.36 samples/sec	accuracy=nan
2023-03-21 10:44:39,103 Node[0] Epoch[3] Batch [120-140]	Speed: 41273.83 samples/sec	accuracy=nan
2023-03-21 10:44:40,689 Node[0] Epoch[3] Batch [140-160]	Speed: 41158.40 samples/sec	accuracy=nan
2023-03-21 10:44:42,273 Node[0] Epoch[3] Batch [160-180]	Speed: 41214.49 samples/sec	accuracy=nan
2023-03-21 10:44:43,858 Node[0] Epoch[3] Batch [180-200]	Speed: 41193.54 samples/sec	accuracy=nan
2023-03-21 10:44:45,440 Node[0] Epoch[3] Batch [200-220]	Speed: 41251.48 samples/sec	accuracy=nan
2023-03-21 10:44:47,028 Node[0] Epoch[3] Batch [220-240]	Speed: 41105.47 samples/sec	accuracy=nan
2023-03-21 10:44:48,611 Node[0] Epoch[3] Batch [240-260]	Speed: 41243.46 samples/sec	accuracy=nan
2023-03-21 10:44:50,200 Node[0] Epoch[3] Batch [260-280]	Speed: 41095.45 samples/sec	accuracy=nan
2023-03-21 10:44:51,786 Node[0] Epoch[3] Batch [280-300]	Speed: 41143.95 samples/sec	accuracy=nan
2023-03-21 10:44:53,373 Node[0] Epoch[3] Batch [300-320]	Speed: 41139.12 samples/sec	accuracy=nan
2023-03-21 10:44:54,958 Node[0] Epoch[3] Batch [320-340]	Speed: 41187.31 samples/sec	accuracy=nan
2023-03-21 10:44:56,549 Node[0] Epoch[3] Batch [340-360]	Speed: 41037.16 samples/sec	accuracy=nan
2023-03-21 10:44:58,137 Node[0] Epoch[3] Batch [360-380]	Speed: 41105.45 samples/sec	accuracy=nan
2023-03-21 10:44:59,088 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,088 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,089 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:44:59,089 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413499088, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 10:44:59,089 Node[0] Epoch[3] Time cost=31.077
:::MLLOG {"namespace": "", "time_ms": 1679413499089, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41226.17961764603}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679413499090, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 10:44:59,090 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:00,760 Node[0] Epoch[4] Batch [0-20]	Speed: 41045.50 samples/sec	accuracy=nan
2023-03-21 10:45:02,347 Node[0] Epoch[4] Batch [20-40]	Speed: 41126.22 samples/sec	accuracy=nan
2023-03-21 10:45:03,937 Node[0] Epoch[4] Batch [40-60]	Speed: 41056.06 samples/sec	accuracy=nan
2023-03-21 10:45:05,527 Node[0] Epoch[4] Batch [60-80]	Speed: 41063.13 samples/sec	accuracy=nan
2023-03-21 10:45:07,112 Node[0] Epoch[4] Batch [80-100]	Speed: 41176.84 samples/sec	accuracy=nan
2023-03-21 10:45:08,705 Node[0] Epoch[4] Batch [100-120]	Speed: 40984.14 samples/sec	accuracy=nan
2023-03-21 10:45:10,294 Node[0] Epoch[4] Batch [120-140]	Speed: 41069.20 samples/sec	accuracy=nan
2023-03-21 10:45:11,884 Node[0] Epoch[4] Batch [140-160]	Speed: 41054.24 samples/sec	accuracy=nan
2023-03-21 10:45:13,471 Node[0] Epoch[4] Batch [160-180]	Speed: 41148.99 samples/sec	accuracy=nan
2023-03-21 10:45:15,061 Node[0] Epoch[4] Batch [180-200]	Speed: 41048.70 samples/sec	accuracy=nan
2023-03-21 10:45:16,647 Node[0] Epoch[4] Batch [200-220]	Speed: 41153.53 samples/sec	accuracy=nan
2023-03-21 10:45:18,243 Node[0] Epoch[4] Batch [220-240]	Speed: 40915.31 samples/sec	accuracy=nan
2023-03-21 10:45:19,831 Node[0] Epoch[4] Batch [240-260]	Speed: 41120.73 samples/sec	accuracy=nan
2023-03-21 10:45:21,422 Node[0] Epoch[4] Batch [260-280]	Speed: 41019.25 samples/sec	accuracy=nan
2023-03-21 10:45:23,010 Node[0] Epoch[4] Batch [280-300]	Speed: 41102.24 samples/sec	accuracy=nan
2023-03-21 10:45:24,600 Node[0] Epoch[4] Batch [300-320]	Speed: 41061.32 samples/sec	accuracy=nan
2023-03-21 10:45:26,190 Node[0] Epoch[4] Batch [320-340]	Speed: 41067.64 samples/sec	accuracy=nan
2023-03-21 10:45:27,783 Node[0] Epoch[4] Batch [340-360]	Speed: 40977.62 samples/sec	accuracy=nan
2023-03-21 10:45:29,377 Node[0] Epoch[4] Batch [360-380]	Speed: 40944.53 samples/sec	accuracy=nan
2023-03-21 10:45:30,249 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,249 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,249 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:30,250 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413530251, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 10:45:30,252 Node[0] Epoch[4] Time cost=31.162
:::MLLOG {"namespace": "", "time_ms": 1679413530252, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41113.42122298584}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679413530252, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 10:45:30,252 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:45:31,923 Node[0] Epoch[5] Batch [0-20]	Speed: 41064.96 samples/sec	accuracy=nan
2023-03-21 10:45:33,511 Node[0] Epoch[5] Batch [20-40]	Speed: 41110.70 samples/sec	accuracy=nan
2023-03-21 10:45:35,106 Node[0] Epoch[5] Batch [40-60]	Speed: 40933.96 samples/sec	accuracy=nan
2023-03-21 10:45:36,698 Node[0] Epoch[5] Batch [60-80]	Speed: 40991.76 samples/sec	accuracy=nan
2023-03-21 10:45:38,290 Node[0] Epoch[5] Batch [80-100]	Speed: 41022.01 samples/sec	accuracy=nan
2023-03-21 10:45:39,880 Node[0] Epoch[5] Batch [100-120]	Speed: 41057.86 samples/sec	accuracy=nan
2023-03-21 10:45:41,470 Node[0] Epoch[5] Batch [120-140]	Speed: 41039.07 samples/sec	accuracy=nan
2023-03-21 10:45:43,063 Node[0] Epoch[5] Batch [140-160]	Speed: 40994.31 samples/sec	accuracy=nan
2023-03-21 10:45:44,653 Node[0] Epoch[5] Batch [160-180]	Speed: 41060.58 samples/sec	accuracy=nan
2023-03-21 10:45:46,246 Node[0] Epoch[5] Batch [180-200]	Speed: 40975.47 samples/sec	accuracy=nan
2023-03-21 10:45:47,836 Node[0] Epoch[5] Batch [200-220]	Speed: 41043.31 samples/sec	accuracy=nan
2023-03-21 10:45:49,426 Node[0] Epoch[5] Batch [220-240]	Speed: 41067.26 samples/sec	accuracy=nan
2023-03-21 10:45:51,018 Node[0] Epoch[5] Batch [240-260]	Speed: 40998.18 samples/sec	accuracy=nan
2023-03-21 10:45:52,611 Node[0] Epoch[5] Batch [260-280]	Speed: 40980.51 samples/sec	accuracy=nan
2023-03-21 10:45:54,200 Node[0] Epoch[5] Batch [280-300]	Speed: 41096.16 samples/sec	accuracy=nan
2023-03-21 10:45:55,791 Node[0] Epoch[5] Batch [300-320]	Speed: 41016.75 samples/sec	accuracy=nan
2023-03-21 10:45:57,388 Node[0] Epoch[5] Batch [320-340]	Speed: 40894.55 samples/sec	accuracy=nan
2023-03-21 10:45:58,977 Node[0] Epoch[5] Batch [340-360]	Speed: 41070.68 samples/sec	accuracy=nan
2023-03-21 10:46:00,569 Node[0] Epoch[5] Batch [360-380]	Speed: 40999.17 samples/sec	accuracy=nan
2023-03-21 10:46:01,520 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,520 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,520 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,520 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,520 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:01,521 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413561521, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 10:46:01,522 Node[0] Epoch[5] Time cost=31.270
:::MLLOG {"namespace": "", "time_ms": 1679413561522, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40971.23746458002}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679413561523, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 10:46:01,523 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:03,200 Node[0] Epoch[6] Batch [0-20]	Speed: 40858.45 samples/sec	accuracy=nan
2023-03-21 10:46:04,793 Node[0] Epoch[6] Batch [20-40]	Speed: 40984.78 samples/sec	accuracy=nan
2023-03-21 10:46:06,385 Node[0] Epoch[6] Batch [40-60]	Speed: 41007.72 samples/sec	accuracy=nan
2023-03-21 10:46:07,979 Node[0] Epoch[6] Batch [60-80]	Speed: 40938.17 samples/sec	accuracy=nan
2023-03-21 10:46:09,568 Node[0] Epoch[6] Batch [80-100]	Speed: 41078.94 samples/sec	accuracy=nan
2023-03-21 10:46:11,160 Node[0] Epoch[6] Batch [100-120]	Speed: 41007.14 samples/sec	accuracy=nan
2023-03-21 10:46:12,753 Node[0] Epoch[6] Batch [120-140]	Speed: 40986.84 samples/sec	accuracy=nan
2023-03-21 10:46:14,343 Node[0] Epoch[6] Batch [140-160]	Speed: 41052.73 samples/sec	accuracy=nan
2023-03-21 10:46:15,935 Node[0] Epoch[6] Batch [160-180]	Speed: 41010.32 samples/sec	accuracy=nan
2023-03-21 10:46:17,527 Node[0] Epoch[6] Batch [180-200]	Speed: 40993.59 samples/sec	accuracy=nan
2023-03-21 10:46:19,119 Node[0] Epoch[6] Batch [200-220]	Speed: 41021.79 samples/sec	accuracy=nan
2023-03-21 10:46:20,713 Node[0] Epoch[6] Batch [220-240]	Speed: 40953.25 samples/sec	accuracy=nan
2023-03-21 10:46:22,306 Node[0] Epoch[6] Batch [240-260]	Speed: 40963.35 samples/sec	accuracy=nan
2023-03-21 10:46:23,897 Node[0] Epoch[6] Batch [260-280]	Speed: 41045.31 samples/sec	accuracy=nan
2023-03-21 10:46:25,489 Node[0] Epoch[6] Batch [280-300]	Speed: 40991.08 samples/sec	accuracy=nan
2023-03-21 10:46:27,081 Node[0] Epoch[6] Batch [300-320]	Speed: 41003.23 samples/sec	accuracy=nan
2023-03-21 10:46:28,675 Node[0] Epoch[6] Batch [320-340]	Speed: 40962.30 samples/sec	accuracy=nan
2023-03-21 10:46:30,269 Node[0] Epoch[6] Batch [340-360]	Speed: 40955.83 samples/sec	accuracy=nan
2023-03-21 10:46:31,860 Node[0] Epoch[6] Batch [360-380]	Speed: 41030.40 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413592734, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 10:46:32,735 Node[0] Epoch[6] Time cost=31.212
:::MLLOG {"namespace": "", "time_ms": 1679413592735, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41046.67629764685}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679413592809, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 10:46:33,547 Node[0] Epoch[6] Validation-accuracy=0.426880
2023-03-21 10:46:33,547 Node[0] Epoch[6] Validation-correct-count=1334.000000
2023-03-21 10:46:33,547 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413593643, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-21 10:46:33,643 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413593644, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43778, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 10:46:33,643 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413593644, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679413593644, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-21 10:46:33,643 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,644 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,644 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,643 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:33,644 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413593644, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 10:46:33,644 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:46:35,247 Node[0] Epoch[7] Batch [0-20]	Speed: 40934.35 samples/sec	accuracy=nan
2023-03-21 10:46:36,837 Node[0] Epoch[7] Batch [20-40]	Speed: 41040.35 samples/sec	accuracy=nan
2023-03-21 10:46:38,429 Node[0] Epoch[7] Batch [40-60]	Speed: 41013.24 samples/sec	accuracy=nan
2023-03-21 10:46:40,023 Node[0] Epoch[7] Batch [60-80]	Speed: 40946.85 samples/sec	accuracy=nan
2023-03-21 10:46:41,613 Node[0] Epoch[7] Batch [80-100]	Speed: 41053.40 samples/sec	accuracy=nan
2023-03-21 10:46:43,205 Node[0] Epoch[7] Batch [100-120]	Speed: 41013.97 samples/sec	accuracy=nan
2023-03-21 10:46:44,798 Node[0] Epoch[7] Batch [120-140]	Speed: 40972.87 samples/sec	accuracy=nan
2023-03-21 10:46:46,390 Node[0] Epoch[7] Batch [140-160]	Speed: 41003.40 samples/sec	accuracy=nan
2023-03-21 10:46:47,982 Node[0] Epoch[7] Batch [160-180]	Speed: 41023.86 samples/sec	accuracy=nan
2023-03-21 10:46:49,574 Node[0] Epoch[7] Batch [180-200]	Speed: 40988.34 samples/sec	accuracy=nan
2023-03-21 10:46:51,165 Node[0] Epoch[7] Batch [200-220]	Speed: 41040.13 samples/sec	accuracy=nan
2023-03-21 10:46:52,755 Node[0] Epoch[7] Batch [220-240]	Speed: 41069.06 samples/sec	accuracy=nan
2023-03-21 10:46:54,345 Node[0] Epoch[7] Batch [240-260]	Speed: 41032.41 samples/sec	accuracy=nan
2023-03-21 10:46:55,942 Node[0] Epoch[7] Batch [260-280]	Speed: 40889.74 samples/sec	accuracy=nan
2023-03-21 10:46:57,534 Node[0] Epoch[7] Batch [280-300]	Speed: 41008.77 samples/sec	accuracy=nan
2023-03-21 10:46:59,124 Node[0] Epoch[7] Batch [300-320]	Speed: 41047.92 samples/sec	accuracy=nan
2023-03-21 10:47:00,717 Node[0] Epoch[7] Batch [320-340]	Speed: 40974.20 samples/sec	accuracy=nan
2023-03-21 10:47:02,310 Node[0] Epoch[7] Batch [340-360]	Speed: 40995.33 samples/sec	accuracy=nan
2023-03-21 10:47:03,898 Node[0] Epoch[7] Batch [360-380]	Speed: 41091.86 samples/sec	accuracy=nan
2023-03-21 10:47:04,850 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,850 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,850 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,850 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,850 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:04,851 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413624851, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 10:47:04,852 Node[0] Epoch[7] Time cost=31.208
:::MLLOG {"namespace": "", "time_ms": 1679413624852, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41052.71185311324}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679413624853, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 10:47:04,853 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:06,525 Node[0] Epoch[8] Batch [0-20]	Speed: 40963.99 samples/sec	accuracy=nan
2023-03-21 10:47:08,120 Node[0] Epoch[8] Batch [20-40]	Speed: 40945.33 samples/sec	accuracy=nan
2023-03-21 10:47:09,709 Node[0] Epoch[8] Batch [40-60]	Speed: 41066.90 samples/sec	accuracy=nan
2023-03-21 10:47:11,304 Node[0] Epoch[8] Batch [60-80]	Speed: 40942.69 samples/sec	accuracy=nan
2023-03-21 10:47:12,898 Node[0] Epoch[8] Batch [80-100]	Speed: 40944.11 samples/sec	accuracy=nan
2023-03-21 10:47:14,493 Node[0] Epoch[8] Batch [100-120]	Speed: 40929.71 samples/sec	accuracy=nan
2023-03-21 10:47:16,088 Node[0] Epoch[8] Batch [120-140]	Speed: 40928.46 samples/sec	accuracy=nan
2023-03-21 10:47:17,682 Node[0] Epoch[8] Batch [140-160]	Speed: 40941.17 samples/sec	accuracy=nan
2023-03-21 10:47:19,275 Node[0] Epoch[8] Batch [160-180]	Speed: 40983.10 samples/sec	accuracy=nan
2023-03-21 10:47:20,870 Node[0] Epoch[8] Batch [180-200]	Speed: 40925.71 samples/sec	accuracy=nan
2023-03-21 10:47:22,460 Node[0] Epoch[8] Batch [200-220]	Speed: 41068.93 samples/sec	accuracy=nan
2023-03-21 10:47:24,055 Node[0] Epoch[8] Batch [220-240]	Speed: 40936.98 samples/sec	accuracy=nan
2023-03-21 10:47:25,647 Node[0] Epoch[8] Batch [240-260]	Speed: 40998.43 samples/sec	accuracy=nan
2023-03-21 10:47:27,238 Node[0] Epoch[8] Batch [260-280]	Speed: 41022.40 samples/sec	accuracy=nan
2023-03-21 10:47:28,829 Node[0] Epoch[8] Batch [280-300]	Speed: 41024.96 samples/sec	accuracy=nan
2023-03-21 10:47:30,422 Node[0] Epoch[8] Batch [300-320]	Speed: 40980.45 samples/sec	accuracy=nan
2023-03-21 10:47:32,019 Node[0] Epoch[8] Batch [320-340]	Speed: 40874.75 samples/sec	accuracy=nan
2023-03-21 10:47:33,617 Node[0] Epoch[8] Batch [340-360]	Speed: 40875.22 samples/sec	accuracy=nan
2023-03-21 10:47:35,211 Node[0] Epoch[8] Batch [360-380]	Speed: 40943.97 samples/sec	accuracy=nan
2023-03-21 10:47:36,085 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,086 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,086 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:36,085 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413656086, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 10:47:36,087 Node[0] Epoch[8] Time cost=31.234
:::MLLOG {"namespace": "", "time_ms": 1679413656087, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41018.54707632494}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679413656087, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 10:47:36,087 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:47:37,759 Node[0] Epoch[9] Batch [0-20]	Speed: 41041.76 samples/sec	accuracy=nan
2023-03-21 10:47:39,350 Node[0] Epoch[9] Batch [20-40]	Speed: 41031.54 samples/sec	accuracy=nan
2023-03-21 10:47:40,945 Node[0] Epoch[9] Batch [40-60]	Speed: 40939.37 samples/sec	accuracy=nan
2023-03-21 10:47:42,538 Node[0] Epoch[9] Batch [60-80]	Speed: 40964.27 samples/sec	accuracy=nan
2023-03-21 10:47:44,132 Node[0] Epoch[9] Batch [80-100]	Speed: 40959.04 samples/sec	accuracy=nan
2023-03-21 10:47:45,723 Node[0] Epoch[9] Batch [100-120]	Speed: 41042.95 samples/sec	accuracy=nan
2023-03-21 10:47:47,317 Node[0] Epoch[9] Batch [120-140]	Speed: 40944.48 samples/sec	accuracy=nan
2023-03-21 10:47:48,911 Node[0] Epoch[9] Batch [140-160]	Speed: 40943.23 samples/sec	accuracy=nan
2023-03-21 10:47:50,505 Node[0] Epoch[9] Batch [160-180]	Speed: 40964.54 samples/sec	accuracy=nan
2023-03-21 10:47:52,098 Node[0] Epoch[9] Batch [180-200]	Speed: 40990.36 samples/sec	accuracy=nan
2023-03-21 10:47:53,690 Node[0] Epoch[9] Batch [200-220]	Speed: 40992.07 samples/sec	accuracy=nan
2023-03-21 10:47:55,281 Node[0] Epoch[9] Batch [220-240]	Speed: 41025.21 samples/sec	accuracy=nan
2023-03-21 10:47:56,872 Node[0] Epoch[9] Batch [240-260]	Speed: 41024.32 samples/sec	accuracy=nan
2023-03-21 10:47:58,465 Node[0] Epoch[9] Batch [260-280]	Speed: 40981.59 samples/sec	accuracy=nan
2023-03-21 10:48:00,060 Node[0] Epoch[9] Batch [280-300]	Speed: 40943.65 samples/sec	accuracy=nan
2023-03-21 10:48:01,651 Node[0] Epoch[9] Batch [300-320]	Speed: 41019.76 samples/sec	accuracy=nan
2023-03-21 10:48:03,245 Node[0] Epoch[9] Batch [320-340]	Speed: 40971.76 samples/sec	accuracy=nan
2023-03-21 10:48:04,837 Node[0] Epoch[9] Batch [340-360]	Speed: 40993.18 samples/sec	accuracy=nan
2023-03-21 10:48:06,429 Node[0] Epoch[9] Batch [360-380]	Speed: 41014.10 samples/sec	accuracy=nan
2023-03-21 10:48:07,382 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:07,382 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413687382, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 10:48:07,383 Node[0] Epoch[9] Time cost=31.296
2023-03-21 10:48:07,383 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413687383, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40936.79083070178}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 10:48:07,383 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413687384, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 10:48:07,384 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:09,059 Node[0] Epoch[10] Batch [0-20]	Speed: 40911.92 samples/sec	accuracy=nan
2023-03-21 10:48:10,650 Node[0] Epoch[10] Batch [20-40]	Speed: 41010.69 samples/sec	accuracy=nan
2023-03-21 10:48:12,248 Node[0] Epoch[10] Batch [40-60]	Speed: 40854.71 samples/sec	accuracy=nan
2023-03-21 10:48:13,845 Node[0] Epoch[10] Batch [60-80]	Speed: 40878.84 samples/sec	accuracy=nan
2023-03-21 10:48:15,439 Node[0] Epoch[10] Batch [80-100]	Speed: 40944.37 samples/sec	accuracy=nan
2023-03-21 10:48:17,033 Node[0] Epoch[10] Batch [100-120]	Speed: 40953.73 samples/sec	accuracy=nan
2023-03-21 10:48:18,627 Node[0] Epoch[10] Batch [120-140]	Speed: 40964.77 samples/sec	accuracy=nan
2023-03-21 10:48:20,219 Node[0] Epoch[10] Batch [140-160]	Speed: 41017.41 samples/sec	accuracy=nan
2023-03-21 10:48:21,811 Node[0] Epoch[10] Batch [160-180]	Speed: 40986.13 samples/sec	accuracy=nan
2023-03-21 10:48:23,402 Node[0] Epoch[10] Batch [180-200]	Speed: 41037.43 samples/sec	accuracy=nan
2023-03-21 10:48:24,991 Node[0] Epoch[10] Batch [200-220]	Speed: 41080.49 samples/sec	accuracy=nan
2023-03-21 10:48:26,589 Node[0] Epoch[10] Batch [220-240]	Speed: 40860.04 samples/sec	accuracy=nan
2023-03-21 10:48:28,182 Node[0] Epoch[10] Batch [240-260]	Speed: 40974.04 samples/sec	accuracy=nan
2023-03-21 10:48:29,775 Node[0] Epoch[10] Batch [260-280]	Speed: 40990.18 samples/sec	accuracy=nan
2023-03-21 10:48:31,371 Node[0] Epoch[10] Batch [280-300]	Speed: 40896.29 samples/sec	accuracy=nan
2023-03-21 10:48:32,967 Node[0] Epoch[10] Batch [300-320]	Speed: 40892.71 samples/sec	accuracy=nan
2023-03-21 10:48:34,561 Node[0] Epoch[10] Batch [320-340]	Speed: 40961.59 samples/sec	accuracy=nan
2023-03-21 10:48:36,153 Node[0] Epoch[10] Batch [340-360]	Speed: 40992.54 samples/sec	accuracy=nan
2023-03-21 10:48:37,746 Node[0] Epoch[10] Batch [360-380]	Speed: 40986.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413718619, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 10:48:38,620 Node[0] Epoch[10] Time cost=31.236
:::MLLOG {"namespace": "", "time_ms": 1679413718620, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41016.159762742725}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679413718695, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 10:48:39,483 Node[0] Epoch[10] Validation-accuracy=0.535680
2023-03-21 10:48:39,483 Node[0] Epoch[10] Validation-correct-count=1674.000000
2023-03-21 10:48:39,483 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413719528, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679413719528, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52878, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679413719528, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 10:48:39,528 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413719528, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 10:48:39,528 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413719528, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 10:48:39,528 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,528 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:39,529 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:48:41,133 Node[0] Epoch[11] Batch [0-20]	Speed: 41414.47 samples/sec	accuracy=nan
2023-03-21 10:48:42,726 Node[0] Epoch[11] Batch [20-40]	Speed: 40981.41 samples/sec	accuracy=nan
2023-03-21 10:48:44,320 Node[0] Epoch[11] Batch [40-60]	Speed: 40953.10 samples/sec	accuracy=nan
2023-03-21 10:48:45,911 Node[0] Epoch[11] Batch [60-80]	Speed: 41020.70 samples/sec	accuracy=nan
2023-03-21 10:48:47,504 Node[0] Epoch[11] Batch [80-100]	Speed: 40978.26 samples/sec	accuracy=nan
2023-03-21 10:48:49,097 Node[0] Epoch[11] Batch [100-120]	Speed: 40979.78 samples/sec	accuracy=nan
2023-03-21 10:48:50,688 Node[0] Epoch[11] Batch [120-140]	Speed: 41047.02 samples/sec	accuracy=nan
2023-03-21 10:48:52,277 Node[0] Epoch[11] Batch [140-160]	Speed: 41088.64 samples/sec	accuracy=nan
2023-03-21 10:48:53,870 Node[0] Epoch[11] Batch [160-180]	Speed: 40968.41 samples/sec	accuracy=nan
2023-03-21 10:48:55,461 Node[0] Epoch[11] Batch [180-200]	Speed: 41041.02 samples/sec	accuracy=nan
2023-03-21 10:48:57,050 Node[0] Epoch[11] Batch [200-220]	Speed: 41067.27 samples/sec	accuracy=nan
2023-03-21 10:48:58,642 Node[0] Epoch[11] Batch [220-240]	Speed: 41019.01 samples/sec	accuracy=nan
2023-03-21 10:49:00,241 Node[0] Epoch[11] Batch [240-260]	Speed: 40812.34 samples/sec	accuracy=nan
2023-03-21 10:49:01,830 Node[0] Epoch[11] Batch [260-280]	Speed: 41088.48 samples/sec	accuracy=nan
2023-03-21 10:49:03,423 Node[0] Epoch[11] Batch [280-300]	Speed: 40986.21 samples/sec	accuracy=nan
2023-03-21 10:49:05,016 Node[0] Epoch[11] Batch [300-320]	Speed: 40975.92 samples/sec	accuracy=nan
2023-03-21 10:49:06,603 Node[0] Epoch[11] Batch [320-340]	Speed: 41116.39 samples/sec	accuracy=nan
2023-03-21 10:49:08,197 Node[0] Epoch[11] Batch [340-360]	Speed: 40958.30 samples/sec	accuracy=nan
2023-03-21 10:49:09,790 Node[0] Epoch[11] Batch [360-380]	Speed: 40974.51 samples/sec	accuracy=nan
2023-03-21 10:49:10,743 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,744 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413750744, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 10:49:10,745 Node[0] Epoch[11] Time cost=31.216
:::MLLOG {"namespace": "", "time_ms": 1679413750745, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41041.77659537247}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-21 10:49:10,745 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:10,745 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413750745, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 10:49:10,745 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:12,422 Node[0] Epoch[12] Batch [0-20]	Speed: 40877.31 samples/sec	accuracy=nan
2023-03-21 10:49:14,015 Node[0] Epoch[12] Batch [20-40]	Speed: 40966.42 samples/sec	accuracy=nan
2023-03-21 10:49:15,609 Node[0] Epoch[12] Batch [40-60]	Speed: 40962.58 samples/sec	accuracy=nan
2023-03-21 10:49:17,198 Node[0] Epoch[12] Batch [60-80]	Speed: 41084.84 samples/sec	accuracy=nan
2023-03-21 10:49:18,788 Node[0] Epoch[12] Batch [80-100]	Speed: 41056.59 samples/sec	accuracy=nan
2023-03-21 10:49:20,380 Node[0] Epoch[12] Batch [100-120]	Speed: 41000.61 samples/sec	accuracy=nan
2023-03-21 10:49:21,973 Node[0] Epoch[12] Batch [120-140]	Speed: 40984.70 samples/sec	accuracy=nan
2023-03-21 10:49:23,565 Node[0] Epoch[12] Batch [140-160]	Speed: 41011.40 samples/sec	accuracy=nan
2023-03-21 10:49:25,161 Node[0] Epoch[12] Batch [160-180]	Speed: 40891.37 samples/sec	accuracy=nan
2023-03-21 10:49:26,755 Node[0] Epoch[12] Batch [180-200]	Speed: 40962.26 samples/sec	accuracy=nan
2023-03-21 10:49:28,348 Node[0] Epoch[12] Batch [200-220]	Speed: 40987.94 samples/sec	accuracy=nan
2023-03-21 10:49:29,940 Node[0] Epoch[12] Batch [220-240]	Speed: 40982.94 samples/sec	accuracy=nan
2023-03-21 10:49:31,533 Node[0] Epoch[12] Batch [240-260]	Speed: 40987.42 samples/sec	accuracy=nan
2023-03-21 10:49:33,126 Node[0] Epoch[12] Batch [260-280]	Speed: 40970.84 samples/sec	accuracy=nan
2023-03-21 10:49:34,721 Node[0] Epoch[12] Batch [280-300]	Speed: 40933.46 samples/sec	accuracy=nan
2023-03-21 10:49:36,314 Node[0] Epoch[12] Batch [300-320]	Speed: 40968.83 samples/sec	accuracy=nan
2023-03-21 10:49:37,908 Node[0] Epoch[12] Batch [320-340]	Speed: 40968.70 samples/sec	accuracy=nan
2023-03-21 10:49:39,501 Node[0] Epoch[12] Batch [340-360]	Speed: 40970.13 samples/sec	accuracy=nan
2023-03-21 10:49:41,091 Node[0] Epoch[12] Batch [360-380]	Speed: 41072.16 samples/sec	accuracy=nan
2023-03-21 10:49:41,967 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,967 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,967 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,967 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,967 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,967 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:41,968 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413781968, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 10:49:41,968 Node[0] Epoch[12] Time cost=31.223
:::MLLOG {"namespace": "", "time_ms": 1679413781968, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41032.63365525861}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 10:49:41,969 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413781969, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 10:49:41,969 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:49:43,640 Node[0] Epoch[13] Batch [0-20]	Speed: 41059.42 samples/sec	accuracy=nan
2023-03-21 10:49:45,235 Node[0] Epoch[13] Batch [20-40]	Speed: 40929.67 samples/sec	accuracy=nan
2023-03-21 10:49:46,830 Node[0] Epoch[13] Batch [40-60]	Speed: 40923.82 samples/sec	accuracy=nan
2023-03-21 10:49:48,424 Node[0] Epoch[13] Batch [60-80]	Speed: 40956.21 samples/sec	accuracy=nan
2023-03-21 10:49:50,016 Node[0] Epoch[13] Batch [80-100]	Speed: 40995.11 samples/sec	accuracy=nan
2023-03-21 10:49:51,615 Node[0] Epoch[13] Batch [100-120]	Speed: 40844.25 samples/sec	accuracy=nan
2023-03-21 10:49:53,205 Node[0] Epoch[13] Batch [120-140]	Speed: 41038.80 samples/sec	accuracy=nan
2023-03-21 10:49:54,797 Node[0] Epoch[13] Batch [140-160]	Speed: 41007.31 samples/sec	accuracy=nan
2023-03-21 10:49:56,390 Node[0] Epoch[13] Batch [160-180]	Speed: 40986.61 samples/sec	accuracy=nan
2023-03-21 10:49:57,985 Node[0] Epoch[13] Batch [180-200]	Speed: 40927.87 samples/sec	accuracy=nan
2023-03-21 10:49:59,577 Node[0] Epoch[13] Batch [200-220]	Speed: 41004.60 samples/sec	accuracy=nan
2023-03-21 10:50:01,176 Node[0] Epoch[13] Batch [220-240]	Speed: 40831.80 samples/sec	accuracy=nan
2023-03-21 10:50:02,767 Node[0] Epoch[13] Batch [240-260]	Speed: 41030.36 samples/sec	accuracy=nan
2023-03-21 10:50:04,361 Node[0] Epoch[13] Batch [260-280]	Speed: 40954.50 samples/sec	accuracy=nan
2023-03-21 10:50:05,952 Node[0] Epoch[13] Batch [280-300]	Speed: 41018.03 samples/sec	accuracy=nan
2023-03-21 10:50:07,544 Node[0] Epoch[13] Batch [300-320]	Speed: 41007.03 samples/sec	accuracy=nan
2023-03-21 10:50:09,138 Node[0] Epoch[13] Batch [320-340]	Speed: 40964.46 samples/sec	accuracy=nan
2023-03-21 10:50:10,733 Node[0] Epoch[13] Batch [340-360]	Speed: 40924.42 samples/sec	accuracy=nan
2023-03-21 10:50:12,322 Node[0] Epoch[13] Batch [360-380]	Speed: 41067.96 samples/sec	accuracy=nan
2023-03-21 10:50:13,272 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,272 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:13,273 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413813272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 10:50:13,273 Node[0] Epoch[13] Time cost=31.304
:::MLLOG {"namespace": "", "time_ms": 1679413813273, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40926.70677475962}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679413813273, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 10:50:13,273 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:14,946 Node[0] Epoch[14] Batch [0-20]	Speed: 40994.21 samples/sec	accuracy=nan
2023-03-21 10:50:16,536 Node[0] Epoch[14] Batch [20-40]	Speed: 41063.24 samples/sec	accuracy=nan
2023-03-21 10:50:18,128 Node[0] Epoch[14] Batch [40-60]	Speed: 41010.72 samples/sec	accuracy=nan
2023-03-21 10:50:19,717 Node[0] Epoch[14] Batch [60-80]	Speed: 41080.99 samples/sec	accuracy=nan
2023-03-21 10:50:21,310 Node[0] Epoch[14] Batch [80-100]	Speed: 40978.15 samples/sec	accuracy=nan
2023-03-21 10:50:22,906 Node[0] Epoch[14] Batch [100-120]	Speed: 40902.83 samples/sec	accuracy=nan
2023-03-21 10:50:24,502 Node[0] Epoch[14] Batch [120-140]	Speed: 40913.79 samples/sec	accuracy=nan
2023-03-21 10:50:26,094 Node[0] Epoch[14] Batch [140-160]	Speed: 40997.05 samples/sec	accuracy=nan
2023-03-21 10:50:27,686 Node[0] Epoch[14] Batch [160-180]	Speed: 41009.21 samples/sec	accuracy=nan
2023-03-21 10:50:29,280 Node[0] Epoch[14] Batch [180-200]	Speed: 40937.38 samples/sec	accuracy=nan
2023-03-21 10:50:30,873 Node[0] Epoch[14] Batch [200-220]	Speed: 40998.97 samples/sec	accuracy=nan
2023-03-21 10:50:32,465 Node[0] Epoch[14] Batch [220-240]	Speed: 40983.93 samples/sec	accuracy=nan
2023-03-21 10:50:34,059 Node[0] Epoch[14] Batch [240-260]	Speed: 40965.06 samples/sec	accuracy=nan
2023-03-21 10:50:35,652 Node[0] Epoch[14] Batch [260-280]	Speed: 40967.93 samples/sec	accuracy=nan
2023-03-21 10:50:37,242 Node[0] Epoch[14] Batch [280-300]	Speed: 41071.61 samples/sec	accuracy=nan
2023-03-21 10:50:38,835 Node[0] Epoch[14] Batch [300-320]	Speed: 40969.16 samples/sec	accuracy=nan
2023-03-21 10:50:40,424 Node[0] Epoch[14] Batch [320-340]	Speed: 41090.11 samples/sec	accuracy=nan
2023-03-21 10:50:42,017 Node[0] Epoch[14] Batch [340-360]	Speed: 40985.67 samples/sec	accuracy=nan
2023-03-21 10:50:43,610 Node[0] Epoch[14] Batch [360-380]	Speed: 40965.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413844483, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 10:50:44,484 Node[0] Epoch[14] Time cost=31.211
:::MLLOG {"namespace": "", "time_ms": 1679413844484, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41049.16280552522}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679413844559, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 10:50:45,273 Node[0] Epoch[14] Validation-accuracy=0.547200
2023-03-21 10:50:45,273 Node[0] Epoch[14] Validation-correct-count=1710.000000
2023-03-21 10:50:45,273 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413845394, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679413845394, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56428, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-21 10:50:45,394 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413845394, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-21 10:50:45,394 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413845394, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-21 10:50:45,394 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:45,394 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413845394, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 10:50:45,395 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:50:47,000 Node[0] Epoch[15] Batch [0-20]	Speed: 40891.79 samples/sec	accuracy=nan
2023-03-21 10:50:48,590 Node[0] Epoch[15] Batch [20-40]	Speed: 41066.55 samples/sec	accuracy=nan
2023-03-21 10:50:50,182 Node[0] Epoch[15] Batch [40-60]	Speed: 41002.62 samples/sec	accuracy=nan
2023-03-21 10:50:51,773 Node[0] Epoch[15] Batch [60-80]	Speed: 41024.00 samples/sec	accuracy=nan
2023-03-21 10:50:53,365 Node[0] Epoch[15] Batch [80-100]	Speed: 41012.18 samples/sec	accuracy=nan
2023-03-21 10:50:54,958 Node[0] Epoch[15] Batch [100-120]	Speed: 40986.02 samples/sec	accuracy=nan
2023-03-21 10:50:56,552 Node[0] Epoch[15] Batch [120-140]	Speed: 40947.37 samples/sec	accuracy=nan
2023-03-21 10:50:58,144 Node[0] Epoch[15] Batch [140-160]	Speed: 40992.46 samples/sec	accuracy=nan
2023-03-21 10:50:59,737 Node[0] Epoch[15] Batch [160-180]	Speed: 40986.68 samples/sec	accuracy=nan
2023-03-21 10:51:01,329 Node[0] Epoch[15] Batch [180-200]	Speed: 41004.09 samples/sec	accuracy=nan
2023-03-21 10:51:02,922 Node[0] Epoch[15] Batch [200-220]	Speed: 40973.82 samples/sec	accuracy=nan
2023-03-21 10:51:04,517 Node[0] Epoch[15] Batch [220-240]	Speed: 40930.59 samples/sec	accuracy=nan
2023-03-21 10:51:06,109 Node[0] Epoch[15] Batch [240-260]	Speed: 41020.30 samples/sec	accuracy=nan
2023-03-21 10:51:07,702 Node[0] Epoch[15] Batch [260-280]	Speed: 40966.99 samples/sec	accuracy=nan
2023-03-21 10:51:09,296 Node[0] Epoch[15] Batch [280-300]	Speed: 40948.73 samples/sec	accuracy=nan
2023-03-21 10:51:10,890 Node[0] Epoch[15] Batch [300-320]	Speed: 40945.29 samples/sec	accuracy=nan
2023-03-21 10:51:12,481 Node[0] Epoch[15] Batch [320-340]	Speed: 41053.15 samples/sec	accuracy=nan
2023-03-21 10:51:14,084 Node[0] Epoch[15] Batch [340-360]	Speed: 40716.67 samples/sec	accuracy=nan
2023-03-21 10:51:15,678 Node[0] Epoch[15] Batch [360-380]	Speed: 40954.67 samples/sec	accuracy=nan
2023-03-21 10:51:16,632 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,632 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,632 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,632 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,633 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:16,634 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413876633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 10:51:16,634 Node[0] Epoch[15] Time cost=31.239
:::MLLOG {"namespace": "", "time_ms": 1679413876634, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41011.43104107919}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679413876634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 10:51:16,634 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:18,307 Node[0] Epoch[16] Batch [0-20]	Speed: 40959.91 samples/sec	accuracy=nan
2023-03-21 10:51:19,900 Node[0] Epoch[16] Batch [20-40]	Speed: 40984.30 samples/sec	accuracy=nan
2023-03-21 10:51:21,496 Node[0] Epoch[16] Batch [40-60]	Speed: 40902.74 samples/sec	accuracy=nan
2023-03-21 10:51:23,089 Node[0] Epoch[16] Batch [60-80]	Speed: 40977.84 samples/sec	accuracy=nan
2023-03-21 10:51:24,685 Node[0] Epoch[16] Batch [80-100]	Speed: 40913.57 samples/sec	accuracy=nan
2023-03-21 10:51:26,276 Node[0] Epoch[16] Batch [100-120]	Speed: 41024.49 samples/sec	accuracy=nan
2023-03-21 10:51:27,875 Node[0] Epoch[16] Batch [120-140]	Speed: 40816.56 samples/sec	accuracy=nan
2023-03-21 10:51:29,473 Node[0] Epoch[16] Batch [140-160]	Speed: 40847.44 samples/sec	accuracy=nan
2023-03-21 10:51:31,063 Node[0] Epoch[16] Batch [160-180]	Speed: 41066.19 samples/sec	accuracy=nan
2023-03-21 10:51:32,657 Node[0] Epoch[16] Batch [180-200]	Speed: 40956.32 samples/sec	accuracy=nan
2023-03-21 10:51:34,252 Node[0] Epoch[16] Batch [200-220]	Speed: 40926.22 samples/sec	accuracy=nan
2023-03-21 10:51:35,843 Node[0] Epoch[16] Batch [220-240]	Speed: 41026.89 samples/sec	accuracy=nan
2023-03-21 10:51:37,435 Node[0] Epoch[16] Batch [240-260]	Speed: 41019.05 samples/sec	accuracy=nan
2023-03-21 10:51:39,026 Node[0] Epoch[16] Batch [260-280]	Speed: 41010.78 samples/sec	accuracy=nan
2023-03-21 10:51:40,618 Node[0] Epoch[16] Batch [280-300]	Speed: 41007.32 samples/sec	accuracy=nan
2023-03-21 10:51:42,211 Node[0] Epoch[16] Batch [300-320]	Speed: 40982.24 samples/sec	accuracy=nan
2023-03-21 10:51:43,802 Node[0] Epoch[16] Batch [320-340]	Speed: 41042.11 samples/sec	accuracy=nan
2023-03-21 10:51:45,394 Node[0] Epoch[16] Batch [340-360]	Speed: 40983.53 samples/sec	accuracy=nan
2023-03-21 10:51:46,988 Node[0] Epoch[16] Batch [360-380]	Speed: 40956.38 samples/sec	accuracy=nan
2023-03-21 10:51:47,864 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,864 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,864 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,864 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,864 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:47,865 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413907865, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 10:51:47,865 Node[0] Epoch[16] Time cost=31.231
:::MLLOG {"namespace": "", "time_ms": 1679413907865, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41022.35138464612}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679413907866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 10:51:47,866 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:51:49,539 Node[0] Epoch[17] Batch [0-20]	Speed: 41032.87 samples/sec	accuracy=nan
2023-03-21 10:51:51,131 Node[0] Epoch[17] Batch [20-40]	Speed: 40997.95 samples/sec	accuracy=nan
2023-03-21 10:51:52,726 Node[0] Epoch[17] Batch [40-60]	Speed: 40924.81 samples/sec	accuracy=nan
2023-03-21 10:51:54,318 Node[0] Epoch[17] Batch [60-80]	Speed: 41014.19 samples/sec	accuracy=nan
2023-03-21 10:51:55,914 Node[0] Epoch[17] Batch [80-100]	Speed: 40901.21 samples/sec	accuracy=nan
2023-03-21 10:51:57,506 Node[0] Epoch[17] Batch [100-120]	Speed: 41002.89 samples/sec	accuracy=nan
2023-03-21 10:51:59,099 Node[0] Epoch[17] Batch [120-140]	Speed: 40971.95 samples/sec	accuracy=nan
2023-03-21 10:52:00,693 Node[0] Epoch[17] Batch [140-160]	Speed: 40951.09 samples/sec	accuracy=nan
2023-03-21 10:52:02,282 Node[0] Epoch[17] Batch [160-180]	Speed: 41085.64 samples/sec	accuracy=nan
2023-03-21 10:52:03,877 Node[0] Epoch[17] Batch [180-200]	Speed: 40928.03 samples/sec	accuracy=nan
2023-03-21 10:52:05,469 Node[0] Epoch[17] Batch [200-220]	Speed: 41000.68 samples/sec	accuracy=nan
2023-03-21 10:52:07,060 Node[0] Epoch[17] Batch [220-240]	Speed: 41025.87 samples/sec	accuracy=nan
2023-03-21 10:52:08,652 Node[0] Epoch[17] Batch [240-260]	Speed: 41007.73 samples/sec	accuracy=nan
2023-03-21 10:52:10,241 Node[0] Epoch[17] Batch [260-280]	Speed: 41089.95 samples/sec	accuracy=nan
2023-03-21 10:52:11,834 Node[0] Epoch[17] Batch [280-300]	Speed: 40986.16 samples/sec	accuracy=nan
2023-03-21 10:52:13,426 Node[0] Epoch[17] Batch [300-320]	Speed: 40995.29 samples/sec	accuracy=nan
2023-03-21 10:52:15,023 Node[0] Epoch[17] Batch [320-340]	Speed: 40889.05 samples/sec	accuracy=nan
2023-03-21 10:52:16,618 Node[0] Epoch[17] Batch [340-360]	Speed: 40921.40 samples/sec	accuracy=nan
2023-03-21 10:52:18,213 Node[0] Epoch[17] Batch [360-380]	Speed: 40936.24 samples/sec	accuracy=nan
2023-03-21 10:52:19,167 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,167 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:19,168 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413939167, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 10:52:19,168 Node[0] Epoch[17] Time cost=31.302
:::MLLOG {"namespace": "", "time_ms": 1679413939168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40929.112990289075}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679413939169, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 10:52:19,169 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:20,844 Node[0] Epoch[18] Batch [0-20]	Speed: 40950.78 samples/sec	accuracy=nan
2023-03-21 10:52:22,440 Node[0] Epoch[18] Batch [20-40]	Speed: 40900.31 samples/sec	accuracy=nan
2023-03-21 10:52:24,032 Node[0] Epoch[18] Batch [40-60]	Speed: 41025.73 samples/sec	accuracy=nan
2023-03-21 10:52:25,623 Node[0] Epoch[18] Batch [60-80]	Speed: 41023.23 samples/sec	accuracy=nan
2023-03-21 10:52:27,216 Node[0] Epoch[18] Batch [80-100]	Speed: 40971.10 samples/sec	accuracy=nan
2023-03-21 10:52:28,809 Node[0] Epoch[18] Batch [100-120]	Speed: 40983.52 samples/sec	accuracy=nan
2023-03-21 10:52:30,400 Node[0] Epoch[18] Batch [120-140]	Speed: 41037.03 samples/sec	accuracy=nan
2023-03-21 10:52:31,991 Node[0] Epoch[18] Batch [140-160]	Speed: 41011.67 samples/sec	accuracy=nan
2023-03-21 10:52:33,585 Node[0] Epoch[18] Batch [160-180]	Speed: 40957.14 samples/sec	accuracy=nan
2023-03-21 10:52:35,174 Node[0] Epoch[18] Batch [180-200]	Speed: 41082.24 samples/sec	accuracy=nan
2023-03-21 10:52:36,765 Node[0] Epoch[18] Batch [200-220]	Speed: 41032.17 samples/sec	accuracy=nan
2023-03-21 10:52:38,357 Node[0] Epoch[18] Batch [220-240]	Speed: 41013.81 samples/sec	accuracy=nan
2023-03-21 10:52:39,952 Node[0] Epoch[18] Batch [240-260]	Speed: 40918.89 samples/sec	accuracy=nan
2023-03-21 10:52:41,544 Node[0] Epoch[18] Batch [260-280]	Speed: 41027.51 samples/sec	accuracy=nan
2023-03-21 10:52:43,140 Node[0] Epoch[18] Batch [280-300]	Speed: 40898.50 samples/sec	accuracy=nan
2023-03-21 10:52:44,734 Node[0] Epoch[18] Batch [300-320]	Speed: 40933.88 samples/sec	accuracy=nan
2023-03-21 10:52:46,333 Node[0] Epoch[18] Batch [320-340]	Speed: 40831.33 samples/sec	accuracy=nan
2023-03-21 10:52:47,928 Node[0] Epoch[18] Batch [340-360]	Speed: 40936.03 samples/sec	accuracy=nan
2023-03-21 10:52:49,520 Node[0] Epoch[18] Batch [360-380]	Speed: 40989.84 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679413970395, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 10:52:50,396 Node[0] Epoch[18] Time cost=31.227
:::MLLOG {"namespace": "", "time_ms": 1679413970396, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41027.052240930476}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679413970470, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 10:52:51,185 Node[0] Epoch[18] Validation-accuracy=0.649280
2023-03-21 10:52:51,185 Node[0] Epoch[18] Validation-correct-count=2029.000000
2023-03-21 10:52:51,186 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679413971304, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 10:52:51,305 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413971305, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65124, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 10:52:51,305 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413971305, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 10:52:51,305 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413971305, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 10:52:51,305 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:51,305 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679413971305, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 10:52:51,305 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:52:52,910 Node[0] Epoch[19] Batch [0-20]	Speed: 40899.15 samples/sec	accuracy=nan
2023-03-21 10:52:54,504 Node[0] Epoch[19] Batch [20-40]	Speed: 40948.22 samples/sec	accuracy=nan
2023-03-21 10:52:56,095 Node[0] Epoch[19] Batch [40-60]	Speed: 41023.01 samples/sec	accuracy=nan
2023-03-21 10:52:57,686 Node[0] Epoch[19] Batch [60-80]	Speed: 41034.67 samples/sec	accuracy=nan
2023-03-21 10:52:59,279 Node[0] Epoch[19] Batch [80-100]	Speed: 40989.92 samples/sec	accuracy=nan
2023-03-21 10:53:00,872 Node[0] Epoch[19] Batch [100-120]	Speed: 40981.24 samples/sec	accuracy=nan
2023-03-21 10:53:02,462 Node[0] Epoch[19] Batch [120-140]	Speed: 41057.74 samples/sec	accuracy=nan
2023-03-21 10:53:04,050 Node[0] Epoch[19] Batch [140-160]	Speed: 41111.37 samples/sec	accuracy=nan
2023-03-21 10:53:05,641 Node[0] Epoch[19] Batch [160-180]	Speed: 41020.80 samples/sec	accuracy=nan
2023-03-21 10:53:07,231 Node[0] Epoch[19] Batch [180-200]	Speed: 41058.36 samples/sec	accuracy=nan
2023-03-21 10:53:08,823 Node[0] Epoch[19] Batch [200-220]	Speed: 40990.43 samples/sec	accuracy=nan
2023-03-21 10:53:10,416 Node[0] Epoch[19] Batch [220-240]	Speed: 40983.14 samples/sec	accuracy=nan
2023-03-21 10:53:12,008 Node[0] Epoch[19] Batch [240-260]	Speed: 41018.63 samples/sec	accuracy=nan
2023-03-21 10:53:13,602 Node[0] Epoch[19] Batch [260-280]	Speed: 40947.08 samples/sec	accuracy=nan
2023-03-21 10:53:15,192 Node[0] Epoch[19] Batch [280-300]	Speed: 41055.31 samples/sec	accuracy=nan
2023-03-21 10:53:16,784 Node[0] Epoch[19] Batch [300-320]	Speed: 41018.38 samples/sec	accuracy=nan
2023-03-21 10:53:18,376 Node[0] Epoch[19] Batch [320-340]	Speed: 41004.60 samples/sec	accuracy=nan
2023-03-21 10:53:19,968 Node[0] Epoch[19] Batch [340-360]	Speed: 40989.59 samples/sec	accuracy=nan
2023-03-21 10:53:21,560 Node[0] Epoch[19] Batch [360-380]	Speed: 41022.01 samples/sec	accuracy=nan
2023-03-21 10:53:22,514 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,514 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414002514, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 10:53:22,514 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,515 Node[0] Epoch[19] Time cost=31.209
:::MLLOG {"namespace": "", "time_ms": 1679414002515, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41050.633530144914}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
2023-03-21 10:53:22,515 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414002515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 10:53:22,515 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:22,515 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:24,188 Node[0] Epoch[20] Batch [0-20]	Speed: 40968.67 samples/sec	accuracy=nan
2023-03-21 10:53:25,780 Node[0] Epoch[20] Batch [20-40]	Speed: 41005.36 samples/sec	accuracy=nan
2023-03-21 10:53:27,373 Node[0] Epoch[20] Batch [40-60]	Speed: 40963.19 samples/sec	accuracy=nan
2023-03-21 10:53:28,962 Node[0] Epoch[20] Batch [60-80]	Speed: 41091.62 samples/sec	accuracy=nan
2023-03-21 10:53:30,555 Node[0] Epoch[20] Batch [80-100]	Speed: 40966.02 samples/sec	accuracy=nan
2023-03-21 10:53:32,146 Node[0] Epoch[20] Batch [100-120]	Speed: 41028.24 samples/sec	accuracy=nan
2023-03-21 10:53:33,737 Node[0] Epoch[20] Batch [120-140]	Speed: 41052.97 samples/sec	accuracy=nan
2023-03-21 10:53:35,330 Node[0] Epoch[20] Batch [140-160]	Speed: 40972.45 samples/sec	accuracy=nan
2023-03-21 10:53:36,920 Node[0] Epoch[20] Batch [160-180]	Speed: 41040.41 samples/sec	accuracy=nan
2023-03-21 10:53:38,514 Node[0] Epoch[20] Batch [180-200]	Speed: 40968.71 samples/sec	accuracy=nan
2023-03-21 10:53:40,107 Node[0] Epoch[20] Batch [200-220]	Speed: 40962.57 samples/sec	accuracy=nan
2023-03-21 10:53:41,703 Node[0] Epoch[20] Batch [220-240]	Speed: 40904.91 samples/sec	accuracy=nan
2023-03-21 10:53:43,300 Node[0] Epoch[20] Batch [240-260]	Speed: 40899.92 samples/sec	accuracy=nan
2023-03-21 10:53:44,892 Node[0] Epoch[20] Batch [260-280]	Speed: 40993.08 samples/sec	accuracy=nan
2023-03-21 10:53:46,485 Node[0] Epoch[20] Batch [280-300]	Speed: 40968.83 samples/sec	accuracy=nan
2023-03-21 10:53:48,076 Node[0] Epoch[20] Batch [300-320]	Speed: 41035.07 samples/sec	accuracy=nan
2023-03-21 10:53:49,669 Node[0] Epoch[20] Batch [320-340]	Speed: 40992.71 samples/sec	accuracy=nan
2023-03-21 10:53:51,263 Node[0] Epoch[20] Batch [340-360]	Speed: 40958.66 samples/sec	accuracy=nan
2023-03-21 10:53:52,856 Node[0] Epoch[20] Batch [360-380]	Speed: 40958.28 samples/sec	accuracy=nan
2023-03-21 10:53:53,730 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,730 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,730 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414033730, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 10:53:53,731 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[0] Epoch[20] Time cost=31.216
2023-03-21 10:53:53,731 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414033731, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41042.3000857056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 10:53:53,731 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,731 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414033732, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 10:53:53,732 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:53,732 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:53:55,404 Node[0] Epoch[21] Batch [0-20]	Speed: 41027.69 samples/sec	accuracy=nan
2023-03-21 10:53:56,994 Node[0] Epoch[21] Batch [20-40]	Speed: 41056.99 samples/sec	accuracy=nan
2023-03-21 10:53:58,590 Node[0] Epoch[21] Batch [40-60]	Speed: 40916.27 samples/sec	accuracy=nan
2023-03-21 10:54:00,184 Node[0] Epoch[21] Batch [60-80]	Speed: 40937.62 samples/sec	accuracy=nan
2023-03-21 10:54:01,773 Node[0] Epoch[21] Batch [80-100]	Speed: 41102.93 samples/sec	accuracy=nan
2023-03-21 10:54:03,366 Node[0] Epoch[21] Batch [100-120]	Speed: 40967.71 samples/sec	accuracy=nan
2023-03-21 10:54:04,957 Node[0] Epoch[21] Batch [120-140]	Speed: 41040.57 samples/sec	accuracy=nan
2023-03-21 10:54:06,550 Node[0] Epoch[21] Batch [140-160]	Speed: 40974.58 samples/sec	accuracy=nan
2023-03-21 10:54:08,142 Node[0] Epoch[21] Batch [160-180]	Speed: 41009.63 samples/sec	accuracy=nan
2023-03-21 10:54:09,731 Node[0] Epoch[21] Batch [180-200]	Speed: 41070.79 samples/sec	accuracy=nan
2023-03-21 10:54:11,322 Node[0] Epoch[21] Batch [200-220]	Speed: 41035.75 samples/sec	accuracy=nan
2023-03-21 10:54:12,916 Node[0] Epoch[21] Batch [220-240]	Speed: 40964.21 samples/sec	accuracy=nan
2023-03-21 10:54:14,508 Node[0] Epoch[21] Batch [240-260]	Speed: 40995.09 samples/sec	accuracy=nan
2023-03-21 10:54:16,103 Node[0] Epoch[21] Batch [260-280]	Speed: 40936.77 samples/sec	accuracy=nan
2023-03-21 10:54:17,693 Node[0] Epoch[21] Batch [280-300]	Speed: 41056.90 samples/sec	accuracy=nan
2023-03-21 10:54:19,285 Node[0] Epoch[21] Batch [300-320]	Speed: 41004.37 samples/sec	accuracy=nan
2023-03-21 10:54:20,877 Node[0] Epoch[21] Batch [320-340]	Speed: 40993.29 samples/sec	accuracy=nan
2023-03-21 10:54:22,473 Node[0] Epoch[21] Batch [340-360]	Speed: 40902.76 samples/sec	accuracy=nan
2023-03-21 10:54:24,067 Node[0] Epoch[21] Batch [360-380]	Speed: 40965.94 samples/sec	accuracy=nan
2023-03-21 10:54:25,020 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:25,020 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414065020, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 10:54:25,021 Node[0] Epoch[21] Time cost=31.289
:::MLLOG {"namespace": "", "time_ms": 1679414065021, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40946.193122851946}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679414065021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 10:54:25,021 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:26,695 Node[0] Epoch[22] Batch [0-20]	Speed: 40950.93 samples/sec	accuracy=nan
2023-03-21 10:54:28,291 Node[0] Epoch[22] Batch [20-40]	Speed: 40921.50 samples/sec	accuracy=nan
2023-03-21 10:54:29,886 Node[0] Epoch[22] Batch [40-60]	Speed: 40927.74 samples/sec	accuracy=nan
2023-03-21 10:54:31,482 Node[0] Epoch[22] Batch [60-80]	Speed: 40881.32 samples/sec	accuracy=nan
2023-03-21 10:54:33,073 Node[0] Epoch[22] Batch [80-100]	Speed: 41048.81 samples/sec	accuracy=nan
2023-03-21 10:54:34,667 Node[0] Epoch[22] Batch [100-120]	Speed: 40950.58 samples/sec	accuracy=nan
2023-03-21 10:54:36,263 Node[0] Epoch[22] Batch [120-140]	Speed: 40903.98 samples/sec	accuracy=nan
2023-03-21 10:54:37,856 Node[0] Epoch[22] Batch [140-160]	Speed: 40964.99 samples/sec	accuracy=nan
2023-03-21 10:54:39,452 Node[0] Epoch[22] Batch [160-180]	Speed: 40898.44 samples/sec	accuracy=nan
2023-03-21 10:54:41,044 Node[0] Epoch[22] Batch [180-200]	Speed: 41022.34 samples/sec	accuracy=nan
2023-03-21 10:54:42,637 Node[0] Epoch[22] Batch [200-220]	Speed: 40977.00 samples/sec	accuracy=nan
2023-03-21 10:54:44,230 Node[0] Epoch[22] Batch [220-240]	Speed: 40965.32 samples/sec	accuracy=nan
2023-03-21 10:54:45,824 Node[0] Epoch[22] Batch [240-260]	Speed: 40961.43 samples/sec	accuracy=nan
2023-03-21 10:54:47,413 Node[0] Epoch[22] Batch [260-280]	Speed: 41075.14 samples/sec	accuracy=nan
2023-03-21 10:54:49,007 Node[0] Epoch[22] Batch [280-300]	Speed: 40949.87 samples/sec	accuracy=nan
2023-03-21 10:54:50,603 Node[0] Epoch[22] Batch [300-320]	Speed: 40909.13 samples/sec	accuracy=nan
2023-03-21 10:54:52,197 Node[0] Epoch[22] Batch [320-340]	Speed: 40949.84 samples/sec	accuracy=nan
2023-03-21 10:54:53,794 Node[0] Epoch[22] Batch [340-360]	Speed: 40888.33 samples/sec	accuracy=nan
2023-03-21 10:54:55,393 Node[0] Epoch[22] Batch [360-380]	Speed: 40816.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414096266, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 10:54:56,267 Node[0] Epoch[22] Time cost=31.246
:::MLLOG {"namespace": "", "time_ms": 1679414096267, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41002.724919428554}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679414096342, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 10:54:57,102 Node[0] Epoch[22] Validation-accuracy=0.694080
2023-03-21 10:54:57,102 Node[0] Epoch[22] Validation-correct-count=2169.000000
2023-03-21 10:54:57,102 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679414097177, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679414097178, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69724, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-21 10:54:57,178 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414097178, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-21 10:54:57,178 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414097178, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 10:54:57,178 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:57,178 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414097178, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 10:54:57,178 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:54:58,784 Node[0] Epoch[23] Batch [0-20]	Speed: 40919.27 samples/sec	accuracy=nan
2023-03-21 10:55:00,375 Node[0] Epoch[23] Batch [20-40]	Speed: 41025.82 samples/sec	accuracy=nan
2023-03-21 10:55:01,969 Node[0] Epoch[23] Batch [40-60]	Speed: 40972.55 samples/sec	accuracy=nan
2023-03-21 10:55:03,566 Node[0] Epoch[23] Batch [60-80]	Speed: 40858.14 samples/sec	accuracy=nan
2023-03-21 10:55:05,159 Node[0] Epoch[23] Batch [80-100]	Speed: 40992.47 samples/sec	accuracy=nan
2023-03-21 10:55:06,753 Node[0] Epoch[23] Batch [100-120]	Speed: 40944.34 samples/sec	accuracy=nan
2023-03-21 10:55:08,348 Node[0] Epoch[23] Batch [120-140]	Speed: 40937.67 samples/sec	accuracy=nan
2023-03-21 10:55:09,944 Node[0] Epoch[23] Batch [140-160]	Speed: 40891.07 samples/sec	accuracy=nan
2023-03-21 10:55:11,537 Node[0] Epoch[23] Batch [160-180]	Speed: 40988.76 samples/sec	accuracy=nan
2023-03-21 10:55:13,129 Node[0] Epoch[23] Batch [180-200]	Speed: 41008.46 samples/sec	accuracy=nan
2023-03-21 10:55:14,721 Node[0] Epoch[23] Batch [200-220]	Speed: 40992.01 samples/sec	accuracy=nan
2023-03-21 10:55:16,312 Node[0] Epoch[23] Batch [220-240]	Speed: 41025.69 samples/sec	accuracy=nan
2023-03-21 10:55:17,905 Node[0] Epoch[23] Batch [240-260]	Speed: 40985.40 samples/sec	accuracy=nan
2023-03-21 10:55:19,497 Node[0] Epoch[23] Batch [260-280]	Speed: 41006.95 samples/sec	accuracy=nan
2023-03-21 10:55:21,087 Node[0] Epoch[23] Batch [280-300]	Speed: 41052.28 samples/sec	accuracy=nan
2023-03-21 10:55:22,681 Node[0] Epoch[23] Batch [300-320]	Speed: 40949.94 samples/sec	accuracy=nan
2023-03-21 10:55:24,272 Node[0] Epoch[23] Batch [320-340]	Speed: 41052.22 samples/sec	accuracy=nan
2023-03-21 10:55:25,863 Node[0] Epoch[23] Batch [340-360]	Speed: 41021.60 samples/sec	accuracy=nan
2023-03-21 10:55:27,457 Node[0] Epoch[23] Batch [360-380]	Speed: 40944.51 samples/sec	accuracy=nan
2023-03-21 10:55:28,410 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,410 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414128410, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 10:55:28,411 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,411 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:28,411 Node[0] Epoch[23] Time cost=31.233
:::MLLOG {"namespace": "", "time_ms": 1679414128411, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41020.131779811214}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-21 10:55:28,411 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414128412, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 10:55:28,412 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:30,095 Node[0] Epoch[24] Batch [0-20]	Speed: 40688.54 samples/sec	accuracy=nan
2023-03-21 10:55:31,690 Node[0] Epoch[24] Batch [20-40]	Speed: 40933.89 samples/sec	accuracy=nan
2023-03-21 10:55:33,280 Node[0] Epoch[24] Batch [40-60]	Speed: 41042.10 samples/sec	accuracy=nan
2023-03-21 10:55:34,874 Node[0] Epoch[24] Batch [60-80]	Speed: 40961.13 samples/sec	accuracy=nan
2023-03-21 10:55:36,469 Node[0] Epoch[24] Batch [80-100]	Speed: 40929.23 samples/sec	accuracy=nan
2023-03-21 10:55:38,063 Node[0] Epoch[24] Batch [100-120]	Speed: 40957.84 samples/sec	accuracy=nan
2023-03-21 10:55:39,652 Node[0] Epoch[24] Batch [120-140]	Speed: 41077.51 samples/sec	accuracy=nan
2023-03-21 10:55:41,247 Node[0] Epoch[24] Batch [140-160]	Speed: 40922.99 samples/sec	accuracy=nan
2023-03-21 10:55:42,841 Node[0] Epoch[24] Batch [160-180]	Speed: 40961.94 samples/sec	accuracy=nan
2023-03-21 10:55:44,438 Node[0] Epoch[24] Batch [180-200]	Speed: 40876.36 samples/sec	accuracy=nan
2023-03-21 10:55:46,030 Node[0] Epoch[24] Batch [200-220]	Speed: 41000.44 samples/sec	accuracy=nan
2023-03-21 10:55:47,621 Node[0] Epoch[24] Batch [220-240]	Speed: 41038.20 samples/sec	accuracy=nan
2023-03-21 10:55:49,214 Node[0] Epoch[24] Batch [240-260]	Speed: 40986.64 samples/sec	accuracy=nan
2023-03-21 10:55:50,809 Node[0] Epoch[24] Batch [260-280]	Speed: 40917.49 samples/sec	accuracy=nan
2023-03-21 10:55:52,402 Node[0] Epoch[24] Batch [280-300]	Speed: 40993.70 samples/sec	accuracy=nan
2023-03-21 10:55:53,995 Node[0] Epoch[24] Batch [300-320]	Speed: 40954.66 samples/sec	accuracy=nan
2023-03-21 10:55:55,590 Node[0] Epoch[24] Batch [320-340]	Speed: 40942.77 samples/sec	accuracy=nan
2023-03-21 10:55:57,185 Node[0] Epoch[24] Batch [340-360]	Speed: 40932.86 samples/sec	accuracy=nan
2023-03-21 10:55:58,780 Node[0] Epoch[24] Batch [360-380]	Speed: 40917.53 samples/sec	accuracy=nan
2023-03-21 10:55:59,657 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,658 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,658 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,658 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,657 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414159657, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 10:55:59,658 Node[0] Epoch[24] Time cost=31.247
2023-03-21 10:55:59,658 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414159658, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41001.7950997198}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679414159659, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 10:55:59,659 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:55:59,659 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:01,334 Node[0] Epoch[25] Batch [0-20]	Speed: 40954.33 samples/sec	accuracy=nan
2023-03-21 10:56:02,929 Node[0] Epoch[25] Batch [20-40]	Speed: 40919.02 samples/sec	accuracy=nan
2023-03-21 10:56:04,524 Node[0] Epoch[25] Batch [40-60]	Speed: 40930.66 samples/sec	accuracy=nan
2023-03-21 10:56:06,118 Node[0] Epoch[25] Batch [60-80]	Speed: 40951.74 samples/sec	accuracy=nan
2023-03-21 10:56:07,709 Node[0] Epoch[25] Batch [80-100]	Speed: 41025.00 samples/sec	accuracy=nan
2023-03-21 10:56:09,301 Node[0] Epoch[25] Batch [100-120]	Speed: 41019.82 samples/sec	accuracy=nan
2023-03-21 10:56:10,895 Node[0] Epoch[25] Batch [120-140]	Speed: 40941.29 samples/sec	accuracy=nan
2023-03-21 10:56:12,490 Node[0] Epoch[25] Batch [140-160]	Speed: 40925.16 samples/sec	accuracy=nan
2023-03-21 10:56:14,085 Node[0] Epoch[25] Batch [160-180]	Speed: 40922.33 samples/sec	accuracy=nan
2023-03-21 10:56:15,676 Node[0] Epoch[25] Batch [180-200]	Speed: 41037.86 samples/sec	accuracy=nan
2023-03-21 10:56:17,268 Node[0] Epoch[25] Batch [200-220]	Speed: 40999.27 samples/sec	accuracy=nan
2023-03-21 10:56:18,862 Node[0] Epoch[25] Batch [220-240]	Speed: 40970.71 samples/sec	accuracy=nan
2023-03-21 10:56:20,454 Node[0] Epoch[25] Batch [240-260]	Speed: 41001.35 samples/sec	accuracy=nan
2023-03-21 10:56:22,049 Node[0] Epoch[25] Batch [260-280]	Speed: 40917.42 samples/sec	accuracy=nan
2023-03-21 10:56:23,647 Node[0] Epoch[25] Batch [280-300]	Speed: 40863.32 samples/sec	accuracy=nan
2023-03-21 10:56:25,238 Node[0] Epoch[25] Batch [300-320]	Speed: 41017.37 samples/sec	accuracy=nan
2023-03-21 10:56:26,835 Node[0] Epoch[25] Batch [320-340]	Speed: 40887.55 samples/sec	accuracy=nan
2023-03-21 10:56:28,433 Node[0] Epoch[25] Batch [340-360]	Speed: 40849.61 samples/sec	accuracy=nan
2023-03-21 10:56:30,030 Node[0] Epoch[25] Batch [360-380]	Speed: 40867.64 samples/sec	accuracy=nan
2023-03-21 10:56:30,986 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,987 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,987 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,986 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:30,987 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414190986, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 10:56:30,987 Node[0] Epoch[25] Time cost=31.328
2023-03-21 10:56:30,987 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414190987, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40894.722495329996}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679414190988, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 10:56:30,988 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:56:32,661 Node[0] Epoch[26] Batch [0-20]	Speed: 40953.62 samples/sec	accuracy=nan
2023-03-21 10:56:34,253 Node[0] Epoch[26] Batch [20-40]	Speed: 41005.22 samples/sec	accuracy=nan
2023-03-21 10:56:35,847 Node[0] Epoch[26] Batch [40-60]	Speed: 40941.66 samples/sec	accuracy=nan
2023-03-21 10:56:37,442 Node[0] Epoch[26] Batch [60-80]	Speed: 40941.26 samples/sec	accuracy=nan
2023-03-21 10:56:39,036 Node[0] Epoch[26] Batch [80-100]	Speed: 40952.08 samples/sec	accuracy=nan
2023-03-21 10:56:40,630 Node[0] Epoch[26] Batch [100-120]	Speed: 40955.10 samples/sec	accuracy=nan
2023-03-21 10:56:42,227 Node[0] Epoch[26] Batch [120-140]	Speed: 40870.03 samples/sec	accuracy=nan
2023-03-21 10:56:43,817 Node[0] Epoch[26] Batch [140-160]	Speed: 41059.65 samples/sec	accuracy=nan
2023-03-21 10:56:45,411 Node[0] Epoch[26] Batch [160-180]	Speed: 40937.62 samples/sec	accuracy=nan
2023-03-21 10:56:47,006 Node[0] Epoch[26] Batch [180-200]	Speed: 40948.21 samples/sec	accuracy=nan
2023-03-21 10:56:48,600 Node[0] Epoch[26] Batch [200-220]	Speed: 40954.55 samples/sec	accuracy=nan
2023-03-21 10:56:50,199 Node[0] Epoch[26] Batch [220-240]	Speed: 40817.51 samples/sec	accuracy=nan
2023-03-21 10:56:51,795 Node[0] Epoch[26] Batch [240-260]	Speed: 40910.60 samples/sec	accuracy=nan
2023-03-21 10:56:53,389 Node[0] Epoch[26] Batch [260-280]	Speed: 40937.40 samples/sec	accuracy=nan
2023-03-21 10:56:54,987 Node[0] Epoch[26] Batch [280-300]	Speed: 40857.90 samples/sec	accuracy=nan
2023-03-21 10:56:56,583 Node[0] Epoch[26] Batch [300-320]	Speed: 40907.00 samples/sec	accuracy=nan
2023-03-21 10:56:58,178 Node[0] Epoch[26] Batch [320-340]	Speed: 40913.09 samples/sec	accuracy=nan
2023-03-21 10:56:59,771 Node[0] Epoch[26] Batch [340-360]	Speed: 40996.09 samples/sec	accuracy=nan
2023-03-21 10:57:01,365 Node[0] Epoch[26] Batch [360-380]	Speed: 40955.93 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414222238, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 10:57:02,239 Node[0] Epoch[26] Time cost=31.251
:::MLLOG {"namespace": "", "time_ms": 1679414222239, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40995.57058626386}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679414222314, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 10:57:03,036 Node[0] Epoch[26] Validation-accuracy=0.736000
2023-03-21 10:57:03,037 Node[0] Epoch[26] Validation-correct-count=2300.000000
2023-03-21 10:57:03,037 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679414223145, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679414223146, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73084, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679414223146, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 10:57:03,146 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414223146, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 10:57:03,146 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,145 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:03,146 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414223146, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 10:57:03,146 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:04,752 Node[0] Epoch[27] Batch [0-20]	Speed: 40847.98 samples/sec	accuracy=nan
2023-03-21 10:57:06,340 Node[0] Epoch[27] Batch [20-40]	Speed: 41092.80 samples/sec	accuracy=nan
2023-03-21 10:57:07,933 Node[0] Epoch[27] Batch [40-60]	Speed: 40978.83 samples/sec	accuracy=nan
2023-03-21 10:57:09,526 Node[0] Epoch[27] Batch [60-80]	Speed: 40997.52 samples/sec	accuracy=nan
2023-03-21 10:57:11,115 Node[0] Epoch[27] Batch [80-100]	Speed: 41074.05 samples/sec	accuracy=nan
2023-03-21 10:57:12,710 Node[0] Epoch[27] Batch [100-120]	Speed: 40929.10 samples/sec	accuracy=nan
2023-03-21 10:57:14,301 Node[0] Epoch[27] Batch [120-140]	Speed: 41033.42 samples/sec	accuracy=nan
2023-03-21 10:57:15,893 Node[0] Epoch[27] Batch [140-160]	Speed: 41014.03 samples/sec	accuracy=nan
2023-03-21 10:57:17,485 Node[0] Epoch[27] Batch [160-180]	Speed: 40993.86 samples/sec	accuracy=nan
2023-03-21 10:57:19,080 Node[0] Epoch[27] Batch [180-200]	Speed: 40920.74 samples/sec	accuracy=nan
2023-03-21 10:57:20,675 Node[0] Epoch[27] Batch [200-220]	Speed: 40928.01 samples/sec	accuracy=nan
2023-03-21 10:57:22,265 Node[0] Epoch[27] Batch [220-240]	Speed: 41063.66 samples/sec	accuracy=nan
2023-03-21 10:57:23,860 Node[0] Epoch[27] Batch [240-260]	Speed: 40923.48 samples/sec	accuracy=nan
2023-03-21 10:57:25,453 Node[0] Epoch[27] Batch [260-280]	Speed: 40975.96 samples/sec	accuracy=nan
2023-03-21 10:57:27,045 Node[0] Epoch[27] Batch [280-300]	Speed: 41018.46 samples/sec	accuracy=nan
2023-03-21 10:57:28,639 Node[0] Epoch[27] Batch [300-320]	Speed: 40959.14 samples/sec	accuracy=nan
2023-03-21 10:57:30,232 Node[0] Epoch[27] Batch [320-340]	Speed: 40978.68 samples/sec	accuracy=nan
2023-03-21 10:57:31,826 Node[0] Epoch[27] Batch [340-360]	Speed: 40936.78 samples/sec	accuracy=nan
2023-03-21 10:57:33,417 Node[0] Epoch[27] Batch [360-380]	Speed: 41030.37 samples/sec	accuracy=nan
2023-03-21 10:57:34,371 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,372 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,371 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414254371, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 10:57:34,372 Node[0] Epoch[27] Time cost=31.226
2023-03-21 10:57:34,372 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:34,372 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414254372, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41028.97154231791}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-21 10:57:34,372 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414254373, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 10:57:34,373 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:57:36,049 Node[0] Epoch[28] Batch [0-20]	Speed: 40898.60 samples/sec	accuracy=nan
2023-03-21 10:57:37,640 Node[0] Epoch[28] Batch [20-40]	Speed: 41026.75 samples/sec	accuracy=nan
2023-03-21 10:57:39,232 Node[0] Epoch[28] Batch [40-60]	Speed: 41009.29 samples/sec	accuracy=nan
2023-03-21 10:57:40,826 Node[0] Epoch[28] Batch [60-80]	Speed: 40958.47 samples/sec	accuracy=nan
2023-03-21 10:57:42,418 Node[0] Epoch[28] Batch [80-100]	Speed: 40988.29 samples/sec	accuracy=nan
2023-03-21 10:57:44,014 Node[0] Epoch[28] Batch [100-120]	Speed: 40904.62 samples/sec	accuracy=nan
2023-03-21 10:57:45,609 Node[0] Epoch[28] Batch [120-140]	Speed: 40924.06 samples/sec	accuracy=nan
2023-03-21 10:57:47,203 Node[0] Epoch[28] Batch [140-160]	Speed: 40965.48 samples/sec	accuracy=nan
2023-03-21 10:57:48,800 Node[0] Epoch[28] Batch [160-180]	Speed: 40884.24 samples/sec	accuracy=nan
2023-03-21 10:57:50,395 Node[0] Epoch[28] Batch [180-200]	Speed: 40919.21 samples/sec	accuracy=nan
2023-03-21 10:57:51,985 Node[0] Epoch[28] Batch [200-220]	Speed: 41062.33 samples/sec	accuracy=nan
2023-03-21 10:57:53,583 Node[0] Epoch[28] Batch [220-240]	Speed: 40847.22 samples/sec	accuracy=nan
2023-03-21 10:57:55,176 Node[0] Epoch[28] Batch [240-260]	Speed: 40975.29 samples/sec	accuracy=nan
2023-03-21 10:57:56,770 Node[0] Epoch[28] Batch [260-280]	Speed: 40970.38 samples/sec	accuracy=nan
2023-03-21 10:57:58,363 Node[0] Epoch[28] Batch [280-300]	Speed: 40952.85 samples/sec	accuracy=nan
2023-03-21 10:57:59,954 Node[0] Epoch[28] Batch [300-320]	Speed: 41034.96 samples/sec	accuracy=nan
2023-03-21 10:58:01,548 Node[0] Epoch[28] Batch [320-340]	Speed: 40964.72 samples/sec	accuracy=nan
2023-03-21 10:58:03,141 Node[0] Epoch[28] Batch [340-360]	Speed: 40976.73 samples/sec	accuracy=nan
2023-03-21 10:58:04,731 Node[0] Epoch[28] Batch [360-380]	Speed: 41062.15 samples/sec	accuracy=nan
2023-03-21 10:58:05,607 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,607 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414285607, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 10:58:05,608 Node[0] Epoch[28] Time cost=31.235
:::MLLOG {"namespace": "", "time_ms": 1679414285608, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 41016.81284150788}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 10:58:05,608 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:05,608 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414285608, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 10:58:05,608 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:07,281 Node[0] Epoch[29] Batch [0-20]	Speed: 41066.71 samples/sec	accuracy=nan
2023-03-21 10:58:08,873 Node[0] Epoch[29] Batch [20-40]	Speed: 40990.22 samples/sec	accuracy=nan
2023-03-21 10:58:10,466 Node[0] Epoch[29] Batch [40-60]	Speed: 40971.88 samples/sec	accuracy=nan
2023-03-21 10:58:12,062 Node[0] Epoch[29] Batch [60-80]	Speed: 40919.75 samples/sec	accuracy=nan
2023-03-21 10:58:13,655 Node[0] Epoch[29] Batch [80-100]	Speed: 40984.66 samples/sec	accuracy=nan
2023-03-21 10:58:15,249 Node[0] Epoch[29] Batch [100-120]	Speed: 40952.39 samples/sec	accuracy=nan
2023-03-21 10:58:16,842 Node[0] Epoch[29] Batch [120-140]	Speed: 40979.86 samples/sec	accuracy=nan
2023-03-21 10:58:18,435 Node[0] Epoch[29] Batch [140-160]	Speed: 40980.46 samples/sec	accuracy=nan
2023-03-21 10:58:20,031 Node[0] Epoch[29] Batch [160-180]	Speed: 40888.35 samples/sec	accuracy=nan
2023-03-21 10:58:21,627 Node[0] Epoch[29] Batch [180-200]	Speed: 40916.72 samples/sec	accuracy=nan
2023-03-21 10:58:23,222 Node[0] Epoch[29] Batch [200-220]	Speed: 40909.50 samples/sec	accuracy=nan
2023-03-21 10:58:24,821 Node[0] Epoch[29] Batch [220-240]	Speed: 40829.89 samples/sec	accuracy=nan
2023-03-21 10:58:26,414 Node[0] Epoch[29] Batch [240-260]	Speed: 40978.02 samples/sec	accuracy=nan
2023-03-21 10:58:28,008 Node[0] Epoch[29] Batch [260-280]	Speed: 40947.85 samples/sec	accuracy=nan
2023-03-21 10:58:29,605 Node[0] Epoch[29] Batch [280-300]	Speed: 40893.14 samples/sec	accuracy=nan
2023-03-21 10:58:31,200 Node[0] Epoch[29] Batch [300-320]	Speed: 40917.57 samples/sec	accuracy=nan
2023-03-21 10:58:32,796 Node[0] Epoch[29] Batch [320-340]	Speed: 40909.18 samples/sec	accuracy=nan
2023-03-21 10:58:34,390 Node[0] Epoch[29] Batch [340-360]	Speed: 40950.97 samples/sec	accuracy=nan
2023-03-21 10:58:35,983 Node[0] Epoch[29] Batch [360-380]	Speed: 40983.84 samples/sec	accuracy=nan
2023-03-21 10:58:36,938 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,938 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,939 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414316938, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 10:58:36,939 Node[0] Epoch[29] Time cost=31.331
:::MLLOG {"namespace": "", "time_ms": 1679414316939, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40891.707608642624}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679414316940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 10:58:36,940 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:36,940 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:58:38,615 Node[0] Epoch[30] Batch [0-20]	Speed: 40901.25 samples/sec	accuracy=nan
2023-03-21 10:58:40,210 Node[0] Epoch[30] Batch [20-40]	Speed: 40925.07 samples/sec	accuracy=nan
2023-03-21 10:58:41,804 Node[0] Epoch[30] Batch [40-60]	Speed: 40963.66 samples/sec	accuracy=nan
2023-03-21 10:58:43,401 Node[0] Epoch[30] Batch [60-80]	Speed: 40883.36 samples/sec	accuracy=nan
2023-03-21 10:58:44,997 Node[0] Epoch[30] Batch [80-100]	Speed: 40906.16 samples/sec	accuracy=nan
2023-03-21 10:58:46,594 Node[0] Epoch[30] Batch [100-120]	Speed: 40865.65 samples/sec	accuracy=nan
2023-03-21 10:58:48,190 Node[0] Epoch[30] Batch [120-140]	Speed: 40892.34 samples/sec	accuracy=nan
2023-03-21 10:58:49,786 Node[0] Epoch[30] Batch [140-160]	Speed: 40918.78 samples/sec	accuracy=nan
2023-03-21 10:58:51,378 Node[0] Epoch[30] Batch [160-180]	Speed: 40992.67 samples/sec	accuracy=nan
2023-03-21 10:58:52,972 Node[0] Epoch[30] Batch [180-200]	Speed: 40954.44 samples/sec	accuracy=nan
2023-03-21 10:58:54,565 Node[0] Epoch[30] Batch [200-220]	Speed: 40988.51 samples/sec	accuracy=nan
2023-03-21 10:58:56,158 Node[0] Epoch[30] Batch [220-240]	Speed: 40966.29 samples/sec	accuracy=nan
2023-03-21 10:58:57,749 Node[0] Epoch[30] Batch [240-260]	Speed: 41032.30 samples/sec	accuracy=nan
2023-03-21 10:58:59,343 Node[0] Epoch[30] Batch [260-280]	Speed: 40965.85 samples/sec	accuracy=nan
2023-03-21 10:59:00,934 Node[0] Epoch[30] Batch [280-300]	Speed: 41034.40 samples/sec	accuracy=nan
2023-03-21 10:59:02,527 Node[0] Epoch[30] Batch [300-320]	Speed: 40983.93 samples/sec	accuracy=nan
2023-03-21 10:59:04,118 Node[0] Epoch[30] Batch [320-340]	Speed: 41008.75 samples/sec	accuracy=nan
2023-03-21 10:59:05,714 Node[0] Epoch[30] Batch [340-360]	Speed: 40914.87 samples/sec	accuracy=nan
2023-03-21 10:59:07,313 Node[0] Epoch[30] Batch [360-380]	Speed: 40822.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414348189, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 10:59:08,190 Node[0] Epoch[30] Time cost=31.250
:::MLLOG {"namespace": "", "time_ms": 1679414348190, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40996.91986804702}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679414348264, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 10:59:08,998 Node[0] Epoch[30] Validation-accuracy=0.744320
2023-03-21 10:59:08,998 Node[0] Epoch[30] Validation-correct-count=2326.000000
2023-03-21 10:59:08,998 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679414349096, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679414349096, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7529, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679414349096, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 10:59:09,096 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414349096, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 10:59:09,096 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414349097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 10:59:09,096 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,096 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:09,097 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:10,701 Node[0] Epoch[31] Batch [0-20]	Speed: 40905.96 samples/sec	accuracy=nan
2023-03-21 10:59:12,296 Node[0] Epoch[31] Batch [20-40]	Speed: 40923.15 samples/sec	accuracy=nan
2023-03-21 10:59:13,889 Node[0] Epoch[31] Batch [40-60]	Speed: 40991.64 samples/sec	accuracy=nan
2023-03-21 10:59:15,481 Node[0] Epoch[31] Batch [60-80]	Speed: 40989.92 samples/sec	accuracy=nan
2023-03-21 10:59:17,078 Node[0] Epoch[31] Batch [80-100]	Speed: 40884.12 samples/sec	accuracy=nan
2023-03-21 10:59:18,671 Node[0] Epoch[31] Batch [100-120]	Speed: 40975.74 samples/sec	accuracy=nan
2023-03-21 10:59:20,266 Node[0] Epoch[31] Batch [120-140]	Speed: 40931.37 samples/sec	accuracy=nan
2023-03-21 10:59:21,864 Node[0] Epoch[31] Batch [140-160]	Speed: 40859.48 samples/sec	accuracy=nan
2023-03-21 10:59:23,460 Node[0] Epoch[31] Batch [160-180]	Speed: 40902.72 samples/sec	accuracy=nan
2023-03-21 10:59:25,050 Node[0] Epoch[31] Batch [180-200]	Speed: 41048.84 samples/sec	accuracy=nan
2023-03-21 10:59:26,645 Node[0] Epoch[31] Batch [200-220]	Speed: 40938.13 samples/sec	accuracy=nan
2023-03-21 10:59:28,238 Node[0] Epoch[31] Batch [220-240]	Speed: 40975.64 samples/sec	accuracy=nan
2023-03-21 10:59:29,837 Node[0] Epoch[31] Batch [240-260]	Speed: 40828.82 samples/sec	accuracy=nan
2023-03-21 10:59:31,436 Node[0] Epoch[31] Batch [260-280]	Speed: 40821.60 samples/sec	accuracy=nan
2023-03-21 10:59:33,028 Node[0] Epoch[31] Batch [280-300]	Speed: 40997.77 samples/sec	accuracy=nan
2023-03-21 10:59:34,622 Node[0] Epoch[31] Batch [300-320]	Speed: 40953.46 samples/sec	accuracy=nan
2023-03-21 10:59:36,217 Node[0] Epoch[31] Batch [320-340]	Speed: 40920.77 samples/sec	accuracy=nan
2023-03-21 10:59:37,813 Node[0] Epoch[31] Batch [340-360]	Speed: 40915.37 samples/sec	accuracy=nan
2023-03-21 10:59:39,409 Node[0] Epoch[31] Batch [360-380]	Speed: 40908.00 samples/sec	accuracy=nan
2023-03-21 10:59:40,362 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,362 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,363 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414380362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 10:59:40,363 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:40,363 Node[0] Epoch[31] Time cost=31.267
2023-03-21 10:59:40,363 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414380363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40975.63321679962}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679414380364, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 10:59:40,364 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 10:59:42,038 Node[0] Epoch[32] Batch [0-20]	Speed: 40906.30 samples/sec	accuracy=nan
2023-03-21 10:59:43,633 Node[0] Epoch[32] Batch [20-40]	Speed: 40950.60 samples/sec	accuracy=nan
2023-03-21 10:59:45,229 Node[0] Epoch[32] Batch [40-60]	Speed: 40888.72 samples/sec	accuracy=nan
2023-03-21 10:59:46,824 Node[0] Epoch[32] Batch [60-80]	Speed: 40919.86 samples/sec	accuracy=nan
2023-03-21 10:59:48,421 Node[0] Epoch[32] Batch [80-100]	Speed: 40896.72 samples/sec	accuracy=nan
2023-03-21 10:59:50,018 Node[0] Epoch[32] Batch [100-120]	Speed: 40869.64 samples/sec	accuracy=nan
2023-03-21 10:59:51,613 Node[0] Epoch[32] Batch [120-140]	Speed: 40911.92 samples/sec	accuracy=nan
2023-03-21 10:59:53,208 Node[0] Epoch[32] Batch [140-160]	Speed: 40932.70 samples/sec	accuracy=nan
2023-03-21 10:59:54,801 Node[0] Epoch[32] Batch [160-180]	Speed: 40978.43 samples/sec	accuracy=nan
2023-03-21 10:59:56,397 Node[0] Epoch[32] Batch [180-200]	Speed: 40911.61 samples/sec	accuracy=nan
2023-03-21 10:59:57,994 Node[0] Epoch[32] Batch [200-220]	Speed: 40867.90 samples/sec	accuracy=nan
2023-03-21 10:59:59,589 Node[0] Epoch[32] Batch [220-240]	Speed: 40949.55 samples/sec	accuracy=nan
2023-03-21 11:00:01,183 Node[0] Epoch[32] Batch [240-260]	Speed: 40951.56 samples/sec	accuracy=nan
2023-03-21 11:00:02,776 Node[0] Epoch[32] Batch [260-280]	Speed: 40955.48 samples/sec	accuracy=nan
2023-03-21 11:00:04,375 Node[0] Epoch[32] Batch [280-300]	Speed: 40844.03 samples/sec	accuracy=nan
2023-03-21 11:00:05,968 Node[0] Epoch[32] Batch [300-320]	Speed: 40971.47 samples/sec	accuracy=nan
2023-03-21 11:00:07,564 Node[0] Epoch[32] Batch [320-340]	Speed: 40908.82 samples/sec	accuracy=nan
2023-03-21 11:00:09,157 Node[0] Epoch[32] Batch [340-360]	Speed: 40981.73 samples/sec	accuracy=nan
2023-03-21 11:00:10,751 Node[0] Epoch[32] Batch [360-380]	Speed: 40944.05 samples/sec	accuracy=nan
2023-03-21 11:00:11,627 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,627 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414411628, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 11:00:11,628 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:11,628 Node[0] Epoch[32] Time cost=31.265
:::MLLOG {"namespace": "", "time_ms": 1679414411628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40978.22455936487}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679414411629, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 11:00:11,629 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:13,302 Node[0] Epoch[33] Batch [0-20]	Speed: 41001.92 samples/sec	accuracy=nan
2023-03-21 11:00:14,899 Node[0] Epoch[33] Batch [20-40]	Speed: 40865.86 samples/sec	accuracy=nan
2023-03-21 11:00:16,493 Node[0] Epoch[33] Batch [40-60]	Speed: 40956.94 samples/sec	accuracy=nan
2023-03-21 11:00:18,088 Node[0] Epoch[33] Batch [60-80]	Speed: 40928.30 samples/sec	accuracy=nan
2023-03-21 11:00:19,683 Node[0] Epoch[33] Batch [80-100]	Speed: 40919.39 samples/sec	accuracy=nan
2023-03-21 11:00:21,276 Node[0] Epoch[33] Batch [100-120]	Speed: 40985.35 samples/sec	accuracy=nan
2023-03-21 11:00:22,867 Node[0] Epoch[33] Batch [120-140]	Speed: 41025.23 samples/sec	accuracy=nan
2023-03-21 11:00:24,463 Node[0] Epoch[33] Batch [140-160]	Speed: 40912.38 samples/sec	accuracy=nan
2023-03-21 11:00:26,058 Node[0] Epoch[33] Batch [160-180]	Speed: 40913.87 samples/sec	accuracy=nan
2023-03-21 11:00:27,652 Node[0] Epoch[33] Batch [180-200]	Speed: 40961.40 samples/sec	accuracy=nan
2023-03-21 11:00:29,249 Node[0] Epoch[33] Batch [200-220]	Speed: 40888.71 samples/sec	accuracy=nan
2023-03-21 11:00:30,846 Node[0] Epoch[33] Batch [220-240]	Speed: 40867.58 samples/sec	accuracy=nan
2023-03-21 11:00:32,442 Node[0] Epoch[33] Batch [240-260]	Speed: 40897.60 samples/sec	accuracy=nan
2023-03-21 11:00:34,035 Node[0] Epoch[33] Batch [260-280]	Speed: 40972.81 samples/sec	accuracy=nan
2023-03-21 11:00:35,632 Node[0] Epoch[33] Batch [280-300]	Speed: 40881.70 samples/sec	accuracy=nan
2023-03-21 11:00:37,229 Node[0] Epoch[33] Batch [300-320]	Speed: 40892.62 samples/sec	accuracy=nan
2023-03-21 11:00:38,825 Node[0] Epoch[33] Batch [320-340]	Speed: 40885.64 samples/sec	accuracy=nan
2023-03-21 11:00:40,418 Node[0] Epoch[33] Batch [340-360]	Speed: 40975.02 samples/sec	accuracy=nan
2023-03-21 11:00:42,014 Node[0] Epoch[33] Batch [360-380]	Speed: 40918.61 samples/sec	accuracy=nan
2023-03-21 11:00:42,966 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,966 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,967 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679414442967, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 11:00:42,968 Node[0] Epoch[33] Time cost=31.339
:::MLLOG {"namespace": "", "time_ms": 1679414442968, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40881.28683242971}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679414442968, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 11:00:42,968 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:42,968 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 11:00:44,642 Node[0] Epoch[34] Batch [0-20]	Speed: 40943.98 samples/sec	accuracy=nan
2023-03-21 11:00:46,233 Node[0] Epoch[34] Batch [20-40]	Speed: 41024.11 samples/sec	accuracy=nan
2023-03-21 11:00:47,826 Node[0] Epoch[34] Batch [40-60]	Speed: 40983.12 samples/sec	accuracy=nan
2023-03-21 11:00:49,419 Node[0] Epoch[34] Batch [60-80]	Speed: 40996.17 samples/sec	accuracy=nan
2023-03-21 11:00:51,010 Node[0] Epoch[34] Batch [80-100]	Speed: 41015.67 samples/sec	accuracy=nan
2023-03-21 11:00:52,605 Node[0] Epoch[34] Batch [100-120]	Speed: 40939.31 samples/sec	accuracy=nan
2023-03-21 11:00:54,198 Node[0] Epoch[34] Batch [120-140]	Speed: 40972.57 samples/sec	accuracy=nan
2023-03-21 11:00:55,792 Node[0] Epoch[34] Batch [140-160]	Speed: 40957.65 samples/sec	accuracy=nan
2023-03-21 11:00:57,386 Node[0] Epoch[34] Batch [160-180]	Speed: 40949.93 samples/sec	accuracy=nan
2023-03-21 11:00:58,980 Node[0] Epoch[34] Batch [180-200]	Speed: 40952.75 samples/sec	accuracy=nan
2023-03-21 11:01:00,576 Node[0] Epoch[34] Batch [200-220]	Speed: 40915.32 samples/sec	accuracy=nan
2023-03-21 11:01:02,166 Node[0] Epoch[34] Batch [220-240]	Speed: 41038.10 samples/sec	accuracy=nan
2023-03-21 11:01:03,761 Node[0] Epoch[34] Batch [240-260]	Speed: 40939.53 samples/sec	accuracy=nan
2023-03-21 11:01:05,357 Node[0] Epoch[34] Batch [260-280]	Speed: 40902.49 samples/sec	accuracy=nan
2023-03-21 11:01:06,955 Node[0] Epoch[34] Batch [280-300]	Speed: 40853.99 samples/sec	accuracy=nan
2023-03-21 11:01:08,550 Node[0] Epoch[34] Batch [300-320]	Speed: 40927.79 samples/sec	accuracy=nan
2023-03-21 11:01:10,141 Node[0] Epoch[34] Batch [320-340]	Speed: 41018.05 samples/sec	accuracy=nan
2023-03-21 11:01:11,737 Node[0] Epoch[34] Batch [340-360]	Speed: 40893.80 samples/sec	accuracy=nan
2023-03-21 11:01:13,331 Node[0] Epoch[34] Batch [360-380]	Speed: 40952.52 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679414474286, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 11:01:14,286 Node[0] Epoch[34] Time cost=31.318
:::MLLOG {"namespace": "", "time_ms": 1679414474286, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40908.171352372956}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679414474361, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 11:01:15,118 Node[0] Epoch[34] Validation-accuracy=0.770880
2023-03-21 11:01:15,118 Node[0] Epoch[34] Validation-correct-count=2409.000000
2023-03-21 11:01:15,118 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679414475209, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679414475209, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76052, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679414475210, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679414475210, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414498
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:38 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:38 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:38 AM
+ result=1274
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1274,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414499
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:39 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:39 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:39 AM
+ result=1275
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1275,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679414500
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:01:40 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:01:40 AM'
ENDING TIMING RUN AT 2023-03-21 11:01:40 AM
+ result=1276
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1276,root,2023-03-21 10:40:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1276,root,2023-03-21 10:40:24 AM'
+ export PROFILE=0
+ PROFILE=0
