+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 '
+ echo 'hosts=node044 node045 '
hosts=node044 node045 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679455007145, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455007180, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455007182, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455007183, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455007185, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679455020253, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679455025334, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455025369, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455025371, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455025372, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455025373, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679455037043, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=4812
+ SEED=4812
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ date +%s
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ date +%s
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ start=1679455038
+ start=1679455038
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:18 PM'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ start_fmt='2023-03-21 10:17:18 PM'
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
+ EVAL_PERIOD=4
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ readonly global_rank=0
+ global_rank=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly local_rank=0
+ local_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ SLURM_NTASKS_PER_NODE=4
+ DALI_CROP_BUFFER_HINT=165581
+ OPTIMIZER=sgdwfastlars
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ BATCHSIZE=408
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ INPUT_BATCH_MULTIPLIER=1
+ NETWORK=resnet-v1b-stats-fl
+ KVSTORE=horovod
+ BN_GROUP=1
+ LR=12.5
+ PROFILE=0
+ MOM=0.9
+ PROFILE_EXCEL=0
+ LRSCHED=pow2
+ NODALI=0
+ WARMUP_EPOCHS=2
+ NUMEXAMPLES=
+ LARSETA=0.001
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ [[ 0 == 1 ]]
+ LABELSMOOTHING=0.1
+ DATAROOT=/data
+ SEED=4812
+ EVAL_OFFSET=2
+ echo 'running benchmark'
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ DALI_NVJPEG_MEMPADDING=256
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ [[ 0 -ge 1 ]]
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679455038
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:18 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679455038
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:17:18 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ date +%s
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ date +%s
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679455038
+ start=1679455038
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start_fmt='2023-03-21 10:17:18 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ KVSTORE=horovod
+ LR=12.5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DATAROOT=/data
+ echo 'running benchmark'
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
running benchmark
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679455038
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679455038
+ start_fmt='2023-03-21 10:17:18 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ date '+%Y-%m-%d %r'
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 10:17:18 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:17:18 PM'
STARTING TIMING RUN AT 2023-03-21 10:17:18 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4812
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4812 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:124626] MCW rank 1 is not bound (or bound to all available processors)
[node044:124635] MCW rank 0 is not bound (or bound to all available processors)
[node044:124627] MCW rank 2 is not bound (or bound to all available processors)
[node044:124647] MCW rank 3 is not bound (or bound to all available processors)
[node045:115508] MCW rank 5 is not bound (or bound to all available processors)
[node045:115498] MCW rank 4 is not bound (or bound to all available processors)
[node045:115496] MCW rank 6 is not bound (or bound to all available processors)
[node045:115507] MCW rank 7 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679455042926, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679455050234, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4812, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:17:30] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679455052245, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:17:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679455057085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057094, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057094, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057094, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057094, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057095, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057095, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057095, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057095, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057096, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057096, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057096, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057096, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057097, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057097, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057097, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057097, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057097, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057098, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057098, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057098, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057098, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057099, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057099, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057099, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057099, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057100, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057100, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057100, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057100, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057101, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057101, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057101, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057101, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057102, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057102, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057102, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057102, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057103, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057103, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057103, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057103, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057103, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057104, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057104, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057104, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057105, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057105, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057105, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057105, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057106, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057106, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057106, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057106, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057106, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057107, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057107, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057107, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057108, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057108, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057108, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057108, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057108, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057109, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057109, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057109, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057109, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057110, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057110, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057110, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057111, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057111, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057111, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057111, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057112, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057112, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057112, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057112, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057113, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057113, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057113, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057113, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057114, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057114, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057114, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057115, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057115, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057115, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057116, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057116, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057116, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057116, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057116, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057117, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057117, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057117, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057117, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057118, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057118, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057118, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057118, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057119, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057119, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057119, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057119, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057120, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057120, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057120, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057120, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057122, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057122, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057122, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057122, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057123, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057123, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057123, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057123, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057124, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057124, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057124, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057124, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057125, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057125, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057125, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679455057125, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3336, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32036, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26911, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10976, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20818, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59367, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62404, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:17:38,761 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28413, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679455058762, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679455058763, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679455058763, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679455058763, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679455058764, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679455058765, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679455147054, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679455147055, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679455147055, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679455147670, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679455147827, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455147828, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 22:19:10,842 Node[0] Epoch[0] Batch [0-20]	Speed: 21713.39 samples/sec	accuracy=nan
2023-03-21 22:19:13,839 Node[0] Epoch[0] Batch [20-40]	Speed: 21785.31 samples/sec	accuracy=nan
2023-03-21 22:19:16,842 Node[0] Epoch[0] Batch [40-60]	Speed: 21734.08 samples/sec	accuracy=nan
2023-03-21 22:19:19,863 Node[0] Epoch[0] Batch [60-80]	Speed: 21608.92 samples/sec	accuracy=nan
2023-03-21 22:19:22,889 Node[0] Epoch[0] Batch [80-100]	Speed: 21578.73 samples/sec	accuracy=nan
2023-03-21 22:19:25,920 Node[0] Epoch[0] Batch [100-120]	Speed: 21537.18 samples/sec	accuracy=nan
2023-03-21 22:19:28,938 Node[0] Epoch[0] Batch [120-140]	Speed: 21627.08 samples/sec	accuracy=nan
2023-03-21 22:19:31,952 Node[0] Epoch[0] Batch [140-160]	Speed: 21659.28 samples/sec	accuracy=nan
2023-03-21 22:19:34,972 Node[0] Epoch[0] Batch [160-180]	Speed: 21619.21 samples/sec	accuracy=nan
2023-03-21 22:19:38,023 Node[0] Epoch[0] Batch [180-200]	Speed: 21390.20 samples/sec	accuracy=nan
2023-03-21 22:19:43,282 Node[0] Epoch[0] Batch [200-220]	Speed: 12413.31 samples/sec	accuracy=nan
2023-03-21 22:19:51,201 Node[0] Epoch[0] Batch [220-240]	Speed: 8244.08 samples/sec	accuracy=nan
2023-03-21 22:19:58,781 Node[0] Epoch[0] Batch [240-260]	Speed: 8611.98 samples/sec	accuracy=nan
2023-03-21 22:20:04,046 Node[0] Epoch[0] Batch [260-280]	Speed: 12397.75 samples/sec	accuracy=nan
2023-03-21 22:20:07,058 Node[0] Epoch[0] Batch [280-300]	Speed: 21678.71 samples/sec	accuracy=nan
2023-03-21 22:20:10,074 Node[0] Epoch[0] Batch [300-320]	Speed: 21638.47 samples/sec	accuracy=nan
2023-03-21 22:20:13,097 Node[0] Epoch[0] Batch [320-340]	Speed: 21599.05 samples/sec	accuracy=nan
2023-03-21 22:20:16,128 Node[0] Epoch[0] Batch [340-360]	Speed: 21531.94 samples/sec	accuracy=nan
2023-03-21 22:20:19,159 Node[0] Epoch[0] Batch [360-380]	Speed: 21545.06 samples/sec	accuracy=nan
2023-03-21 22:20:20,975 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:20,975 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:20,975 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:20,975 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455220974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 22:20:20,975 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:20,975 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:20,975 Node[0] Epoch[0] Time cost=73.147
2023-03-21 22:20:20,975 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455220975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17514.92349632888}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679455220976, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 22:20:20,977 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:20:24,163 Node[0] Epoch[1] Batch [0-20]	Speed: 21496.34 samples/sec	accuracy=nan
2023-03-21 22:20:27,201 Node[0] Epoch[1] Batch [20-40]	Speed: 21488.39 samples/sec	accuracy=nan
2023-03-21 22:20:30,240 Node[0] Epoch[1] Batch [40-60]	Speed: 21481.47 samples/sec	accuracy=nan
2023-03-21 22:20:33,281 Node[0] Epoch[1] Batch [60-80]	Speed: 21465.02 samples/sec	accuracy=nan
2023-03-21 22:20:36,322 Node[0] Epoch[1] Batch [80-100]	Speed: 21466.34 samples/sec	accuracy=nan
2023-03-21 22:20:39,361 Node[0] Epoch[1] Batch [100-120]	Speed: 21483.21 samples/sec	accuracy=nan
2023-03-21 22:20:42,400 Node[0] Epoch[1] Batch [120-140]	Speed: 21479.60 samples/sec	accuracy=nan
2023-03-21 22:20:45,439 Node[0] Epoch[1] Batch [140-160]	Speed: 21482.78 samples/sec	accuracy=nan
2023-03-21 22:20:48,478 Node[0] Epoch[1] Batch [160-180]	Speed: 21480.09 samples/sec	accuracy=nan
2023-03-21 22:20:51,521 Node[0] Epoch[1] Batch [180-200]	Speed: 21452.64 samples/sec	accuracy=nan
2023-03-21 22:20:54,565 Node[0] Epoch[1] Batch [200-220]	Speed: 21444.29 samples/sec	accuracy=nan
2023-03-21 22:20:57,607 Node[0] Epoch[1] Batch [220-240]	Speed: 21456.19 samples/sec	accuracy=nan
2023-03-21 22:21:00,654 Node[0] Epoch[1] Batch [240-260]	Speed: 21427.32 samples/sec	accuracy=nan
2023-03-21 22:21:03,697 Node[0] Epoch[1] Batch [260-280]	Speed: 21452.43 samples/sec	accuracy=nan
2023-03-21 22:21:06,739 Node[0] Epoch[1] Batch [280-300]	Speed: 21460.75 samples/sec	accuracy=nan
2023-03-21 22:21:09,786 Node[0] Epoch[1] Batch [300-320]	Speed: 21419.88 samples/sec	accuracy=nan
2023-03-21 22:21:12,827 Node[0] Epoch[1] Batch [320-340]	Speed: 21467.86 samples/sec	accuracy=nan
2023-03-21 22:21:15,871 Node[0] Epoch[1] Batch [340-360]	Speed: 21445.77 samples/sec	accuracy=nan
2023-03-21 22:21:18,916 Node[0] Epoch[1] Batch [360-380]	Speed: 21439.16 samples/sec	accuracy=nan
2023-03-21 22:21:20,738 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,738 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,739 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,739 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,739 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,739 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:20,739 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455280739, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 22:21:20,740 Node[0] Epoch[1] Time cost=59.763
:::MLLOG {"namespace": "", "time_ms": 1679455280740, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21437.51466764021}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679455280740, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 22:21:20,740 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:21:23,935 Node[0] Epoch[2] Batch [0-20]	Speed: 21435.79 samples/sec	accuracy=nan
2023-03-21 22:21:26,977 Node[0] Epoch[2] Batch [20-40]	Speed: 21459.32 samples/sec	accuracy=nan
2023-03-21 22:21:30,024 Node[0] Epoch[2] Batch [40-60]	Speed: 21429.55 samples/sec	accuracy=nan
2023-03-21 22:21:33,087 Node[0] Epoch[2] Batch [60-80]	Speed: 21311.93 samples/sec	accuracy=nan
2023-03-21 22:21:36,141 Node[0] Epoch[2] Batch [80-100]	Speed: 21376.69 samples/sec	accuracy=nan
2023-03-21 22:21:39,187 Node[0] Epoch[2] Batch [100-120]	Speed: 21430.02 samples/sec	accuracy=nan
2023-03-21 22:21:42,232 Node[0] Epoch[2] Batch [120-140]	Speed: 21440.12 samples/sec	accuracy=nan
2023-03-21 22:21:45,278 Node[0] Epoch[2] Batch [140-160]	Speed: 21430.18 samples/sec	accuracy=nan
2023-03-21 22:21:48,324 Node[0] Epoch[2] Batch [160-180]	Speed: 21427.88 samples/sec	accuracy=nan
2023-03-21 22:21:51,370 Node[0] Epoch[2] Batch [180-200]	Speed: 21431.73 samples/sec	accuracy=nan
2023-03-21 22:21:54,415 Node[0] Epoch[2] Batch [200-220]	Speed: 21437.12 samples/sec	accuracy=nan
2023-03-21 22:21:57,461 Node[0] Epoch[2] Batch [220-240]	Speed: 21432.83 samples/sec	accuracy=nan
2023-03-21 22:22:00,506 Node[0] Epoch[2] Batch [240-260]	Speed: 21441.97 samples/sec	accuracy=nan
2023-03-21 22:22:03,553 Node[0] Epoch[2] Batch [260-280]	Speed: 21424.83 samples/sec	accuracy=nan
2023-03-21 22:22:06,596 Node[0] Epoch[2] Batch [280-300]	Speed: 21446.89 samples/sec	accuracy=nan
2023-03-21 22:22:09,634 Node[0] Epoch[2] Batch [300-320]	Speed: 21487.51 samples/sec	accuracy=nan
2023-03-21 22:22:12,683 Node[0] Epoch[2] Batch [320-340]	Speed: 21410.23 samples/sec	accuracy=nan
2023-03-21 22:22:15,727 Node[0] Epoch[2] Batch [340-360]	Speed: 21450.48 samples/sec	accuracy=nan
2023-03-21 22:22:18,766 Node[0] Epoch[2] Batch [360-380]	Speed: 21482.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679455340435, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 22:22:20,436 Node[0] Epoch[2] Time cost=59.696
:::MLLOG {"namespace": "", "time_ms": 1679455340436, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21461.5531316857}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455340581, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 22:22:20,581 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:20,581 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:21,947 Node[0] Epoch[2] Validation-accuracy=0.298880
2023-03-21 22:22:21,947 Node[0] Epoch[2] Validation-correct-count=1868.000000
2023-03-21 22:22:21,947 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-21 22:22:22,134 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:22,134 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:22,134 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455342134, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679455342134, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.29596, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 22:22:22,134 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455342134, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 22:22:22,134 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:22,134 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:22,134 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455342135, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679455342135, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 22:22:22,135 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:22:25,214 Node[0] Epoch[3] Batch [0-20]	Speed: 21262.63 samples/sec	accuracy=nan
2023-03-21 22:22:28,264 Node[0] Epoch[3] Batch [20-40]	Speed: 21396.69 samples/sec	accuracy=nan
2023-03-21 22:22:31,321 Node[0] Epoch[3] Batch [40-60]	Speed: 21354.37 samples/sec	accuracy=nan
2023-03-21 22:22:34,372 Node[0] Epoch[3] Batch [60-80]	Speed: 21402.87 samples/sec	accuracy=nan
2023-03-21 22:22:37,414 Node[0] Epoch[3] Batch [80-100]	Speed: 21455.31 samples/sec	accuracy=nan
2023-03-21 22:22:40,456 Node[0] Epoch[3] Batch [100-120]	Speed: 21459.28 samples/sec	accuracy=nan
2023-03-21 22:22:43,501 Node[0] Epoch[3] Batch [120-140]	Speed: 21438.73 samples/sec	accuracy=nan
2023-03-21 22:22:46,557 Node[0] Epoch[3] Batch [140-160]	Speed: 21362.07 samples/sec	accuracy=nan
2023-03-21 22:22:49,616 Node[0] Epoch[3] Batch [160-180]	Speed: 21342.03 samples/sec	accuracy=nan
2023-03-21 22:22:52,664 Node[0] Epoch[3] Batch [180-200]	Speed: 21412.55 samples/sec	accuracy=nan
2023-03-21 22:22:55,706 Node[0] Epoch[3] Batch [200-220]	Speed: 21461.89 samples/sec	accuracy=nan
2023-03-21 22:22:58,752 Node[0] Epoch[3] Batch [220-240]	Speed: 21432.32 samples/sec	accuracy=nan
2023-03-21 22:23:01,799 Node[0] Epoch[3] Batch [240-260]	Speed: 21426.14 samples/sec	accuracy=nan
2023-03-21 22:23:04,859 Node[0] Epoch[3] Batch [260-280]	Speed: 21329.34 samples/sec	accuracy=nan
2023-03-21 22:23:07,911 Node[0] Epoch[3] Batch [280-300]	Speed: 21389.67 samples/sec	accuracy=nan
2023-03-21 22:23:10,958 Node[0] Epoch[3] Batch [300-320]	Speed: 21428.19 samples/sec	accuracy=nan
2023-03-21 22:23:14,011 Node[0] Epoch[3] Batch [320-340]	Speed: 21382.37 samples/sec	accuracy=nan
2023-03-21 22:23:17,052 Node[0] Epoch[3] Batch [340-360]	Speed: 21461.05 samples/sec	accuracy=nan
2023-03-21 22:23:20,095 Node[0] Epoch[3] Batch [360-380]	Speed: 21457.27 samples/sec	accuracy=nan
2023-03-21 22:23:21,916 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,916 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,916 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,917 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,917 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,917 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455401917, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 22:23:21,917 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:21,918 Node[0] Epoch[3] Time cost=59.783
:::MLLOG {"namespace": "", "time_ms": 1679455401918, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21430.31672796851}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679455401918, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 22:23:21,918 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:23:25,116 Node[0] Epoch[4] Batch [0-20]	Speed: 21429.72 samples/sec	accuracy=nan
2023-03-21 22:23:28,155 Node[0] Epoch[4] Batch [20-40]	Speed: 21483.11 samples/sec	accuracy=nan
2023-03-21 22:23:31,194 Node[0] Epoch[4] Batch [40-60]	Speed: 21481.18 samples/sec	accuracy=nan
2023-03-21 22:23:34,240 Node[0] Epoch[4] Batch [60-80]	Speed: 21425.55 samples/sec	accuracy=nan
2023-03-21 22:23:37,284 Node[0] Epoch[4] Batch [80-100]	Speed: 21446.52 samples/sec	accuracy=nan
2023-03-21 22:23:40,326 Node[0] Epoch[4] Batch [100-120]	Speed: 21460.31 samples/sec	accuracy=nan
2023-03-21 22:23:43,367 Node[0] Epoch[4] Batch [120-140]	Speed: 21468.34 samples/sec	accuracy=nan
2023-03-21 22:23:46,407 Node[0] Epoch[4] Batch [140-160]	Speed: 21471.41 samples/sec	accuracy=nan
2023-03-21 22:23:49,452 Node[0] Epoch[4] Batch [160-180]	Speed: 21437.11 samples/sec	accuracy=nan
2023-03-21 22:23:52,494 Node[0] Epoch[4] Batch [180-200]	Speed: 21462.09 samples/sec	accuracy=nan
2023-03-21 22:23:55,535 Node[0] Epoch[4] Batch [200-220]	Speed: 21466.91 samples/sec	accuracy=nan
2023-03-21 22:23:58,580 Node[0] Epoch[4] Batch [220-240]	Speed: 21439.95 samples/sec	accuracy=nan
2023-03-21 22:24:01,621 Node[0] Epoch[4] Batch [240-260]	Speed: 21466.35 samples/sec	accuracy=nan
2023-03-21 22:24:04,667 Node[0] Epoch[4] Batch [260-280]	Speed: 21432.27 samples/sec	accuracy=nan
2023-03-21 22:24:07,710 Node[0] Epoch[4] Batch [280-300]	Speed: 21453.59 samples/sec	accuracy=nan
2023-03-21 22:24:10,745 Node[0] Epoch[4] Batch [300-320]	Speed: 21504.74 samples/sec	accuracy=nan
2023-03-21 22:24:13,790 Node[0] Epoch[4] Batch [320-340]	Speed: 21441.46 samples/sec	accuracy=nan
2023-03-21 22:24:16,833 Node[0] Epoch[4] Batch [340-360]	Speed: 21451.84 samples/sec	accuracy=nan
2023-03-21 22:24:19,875 Node[0] Epoch[4] Batch [360-380]	Speed: 21459.28 samples/sec	accuracy=nan
2023-03-21 22:24:21,545 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,546 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,545 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,546 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,546 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455461546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 22:24:21,546 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,546 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:21,546 Node[0] Epoch[4] Time cost=59.628
:::MLLOG {"namespace": "", "time_ms": 1679455461546, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21486.049253213783}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679455461547, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 22:24:21,547 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:24:24,746 Node[0] Epoch[5] Batch [0-20]	Speed: 21456.30 samples/sec	accuracy=nan
2023-03-21 22:24:27,790 Node[0] Epoch[5] Batch [20-40]	Speed: 21448.22 samples/sec	accuracy=nan
2023-03-21 22:24:30,842 Node[0] Epoch[5] Batch [40-60]	Speed: 21387.78 samples/sec	accuracy=nan
2023-03-21 22:24:33,891 Node[0] Epoch[5] Batch [60-80]	Speed: 21408.91 samples/sec	accuracy=nan
2023-03-21 22:24:36,930 Node[0] Epoch[5] Batch [80-100]	Speed: 21478.42 samples/sec	accuracy=nan
2023-03-21 22:24:39,974 Node[0] Epoch[5] Batch [100-120]	Speed: 21444.14 samples/sec	accuracy=nan
2023-03-21 22:24:43,018 Node[0] Epoch[5] Batch [120-140]	Speed: 21449.51 samples/sec	accuracy=nan
2023-03-21 22:24:46,062 Node[0] Epoch[5] Batch [140-160]	Speed: 21443.07 samples/sec	accuracy=nan
2023-03-21 22:24:49,125 Node[0] Epoch[5] Batch [160-180]	Speed: 21314.09 samples/sec	accuracy=nan
2023-03-21 22:24:52,181 Node[0] Epoch[5] Batch [180-200]	Speed: 21363.49 samples/sec	accuracy=nan
2023-03-21 22:24:55,224 Node[0] Epoch[5] Batch [200-220]	Speed: 21449.02 samples/sec	accuracy=nan
2023-03-21 22:24:58,277 Node[0] Epoch[5] Batch [220-240]	Speed: 21382.41 samples/sec	accuracy=nan
2023-03-21 22:25:01,321 Node[0] Epoch[5] Batch [240-260]	Speed: 21447.71 samples/sec	accuracy=nan
2023-03-21 22:25:04,362 Node[0] Epoch[5] Batch [260-280]	Speed: 21463.80 samples/sec	accuracy=nan
2023-03-21 22:25:07,406 Node[0] Epoch[5] Batch [280-300]	Speed: 21446.12 samples/sec	accuracy=nan
2023-03-21 22:25:10,450 Node[0] Epoch[5] Batch [300-320]	Speed: 21447.63 samples/sec	accuracy=nan
2023-03-21 22:25:13,490 Node[0] Epoch[5] Batch [320-340]	Speed: 21475.52 samples/sec	accuracy=nan
2023-03-21 22:25:16,534 Node[0] Epoch[5] Batch [340-360]	Speed: 21442.23 samples/sec	accuracy=nan
2023-03-21 22:25:19,577 Node[0] Epoch[5] Batch [360-380]	Speed: 21450.46 samples/sec	accuracy=nan
2023-03-21 22:25:21,400 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,400 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,400 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,400 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,400 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,401 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:21,401 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455521400, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 22:25:21,402 Node[0] Epoch[5] Time cost=59.855
:::MLLOG {"namespace": "", "time_ms": 1679455521402, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21404.54090606134}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679455521402, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 22:25:21,402 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:25:24,600 Node[0] Epoch[6] Batch [0-20]	Speed: 21437.98 samples/sec	accuracy=nan
2023-03-21 22:25:27,640 Node[0] Epoch[6] Batch [20-40]	Speed: 21468.82 samples/sec	accuracy=nan
2023-03-21 22:25:30,681 Node[0] Epoch[6] Batch [40-60]	Speed: 21470.45 samples/sec	accuracy=nan
2023-03-21 22:25:33,725 Node[0] Epoch[6] Batch [60-80]	Speed: 21447.84 samples/sec	accuracy=nan
2023-03-21 22:25:36,764 Node[0] Epoch[6] Batch [80-100]	Speed: 21481.28 samples/sec	accuracy=nan
2023-03-21 22:25:39,807 Node[0] Epoch[6] Batch [100-120]	Speed: 21447.08 samples/sec	accuracy=nan
2023-03-21 22:25:42,851 Node[0] Epoch[6] Batch [120-140]	Speed: 21448.84 samples/sec	accuracy=nan
2023-03-21 22:25:45,894 Node[0] Epoch[6] Batch [140-160]	Speed: 21450.05 samples/sec	accuracy=nan
2023-03-21 22:25:48,934 Node[0] Epoch[6] Batch [160-180]	Speed: 21475.41 samples/sec	accuracy=nan
2023-03-21 22:25:51,981 Node[0] Epoch[6] Batch [180-200]	Speed: 21425.89 samples/sec	accuracy=nan
2023-03-21 22:25:55,024 Node[0] Epoch[6] Batch [200-220]	Speed: 21453.63 samples/sec	accuracy=nan
2023-03-21 22:25:58,069 Node[0] Epoch[6] Batch [220-240]	Speed: 21436.87 samples/sec	accuracy=nan
2023-03-21 22:26:01,122 Node[0] Epoch[6] Batch [240-260]	Speed: 21383.25 samples/sec	accuracy=nan
2023-03-21 22:26:04,164 Node[0] Epoch[6] Batch [260-280]	Speed: 21457.08 samples/sec	accuracy=nan
2023-03-21 22:26:07,206 Node[0] Epoch[6] Batch [280-300]	Speed: 21456.82 samples/sec	accuracy=nan
2023-03-21 22:26:10,251 Node[0] Epoch[6] Batch [300-320]	Speed: 21439.31 samples/sec	accuracy=nan
2023-03-21 22:26:13,297 Node[0] Epoch[6] Batch [320-340]	Speed: 21434.11 samples/sec	accuracy=nan
2023-03-21 22:26:16,340 Node[0] Epoch[6] Batch [340-360]	Speed: 21451.39 samples/sec	accuracy=nan
2023-03-21 22:26:19,385 Node[0] Epoch[6] Batch [360-380]	Speed: 21438.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679455581060, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 22:26:21,060 Node[0] Epoch[6] Time cost=59.658
:::MLLOG {"namespace": "", "time_ms": 1679455581060, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21475.18583656725}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679455581209, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 22:26:22,611 Node[0] Epoch[6] Validation-accuracy=0.392640
2023-03-21 22:26:22,611 Node[0] Epoch[6] Validation-correct-count=2454.000000
2023-03-21 22:26:22,611 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-21 22:26:22,848 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:22,848 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455582848, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679455582849, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.39742, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679455582849, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679455582849, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679455582850, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 22:26:22,850 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:26:25,901 Node[0] Epoch[7] Batch [0-20]	Speed: 21469.16 samples/sec	accuracy=nan
2023-03-21 22:26:28,938 Node[0] Epoch[7] Batch [20-40]	Speed: 21496.53 samples/sec	accuracy=nan
2023-03-21 22:26:31,976 Node[0] Epoch[7] Batch [40-60]	Speed: 21484.79 samples/sec	accuracy=nan
2023-03-21 22:26:35,019 Node[0] Epoch[7] Batch [60-80]	Speed: 21449.67 samples/sec	accuracy=nan
2023-03-21 22:26:38,060 Node[0] Epoch[7] Batch [80-100]	Speed: 21468.68 samples/sec	accuracy=nan
2023-03-21 22:26:41,104 Node[0] Epoch[7] Batch [100-120]	Speed: 21445.53 samples/sec	accuracy=nan
2023-03-21 22:26:44,144 Node[0] Epoch[7] Batch [120-140]	Speed: 21473.15 samples/sec	accuracy=nan
2023-03-21 22:26:47,187 Node[0] Epoch[7] Batch [140-160]	Speed: 21454.76 samples/sec	accuracy=nan
2023-03-21 22:26:50,225 Node[0] Epoch[7] Batch [160-180]	Speed: 21488.52 samples/sec	accuracy=nan
2023-03-21 22:26:53,270 Node[0] Epoch[7] Batch [180-200]	Speed: 21440.51 samples/sec	accuracy=nan
2023-03-21 22:26:56,308 Node[0] Epoch[7] Batch [200-220]	Speed: 21481.10 samples/sec	accuracy=nan
2023-03-21 22:26:59,349 Node[0] Epoch[7] Batch [220-240]	Speed: 21467.13 samples/sec	accuracy=nan
2023-03-21 22:27:02,391 Node[0] Epoch[7] Batch [240-260]	Speed: 21460.44 samples/sec	accuracy=nan
2023-03-21 22:27:05,444 Node[0] Epoch[7] Batch [260-280]	Speed: 21384.23 samples/sec	accuracy=nan
2023-03-21 22:27:08,494 Node[0] Epoch[7] Batch [280-300]	Speed: 21406.29 samples/sec	accuracy=nan
2023-03-21 22:27:11,549 Node[0] Epoch[7] Batch [300-320]	Speed: 21364.63 samples/sec	accuracy=nan
2023-03-21 22:27:14,592 Node[0] Epoch[7] Batch [320-340]	Speed: 21454.37 samples/sec	accuracy=nan
2023-03-21 22:27:17,633 Node[0] Epoch[7] Batch [340-360]	Speed: 21462.36 samples/sec	accuracy=nan
2023-03-21 22:27:20,676 Node[0] Epoch[7] Batch [360-380]	Speed: 21453.71 samples/sec	accuracy=nan
2023-03-21 22:27:22,497 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,497 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,497 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,498 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,498 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,498 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:22,498 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455642498, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 22:27:22,498 Node[0] Epoch[7] Time cost=59.649
:::MLLOG {"namespace": "", "time_ms": 1679455642498, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21478.575900488428}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679455642499, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 22:27:22,499 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:27:25,695 Node[0] Epoch[8] Batch [0-20]	Speed: 21450.98 samples/sec	accuracy=nan
2023-03-21 22:27:28,736 Node[0] Epoch[8] Batch [20-40]	Speed: 21466.77 samples/sec	accuracy=nan
2023-03-21 22:27:31,777 Node[0] Epoch[8] Batch [40-60]	Speed: 21468.62 samples/sec	accuracy=nan
2023-03-21 22:27:34,818 Node[0] Epoch[8] Batch [60-80]	Speed: 21463.95 samples/sec	accuracy=nan
2023-03-21 22:27:37,859 Node[0] Epoch[8] Batch [80-100]	Speed: 21469.37 samples/sec	accuracy=nan
2023-03-21 22:27:40,900 Node[0] Epoch[8] Batch [100-120]	Speed: 21461.83 samples/sec	accuracy=nan
2023-03-21 22:27:43,942 Node[0] Epoch[8] Batch [120-140]	Speed: 21461.48 samples/sec	accuracy=nan
2023-03-21 22:27:46,983 Node[0] Epoch[8] Batch [140-160]	Speed: 21465.62 samples/sec	accuracy=nan
2023-03-21 22:27:50,026 Node[0] Epoch[8] Batch [160-180]	Speed: 21452.75 samples/sec	accuracy=nan
2023-03-21 22:27:53,067 Node[0] Epoch[8] Batch [180-200]	Speed: 21469.82 samples/sec	accuracy=nan
2023-03-21 22:27:56,113 Node[0] Epoch[8] Batch [200-220]	Speed: 21427.40 samples/sec	accuracy=nan
2023-03-21 22:27:59,154 Node[0] Epoch[8] Batch [220-240]	Speed: 21465.39 samples/sec	accuracy=nan
2023-03-21 22:28:02,194 Node[0] Epoch[8] Batch [240-260]	Speed: 21473.91 samples/sec	accuracy=nan
2023-03-21 22:28:05,238 Node[0] Epoch[8] Batch [260-280]	Speed: 21448.84 samples/sec	accuracy=nan
2023-03-21 22:28:08,280 Node[0] Epoch[8] Batch [280-300]	Speed: 21455.76 samples/sec	accuracy=nan
2023-03-21 22:28:11,322 Node[0] Epoch[8] Batch [300-320]	Speed: 21461.00 samples/sec	accuracy=nan
2023-03-21 22:28:14,365 Node[0] Epoch[8] Batch [320-340]	Speed: 21452.58 samples/sec	accuracy=nan
2023-03-21 22:28:17,405 Node[0] Epoch[8] Batch [340-360]	Speed: 21474.25 samples/sec	accuracy=nan
2023-03-21 22:28:20,447 Node[0] Epoch[8] Batch [360-380]	Speed: 21458.75 samples/sec	accuracy=nan
2023-03-21 22:28:22,116 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,116 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,116 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,116 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,116 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,116 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:22,117 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455702116, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 22:28:22,117 Node[0] Epoch[8] Time cost=59.618
:::MLLOG {"namespace": "", "time_ms": 1679455702117, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.421521425793}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679455702118, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 22:28:22,118 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:28:25,310 Node[0] Epoch[9] Batch [0-20]	Speed: 21498.34 samples/sec	accuracy=nan
2023-03-21 22:28:28,353 Node[0] Epoch[9] Batch [20-40]	Speed: 21449.96 samples/sec	accuracy=nan
2023-03-21 22:28:31,397 Node[0] Epoch[9] Batch [40-60]	Speed: 21445.94 samples/sec	accuracy=nan
2023-03-21 22:28:34,438 Node[0] Epoch[9] Batch [60-80]	Speed: 21466.32 samples/sec	accuracy=nan
2023-03-21 22:28:37,481 Node[0] Epoch[9] Batch [80-100]	Speed: 21455.65 samples/sec	accuracy=nan
2023-03-21 22:28:40,519 Node[0] Epoch[9] Batch [100-120]	Speed: 21482.21 samples/sec	accuracy=nan
2023-03-21 22:28:43,562 Node[0] Epoch[9] Batch [120-140]	Speed: 21453.77 samples/sec	accuracy=nan
2023-03-21 22:28:46,604 Node[0] Epoch[9] Batch [140-160]	Speed: 21458.87 samples/sec	accuracy=nan
2023-03-21 22:28:49,646 Node[0] Epoch[9] Batch [160-180]	Speed: 21459.46 samples/sec	accuracy=nan
2023-03-21 22:28:52,685 Node[0] Epoch[9] Batch [180-200]	Speed: 21484.98 samples/sec	accuracy=nan
2023-03-21 22:28:55,728 Node[0] Epoch[9] Batch [200-220]	Speed: 21453.60 samples/sec	accuracy=nan
2023-03-21 22:28:58,767 Node[0] Epoch[9] Batch [220-240]	Speed: 21479.48 samples/sec	accuracy=nan
2023-03-21 22:29:01,805 Node[0] Epoch[9] Batch [240-260]	Speed: 21488.87 samples/sec	accuracy=nan
2023-03-21 22:29:04,848 Node[0] Epoch[9] Batch [260-280]	Speed: 21450.19 samples/sec	accuracy=nan
2023-03-21 22:29:07,890 Node[0] Epoch[9] Batch [280-300]	Speed: 21461.87 samples/sec	accuracy=nan
2023-03-21 22:29:10,936 Node[0] Epoch[9] Batch [300-320]	Speed: 21430.06 samples/sec	accuracy=nan
2023-03-21 22:29:13,977 Node[0] Epoch[9] Batch [320-340]	Speed: 21466.32 samples/sec	accuracy=nan
2023-03-21 22:29:17,016 Node[0] Epoch[9] Batch [340-360]	Speed: 21482.97 samples/sec	accuracy=nan
2023-03-21 22:29:20,057 Node[0] Epoch[9] Batch [360-380]	Speed: 21461.06 samples/sec	accuracy=nan
2023-03-21 22:29:21,882 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:21,882 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:21,882 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:21,882 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:21,882 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:21,882 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455761882, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 22:29:21,883 Node[0] Epoch[9] Time cost=59.765
:::MLLOG {"namespace": "", "time_ms": 1679455761883, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21436.893360631977}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 22:29:21,883 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455761883, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 22:29:21,883 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:29:25,080 Node[0] Epoch[10] Batch [0-20]	Speed: 21442.36 samples/sec	accuracy=nan
2023-03-21 22:29:28,123 Node[0] Epoch[10] Batch [20-40]	Speed: 21458.02 samples/sec	accuracy=nan
2023-03-21 22:29:31,168 Node[0] Epoch[10] Batch [40-60]	Speed: 21431.80 samples/sec	accuracy=nan
2023-03-21 22:29:34,210 Node[0] Epoch[10] Batch [60-80]	Speed: 21464.49 samples/sec	accuracy=nan
2023-03-21 22:29:37,254 Node[0] Epoch[10] Batch [80-100]	Speed: 21447.06 samples/sec	accuracy=nan
2023-03-21 22:29:40,295 Node[0] Epoch[10] Batch [100-120]	Speed: 21464.61 samples/sec	accuracy=nan
2023-03-21 22:29:43,339 Node[0] Epoch[10] Batch [120-140]	Speed: 21442.44 samples/sec	accuracy=nan
2023-03-21 22:29:46,381 Node[0] Epoch[10] Batch [140-160]	Speed: 21463.36 samples/sec	accuracy=nan
2023-03-21 22:29:49,424 Node[0] Epoch[10] Batch [160-180]	Speed: 21448.01 samples/sec	accuracy=nan
2023-03-21 22:29:52,469 Node[0] Epoch[10] Batch [180-200]	Speed: 21444.09 samples/sec	accuracy=nan
2023-03-21 22:29:55,511 Node[0] Epoch[10] Batch [200-220]	Speed: 21459.07 samples/sec	accuracy=nan
2023-03-21 22:29:58,552 Node[0] Epoch[10] Batch [220-240]	Speed: 21462.09 samples/sec	accuracy=nan
2023-03-21 22:30:01,597 Node[0] Epoch[10] Batch [240-260]	Speed: 21442.32 samples/sec	accuracy=nan
2023-03-21 22:30:04,640 Node[0] Epoch[10] Batch [260-280]	Speed: 21450.82 samples/sec	accuracy=nan
2023-03-21 22:30:07,676 Node[0] Epoch[10] Batch [280-300]	Speed: 21502.01 samples/sec	accuracy=nan
2023-03-21 22:30:10,715 Node[0] Epoch[10] Batch [300-320]	Speed: 21481.52 samples/sec	accuracy=nan
2023-03-21 22:30:13,761 Node[0] Epoch[10] Batch [320-340]	Speed: 21433.67 samples/sec	accuracy=nan
2023-03-21 22:30:16,807 Node[0] Epoch[10] Batch [340-360]	Speed: 21431.48 samples/sec	accuracy=nan
2023-03-21 22:30:19,848 Node[0] Epoch[10] Batch [360-380]	Speed: 21464.63 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679455821516, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 22:30:21,517 Node[0] Epoch[10] Time cost=59.634
:::MLLOG {"namespace": "", "time_ms": 1679455821517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21483.764528099433}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679455821663, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 22:30:23,170 Node[0] Epoch[10] Validation-accuracy=0.499520
2023-03-21 22:30:23,170 Node[0] Epoch[10] Validation-correct-count=3122.000000
2023-03-21 22:30:23,170 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679455823314, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679455823315, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.50488, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 22:30:23,315 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:30:23,315 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:30:23,315 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455823315, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 22:30:23,315 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455823315, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 22:30:23,315 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:30:23,315 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:30:23,315 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455823315, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 22:30:23,315 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:30:26,375 Node[0] Epoch[11] Batch [0-20]	Speed: 21417.75 samples/sec	accuracy=nan
2023-03-21 22:30:29,417 Node[0] Epoch[11] Batch [20-40]	Speed: 21465.07 samples/sec	accuracy=nan
2023-03-21 22:30:32,458 Node[0] Epoch[11] Batch [40-60]	Speed: 21468.07 samples/sec	accuracy=nan
2023-03-21 22:30:35,500 Node[0] Epoch[11] Batch [60-80]	Speed: 21454.68 samples/sec	accuracy=nan
2023-03-21 22:30:38,546 Node[0] Epoch[11] Batch [80-100]	Speed: 21430.66 samples/sec	accuracy=nan
2023-03-21 22:30:41,587 Node[0] Epoch[11] Batch [100-120]	Speed: 21469.11 samples/sec	accuracy=nan
2023-03-21 22:30:44,631 Node[0] Epoch[11] Batch [120-140]	Speed: 21445.23 samples/sec	accuracy=nan
2023-03-21 22:30:47,677 Node[0] Epoch[11] Batch [140-160]	Speed: 21427.97 samples/sec	accuracy=nan
2023-03-21 22:30:50,723 Node[0] Epoch[11] Batch [160-180]	Speed: 21435.60 samples/sec	accuracy=nan
2023-03-21 22:30:53,767 Node[0] Epoch[11] Batch [180-200]	Speed: 21446.51 samples/sec	accuracy=nan
2023-03-21 22:30:56,810 Node[0] Epoch[11] Batch [200-220]	Speed: 21453.99 samples/sec	accuracy=nan
2023-03-21 22:30:59,856 Node[0] Epoch[11] Batch [220-240]	Speed: 21429.54 samples/sec	accuracy=nan
2023-03-21 22:31:02,901 Node[0] Epoch[11] Batch [240-260]	Speed: 21434.51 samples/sec	accuracy=nan
2023-03-21 22:31:05,945 Node[0] Epoch[11] Batch [260-280]	Speed: 21450.33 samples/sec	accuracy=nan
2023-03-21 22:31:08,990 Node[0] Epoch[11] Batch [280-300]	Speed: 21437.99 samples/sec	accuracy=nan
2023-03-21 22:31:12,040 Node[0] Epoch[11] Batch [300-320]	Speed: 21399.76 samples/sec	accuracy=nan
2023-03-21 22:31:15,093 Node[0] Epoch[11] Batch [320-340]	Speed: 21384.22 samples/sec	accuracy=nan
2023-03-21 22:31:18,137 Node[0] Epoch[11] Batch [340-360]	Speed: 21447.54 samples/sec	accuracy=nan
2023-03-21 22:31:21,180 Node[0] Epoch[11] Batch [360-380]	Speed: 21453.33 samples/sec	accuracy=nan
2023-03-21 22:31:23,003 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,003 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,003 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,003 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,003 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,003 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:23,004 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455883003, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 22:31:23,005 Node[0] Epoch[11] Time cost=59.689
:::MLLOG {"namespace": "", "time_ms": 1679455883005, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21463.86459890105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679455883005, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 22:31:23,005 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:31:26,204 Node[0] Epoch[12] Batch [0-20]	Speed: 21418.77 samples/sec	accuracy=nan
2023-03-21 22:31:29,244 Node[0] Epoch[12] Batch [20-40]	Speed: 21473.73 samples/sec	accuracy=nan
2023-03-21 22:31:32,287 Node[0] Epoch[12] Batch [40-60]	Speed: 21453.60 samples/sec	accuracy=nan
2023-03-21 22:31:35,330 Node[0] Epoch[12] Batch [60-80]	Speed: 21449.19 samples/sec	accuracy=nan
2023-03-21 22:31:38,376 Node[0] Epoch[12] Batch [80-100]	Speed: 21432.08 samples/sec	accuracy=nan
2023-03-21 22:31:41,418 Node[0] Epoch[12] Batch [100-120]	Speed: 21460.38 samples/sec	accuracy=nan
2023-03-21 22:31:44,460 Node[0] Epoch[12] Batch [120-140]	Speed: 21461.82 samples/sec	accuracy=nan
2023-03-21 22:31:47,503 Node[0] Epoch[12] Batch [140-160]	Speed: 21453.57 samples/sec	accuracy=nan
2023-03-21 22:31:50,548 Node[0] Epoch[12] Batch [160-180]	Speed: 21436.63 samples/sec	accuracy=nan
2023-03-21 22:31:53,604 Node[0] Epoch[12] Batch [180-200]	Speed: 21360.12 samples/sec	accuracy=nan
2023-03-21 22:31:56,663 Node[0] Epoch[12] Batch [200-220]	Speed: 21343.31 samples/sec	accuracy=nan
2023-03-21 22:31:59,712 Node[0] Epoch[12] Batch [220-240]	Speed: 21408.59 samples/sec	accuracy=nan
2023-03-21 22:32:02,755 Node[0] Epoch[12] Batch [240-260]	Speed: 21451.59 samples/sec	accuracy=nan
2023-03-21 22:32:05,799 Node[0] Epoch[12] Batch [260-280]	Speed: 21443.33 samples/sec	accuracy=nan
2023-03-21 22:32:08,840 Node[0] Epoch[12] Batch [280-300]	Speed: 21470.47 samples/sec	accuracy=nan
2023-03-21 22:32:11,882 Node[0] Epoch[12] Batch [300-320]	Speed: 21459.22 samples/sec	accuracy=nan
2023-03-21 22:32:14,928 Node[0] Epoch[12] Batch [320-340]	Speed: 21434.08 samples/sec	accuracy=nan
2023-03-21 22:32:17,975 Node[0] Epoch[12] Batch [340-360]	Speed: 21420.04 samples/sec	accuracy=nan
2023-03-21 22:32:21,020 Node[0] Epoch[12] Batch [360-380]	Speed: 21439.85 samples/sec	accuracy=nan
2023-03-21 22:32:22,693 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:22,693 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:22,693 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:22,693 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:22,693 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:22,693 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455942693, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 22:32:22,694 Node[0] Epoch[12] Time cost=59.689
2023-03-21 22:32:22,694 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679455942694, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21464.146665587603}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679455942694, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 22:32:22,695 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:32:25,884 Node[0] Epoch[13] Batch [0-20]	Speed: 21520.49 samples/sec	accuracy=nan
2023-03-21 22:32:28,929 Node[0] Epoch[13] Batch [20-40]	Speed: 21438.28 samples/sec	accuracy=nan
2023-03-21 22:32:31,969 Node[0] Epoch[13] Batch [40-60]	Speed: 21472.37 samples/sec	accuracy=nan
2023-03-21 22:32:35,012 Node[0] Epoch[13] Batch [60-80]	Speed: 21450.96 samples/sec	accuracy=nan
2023-03-21 22:32:38,053 Node[0] Epoch[13] Batch [80-100]	Speed: 21464.25 samples/sec	accuracy=nan
2023-03-21 22:32:41,096 Node[0] Epoch[13] Batch [100-120]	Speed: 21452.37 samples/sec	accuracy=nan
2023-03-21 22:32:44,135 Node[0] Epoch[13] Batch [120-140]	Speed: 21480.41 samples/sec	accuracy=nan
2023-03-21 22:32:47,182 Node[0] Epoch[13] Batch [140-160]	Speed: 21425.34 samples/sec	accuracy=nan
2023-03-21 22:32:50,222 Node[0] Epoch[13] Batch [160-180]	Speed: 21473.10 samples/sec	accuracy=nan
2023-03-21 22:32:53,278 Node[0] Epoch[13] Batch [180-200]	Speed: 21362.23 samples/sec	accuracy=nan
2023-03-21 22:32:56,323 Node[0] Epoch[13] Batch [200-220]	Speed: 21438.25 samples/sec	accuracy=nan
2023-03-21 22:32:59,365 Node[0] Epoch[13] Batch [220-240]	Speed: 21461.67 samples/sec	accuracy=nan
2023-03-21 22:33:02,410 Node[0] Epoch[13] Batch [240-260]	Speed: 21434.87 samples/sec	accuracy=nan
2023-03-21 22:33:05,448 Node[0] Epoch[13] Batch [260-280]	Speed: 21488.00 samples/sec	accuracy=nan
2023-03-21 22:33:08,488 Node[0] Epoch[13] Batch [280-300]	Speed: 21475.47 samples/sec	accuracy=nan
2023-03-21 22:33:11,532 Node[0] Epoch[13] Batch [300-320]	Speed: 21448.01 samples/sec	accuracy=nan
2023-03-21 22:33:14,572 Node[0] Epoch[13] Batch [320-340]	Speed: 21469.31 samples/sec	accuracy=nan
2023-03-21 22:33:17,614 Node[0] Epoch[13] Batch [340-360]	Speed: 21461.24 samples/sec	accuracy=nan
2023-03-21 22:33:20,659 Node[0] Epoch[13] Batch [360-380]	Speed: 21440.30 samples/sec	accuracy=nan
2023-03-21 22:33:22,478 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:22,479 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456002479, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 22:33:22,480 Node[0] Epoch[13] Time cost=59.786
:::MLLOG {"namespace": "", "time_ms": 1679456002480, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21429.38459481749}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679456002480, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 22:33:22,481 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:33:25,677 Node[0] Epoch[14] Batch [0-20]	Speed: 21429.13 samples/sec	accuracy=nan
2023-03-21 22:33:28,719 Node[0] Epoch[14] Batch [20-40]	Speed: 21457.01 samples/sec	accuracy=nan
2023-03-21 22:33:31,766 Node[0] Epoch[14] Batch [40-60]	Speed: 21423.40 samples/sec	accuracy=nan
2023-03-21 22:33:34,816 Node[0] Epoch[14] Batch [60-80]	Speed: 21403.21 samples/sec	accuracy=nan
2023-03-21 22:33:37,864 Node[0] Epoch[14] Batch [80-100]	Speed: 21418.04 samples/sec	accuracy=nan
2023-03-21 22:33:40,907 Node[0] Epoch[14] Batch [100-120]	Speed: 21450.92 samples/sec	accuracy=nan
2023-03-21 22:33:43,956 Node[0] Epoch[14] Batch [120-140]	Speed: 21412.15 samples/sec	accuracy=nan
2023-03-21 22:33:47,001 Node[0] Epoch[14] Batch [140-160]	Speed: 21440.07 samples/sec	accuracy=nan
2023-03-21 22:33:50,042 Node[0] Epoch[14] Batch [160-180]	Speed: 21462.58 samples/sec	accuracy=nan
2023-03-21 22:33:53,089 Node[0] Epoch[14] Batch [180-200]	Speed: 21425.93 samples/sec	accuracy=nan
2023-03-21 22:33:56,133 Node[0] Epoch[14] Batch [200-220]	Speed: 21447.67 samples/sec	accuracy=nan
2023-03-21 22:33:59,173 Node[0] Epoch[14] Batch [220-240]	Speed: 21472.98 samples/sec	accuracy=nan
2023-03-21 22:34:02,219 Node[0] Epoch[14] Batch [240-260]	Speed: 21432.09 samples/sec	accuracy=nan
2023-03-21 22:34:05,261 Node[0] Epoch[14] Batch [260-280]	Speed: 21461.62 samples/sec	accuracy=nan
2023-03-21 22:34:08,305 Node[0] Epoch[14] Batch [280-300]	Speed: 21441.37 samples/sec	accuracy=nan
2023-03-21 22:34:11,350 Node[0] Epoch[14] Batch [300-320]	Speed: 21442.54 samples/sec	accuracy=nan
2023-03-21 22:34:14,392 Node[0] Epoch[14] Batch [320-340]	Speed: 21457.35 samples/sec	accuracy=nan
2023-03-21 22:34:17,439 Node[0] Epoch[14] Batch [340-360]	Speed: 21425.24 samples/sec	accuracy=nan
2023-03-21 22:34:20,481 Node[0] Epoch[14] Batch [360-380]	Speed: 21455.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679456062151, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 22:34:22,152 Node[0] Epoch[14] Time cost=59.671
:::MLLOG {"namespace": "", "time_ms": 1679456062152, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21470.477883515847}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679456062297, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 22:34:23,752 Node[0] Epoch[14] Validation-accuracy=0.547040
2023-03-21 22:34:23,752 Node[0] Epoch[14] Validation-correct-count=3419.000000
2023-03-21 22:34:23,752 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-21 22:34:23,938 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:23,938 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456063938, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679456063939, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5445, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679456063939, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679456063939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679456063940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 22:34:23,940 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:34:26,996 Node[0] Epoch[15] Batch [0-20]	Speed: 21437.83 samples/sec	accuracy=nan
2023-03-21 22:34:30,033 Node[0] Epoch[15] Batch [20-40]	Speed: 21493.10 samples/sec	accuracy=nan
2023-03-21 22:34:33,070 Node[0] Epoch[15] Batch [40-60]	Speed: 21494.59 samples/sec	accuracy=nan
2023-03-21 22:34:36,121 Node[0] Epoch[15] Batch [60-80]	Speed: 21397.21 samples/sec	accuracy=nan
2023-03-21 22:34:39,166 Node[0] Epoch[15] Batch [80-100]	Speed: 21435.67 samples/sec	accuracy=nan
2023-03-21 22:34:42,208 Node[0] Epoch[15] Batch [100-120]	Speed: 21459.12 samples/sec	accuracy=nan
2023-03-21 22:34:45,257 Node[0] Epoch[15] Batch [120-140]	Speed: 21410.32 samples/sec	accuracy=nan
2023-03-21 22:34:48,308 Node[0] Epoch[15] Batch [140-160]	Speed: 21399.71 samples/sec	accuracy=nan
2023-03-21 22:34:51,350 Node[0] Epoch[15] Batch [160-180]	Speed: 21461.43 samples/sec	accuracy=nan
2023-03-21 22:34:54,390 Node[0] Epoch[15] Batch [180-200]	Speed: 21468.53 samples/sec	accuracy=nan
2023-03-21 22:34:57,433 Node[0] Epoch[15] Batch [200-220]	Speed: 21455.75 samples/sec	accuracy=nan
2023-03-21 22:35:00,471 Node[0] Epoch[15] Batch [220-240]	Speed: 21484.92 samples/sec	accuracy=nan
2023-03-21 22:35:03,509 Node[0] Epoch[15] Batch [240-260]	Speed: 21490.94 samples/sec	accuracy=nan
2023-03-21 22:35:06,554 Node[0] Epoch[15] Batch [260-280]	Speed: 21440.04 samples/sec	accuracy=nan
2023-03-21 22:35:09,595 Node[0] Epoch[15] Batch [280-300]	Speed: 21466.91 samples/sec	accuracy=nan
2023-03-21 22:35:12,637 Node[0] Epoch[15] Batch [300-320]	Speed: 21458.36 samples/sec	accuracy=nan
2023-03-21 22:35:15,679 Node[0] Epoch[15] Batch [320-340]	Speed: 21457.25 samples/sec	accuracy=nan
2023-03-21 22:35:18,718 Node[0] Epoch[15] Batch [340-360]	Speed: 21478.03 samples/sec	accuracy=nan
2023-03-21 22:35:21,760 Node[0] Epoch[15] Batch [360-380]	Speed: 21460.40 samples/sec	accuracy=nan
2023-03-21 22:35:23,582 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:23,582 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456123582, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 22:35:23,583 Node[0] Epoch[15] Time cost=59.643
:::MLLOG {"namespace": "", "time_ms": 1679456123583, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21480.439629674864}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679456123584, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 22:35:23,584 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:35:26,776 Node[0] Epoch[16] Batch [0-20]	Speed: 21469.43 samples/sec	accuracy=nan
2023-03-21 22:35:29,814 Node[0] Epoch[16] Batch [20-40]	Speed: 21486.41 samples/sec	accuracy=nan
2023-03-21 22:35:32,849 Node[0] Epoch[16] Batch [40-60]	Speed: 21511.84 samples/sec	accuracy=nan
2023-03-21 22:35:35,889 Node[0] Epoch[16] Batch [60-80]	Speed: 21477.11 samples/sec	accuracy=nan
2023-03-21 22:35:38,932 Node[0] Epoch[16] Batch [80-100]	Speed: 21448.61 samples/sec	accuracy=nan
2023-03-21 22:35:41,974 Node[0] Epoch[16] Batch [100-120]	Speed: 21457.77 samples/sec	accuracy=nan
2023-03-21 22:35:45,014 Node[0] Epoch[16] Batch [120-140]	Speed: 21473.69 samples/sec	accuracy=nan
2023-03-21 22:35:48,057 Node[0] Epoch[16] Batch [140-160]	Speed: 21455.99 samples/sec	accuracy=nan
2023-03-21 22:35:51,102 Node[0] Epoch[16] Batch [160-180]	Speed: 21438.06 samples/sec	accuracy=nan
2023-03-21 22:35:54,144 Node[0] Epoch[16] Batch [180-200]	Speed: 21455.47 samples/sec	accuracy=nan
2023-03-21 22:35:57,190 Node[0] Epoch[16] Batch [200-220]	Speed: 21435.17 samples/sec	accuracy=nan
2023-03-21 22:36:00,232 Node[0] Epoch[16] Batch [220-240]	Speed: 21462.15 samples/sec	accuracy=nan
2023-03-21 22:36:03,272 Node[0] Epoch[16] Batch [240-260]	Speed: 21471.10 samples/sec	accuracy=nan
2023-03-21 22:36:06,317 Node[0] Epoch[16] Batch [260-280]	Speed: 21438.80 samples/sec	accuracy=nan
2023-03-21 22:36:09,360 Node[0] Epoch[16] Batch [280-300]	Speed: 21455.19 samples/sec	accuracy=nan
2023-03-21 22:36:12,400 Node[0] Epoch[16] Batch [300-320]	Speed: 21473.72 samples/sec	accuracy=nan
2023-03-21 22:36:15,441 Node[0] Epoch[16] Batch [320-340]	Speed: 21461.02 samples/sec	accuracy=nan
2023-03-21 22:36:18,485 Node[0] Epoch[16] Batch [340-360]	Speed: 21449.69 samples/sec	accuracy=nan
2023-03-21 22:36:21,531 Node[0] Epoch[16] Batch [360-380]	Speed: 21426.84 samples/sec	accuracy=nan
2023-03-21 22:36:23,200 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,200 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,200 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,200 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,200 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,200 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:23,201 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456183200, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 22:36:23,202 Node[0] Epoch[16] Time cost=59.618
:::MLLOG {"namespace": "", "time_ms": 1679456183202, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.60465625681}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679456183202, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 22:36:23,202 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:36:26,401 Node[0] Epoch[17] Batch [0-20]	Speed: 21451.31 samples/sec	accuracy=nan
2023-03-21 22:36:29,453 Node[0] Epoch[17] Batch [20-40]	Speed: 21384.47 samples/sec	accuracy=nan
2023-03-21 22:36:32,509 Node[0] Epoch[17] Batch [40-60]	Speed: 21366.31 samples/sec	accuracy=nan
2023-03-21 22:36:35,557 Node[0] Epoch[17] Batch [60-80]	Speed: 21414.35 samples/sec	accuracy=nan
2023-03-21 22:36:38,600 Node[0] Epoch[17] Batch [80-100]	Speed: 21455.03 samples/sec	accuracy=nan
2023-03-21 22:36:41,641 Node[0] Epoch[17] Batch [100-120]	Speed: 21468.54 samples/sec	accuracy=nan
2023-03-21 22:36:44,683 Node[0] Epoch[17] Batch [120-140]	Speed: 21459.97 samples/sec	accuracy=nan
2023-03-21 22:36:47,722 Node[0] Epoch[17] Batch [140-160]	Speed: 21477.45 samples/sec	accuracy=nan
2023-03-21 22:36:50,769 Node[0] Epoch[17] Batch [160-180]	Speed: 21425.24 samples/sec	accuracy=nan
2023-03-21 22:36:53,810 Node[0] Epoch[17] Batch [180-200]	Speed: 21463.78 samples/sec	accuracy=nan
2023-03-21 22:36:56,852 Node[0] Epoch[17] Batch [200-220]	Speed: 21462.11 samples/sec	accuracy=nan
2023-03-21 22:36:59,896 Node[0] Epoch[17] Batch [220-240]	Speed: 21446.43 samples/sec	accuracy=nan
2023-03-21 22:37:02,934 Node[0] Epoch[17] Batch [240-260]	Speed: 21486.11 samples/sec	accuracy=nan
2023-03-21 22:37:05,975 Node[0] Epoch[17] Batch [260-280]	Speed: 21467.44 samples/sec	accuracy=nan
2023-03-21 22:37:09,018 Node[0] Epoch[17] Batch [280-300]	Speed: 21449.04 samples/sec	accuracy=nan
2023-03-21 22:37:12,058 Node[0] Epoch[17] Batch [300-320]	Speed: 21477.86 samples/sec	accuracy=nan
2023-03-21 22:37:15,100 Node[0] Epoch[17] Batch [320-340]	Speed: 21459.63 samples/sec	accuracy=nan
2023-03-21 22:37:18,142 Node[0] Epoch[17] Batch [340-360]	Speed: 21460.62 samples/sec	accuracy=nan
2023-03-21 22:37:21,183 Node[0] Epoch[17] Batch [360-380]	Speed: 21461.63 samples/sec	accuracy=nan
2023-03-21 22:37:23,006 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:23,006 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:23,006 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:23,006 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:23,006 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:23,006 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456243006, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 22:37:23,007 Node[0] Epoch[17] Time cost=59.805
:::MLLOG {"namespace": "", "time_ms": 1679456243007, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21422.544909465058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-21 22:37:23,007 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456243007, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 22:37:23,007 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:37:26,201 Node[0] Epoch[18] Batch [0-20]	Speed: 21459.44 samples/sec	accuracy=nan
2023-03-21 22:37:29,242 Node[0] Epoch[18] Batch [20-40]	Speed: 21472.10 samples/sec	accuracy=nan
2023-03-21 22:37:32,287 Node[0] Epoch[18] Batch [40-60]	Speed: 21436.87 samples/sec	accuracy=nan
2023-03-21 22:37:35,326 Node[0] Epoch[18] Batch [60-80]	Speed: 21477.42 samples/sec	accuracy=nan
2023-03-21 22:37:38,366 Node[0] Epoch[18] Batch [80-100]	Speed: 21478.00 samples/sec	accuracy=nan
2023-03-21 22:37:41,408 Node[0] Epoch[18] Batch [100-120]	Speed: 21456.37 samples/sec	accuracy=nan
2023-03-21 22:37:44,453 Node[0] Epoch[18] Batch [120-140]	Speed: 21439.55 samples/sec	accuracy=nan
2023-03-21 22:37:47,504 Node[0] Epoch[18] Batch [140-160]	Speed: 21398.99 samples/sec	accuracy=nan
2023-03-21 22:37:50,559 Node[0] Epoch[18] Batch [160-180]	Speed: 21366.58 samples/sec	accuracy=nan
2023-03-21 22:37:53,612 Node[0] Epoch[18] Batch [180-200]	Speed: 21377.69 samples/sec	accuracy=nan
2023-03-21 22:37:56,659 Node[0] Epoch[18] Batch [200-220]	Speed: 21430.18 samples/sec	accuracy=nan
2023-03-21 22:37:59,695 Node[0] Epoch[18] Batch [220-240]	Speed: 21496.77 samples/sec	accuracy=nan
2023-03-21 22:38:02,737 Node[0] Epoch[18] Batch [240-260]	Speed: 21461.03 samples/sec	accuracy=nan
2023-03-21 22:38:05,780 Node[0] Epoch[18] Batch [260-280]	Speed: 21452.30 samples/sec	accuracy=nan
2023-03-21 22:38:08,823 Node[0] Epoch[18] Batch [280-300]	Speed: 21455.25 samples/sec	accuracy=nan
2023-03-21 22:38:11,862 Node[0] Epoch[18] Batch [300-320]	Speed: 21475.86 samples/sec	accuracy=nan
2023-03-21 22:38:14,902 Node[0] Epoch[18] Batch [320-340]	Speed: 21477.06 samples/sec	accuracy=nan
2023-03-21 22:38:17,945 Node[0] Epoch[18] Batch [340-360]	Speed: 21452.08 samples/sec	accuracy=nan
2023-03-21 22:38:20,986 Node[0] Epoch[18] Batch [360-380]	Speed: 21463.98 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679456302659, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 22:38:22,661 Node[0] Epoch[18] Time cost=59.653
:::MLLOG {"namespace": "", "time_ms": 1679456302661, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21476.917215724323}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679456302807, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 22:38:24,352 Node[0] Epoch[18] Validation-accuracy=0.547680
2023-03-21 22:38:24,353 Node[0] Epoch[18] Validation-correct-count=3423.000000
2023-03-21 22:38:24,353 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679456304442, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 22:38:24,442 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:24,442 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:24,442 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456304443, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.54518, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679456304443, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679456304443, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 22:38:24,443 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:24,443 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:24,443 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:24,443 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456304443, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 22:38:24,443 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:38:27,503 Node[0] Epoch[19] Batch [0-20]	Speed: 21422.14 samples/sec	accuracy=nan
2023-03-21 22:38:30,548 Node[0] Epoch[19] Batch [20-40]	Speed: 21437.24 samples/sec	accuracy=nan
2023-03-21 22:38:33,590 Node[0] Epoch[19] Batch [40-60]	Speed: 21458.97 samples/sec	accuracy=nan
2023-03-21 22:38:36,632 Node[0] Epoch[19] Batch [60-80]	Speed: 21460.35 samples/sec	accuracy=nan
2023-03-21 22:38:39,674 Node[0] Epoch[19] Batch [80-100]	Speed: 21460.72 samples/sec	accuracy=nan
2023-03-21 22:38:42,715 Node[0] Epoch[19] Batch [100-120]	Speed: 21466.66 samples/sec	accuracy=nan
2023-03-21 22:38:45,756 Node[0] Epoch[19] Batch [120-140]	Speed: 21463.85 samples/sec	accuracy=nan
2023-03-21 22:38:48,801 Node[0] Epoch[19] Batch [140-160]	Speed: 21438.85 samples/sec	accuracy=nan
2023-03-21 22:38:51,851 Node[0] Epoch[19] Batch [160-180]	Speed: 21401.82 samples/sec	accuracy=nan
2023-03-21 22:38:54,900 Node[0] Epoch[19] Batch [180-200]	Speed: 21412.76 samples/sec	accuracy=nan
2023-03-21 22:38:57,947 Node[0] Epoch[19] Batch [200-220]	Speed: 21421.38 samples/sec	accuracy=nan
2023-03-21 22:39:00,999 Node[0] Epoch[19] Batch [220-240]	Speed: 21389.62 samples/sec	accuracy=nan
2023-03-21 22:39:04,042 Node[0] Epoch[19] Batch [240-260]	Speed: 21458.36 samples/sec	accuracy=nan
2023-03-21 22:39:07,088 Node[0] Epoch[19] Batch [260-280]	Speed: 21429.68 samples/sec	accuracy=nan
2023-03-21 22:39:10,131 Node[0] Epoch[19] Batch [280-300]	Speed: 21452.63 samples/sec	accuracy=nan
2023-03-21 22:39:13,171 Node[0] Epoch[19] Batch [300-320]	Speed: 21475.23 samples/sec	accuracy=nan
2023-03-21 22:39:16,222 Node[0] Epoch[19] Batch [320-340]	Speed: 21396.21 samples/sec	accuracy=nan
2023-03-21 22:39:19,264 Node[0] Epoch[19] Batch [340-360]	Speed: 21458.08 samples/sec	accuracy=nan
2023-03-21 22:39:22,306 Node[0] Epoch[19] Batch [360-380]	Speed: 21461.00 samples/sec	accuracy=nan
2023-03-21 22:39:24,129 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,129 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,129 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,129 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,129 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,130 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:24,130 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456364130, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 22:39:24,131 Node[0] Epoch[19] Time cost=59.688
:::MLLOG {"namespace": "", "time_ms": 1679456364131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21464.38535638022}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679456364132, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 22:39:24,132 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:39:27,328 Node[0] Epoch[20] Batch [0-20]	Speed: 21437.27 samples/sec	accuracy=nan
2023-03-21 22:39:30,371 Node[0] Epoch[20] Batch [20-40]	Speed: 21455.00 samples/sec	accuracy=nan
2023-03-21 22:39:33,413 Node[0] Epoch[20] Batch [40-60]	Speed: 21455.53 samples/sec	accuracy=nan
2023-03-21 22:39:36,457 Node[0] Epoch[20] Batch [60-80]	Speed: 21445.33 samples/sec	accuracy=nan
2023-03-21 22:39:39,511 Node[0] Epoch[20] Batch [80-100]	Speed: 21381.17 samples/sec	accuracy=nan
2023-03-21 22:39:42,563 Node[0] Epoch[20] Batch [100-120]	Speed: 21384.50 samples/sec	accuracy=nan
2023-03-21 22:39:45,607 Node[0] Epoch[20] Batch [120-140]	Speed: 21448.28 samples/sec	accuracy=nan
2023-03-21 22:39:48,655 Node[0] Epoch[20] Batch [140-160]	Speed: 21417.83 samples/sec	accuracy=nan
2023-03-21 22:39:51,695 Node[0] Epoch[20] Batch [160-180]	Speed: 21468.94 samples/sec	accuracy=nan
2023-03-21 22:39:54,742 Node[0] Epoch[20] Batch [180-200]	Speed: 21427.10 samples/sec	accuracy=nan
2023-03-21 22:39:57,793 Node[0] Epoch[20] Batch [200-220]	Speed: 21396.93 samples/sec	accuracy=nan
2023-03-21 22:40:00,836 Node[0] Epoch[20] Batch [220-240]	Speed: 21449.72 samples/sec	accuracy=nan
2023-03-21 22:40:03,877 Node[0] Epoch[20] Batch [240-260]	Speed: 21470.09 samples/sec	accuracy=nan
2023-03-21 22:40:06,924 Node[0] Epoch[20] Batch [260-280]	Speed: 21426.17 samples/sec	accuracy=nan
2023-03-21 22:40:09,962 Node[0] Epoch[20] Batch [280-300]	Speed: 21487.11 samples/sec	accuracy=nan
2023-03-21 22:40:13,009 Node[0] Epoch[20] Batch [300-320]	Speed: 21419.29 samples/sec	accuracy=nan
2023-03-21 22:40:16,055 Node[0] Epoch[20] Batch [320-340]	Speed: 21435.73 samples/sec	accuracy=nan
2023-03-21 22:40:19,097 Node[0] Epoch[20] Batch [340-360]	Speed: 21461.58 samples/sec	accuracy=nan
2023-03-21 22:40:22,141 Node[0] Epoch[20] Batch [360-380]	Speed: 21443.49 samples/sec	accuracy=nan
2023-03-21 22:40:23,811 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:23,811 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:23,811 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:23,811 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:23,811 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:23,811 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456423811, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 22:40:23,812 Node[0] Epoch[20] Time cost=59.680
:::MLLOG {"namespace": "", "time_ms": 1679456423812, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21467.261980737803}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 22:40:23,812 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456423812, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 22:40:23,812 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:40:27,010 Node[0] Epoch[21] Batch [0-20]	Speed: 21461.15 samples/sec	accuracy=nan
2023-03-21 22:40:30,055 Node[0] Epoch[21] Batch [20-40]	Speed: 21436.03 samples/sec	accuracy=nan
2023-03-21 22:40:33,102 Node[0] Epoch[21] Batch [40-60]	Speed: 21429.72 samples/sec	accuracy=nan
2023-03-21 22:40:36,152 Node[0] Epoch[21] Batch [60-80]	Speed: 21402.68 samples/sec	accuracy=nan
2023-03-21 22:40:39,199 Node[0] Epoch[21] Batch [80-100]	Speed: 21425.13 samples/sec	accuracy=nan
2023-03-21 22:40:42,249 Node[0] Epoch[21] Batch [100-120]	Speed: 21402.62 samples/sec	accuracy=nan
2023-03-21 22:40:45,295 Node[0] Epoch[21] Batch [120-140]	Speed: 21432.49 samples/sec	accuracy=nan
2023-03-21 22:40:48,347 Node[0] Epoch[21] Batch [140-160]	Speed: 21388.57 samples/sec	accuracy=nan
2023-03-21 22:40:51,398 Node[0] Epoch[21] Batch [160-180]	Speed: 21395.00 samples/sec	accuracy=nan
2023-03-21 22:40:54,441 Node[0] Epoch[21] Batch [180-200]	Speed: 21448.13 samples/sec	accuracy=nan
2023-03-21 22:40:57,487 Node[0] Epoch[21] Batch [200-220]	Speed: 21436.27 samples/sec	accuracy=nan
2023-03-21 22:41:00,532 Node[0] Epoch[21] Batch [220-240]	Speed: 21438.97 samples/sec	accuracy=nan
2023-03-21 22:41:03,572 Node[0] Epoch[21] Batch [240-260]	Speed: 21469.89 samples/sec	accuracy=nan
2023-03-21 22:41:06,616 Node[0] Epoch[21] Batch [260-280]	Speed: 21445.25 samples/sec	accuracy=nan
2023-03-21 22:41:09,661 Node[0] Epoch[21] Batch [280-300]	Speed: 21436.80 samples/sec	accuracy=nan
2023-03-21 22:41:12,702 Node[0] Epoch[21] Batch [300-320]	Speed: 21469.36 samples/sec	accuracy=nan
2023-03-21 22:41:15,744 Node[0] Epoch[21] Batch [320-340]	Speed: 21458.50 samples/sec	accuracy=nan
2023-03-21 22:41:18,786 Node[0] Epoch[21] Batch [340-360]	Speed: 21457.61 samples/sec	accuracy=nan
2023-03-21 22:41:21,830 Node[0] Epoch[21] Batch [360-380]	Speed: 21447.13 samples/sec	accuracy=nan
2023-03-21 22:41:23,652 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,652 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,652 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,652 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,653 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,653 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:23,653 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456483653, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 22:41:23,654 Node[0] Epoch[21] Time cost=59.841
:::MLLOG {"namespace": "", "time_ms": 1679456483654, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21409.40303350655}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679456483654, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 22:41:23,654 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:41:26,852 Node[0] Epoch[22] Batch [0-20]	Speed: 21441.72 samples/sec	accuracy=nan
2023-03-21 22:41:29,896 Node[0] Epoch[22] Batch [20-40]	Speed: 21447.86 samples/sec	accuracy=nan
2023-03-21 22:41:32,933 Node[0] Epoch[22] Batch [40-60]	Speed: 21493.46 samples/sec	accuracy=nan
2023-03-21 22:41:35,976 Node[0] Epoch[22] Batch [60-80]	Speed: 21449.37 samples/sec	accuracy=nan
2023-03-21 22:41:39,020 Node[0] Epoch[22] Batch [80-100]	Speed: 21449.71 samples/sec	accuracy=nan
2023-03-21 22:41:42,065 Node[0] Epoch[22] Batch [100-120]	Speed: 21438.53 samples/sec	accuracy=nan
2023-03-21 22:41:45,108 Node[0] Epoch[22] Batch [120-140]	Speed: 21448.39 samples/sec	accuracy=nan
2023-03-21 22:41:48,153 Node[0] Epoch[22] Batch [140-160]	Speed: 21442.68 samples/sec	accuracy=nan
2023-03-21 22:41:51,197 Node[0] Epoch[22] Batch [160-180]	Speed: 21439.93 samples/sec	accuracy=nan
2023-03-21 22:41:54,254 Node[0] Epoch[22] Batch [180-200]	Speed: 21359.28 samples/sec	accuracy=nan
2023-03-21 22:41:57,311 Node[0] Epoch[22] Batch [200-220]	Speed: 21351.61 samples/sec	accuracy=nan
2023-03-21 22:42:00,363 Node[0] Epoch[22] Batch [220-240]	Speed: 21387.09 samples/sec	accuracy=nan
2023-03-21 22:42:03,412 Node[0] Epoch[22] Batch [240-260]	Speed: 21412.14 samples/sec	accuracy=nan
2023-03-21 22:42:06,463 Node[0] Epoch[22] Batch [260-280]	Speed: 21397.14 samples/sec	accuracy=nan
2023-03-21 22:42:09,513 Node[0] Epoch[22] Batch [280-300]	Speed: 21405.36 samples/sec	accuracy=nan
2023-03-21 22:42:12,555 Node[0] Epoch[22] Batch [300-320]	Speed: 21460.01 samples/sec	accuracy=nan
2023-03-21 22:42:15,597 Node[0] Epoch[22] Batch [320-340]	Speed: 21458.52 samples/sec	accuracy=nan
2023-03-21 22:42:18,646 Node[0] Epoch[22] Batch [340-360]	Speed: 21409.32 samples/sec	accuracy=nan
2023-03-21 22:42:21,699 Node[0] Epoch[22] Batch [360-380]	Speed: 21383.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679456543375, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 22:42:23,376 Node[0] Epoch[22] Time cost=59.721
:::MLLOG {"namespace": "", "time_ms": 1679456543376, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21452.419034235114}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679456543522, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 22:42:25,039 Node[0] Epoch[22] Validation-accuracy=0.677920
2023-03-21 22:42:25,039 Node[0] Epoch[22] Validation-correct-count=4237.000000
2023-03-21 22:42:25,039 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-21 22:42:25,176 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:25,176 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456545176, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679456545177, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6772, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679456545177, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679456545177, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679456545177, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 22:42:25,178 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:42:28,229 Node[0] Epoch[23] Batch [0-20]	Speed: 21459.11 samples/sec	accuracy=nan
2023-03-21 22:42:31,270 Node[0] Epoch[23] Batch [20-40]	Speed: 21468.43 samples/sec	accuracy=nan
2023-03-21 22:42:34,318 Node[0] Epoch[23] Batch [40-60]	Speed: 21419.85 samples/sec	accuracy=nan
2023-03-21 22:42:37,362 Node[0] Epoch[23] Batch [60-80]	Speed: 21441.07 samples/sec	accuracy=nan
2023-03-21 22:42:40,406 Node[0] Epoch[23] Batch [80-100]	Speed: 21446.26 samples/sec	accuracy=nan
2023-03-21 22:42:43,451 Node[0] Epoch[23] Batch [100-120]	Speed: 21438.17 samples/sec	accuracy=nan
2023-03-21 22:42:46,486 Node[0] Epoch[23] Batch [120-140]	Speed: 21507.64 samples/sec	accuracy=nan
2023-03-21 22:42:49,525 Node[0] Epoch[23] Batch [140-160]	Speed: 21487.10 samples/sec	accuracy=nan
2023-03-21 22:42:52,567 Node[0] Epoch[23] Batch [160-180]	Speed: 21456.84 samples/sec	accuracy=nan
2023-03-21 22:42:55,607 Node[0] Epoch[23] Batch [180-200]	Speed: 21472.47 samples/sec	accuracy=nan
2023-03-21 22:42:58,651 Node[0] Epoch[23] Batch [200-220]	Speed: 21448.94 samples/sec	accuracy=nan
2023-03-21 22:43:01,692 Node[0] Epoch[23] Batch [220-240]	Speed: 21461.30 samples/sec	accuracy=nan
2023-03-21 22:43:04,732 Node[0] Epoch[23] Batch [240-260]	Speed: 21473.90 samples/sec	accuracy=nan
2023-03-21 22:43:07,774 Node[0] Epoch[23] Batch [260-280]	Speed: 21459.88 samples/sec	accuracy=nan
2023-03-21 22:43:10,813 Node[0] Epoch[23] Batch [280-300]	Speed: 21481.64 samples/sec	accuracy=nan
2023-03-21 22:43:13,851 Node[0] Epoch[23] Batch [300-320]	Speed: 21486.23 samples/sec	accuracy=nan
2023-03-21 22:43:16,893 Node[0] Epoch[23] Batch [320-340]	Speed: 21463.19 samples/sec	accuracy=nan
2023-03-21 22:43:19,936 Node[0] Epoch[23] Batch [340-360]	Speed: 21454.47 samples/sec	accuracy=nan
2023-03-21 22:43:22,980 Node[0] Epoch[23] Batch [360-380]	Speed: 21443.87 samples/sec	accuracy=nan
2023-03-21 22:43:24,804 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,803 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,804 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,804 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,804 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,804 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:24,804 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456604804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 22:43:24,804 Node[0] Epoch[23] Time cost=59.627
:::MLLOG {"namespace": "", "time_ms": 1679456604804, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21486.43517121219}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679456604805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 22:43:24,805 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:43:27,995 Node[0] Epoch[24] Batch [0-20]	Speed: 21488.57 samples/sec	accuracy=nan
2023-03-21 22:43:31,032 Node[0] Epoch[24] Batch [20-40]	Speed: 21490.80 samples/sec	accuracy=nan
2023-03-21 22:43:34,068 Node[0] Epoch[24] Batch [40-60]	Speed: 21505.19 samples/sec	accuracy=nan
2023-03-21 22:43:37,111 Node[0] Epoch[24] Batch [60-80]	Speed: 21453.61 samples/sec	accuracy=nan
2023-03-21 22:43:40,151 Node[0] Epoch[24] Batch [80-100]	Speed: 21470.87 samples/sec	accuracy=nan
2023-03-21 22:43:43,191 Node[0] Epoch[24] Batch [100-120]	Speed: 21475.41 samples/sec	accuracy=nan
2023-03-21 22:43:46,232 Node[0] Epoch[24] Batch [120-140]	Speed: 21468.58 samples/sec	accuracy=nan
2023-03-21 22:43:49,275 Node[0] Epoch[24] Batch [140-160]	Speed: 21447.79 samples/sec	accuracy=nan
2023-03-21 22:43:52,321 Node[0] Epoch[24] Batch [160-180]	Speed: 21432.40 samples/sec	accuracy=nan
2023-03-21 22:43:55,369 Node[0] Epoch[24] Batch [180-200]	Speed: 21417.98 samples/sec	accuracy=nan
2023-03-21 22:43:58,409 Node[0] Epoch[24] Batch [200-220]	Speed: 21472.76 samples/sec	accuracy=nan
2023-03-21 22:44:01,455 Node[0] Epoch[24] Batch [220-240]	Speed: 21430.90 samples/sec	accuracy=nan
2023-03-21 22:44:04,494 Node[0] Epoch[24] Batch [240-260]	Speed: 21479.95 samples/sec	accuracy=nan
2023-03-21 22:44:07,533 Node[0] Epoch[24] Batch [260-280]	Speed: 21480.34 samples/sec	accuracy=nan
2023-03-21 22:44:10,573 Node[0] Epoch[24] Batch [280-300]	Speed: 21478.64 samples/sec	accuracy=nan
2023-03-21 22:44:13,611 Node[0] Epoch[24] Batch [300-320]	Speed: 21485.19 samples/sec	accuracy=nan
2023-03-21 22:44:16,651 Node[0] Epoch[24] Batch [320-340]	Speed: 21474.59 samples/sec	accuracy=nan
2023-03-21 22:44:19,688 Node[0] Epoch[24] Batch [340-360]	Speed: 21494.21 samples/sec	accuracy=nan
2023-03-21 22:44:22,731 Node[0] Epoch[24] Batch [360-380]	Speed: 21451.83 samples/sec	accuracy=nan
2023-03-21 22:44:24,398 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,398 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,398 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,398 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,398 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,398 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:24,399 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456664398, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 22:44:24,399 Node[0] Epoch[24] Time cost=59.595
:::MLLOG {"namespace": "", "time_ms": 1679456664400, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21498.043672906588}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679456664400, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 22:44:24,400 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:44:27,592 Node[0] Epoch[25] Batch [0-20]	Speed: 21488.22 samples/sec	accuracy=nan
2023-03-21 22:44:30,638 Node[0] Epoch[25] Batch [20-40]	Speed: 21429.20 samples/sec	accuracy=nan
2023-03-21 22:44:33,683 Node[0] Epoch[25] Batch [40-60]	Speed: 21443.98 samples/sec	accuracy=nan
2023-03-21 22:44:36,725 Node[0] Epoch[25] Batch [60-80]	Speed: 21458.62 samples/sec	accuracy=nan
2023-03-21 22:44:39,768 Node[0] Epoch[25] Batch [80-100]	Speed: 21452.04 samples/sec	accuracy=nan
2023-03-21 22:44:42,810 Node[0] Epoch[25] Batch [100-120]	Speed: 21456.79 samples/sec	accuracy=nan
2023-03-21 22:44:45,852 Node[0] Epoch[25] Batch [120-140]	Speed: 21463.73 samples/sec	accuracy=nan
2023-03-21 22:44:48,889 Node[0] Epoch[25] Batch [140-160]	Speed: 21494.18 samples/sec	accuracy=nan
2023-03-21 22:44:51,930 Node[0] Epoch[25] Batch [160-180]	Speed: 21463.32 samples/sec	accuracy=nan
2023-03-21 22:44:54,971 Node[0] Epoch[25] Batch [180-200]	Speed: 21466.12 samples/sec	accuracy=nan
2023-03-21 22:44:58,026 Node[0] Epoch[25] Batch [200-220]	Speed: 21370.49 samples/sec	accuracy=nan
2023-03-21 22:45:01,080 Node[0] Epoch[25] Batch [220-240]	Speed: 21372.32 samples/sec	accuracy=nan
2023-03-21 22:45:04,131 Node[0] Epoch[25] Batch [240-260]	Speed: 21397.68 samples/sec	accuracy=nan
2023-03-21 22:45:07,172 Node[0] Epoch[25] Batch [260-280]	Speed: 21467.96 samples/sec	accuracy=nan
2023-03-21 22:45:10,226 Node[0] Epoch[25] Batch [280-300]	Speed: 21371.35 samples/sec	accuracy=nan
2023-03-21 22:45:15,513 Node[0] Epoch[25] Batch [300-320]	Speed: 12347.39 samples/sec	accuracy=nan
2023-03-21 22:45:18,545 Node[0] Epoch[25] Batch [320-340]	Speed: 21531.49 samples/sec	accuracy=nan
2023-03-21 22:45:21,580 Node[0] Epoch[25] Batch [340-360]	Speed: 21508.57 samples/sec	accuracy=nan
2023-03-21 22:45:24,617 Node[0] Epoch[25] Batch [360-380]	Speed: 21497.51 samples/sec	accuracy=nan
2023-03-21 22:45:26,435 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,435 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,434 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,435 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,435 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,435 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:26,435 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456726436, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 22:45:26,437 Node[0] Epoch[25] Time cost=62.037
:::MLLOG {"namespace": "", "time_ms": 1679456726437, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20651.747532460762}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679456726437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 22:45:26,437 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:45:29,634 Node[0] Epoch[26] Batch [0-20]	Speed: 21416.26 samples/sec	accuracy=nan
2023-03-21 22:45:32,673 Node[0] Epoch[26] Batch [20-40]	Speed: 21484.58 samples/sec	accuracy=nan
2023-03-21 22:45:35,712 Node[0] Epoch[26] Batch [40-60]	Speed: 21482.57 samples/sec	accuracy=nan
2023-03-21 22:45:38,753 Node[0] Epoch[26] Batch [60-80]	Speed: 21462.99 samples/sec	accuracy=nan
2023-03-21 22:45:41,792 Node[0] Epoch[26] Batch [80-100]	Speed: 21479.73 samples/sec	accuracy=nan
2023-03-21 22:45:44,836 Node[0] Epoch[26] Batch [100-120]	Speed: 21447.27 samples/sec	accuracy=nan
2023-03-21 22:45:47,878 Node[0] Epoch[26] Batch [120-140]	Speed: 21460.92 samples/sec	accuracy=nan
2023-03-21 22:45:50,922 Node[0] Epoch[26] Batch [140-160]	Speed: 21441.64 samples/sec	accuracy=nan
2023-03-21 22:45:53,967 Node[0] Epoch[26] Batch [160-180]	Speed: 21441.14 samples/sec	accuracy=nan
2023-03-21 22:45:57,013 Node[0] Epoch[26] Batch [180-200]	Speed: 21432.57 samples/sec	accuracy=nan
2023-03-21 22:46:00,056 Node[0] Epoch[26] Batch [200-220]	Speed: 21452.53 samples/sec	accuracy=nan
2023-03-21 22:46:03,097 Node[0] Epoch[26] Batch [220-240]	Speed: 21468.33 samples/sec	accuracy=nan
2023-03-21 22:46:06,137 Node[0] Epoch[26] Batch [240-260]	Speed: 21472.99 samples/sec	accuracy=nan
2023-03-21 22:46:09,178 Node[0] Epoch[26] Batch [260-280]	Speed: 21464.34 samples/sec	accuracy=nan
2023-03-21 22:46:12,220 Node[0] Epoch[26] Batch [280-300]	Speed: 21459.52 samples/sec	accuracy=nan
2023-03-21 22:46:15,267 Node[0] Epoch[26] Batch [300-320]	Speed: 21426.12 samples/sec	accuracy=nan
2023-03-21 22:46:18,305 Node[0] Epoch[26] Batch [320-340]	Speed: 21487.49 samples/sec	accuracy=nan
2023-03-21 22:46:21,351 Node[0] Epoch[26] Batch [340-360]	Speed: 21431.58 samples/sec	accuracy=nan
2023-03-21 22:46:24,393 Node[0] Epoch[26] Batch [360-380]	Speed: 21455.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679456786065, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 22:46:26,065 Node[0] Epoch[26] Time cost=59.628
:::MLLOG {"namespace": "", "time_ms": 1679456786066, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21485.958188209956}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679456786211, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 22:46:27,669 Node[0] Epoch[26] Validation-accuracy=0.720640
2023-03-21 22:46:27,670 Node[0] Epoch[26] Validation-correct-count=4504.000000
2023-03-21 22:46:27,670 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-21 22:46:27,848 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:27,848 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456787848, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679456787849, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679456787849, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679456787849, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679456787850, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 22:46:27,850 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:46:30,914 Node[0] Epoch[27] Batch [0-20]	Speed: 21378.85 samples/sec	accuracy=nan
2023-03-21 22:46:33,973 Node[0] Epoch[27] Batch [20-40]	Speed: 21339.42 samples/sec	accuracy=nan
2023-03-21 22:46:37,033 Node[0] Epoch[27] Batch [40-60]	Speed: 21336.37 samples/sec	accuracy=nan
2023-03-21 22:46:40,079 Node[0] Epoch[27] Batch [60-80]	Speed: 21431.89 samples/sec	accuracy=nan
2023-03-21 22:46:43,125 Node[0] Epoch[27] Batch [80-100]	Speed: 21432.61 samples/sec	accuracy=nan
2023-03-21 22:46:46,171 Node[0] Epoch[27] Batch [100-120]	Speed: 21428.57 samples/sec	accuracy=nan
2023-03-21 22:46:49,214 Node[0] Epoch[27] Batch [120-140]	Speed: 21454.21 samples/sec	accuracy=nan
2023-03-21 22:46:52,260 Node[0] Epoch[27] Batch [140-160]	Speed: 21432.95 samples/sec	accuracy=nan
2023-03-21 22:46:55,308 Node[0] Epoch[27] Batch [160-180]	Speed: 21417.11 samples/sec	accuracy=nan
2023-03-21 22:46:58,365 Node[0] Epoch[27] Batch [180-200]	Speed: 21350.21 samples/sec	accuracy=nan
2023-03-21 22:47:01,428 Node[0] Epoch[27] Batch [200-220]	Speed: 21312.78 samples/sec	accuracy=nan
2023-03-21 22:47:04,474 Node[0] Epoch[27] Batch [220-240]	Speed: 21436.14 samples/sec	accuracy=nan
2023-03-21 22:47:07,517 Node[0] Epoch[27] Batch [240-260]	Speed: 21453.25 samples/sec	accuracy=nan
2023-03-21 22:47:10,558 Node[0] Epoch[27] Batch [260-280]	Speed: 21460.47 samples/sec	accuracy=nan
2023-03-21 22:47:13,602 Node[0] Epoch[27] Batch [280-300]	Speed: 21449.84 samples/sec	accuracy=nan
2023-03-21 22:47:16,646 Node[0] Epoch[27] Batch [300-320]	Speed: 21446.36 samples/sec	accuracy=nan
2023-03-21 22:47:19,688 Node[0] Epoch[27] Batch [320-340]	Speed: 21456.25 samples/sec	accuracy=nan
2023-03-21 22:47:22,736 Node[0] Epoch[27] Batch [340-360]	Speed: 21415.10 samples/sec	accuracy=nan
2023-03-21 22:47:25,783 Node[0] Epoch[27] Batch [360-380]	Speed: 21429.24 samples/sec	accuracy=nan
2023-03-21 22:47:27,606 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:27,607 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:27,607 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:27,607 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456847607, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 22:47:27,607 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:27,607 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:27,607 Node[0] Epoch[27] Time cost=59.758
2023-03-21 22:47:27,607 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456847607, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21439.427903657834}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679456847608, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 22:47:27,608 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:47:30,812 Node[0] Epoch[28] Batch [0-20]	Speed: 21399.07 samples/sec	accuracy=nan
2023-03-21 22:47:33,863 Node[0] Epoch[28] Batch [20-40]	Speed: 21392.83 samples/sec	accuracy=nan
2023-03-21 22:47:36,912 Node[0] Epoch[28] Batch [40-60]	Speed: 21411.54 samples/sec	accuracy=nan
2023-03-21 22:47:39,958 Node[0] Epoch[28] Batch [60-80]	Speed: 21427.86 samples/sec	accuracy=nan
2023-03-21 22:47:43,005 Node[0] Epoch[28] Batch [80-100]	Speed: 21426.34 samples/sec	accuracy=nan
2023-03-21 22:47:46,048 Node[0] Epoch[28] Batch [100-120]	Speed: 21456.17 samples/sec	accuracy=nan
2023-03-21 22:47:49,091 Node[0] Epoch[28] Batch [120-140]	Speed: 21447.67 samples/sec	accuracy=nan
2023-03-21 22:47:52,135 Node[0] Epoch[28] Batch [140-160]	Speed: 21448.46 samples/sec	accuracy=nan
2023-03-21 22:47:55,180 Node[0] Epoch[28] Batch [160-180]	Speed: 21435.98 samples/sec	accuracy=nan
2023-03-21 22:47:58,226 Node[0] Epoch[28] Batch [180-200]	Speed: 21433.56 samples/sec	accuracy=nan
2023-03-21 22:48:01,278 Node[0] Epoch[28] Batch [200-220]	Speed: 21386.81 samples/sec	accuracy=nan
2023-03-21 22:48:04,335 Node[0] Epoch[28] Batch [220-240]	Speed: 21354.10 samples/sec	accuracy=nan
2023-03-21 22:48:07,383 Node[0] Epoch[28] Batch [240-260]	Speed: 21422.20 samples/sec	accuracy=nan
2023-03-21 22:48:10,433 Node[0] Epoch[28] Batch [260-280]	Speed: 21400.37 samples/sec	accuracy=nan
2023-03-21 22:48:13,487 Node[0] Epoch[28] Batch [280-300]	Speed: 21374.36 samples/sec	accuracy=nan
2023-03-21 22:48:18,792 Node[0] Epoch[28] Batch [300-320]	Speed: 12304.66 samples/sec	accuracy=nan
2023-03-21 22:48:21,832 Node[0] Epoch[28] Batch [320-340]	Speed: 21479.35 samples/sec	accuracy=nan
2023-03-21 22:48:24,870 Node[0] Epoch[28] Batch [340-360]	Speed: 21482.14 samples/sec	accuracy=nan
2023-03-21 22:48:27,911 Node[0] Epoch[28] Batch [360-380]	Speed: 21466.94 samples/sec	accuracy=nan
2023-03-21 22:48:29,579 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,579 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,579 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,579 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,579 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,579 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:29,580 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456909579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 22:48:29,581 Node[0] Epoch[28] Time cost=61.973
:::MLLOG {"namespace": "", "time_ms": 1679456909581, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20673.067172689145}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679456909581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 22:48:29,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:48:32,773 Node[0] Epoch[29] Batch [0-20]	Speed: 21491.26 samples/sec	accuracy=nan
2023-03-21 22:48:35,812 Node[0] Epoch[29] Batch [20-40]	Speed: 21485.66 samples/sec	accuracy=nan
2023-03-21 22:48:38,852 Node[0] Epoch[29] Batch [40-60]	Speed: 21468.58 samples/sec	accuracy=nan
2023-03-21 22:48:41,893 Node[0] Epoch[29] Batch [60-80]	Speed: 21471.80 samples/sec	accuracy=nan
2023-03-21 22:48:44,934 Node[0] Epoch[29] Batch [80-100]	Speed: 21461.87 samples/sec	accuracy=nan
2023-03-21 22:48:47,977 Node[0] Epoch[29] Batch [100-120]	Speed: 21456.22 samples/sec	accuracy=nan
2023-03-21 22:48:51,027 Node[0] Epoch[29] Batch [120-140]	Speed: 21401.65 samples/sec	accuracy=nan
2023-03-21 22:48:54,072 Node[0] Epoch[29] Batch [140-160]	Speed: 21437.56 samples/sec	accuracy=nan
2023-03-21 22:48:57,120 Node[0] Epoch[29] Batch [160-180]	Speed: 21418.13 samples/sec	accuracy=nan
2023-03-21 22:49:00,164 Node[0] Epoch[29] Batch [180-200]	Speed: 21448.65 samples/sec	accuracy=nan
2023-03-21 22:49:03,210 Node[0] Epoch[29] Batch [200-220]	Speed: 21431.81 samples/sec	accuracy=nan
2023-03-21 22:49:06,255 Node[0] Epoch[29] Batch [220-240]	Speed: 21437.04 samples/sec	accuracy=nan
2023-03-21 22:49:09,302 Node[0] Epoch[29] Batch [240-260]	Speed: 21421.73 samples/sec	accuracy=nan
2023-03-21 22:49:12,348 Node[0] Epoch[29] Batch [260-280]	Speed: 21434.87 samples/sec	accuracy=nan
2023-03-21 22:49:15,392 Node[0] Epoch[29] Batch [280-300]	Speed: 21441.21 samples/sec	accuracy=nan
2023-03-21 22:49:20,654 Node[0] Epoch[29] Batch [300-320]	Speed: 12405.55 samples/sec	accuracy=nan
2023-03-21 22:49:23,688 Node[0] Epoch[29] Batch [320-340]	Speed: 21518.15 samples/sec	accuracy=nan
2023-03-21 22:49:26,727 Node[0] Epoch[29] Batch [340-360]	Speed: 21479.89 samples/sec	accuracy=nan
2023-03-21 22:49:29,770 Node[0] Epoch[29] Batch [360-380]	Speed: 21456.51 samples/sec	accuracy=nan
2023-03-21 22:49:31,588 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:31,589 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:31,588 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:31,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:31,589 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:31,589 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456971588, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 22:49:31,590 Node[0] Epoch[29] Time cost=62.009
2023-03-21 22:49:31,590 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679456971590, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20661.134816502814}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679456971590, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 22:49:31,590 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:49:34,783 Node[0] Epoch[30] Batch [0-20]	Speed: 21474.50 samples/sec	accuracy=nan
2023-03-21 22:49:37,819 Node[0] Epoch[30] Batch [20-40]	Speed: 21501.68 samples/sec	accuracy=nan
2023-03-21 22:49:40,857 Node[0] Epoch[30] Batch [40-60]	Speed: 21489.85 samples/sec	accuracy=nan
2023-03-21 22:49:43,897 Node[0] Epoch[30] Batch [60-80]	Speed: 21473.60 samples/sec	accuracy=nan
2023-03-21 22:49:46,944 Node[0] Epoch[30] Batch [80-100]	Speed: 21422.21 samples/sec	accuracy=nan
2023-03-21 22:49:49,985 Node[0] Epoch[30] Batch [100-120]	Speed: 21472.72 samples/sec	accuracy=nan
2023-03-21 22:49:53,029 Node[0] Epoch[30] Batch [120-140]	Speed: 21442.66 samples/sec	accuracy=nan
2023-03-21 22:49:56,078 Node[0] Epoch[30] Batch [140-160]	Speed: 21408.38 samples/sec	accuracy=nan
2023-03-21 22:49:59,120 Node[0] Epoch[30] Batch [160-180]	Speed: 21462.13 samples/sec	accuracy=nan
2023-03-21 22:50:02,165 Node[0] Epoch[30] Batch [180-200]	Speed: 21435.32 samples/sec	accuracy=nan
2023-03-21 22:50:05,206 Node[0] Epoch[30] Batch [200-220]	Speed: 21470.41 samples/sec	accuracy=nan
2023-03-21 22:50:08,247 Node[0] Epoch[30] Batch [220-240]	Speed: 21462.61 samples/sec	accuracy=nan
2023-03-21 22:50:11,288 Node[0] Epoch[30] Batch [240-260]	Speed: 21470.53 samples/sec	accuracy=nan
2023-03-21 22:50:14,333 Node[0] Epoch[30] Batch [260-280]	Speed: 21437.95 samples/sec	accuracy=nan
2023-03-21 22:50:17,377 Node[0] Epoch[30] Batch [280-300]	Speed: 21446.56 samples/sec	accuracy=nan
2023-03-21 22:50:22,827 Node[0] Epoch[30] Batch [300-320]	Speed: 11976.77 samples/sec	accuracy=nan
2023-03-21 22:50:25,852 Node[0] Epoch[30] Batch [320-340]	Speed: 21581.29 samples/sec	accuracy=nan
2023-03-21 22:50:28,887 Node[0] Epoch[30] Batch [340-360]	Speed: 21512.54 samples/sec	accuracy=nan
2023-03-21 22:50:31,929 Node[0] Epoch[30] Batch [360-380]	Speed: 21458.29 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679457033598, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 22:50:33,600 Node[0] Epoch[30] Time cost=62.009
:::MLLOG {"namespace": "", "time_ms": 1679457033600, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20660.843352932872}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679457033745, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 22:50:35,381 Node[0] Epoch[30] Validation-accuracy=0.759680
2023-03-21 22:50:35,381 Node[0] Epoch[30] Validation-correct-count=4748.000000
2023-03-21 22:50:35,381 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679457035382, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679457035382, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74962, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 22:50:35,382 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:35,382 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457035382, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679457035382, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 22:50:35,382 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:35,382 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:35,382 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:35,382 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:35,382 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457035382, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 22:50:35,382 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:50:38,435 Node[0] Epoch[31] Batch [0-20]	Speed: 21455.47 samples/sec	accuracy=nan
2023-03-21 22:50:41,469 Node[0] Epoch[31] Batch [20-40]	Speed: 21510.78 samples/sec	accuracy=nan
2023-03-21 22:50:44,509 Node[0] Epoch[31] Batch [40-60]	Speed: 21478.18 samples/sec	accuracy=nan
2023-03-21 22:50:47,546 Node[0] Epoch[31] Batch [60-80]	Speed: 21489.41 samples/sec	accuracy=nan
2023-03-21 22:50:50,583 Node[0] Epoch[31] Batch [80-100]	Speed: 21499.05 samples/sec	accuracy=nan
2023-03-21 22:50:53,632 Node[0] Epoch[31] Batch [100-120]	Speed: 21407.09 samples/sec	accuracy=nan
2023-03-21 22:50:56,679 Node[0] Epoch[31] Batch [120-140]	Speed: 21424.00 samples/sec	accuracy=nan
2023-03-21 22:50:59,732 Node[0] Epoch[31] Batch [140-160]	Speed: 21386.39 samples/sec	accuracy=nan
2023-03-21 22:51:02,781 Node[0] Epoch[31] Batch [160-180]	Speed: 21408.05 samples/sec	accuracy=nan
2023-03-21 22:51:05,830 Node[0] Epoch[31] Batch [180-200]	Speed: 21413.39 samples/sec	accuracy=nan
2023-03-21 22:51:08,866 Node[0] Epoch[31] Batch [200-220]	Speed: 21498.31 samples/sec	accuracy=nan
2023-03-21 22:51:11,907 Node[0] Epoch[31] Batch [220-240]	Speed: 21464.03 samples/sec	accuracy=nan
2023-03-21 22:51:14,955 Node[0] Epoch[31] Batch [240-260]	Speed: 21419.48 samples/sec	accuracy=nan
2023-03-21 22:51:18,002 Node[0] Epoch[31] Batch [260-280]	Speed: 21428.05 samples/sec	accuracy=nan
2023-03-21 22:51:21,044 Node[0] Epoch[31] Batch [280-300]	Speed: 21458.29 samples/sec	accuracy=nan
2023-03-21 22:51:24,090 Node[0] Epoch[31] Batch [300-320]	Speed: 21432.83 samples/sec	accuracy=nan
2023-03-21 22:51:27,142 Node[0] Epoch[31] Batch [320-340]	Speed: 21385.54 samples/sec	accuracy=nan
2023-03-21 22:51:30,197 Node[0] Epoch[31] Batch [340-360]	Speed: 21372.90 samples/sec	accuracy=nan
2023-03-21 22:51:33,250 Node[0] Epoch[31] Batch [360-380]	Speed: 21379.23 samples/sec	accuracy=nan
2023-03-21 22:51:35,073 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:35,073 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457095073, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 22:51:35,074 Node[0] Epoch[31] Time cost=59.692
:::MLLOG {"namespace": "", "time_ms": 1679457095074, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21462.982866811624}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679457095075, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 22:51:35,075 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:51:38,273 Node[0] Epoch[32] Batch [0-20]	Speed: 20464.86 samples/sec	accuracy=nan
2023-03-21 22:51:41,313 Node[0] Epoch[32] Batch [20-40]	Speed: 21470.57 samples/sec	accuracy=nan
2023-03-21 22:51:44,358 Node[0] Epoch[32] Batch [40-60]	Speed: 21435.66 samples/sec	accuracy=nan
2023-03-21 22:51:47,399 Node[0] Epoch[32] Batch [60-80]	Speed: 21470.66 samples/sec	accuracy=nan
2023-03-21 22:51:50,439 Node[0] Epoch[32] Batch [80-100]	Speed: 21472.92 samples/sec	accuracy=nan
2023-03-21 22:51:53,482 Node[0] Epoch[32] Batch [100-120]	Speed: 21451.71 samples/sec	accuracy=nan
2023-03-21 22:51:56,526 Node[0] Epoch[32] Batch [120-140]	Speed: 21448.74 samples/sec	accuracy=nan
2023-03-21 22:51:59,563 Node[0] Epoch[32] Batch [140-160]	Speed: 21491.30 samples/sec	accuracy=nan
2023-03-21 22:52:02,612 Node[0] Epoch[32] Batch [160-180]	Speed: 21408.48 samples/sec	accuracy=nan
2023-03-21 22:52:05,660 Node[0] Epoch[32] Batch [180-200]	Speed: 21418.30 samples/sec	accuracy=nan
2023-03-21 22:52:08,718 Node[0] Epoch[32] Batch [200-220]	Speed: 21346.62 samples/sec	accuracy=nan
2023-03-21 22:52:11,771 Node[0] Epoch[32] Batch [220-240]	Speed: 21383.67 samples/sec	accuracy=nan
2023-03-21 22:52:14,826 Node[0] Epoch[32] Batch [240-260]	Speed: 21367.88 samples/sec	accuracy=nan
2023-03-21 22:52:17,874 Node[0] Epoch[32] Batch [260-280]	Speed: 21419.60 samples/sec	accuracy=nan
2023-03-21 22:52:20,918 Node[0] Epoch[32] Batch [280-300]	Speed: 21446.05 samples/sec	accuracy=nan
2023-03-21 22:52:26,204 Node[0] Epoch[32] Batch [300-320]	Speed: 12347.92 samples/sec	accuracy=nan
2023-03-21 22:52:29,237 Node[0] Epoch[32] Batch [320-340]	Speed: 21525.46 samples/sec	accuracy=nan
2023-03-21 22:52:32,266 Node[0] Epoch[32] Batch [340-360]	Speed: 21552.47 samples/sec	accuracy=nan
2023-03-21 22:52:35,304 Node[0] Epoch[32] Batch [360-380]	Speed: 21488.00 samples/sec	accuracy=nan
2023-03-21 22:52:36,972 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,971 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,971 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,972 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,972 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,972 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:36,972 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457156973, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 22:52:36,974 Node[0] Epoch[32] Time cost=61.899
:::MLLOG {"namespace": "", "time_ms": 1679457156974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20697.638615399694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679457156975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 22:52:36,975 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:52:40,168 Node[0] Epoch[33] Batch [0-20]	Speed: 21477.17 samples/sec	accuracy=nan
2023-03-21 22:52:43,212 Node[0] Epoch[33] Batch [20-40]	Speed: 21441.37 samples/sec	accuracy=nan
2023-03-21 22:52:46,253 Node[0] Epoch[33] Batch [40-60]	Speed: 21472.28 samples/sec	accuracy=nan
2023-03-21 22:52:49,295 Node[0] Epoch[33] Batch [60-80]	Speed: 21456.53 samples/sec	accuracy=nan
2023-03-21 22:52:52,335 Node[0] Epoch[33] Batch [80-100]	Speed: 21473.87 samples/sec	accuracy=nan
2023-03-21 22:52:55,373 Node[0] Epoch[33] Batch [100-120]	Speed: 21489.41 samples/sec	accuracy=nan
2023-03-21 22:52:58,418 Node[0] Epoch[33] Batch [120-140]	Speed: 21439.13 samples/sec	accuracy=nan
2023-03-21 22:53:01,462 Node[0] Epoch[33] Batch [140-160]	Speed: 21445.47 samples/sec	accuracy=nan
2023-03-21 22:53:04,505 Node[0] Epoch[33] Batch [160-180]	Speed: 21451.73 samples/sec	accuracy=nan
2023-03-21 22:53:07,544 Node[0] Epoch[33] Batch [180-200]	Speed: 21476.14 samples/sec	accuracy=nan
2023-03-21 22:53:10,587 Node[0] Epoch[33] Batch [200-220]	Speed: 21455.54 samples/sec	accuracy=nan
2023-03-21 22:53:13,631 Node[0] Epoch[33] Batch [220-240]	Speed: 21444.28 samples/sec	accuracy=nan
2023-03-21 22:53:16,669 Node[0] Epoch[33] Batch [240-260]	Speed: 21488.55 samples/sec	accuracy=nan
2023-03-21 22:53:19,717 Node[0] Epoch[33] Batch [260-280]	Speed: 21418.48 samples/sec	accuracy=nan
2023-03-21 22:53:22,772 Node[0] Epoch[33] Batch [280-300]	Speed: 21370.74 samples/sec	accuracy=nan
2023-03-21 22:53:25,825 Node[0] Epoch[33] Batch [300-320]	Speed: 21376.12 samples/sec	accuracy=nan
2023-03-21 22:53:28,876 Node[0] Epoch[33] Batch [320-340]	Speed: 21400.12 samples/sec	accuracy=nan
2023-03-21 22:53:31,921 Node[0] Epoch[33] Batch [340-360]	Speed: 21437.44 samples/sec	accuracy=nan
2023-03-21 22:53:34,965 Node[0] Epoch[33] Batch [360-380]	Speed: 21449.36 samples/sec	accuracy=nan
2023-03-21 22:53:36,787 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:36,787 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:36,787 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:36,787 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:36,787 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:36,788 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457216787, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 22:53:36,788 Node[0] Epoch[33] Time cost=59.813
:::MLLOG {"namespace": "", "time_ms": 1679457216788, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21419.444607578786}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-21 22:53:36,788 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457216788, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 22:53:36,789 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:53:39,985 Node[0] Epoch[34] Batch [0-20]	Speed: 21442.29 samples/sec	accuracy=nan
2023-03-21 22:53:43,032 Node[0] Epoch[34] Batch [20-40]	Speed: 21424.16 samples/sec	accuracy=nan
2023-03-21 22:53:46,075 Node[0] Epoch[34] Batch [40-60]	Speed: 21452.10 samples/sec	accuracy=nan
2023-03-21 22:53:49,122 Node[0] Epoch[34] Batch [60-80]	Speed: 21429.88 samples/sec	accuracy=nan
2023-03-21 22:53:52,165 Node[0] Epoch[34] Batch [80-100]	Speed: 21449.61 samples/sec	accuracy=nan
2023-03-21 22:53:55,209 Node[0] Epoch[34] Batch [100-120]	Speed: 21443.35 samples/sec	accuracy=nan
2023-03-21 22:53:58,251 Node[0] Epoch[34] Batch [120-140]	Speed: 21460.39 samples/sec	accuracy=nan
2023-03-21 22:54:01,298 Node[0] Epoch[34] Batch [140-160]	Speed: 21425.31 samples/sec	accuracy=nan
2023-03-21 22:54:06,559 Node[0] Epoch[34] Batch [160-180]	Speed: 12407.91 samples/sec	accuracy=nan
2023-03-21 22:54:09,588 Node[0] Epoch[34] Batch [180-200]	Speed: 21553.00 samples/sec	accuracy=nan
2023-03-21 22:54:12,623 Node[0] Epoch[34] Batch [200-220]	Speed: 21508.23 samples/sec	accuracy=nan
2023-03-21 22:54:15,661 Node[0] Epoch[34] Batch [220-240]	Speed: 21491.27 samples/sec	accuracy=nan
2023-03-21 22:54:18,698 Node[0] Epoch[34] Batch [240-260]	Speed: 21494.56 samples/sec	accuracy=nan
2023-03-21 22:54:21,737 Node[0] Epoch[34] Batch [260-280]	Speed: 21478.23 samples/sec	accuracy=nan
2023-03-21 22:54:24,779 Node[0] Epoch[34] Batch [280-300]	Speed: 21458.82 samples/sec	accuracy=nan
2023-03-21 22:54:30,036 Node[0] Epoch[34] Batch [300-320]	Speed: 12417.77 samples/sec	accuracy=nan
2023-03-21 22:54:33,065 Node[0] Epoch[34] Batch [320-340]	Speed: 21551.86 samples/sec	accuracy=nan
2023-03-21 22:54:36,096 Node[0] Epoch[34] Batch [340-360]	Speed: 21538.93 samples/sec	accuracy=nan
2023-03-21 22:54:39,131 Node[0] Epoch[34] Batch [360-380]	Speed: 21507.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679457280956, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 22:54:40,957 Node[0] Epoch[34] Time cost=64.168
:::MLLOG {"namespace": "", "time_ms": 1679457280957, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19965.78299439587}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679457281103, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 22:54:42,549 Node[0] Epoch[34] Validation-accuracy=0.763840
2023-03-21 22:54:42,549 Node[0] Epoch[34] Validation-correct-count=4774.000000
2023-03-21 22:54:42,549 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679457282726, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679457282727, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76154, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679457282727, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679457282727, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457299
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:54:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:54:59 PM'
ENDING TIMING RUN AT 2023-03-21 10:54:59 PM
+ result=2261
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457299
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:54:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:54:59 PM'
ENDING TIMING RUN AT 2023-03-21 10:54:59 PM
+ result=2261
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457299
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:54:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:54:59 PM'
ENDING TIMING RUN AT 2023-03-21 10:54:59 PM
+ result=2261
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2261,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457300
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:55:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:55:00 PM'
ENDING TIMING RUN AT 2023-03-21 10:55:00 PM
+ result=2262
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457300
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:55:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:55:00 PM'
ENDING TIMING RUN AT 2023-03-21 10:55:00 PM
+ result=2262
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457300
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:55:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:55:00 PM'
ENDING TIMING RUN AT 2023-03-21 10:55:00 PM
+ result=2262
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457300
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:55:00 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:55:00 PM'
ENDING TIMING RUN AT 2023-03-21 10:55:00 PM
+ result=2262
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM'
RESULT,IMAGE_CLASSIFICATION,,2262,root,2023-03-21 10:17:18 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679457301
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:55:01 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:55:01 PM'
ENDING TIMING RUN AT 2023-03-21 10:55:01 PM
+ result=2263
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 10:17:18 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 10:17:18 PM'
+ export PROFILE=0
+ PROFILE=0
